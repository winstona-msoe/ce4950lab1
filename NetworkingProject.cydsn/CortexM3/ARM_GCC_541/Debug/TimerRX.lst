ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"TimerRX.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TimerRX_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	TimerRX_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	TimerRX_Enable, %function
  25              	TimerRX_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\TimerRX.c"
   1:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/TimerRX.c **** * File Name: TimerRX.c
   3:Generated_Source\PSoC5/TimerRX.c **** * Version 2.70
   4:Generated_Source\PSoC5/TimerRX.c **** *
   5:Generated_Source\PSoC5/TimerRX.c **** * Description:
   6:Generated_Source\PSoC5/TimerRX.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/TimerRX.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/TimerRX.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/TimerRX.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/TimerRX.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/TimerRX.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/TimerRX.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/TimerRX.c **** *  or a capture event.
  14:Generated_Source\PSoC5/TimerRX.c **** *
  15:Generated_Source\PSoC5/TimerRX.c **** * Note:
  16:Generated_Source\PSoC5/TimerRX.c **** *
  17:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
  18:Generated_Source\PSoC5/TimerRX.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/TimerRX.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/TimerRX.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/TimerRX.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/TimerRX.c **** 
  24:Generated_Source\PSoC5/TimerRX.c **** #include "TimerRX.h"
  25:Generated_Source\PSoC5/TimerRX.c **** 
  26:Generated_Source\PSoC5/TimerRX.c **** uint8 TimerRX_initVar = 0u;
  27:Generated_Source\PSoC5/TimerRX.c **** 
  28:Generated_Source\PSoC5/TimerRX.c **** 
  29:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_Init
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 2


  31:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
  32:Generated_Source\PSoC5/TimerRX.c **** *
  33:Generated_Source\PSoC5/TimerRX.c **** * Summary:
  34:Generated_Source\PSoC5/TimerRX.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/TimerRX.c **** *
  36:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
  37:Generated_Source\PSoC5/TimerRX.c **** *  void
  38:Generated_Source\PSoC5/TimerRX.c **** *
  39:Generated_Source\PSoC5/TimerRX.c **** * Return:
  40:Generated_Source\PSoC5/TimerRX.c **** *  void
  41:Generated_Source\PSoC5/TimerRX.c **** *
  42:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_Init(void) 
  44:Generated_Source\PSoC5/TimerRX.c **** {
  45:Generated_Source\PSoC5/TimerRX.c ****     #if(!TimerRX_UsingFixedFunction)
  46:Generated_Source\PSoC5/TimerRX.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/TimerRX.c ****             uint8 TimerRX_interruptState;
  48:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/TimerRX.c **** 
  50:Generated_Source\PSoC5/TimerRX.c ****     #if (TimerRX_UsingFixedFunction)
  51:Generated_Source\PSoC5/TimerRX.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= TimerRX_CTRL_ENABLE;
  53:Generated_Source\PSoC5/TimerRX.c **** 
  54:Generated_Source\PSoC5/TimerRX.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/TimerRX.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_CONTROL2 &= ((uint8)(~TimerRX_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/TimerRX.c **** 
  59:Generated_Source\PSoC5/TimerRX.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_CONTROL3 &= ((uint8)(~TimerRX_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/TimerRX.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/TimerRX.c **** 
  63:Generated_Source\PSoC5/TimerRX.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/TimerRX.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/TimerRX.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/TimerRX.c **** 
  69:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_RunModeUsed == 2)
  70:Generated_Source\PSoC5/TimerRX.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/TimerRX.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/TimerRX.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/TimerRX.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/TimerRX.c **** 
  76:Generated_Source\PSoC5/TimerRX.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/TimerRX.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/TimerRX.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/TimerRX.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/TimerRX.c **** 
  82:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/TimerRX.c **** 
  84:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/TimerRX.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/TimerRX.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL2 |= TimerRX_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 3


  88:Generated_Source\PSoC5/TimerRX.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/TimerRX.c **** 
  90:Generated_Source\PSoC5/TimerRX.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/TimerRX.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 &= ((uint8)(~TimerRX_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 |= TimerRX_CTRL_RCOD;
  94:Generated_Source\PSoC5/TimerRX.c **** 
  95:Generated_Source\PSoC5/TimerRX.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 &= ((uint8)(~TimerRX_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 |= TimerRX_CTRL_ENBL;
  98:Generated_Source\PSoC5/TimerRX.c **** 
  99:Generated_Source\PSoC5/TimerRX.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/TimerRX.c ****                 TimerRX_CONTROL3 |= TimerRX_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/TimerRX.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/TimerRX.c **** 
 103:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/TimerRX.c **** 
 105:Generated_Source\PSoC5/TimerRX.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_RT1 &= ((uint8)(~TimerRX_RT1_MASK));
 107:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_RT1 |= TimerRX_SYNC;
 108:Generated_Source\PSoC5/TimerRX.c **** 
 109:Generated_Source\PSoC5/TimerRX.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_RT1 &= ((uint8)(~TimerRX_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_RT1 |= TimerRX_SYNCDSI_EN;
 112:Generated_Source\PSoC5/TimerRX.c **** 
 113:Generated_Source\PSoC5/TimerRX.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL2 |= TimerRX_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/TimerRX.c **** 
 117:Generated_Source\PSoC5/TimerRX.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_WritePeriod(TimerRX_INIT_PERIOD);
 119:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_WriteCounter(TimerRX_INIT_PERIOD);
 120:Generated_Source\PSoC5/TimerRX.c **** 
 121:Generated_Source\PSoC5/TimerRX.c ****     #if (TimerRX_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CAPTURE_COUNT_CTRL |= TimerRX_CNTR_ENABLE;
 123:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_SetCaptureCount(TimerRX_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/TimerRX.c **** 
 126:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UsingFixedFunction)
 127:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_SetCaptureMode(TimerRX_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/TimerRX.c **** 
 131:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/TimerRX.c ****             #if (!TimerRX_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/TimerRX.c ****                 if (0u == (TimerRX_CONTROL & TimerRX__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/TimerRX.c ****                 {
 135:Generated_Source\PSoC5/TimerRX.c ****                     TimerRX_SetTriggerMode(TimerRX_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/TimerRX.c ****                 }
 137:Generated_Source\PSoC5/TimerRX.c ****             #endif /* (!TimerRX_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/TimerRX.c **** 
 140:Generated_Source\PSoC5/TimerRX.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/TimerRX.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/TimerRX.c **** 
 144:Generated_Source\PSoC5/TimerRX.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 4


 145:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_STATUS_AUX_CTRL |= TimerRX_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/TimerRX.c **** 
 147:Generated_Source\PSoC5/TimerRX.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/TimerRX.c ****         CyExitCriticalSection(TimerRX_interruptState);
 149:Generated_Source\PSoC5/TimerRX.c **** 
 150:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_EnableTriggerMode)
 151:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_EnableTrigger();
 152:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/TimerRX.c **** 		
 154:Generated_Source\PSoC5/TimerRX.c **** 		
 155:Generated_Source\PSoC5/TimerRX.c ****         #if (TimerRX_InterruptOnCaptureCount && !TimerRX_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/TimerRX.c ****             TimerRX_SetInterruptCount(TimerRX_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/TimerRX.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/TimerRX.c **** 
 159:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_ClearFIFO();
 160:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/TimerRX.c **** 
 162:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_SetInterruptMode(TimerRX_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/TimerRX.c **** }
 164:Generated_Source\PSoC5/TimerRX.c **** 
 165:Generated_Source\PSoC5/TimerRX.c **** 
 166:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_Enable
 168:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 169:Generated_Source\PSoC5/TimerRX.c **** *
 170:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 171:Generated_Source\PSoC5/TimerRX.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/TimerRX.c **** *
 173:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 174:Generated_Source\PSoC5/TimerRX.c **** *  void
 175:Generated_Source\PSoC5/TimerRX.c **** *
 176:Generated_Source\PSoC5/TimerRX.c **** * Return:
 177:Generated_Source\PSoC5/TimerRX.c **** *  void
 178:Generated_Source\PSoC5/TimerRX.c **** *
 179:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_Enable(void) 
 181:Generated_Source\PSoC5/TimerRX.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/TimerRX.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/TimerRX.c ****     #if (TimerRX_UsingFixedFunction)
 184:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_GLOBAL_ENABLE |= TimerRX_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_GLOBAL_STBY_ENABLE |= TimerRX_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/TimerRX.c **** 
 188:Generated_Source\PSoC5/TimerRX.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED || TimerRX_UsingFixedFunction)
 190:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL |= TimerRX_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 76640040 		.word	1073767542
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	TimerRX_Enable, .-TimerRX_Enable
  46              		.section	.text.TimerRX_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	TimerRX_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	TimerRX_Stop, %function
  52              	TimerRX_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/TimerRX.c **** }
 193:Generated_Source\PSoC5/TimerRX.c **** 
 194:Generated_Source\PSoC5/TimerRX.c **** 
 195:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_Start
 197:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 198:Generated_Source\PSoC5/TimerRX.c **** *
 199:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 200:Generated_Source\PSoC5/TimerRX.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/TimerRX.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/TimerRX.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/TimerRX.c **** *
 204:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 205:Generated_Source\PSoC5/TimerRX.c **** *  void
 206:Generated_Source\PSoC5/TimerRX.c **** *
 207:Generated_Source\PSoC5/TimerRX.c **** * Return:
 208:Generated_Source\PSoC5/TimerRX.c **** *  void
 209:Generated_Source\PSoC5/TimerRX.c **** *
 210:Generated_Source\PSoC5/TimerRX.c **** * Global variables:
 211:Generated_Source\PSoC5/TimerRX.c **** *  TimerRX_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/TimerRX.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/TimerRX.c **** *
 214:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_Start(void) 
 216:Generated_Source\PSoC5/TimerRX.c **** {
 217:Generated_Source\PSoC5/TimerRX.c ****     if(TimerRX_initVar == 0u)
 218:Generated_Source\PSoC5/TimerRX.c ****     {
 219:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_Init();
 220:Generated_Source\PSoC5/TimerRX.c **** 
 221:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/TimerRX.c ****     }
 223:Generated_Source\PSoC5/TimerRX.c **** 
 224:Generated_Source\PSoC5/TimerRX.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_Enable();
 226:Generated_Source\PSoC5/TimerRX.c **** }
 227:Generated_Source\PSoC5/TimerRX.c **** 
 228:Generated_Source\PSoC5/TimerRX.c **** 
 229:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_Stop
 231:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 232:Generated_Source\PSoC5/TimerRX.c **** *
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 6


 233:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 234:Generated_Source\PSoC5/TimerRX.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/TimerRX.c **** *  interrupts.
 236:Generated_Source\PSoC5/TimerRX.c **** *
 237:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 238:Generated_Source\PSoC5/TimerRX.c **** *  void
 239:Generated_Source\PSoC5/TimerRX.c **** *
 240:Generated_Source\PSoC5/TimerRX.c **** * Return:
 241:Generated_Source\PSoC5/TimerRX.c **** *  void
 242:Generated_Source\PSoC5/TimerRX.c **** *
 243:Generated_Source\PSoC5/TimerRX.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/TimerRX.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/TimerRX.c **** *
 246:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_Stop(void) 
 248:Generated_Source\PSoC5/TimerRX.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/TimerRX.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/TimerRX.c ****     #if(!TimerRX_UDB_CONTROL_REG_REMOVED || TimerRX_UsingFixedFunction)
 251:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= ((uint8)(~TimerRX_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 76640040 		.word	1073767542
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	TimerRX_Stop, .-TimerRX_Stop
  72              		.section	.text.TimerRX_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	TimerRX_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	TimerRX_SetInterruptMode, %function
  78              	TimerRX_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/TimerRX.c **** 
 254:Generated_Source\PSoC5/TimerRX.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/TimerRX.c ****     #if (TimerRX_UsingFixedFunction)
 256:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_GLOBAL_ENABLE &= ((uint8)(~TimerRX_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_GLOBAL_STBY_ENABLE &= ((uint8)(~TimerRX_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/TimerRX.c **** }
 260:Generated_Source\PSoC5/TimerRX.c **** 
 261:Generated_Source\PSoC5/TimerRX.c **** 
 262:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SetInterruptMode
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 7


 264:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 265:Generated_Source\PSoC5/TimerRX.c **** *
 266:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 267:Generated_Source\PSoC5/TimerRX.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/TimerRX.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/TimerRX.c **** *  be selected.
 270:Generated_Source\PSoC5/TimerRX.c **** *
 271:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 272:Generated_Source\PSoC5/TimerRX.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/TimerRX.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/TimerRX.c **** *
 275:Generated_Source\PSoC5/TimerRX.c **** * Return:
 276:Generated_Source\PSoC5/TimerRX.c **** *  void
 277:Generated_Source\PSoC5/TimerRX.c **** *
 278:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/TimerRX.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 87640040 		.word	1073767559
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	TimerRX_SetInterruptMode, .-TimerRX_SetInterruptMode
  97              		.section	.text.TimerRX_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	TimerRX_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	TimerRX_SoftwareCapture, %function
 103              	TimerRX_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/TimerRX.c **** }
 283:Generated_Source\PSoC5/TimerRX.c **** 
 284:Generated_Source\PSoC5/TimerRX.c **** 
 285:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SoftwareCapture
 287:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 288:Generated_Source\PSoC5/TimerRX.c **** *
 289:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 290:Generated_Source\PSoC5/TimerRX.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/TimerRX.c **** *
 292:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 293:Generated_Source\PSoC5/TimerRX.c **** *  void
 294:Generated_Source\PSoC5/TimerRX.c **** *
 295:Generated_Source\PSoC5/TimerRX.c **** * Return:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 8


 296:Generated_Source\PSoC5/TimerRX.c **** *  void
 297:Generated_Source\PSoC5/TimerRX.c **** *
 298:Generated_Source\PSoC5/TimerRX.c **** * Side Effects:
 299:Generated_Source\PSoC5/TimerRX.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/TimerRX.c **** *
 301:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/TimerRX.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/TimerRX.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/TimerRX.c ****     #if(TimerRX_UsingFixedFunction)
 306:Generated_Source\PSoC5/TimerRX.c ****         (void)CY_GET_REG16(TimerRX_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/TimerRX.c ****     #else
 308:Generated_Source\PSoC5/TimerRX.c ****         (void)CY_GET_REG8(TimerRX_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 06640040 		.word	1073767430
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	TimerRX_SoftwareCapture, .-TimerRX_SoftwareCapture
 121              		.section	.text.TimerRX_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	TimerRX_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	TimerRX_ReadStatusRegister, %function
 127              	TimerRX_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/TimerRX.c ****     #endif/* (TimerRX_UsingFixedFunction) */
 310:Generated_Source\PSoC5/TimerRX.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/TimerRX.c **** }
 312:Generated_Source\PSoC5/TimerRX.c **** 
 313:Generated_Source\PSoC5/TimerRX.c **** 
 314:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadStatusRegister
 316:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 317:Generated_Source\PSoC5/TimerRX.c **** *
 318:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 319:Generated_Source\PSoC5/TimerRX.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/TimerRX.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/TimerRX.c **** *  be permuteable.
 322:Generated_Source\PSoC5/TimerRX.c **** *
 323:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 324:Generated_Source\PSoC5/TimerRX.c **** *  void
 325:Generated_Source\PSoC5/TimerRX.c **** *
 326:Generated_Source\PSoC5/TimerRX.c **** * Return:
 327:Generated_Source\PSoC5/TimerRX.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/TimerRX.c **** *
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 9


 329:Generated_Source\PSoC5/TimerRX.c **** * Side Effects:
 330:Generated_Source\PSoC5/TimerRX.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/TimerRX.c **** *
 332:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/TimerRX.c **** uint8   TimerRX_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/TimerRX.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/TimerRX.c ****     return (TimerRX_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/TimerRX.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 67640040 		.word	1073767527
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	TimerRX_ReadStatusRegister, .-TimerRX_ReadStatusRegister
 146              		.section	.text.TimerRX_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	TimerRX_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	TimerRX_ReadControlRegister, %function
 152              	TimerRX_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/TimerRX.c **** 
 338:Generated_Source\PSoC5/TimerRX.c **** 
 339:Generated_Source\PSoC5/TimerRX.c **** #if (!TimerRX_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/TimerRX.c **** 
 341:Generated_Source\PSoC5/TimerRX.c **** 
 342:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadControlRegister
 344:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 345:Generated_Source\PSoC5/TimerRX.c **** *
 346:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 347:Generated_Source\PSoC5/TimerRX.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/TimerRX.c **** *
 349:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 350:Generated_Source\PSoC5/TimerRX.c **** *  void
 351:Generated_Source\PSoC5/TimerRX.c **** *
 352:Generated_Source\PSoC5/TimerRX.c **** * Return:
 353:Generated_Source\PSoC5/TimerRX.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/TimerRX.c **** *
 355:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/TimerRX.c **** uint8 TimerRX_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/TimerRX.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/TimerRX.c ****         return ((uint8)TimerRX_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/TimerRX.c ****     #else
 361:Generated_Source\PSoC5/TimerRX.c ****         return (0);
 362:Generated_Source\PSoC5/TimerRX.c ****     #endif /* (!TimerRX_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/TimerRX.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 76640040 		.word	1073767542
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	TimerRX_ReadControlRegister, .-TimerRX_ReadControlRegister
 171              		.section	.text.TimerRX_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	TimerRX_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	TimerRX_WriteControlRegister, %function
 177              	TimerRX_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/TimerRX.c **** 
 365:Generated_Source\PSoC5/TimerRX.c **** 
 366:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_WriteControlRegister
 368:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 369:Generated_Source\PSoC5/TimerRX.c **** *
 370:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 371:Generated_Source\PSoC5/TimerRX.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/TimerRX.c **** *
 373:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 374:Generated_Source\PSoC5/TimerRX.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/TimerRX.c **** *
 376:Generated_Source\PSoC5/TimerRX.c **** * Return:
 377:Generated_Source\PSoC5/TimerRX.c **** *
 378:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/TimerRX.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 76640040 		.word	1073767542
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	TimerRX_WriteControlRegister, .-TimerRX_WriteControlRegister
 196              		.section	.text.TimerRX_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	TimerRX_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	TimerRX_ReadPeriod, %function
 202              	TimerRX_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/TimerRX.c ****     #else
 384:Generated_Source\PSoC5/TimerRX.c ****         control = 0u;
 385:Generated_Source\PSoC5/TimerRX.c ****     #endif /* (!TimerRX_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/TimerRX.c **** }
 387:Generated_Source\PSoC5/TimerRX.c **** 
 388:Generated_Source\PSoC5/TimerRX.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/TimerRX.c **** 
 390:Generated_Source\PSoC5/TimerRX.c **** 
 391:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadPeriod
 393:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 394:Generated_Source\PSoC5/TimerRX.c **** *
 395:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 396:Generated_Source\PSoC5/TimerRX.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/TimerRX.c **** *
 398:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 399:Generated_Source\PSoC5/TimerRX.c **** *  void
 400:Generated_Source\PSoC5/TimerRX.c **** *
 401:Generated_Source\PSoC5/TimerRX.c **** * Return:
 402:Generated_Source\PSoC5/TimerRX.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/TimerRX.c **** *
 404:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/TimerRX.c **** uint16 TimerRX_ReadPeriod(void) 
 406:Generated_Source\PSoC5/TimerRX.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/TimerRX.c ****    #if(TimerRX_UsingFixedFunction)
 408:Generated_Source\PSoC5/TimerRX.c ****        return ((uint16)CY_GET_REG16(TimerRX_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/TimerRX.c ****    #else
 410:Generated_Source\PSoC5/TimerRX.c ****        return (CY_GET_REG16(TimerRX_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/TimerRX.c ****    #endif /* (TimerRX_UsingFixedFunction) */
 412:Generated_Source\PSoC5/TimerRX.c **** }
 212              		.loc 1 412 0
 213 0004 80B2     		uxth	r0, r0
 214 0006 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 12


 216              		.align	2
 217              	.L23:
 218 0008 4C680040 		.word	1073768524
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	TimerRX_ReadPeriod, .-TimerRX_ReadPeriod
 222              		.section	.text.TimerRX_WritePeriod,"ax",%progbits
 223              		.align	2
 224              		.global	TimerRX_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	TimerRX_WritePeriod, %function
 228              	TimerRX_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/TimerRX.c **** 
 414:Generated_Source\PSoC5/TimerRX.c **** 
 415:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_WritePeriod
 417:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 418:Generated_Source\PSoC5/TimerRX.c **** *
 419:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 420:Generated_Source\PSoC5/TimerRX.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/TimerRX.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/TimerRX.c **** *
 423:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 424:Generated_Source\PSoC5/TimerRX.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/TimerRX.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/TimerRX.c **** *
 427:Generated_Source\PSoC5/TimerRX.c **** * Return:
 428:Generated_Source\PSoC5/TimerRX.c **** *  void
 429:Generated_Source\PSoC5/TimerRX.c **** *
 430:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/TimerRX.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL2:
 433:Generated_Source\PSoC5/TimerRX.c ****     #if(TimerRX_UsingFixedFunction)
 434:Generated_Source\PSoC5/TimerRX.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/TimerRX.c ****         CY_SET_REG16(TimerRX_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/TimerRX.c ****     #else
 437:Generated_Source\PSoC5/TimerRX.c ****         CY_SET_REG16(TimerRX_PERIOD_LSB_PTR, period);
 236              		.loc 1 437 0
 237 0000 014B     		ldr	r3, .L26
 238 0002 1880     		strh	r0, [r3]	@ movhi
 239 0004 7047     		bx	lr
 240              	.L27:
 241 0006 00BF     		.align	2
 242              	.L26:
 243 0008 4C680040 		.word	1073768524
 244              		.cfi_endproc
 245              	.LFE10:
 246              		.size	TimerRX_WritePeriod, .-TimerRX_WritePeriod
 247              		.section	.text.TimerRX_ReadCapture,"ax",%progbits
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 13


 248              		.align	2
 249              		.global	TimerRX_ReadCapture
 250              		.thumb
 251              		.thumb_func
 252              		.type	TimerRX_ReadCapture, %function
 253              	TimerRX_ReadCapture:
 254              	.LFB11:
 438:Generated_Source\PSoC5/TimerRX.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/TimerRX.c **** }
 440:Generated_Source\PSoC5/TimerRX.c **** 
 441:Generated_Source\PSoC5/TimerRX.c **** 
 442:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadCapture
 444:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 445:Generated_Source\PSoC5/TimerRX.c **** *
 446:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 447:Generated_Source\PSoC5/TimerRX.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/TimerRX.c **** *
 449:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 450:Generated_Source\PSoC5/TimerRX.c **** *  void
 451:Generated_Source\PSoC5/TimerRX.c **** *
 452:Generated_Source\PSoC5/TimerRX.c **** * Return:
 453:Generated_Source\PSoC5/TimerRX.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/TimerRX.c **** *
 455:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/TimerRX.c **** uint16 TimerRX_ReadCapture(void) 
 457:Generated_Source\PSoC5/TimerRX.c **** {
 255              		.loc 1 457 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 458:Generated_Source\PSoC5/TimerRX.c ****    #if(TimerRX_UsingFixedFunction)
 459:Generated_Source\PSoC5/TimerRX.c ****        return ((uint16)CY_GET_REG16(TimerRX_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/TimerRX.c ****    #else
 461:Generated_Source\PSoC5/TimerRX.c ****        return (CY_GET_REG16(TimerRX_CAPTURE_LSB_PTR));
 260              		.loc 1 461 0
 261 0000 014B     		ldr	r3, .L29
 262 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/TimerRX.c ****    #endif /* (TimerRX_UsingFixedFunction) */
 463:Generated_Source\PSoC5/TimerRX.c **** }
 263              		.loc 1 463 0
 264 0004 80B2     		uxth	r0, r0
 265 0006 7047     		bx	lr
 266              	.L30:
 267              		.align	2
 268              	.L29:
 269 0008 8C680040 		.word	1073768588
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	TimerRX_ReadCapture, .-TimerRX_ReadCapture
 273              		.section	.text.TimerRX_WriteCounter,"ax",%progbits
 274              		.align	2
 275              		.global	TimerRX_WriteCounter
 276              		.thumb
 277              		.thumb_func
 278              		.type	TimerRX_WriteCounter, %function
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 14


 279              	TimerRX_WriteCounter:
 280              	.LFB12:
 464:Generated_Source\PSoC5/TimerRX.c **** 
 465:Generated_Source\PSoC5/TimerRX.c **** 
 466:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_WriteCounter
 468:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 469:Generated_Source\PSoC5/TimerRX.c **** *
 470:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 471:Generated_Source\PSoC5/TimerRX.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/TimerRX.c **** *
 473:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 474:Generated_Source\PSoC5/TimerRX.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/TimerRX.c **** *
 476:Generated_Source\PSoC5/TimerRX.c **** * Return:
 477:Generated_Source\PSoC5/TimerRX.c **** *  void
 478:Generated_Source\PSoC5/TimerRX.c **** *
 479:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/TimerRX.c **** {
 281              		.loc 1 481 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL3:
 482:Generated_Source\PSoC5/TimerRX.c ****    #if(TimerRX_UsingFixedFunction)
 483:Generated_Source\PSoC5/TimerRX.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/TimerRX.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/TimerRX.c ****          */
 486:Generated_Source\PSoC5/TimerRX.c ****         CY_SET_REG16(TimerRX_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/TimerRX.c ****         
 488:Generated_Source\PSoC5/TimerRX.c ****     #else
 489:Generated_Source\PSoC5/TimerRX.c ****         CY_SET_REG16(TimerRX_COUNTER_LSB_PTR, counter);
 287              		.loc 1 489 0
 288 0000 014B     		ldr	r3, .L32
 289 0002 1880     		strh	r0, [r3]	@ movhi
 290 0004 7047     		bx	lr
 291              	.L33:
 292 0006 00BF     		.align	2
 293              	.L32:
 294 0008 0C680040 		.word	1073768460
 295              		.cfi_endproc
 296              	.LFE12:
 297              		.size	TimerRX_WriteCounter, .-TimerRX_WriteCounter
 298              		.section	.text.TimerRX_ReadCounter,"ax",%progbits
 299              		.align	2
 300              		.global	TimerRX_ReadCounter
 301              		.thumb
 302              		.thumb_func
 303              		.type	TimerRX_ReadCounter, %function
 304              	TimerRX_ReadCounter:
 305              	.LFB13:
 490:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/TimerRX.c **** }
 492:Generated_Source\PSoC5/TimerRX.c **** 
 493:Generated_Source\PSoC5/TimerRX.c **** 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 15


 494:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadCounter
 496:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 497:Generated_Source\PSoC5/TimerRX.c **** *
 498:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 499:Generated_Source\PSoC5/TimerRX.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/TimerRX.c **** *
 501:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 502:Generated_Source\PSoC5/TimerRX.c **** *  void
 503:Generated_Source\PSoC5/TimerRX.c **** *
 504:Generated_Source\PSoC5/TimerRX.c **** * Return:
 505:Generated_Source\PSoC5/TimerRX.c **** *  Present compare value.
 506:Generated_Source\PSoC5/TimerRX.c **** *
 507:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/TimerRX.c **** uint16 TimerRX_ReadCounter(void) 
 509:Generated_Source\PSoC5/TimerRX.c **** {
 306              		.loc 1 509 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 510:Generated_Source\PSoC5/TimerRX.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/TimerRX.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/TimerRX.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/TimerRX.c ****     #if(TimerRX_UsingFixedFunction)
 514:Generated_Source\PSoC5/TimerRX.c ****         (void)CY_GET_REG16(TimerRX_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/TimerRX.c ****     #else
 516:Generated_Source\PSoC5/TimerRX.c ****         (void)CY_GET_REG8(TimerRX_COUNTER_LSB_PTR_8BIT);
 311              		.loc 1 516 0
 312 0000 024B     		ldr	r3, .L35
 313 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/TimerRX.c ****     #endif/* (TimerRX_UsingFixedFunction) */
 518:Generated_Source\PSoC5/TimerRX.c **** 
 519:Generated_Source\PSoC5/TimerRX.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/TimerRX.c ****     #if(TimerRX_UsingFixedFunction)
 521:Generated_Source\PSoC5/TimerRX.c ****         return ((uint16)CY_GET_REG16(TimerRX_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/TimerRX.c ****     #else
 523:Generated_Source\PSoC5/TimerRX.c ****         return (CY_GET_REG16(TimerRX_CAPTURE_LSB_PTR));
 314              		.loc 1 523 0
 315 0004 024B     		ldr	r3, .L35+4
 316 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/TimerRX.c ****     #endif /* (TimerRX_UsingFixedFunction) */
 525:Generated_Source\PSoC5/TimerRX.c **** }
 317              		.loc 1 525 0
 318 0008 80B2     		uxth	r0, r0
 319 000a 7047     		bx	lr
 320              	.L36:
 321              		.align	2
 322              	.L35:
 323 000c 06640040 		.word	1073767430
 324 0010 8C680040 		.word	1073768588
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	TimerRX_ReadCounter, .-TimerRX_ReadCounter
 328              		.section	.text.TimerRX_SetCaptureCount,"ax",%progbits
 329              		.align	2
 330              		.global	TimerRX_SetCaptureCount
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 16


 331              		.thumb
 332              		.thumb_func
 333              		.type	TimerRX_SetCaptureCount, %function
 334              	TimerRX_SetCaptureCount:
 335              	.LFB14:
 526:Generated_Source\PSoC5/TimerRX.c **** 
 527:Generated_Source\PSoC5/TimerRX.c **** 
 528:Generated_Source\PSoC5/TimerRX.c **** #if(!TimerRX_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/TimerRX.c **** 
 530:Generated_Source\PSoC5/TimerRX.c ****     
 531:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/TimerRX.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/TimerRX.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/TimerRX.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/TimerRX.c **** 
 536:Generated_Source\PSoC5/TimerRX.c **** 
 537:Generated_Source\PSoC5/TimerRX.c **** #if (TimerRX_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/TimerRX.c **** 
 539:Generated_Source\PSoC5/TimerRX.c **** 
 540:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SetCaptureMode
 542:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 543:Generated_Source\PSoC5/TimerRX.c **** *
 544:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 545:Generated_Source\PSoC5/TimerRX.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/TimerRX.c **** *
 547:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 548:Generated_Source\PSoC5/TimerRX.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/TimerRX.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/TimerRX.c **** *  #define TimerRX__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/TimerRX.c **** #define TimerRX__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/TimerRX.c **** #define TimerRX__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/TimerRX.c **** #define TimerRX__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/TimerRX.c **** #define TimerRX__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/TimerRX.c ****  identifiers
 556:Generated_Source\PSoC5/TimerRX.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/TimerRX.c **** *  TimerRX__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/TimerRX.c **** *  TimerRX__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/TimerRX.c **** *  TimerRX__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/TimerRX.c **** *  TimerRX__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/TimerRX.c **** *
 562:Generated_Source\PSoC5/TimerRX.c **** * Return:
 563:Generated_Source\PSoC5/TimerRX.c **** *  void
 564:Generated_Source\PSoC5/TimerRX.c **** *
 565:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/TimerRX.c **** {
 568:Generated_Source\PSoC5/TimerRX.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/TimerRX.c ****     captureMode = ((uint8)((uint8)captureMode << TimerRX_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/TimerRX.c ****     captureMode &= (TimerRX_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/TimerRX.c **** 
 572:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/TimerRX.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= ((uint8)(~TimerRX_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/TimerRX.c **** 
 576:Generated_Source\PSoC5/TimerRX.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL |= captureMode;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 17


 578:Generated_Source\PSoC5/TimerRX.c ****     #endif /* (!TimerRX_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/TimerRX.c **** }
 580:Generated_Source\PSoC5/TimerRX.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/TimerRX.c **** 
 582:Generated_Source\PSoC5/TimerRX.c **** 
 583:Generated_Source\PSoC5/TimerRX.c **** #if (TimerRX_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/TimerRX.c **** 
 585:Generated_Source\PSoC5/TimerRX.c **** 
 586:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SetTriggerMode
 588:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 589:Generated_Source\PSoC5/TimerRX.c **** *
 590:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 591:Generated_Source\PSoC5/TimerRX.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/TimerRX.c **** *
 593:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 594:Generated_Source\PSoC5/TimerRX.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/TimerRX.c ****     #define TimerRX__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/TimerRX.c ****     #define TimerRX__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/TimerRX.c ****     #define TimerRX__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/TimerRX.c ****     #define TimerRX__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/TimerRX.c ****     #define TimerRX__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/TimerRX.c **** *
 601:Generated_Source\PSoC5/TimerRX.c **** * Return:
 602:Generated_Source\PSoC5/TimerRX.c **** *  void
 603:Generated_Source\PSoC5/TimerRX.c **** *
 604:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/TimerRX.c **** {
 607:Generated_Source\PSoC5/TimerRX.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/TimerRX.c ****     triggerMode &= TimerRX_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/TimerRX.c **** 
 610:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/TimerRX.c ****     
 612:Generated_Source\PSoC5/TimerRX.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= ((uint8)(~TimerRX_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/TimerRX.c **** 
 615:Generated_Source\PSoC5/TimerRX.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL |= (triggerMode | TimerRX__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/TimerRX.c **** }
 619:Generated_Source\PSoC5/TimerRX.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/TimerRX.c **** 
 621:Generated_Source\PSoC5/TimerRX.c **** #if (TimerRX_EnableTriggerMode)
 622:Generated_Source\PSoC5/TimerRX.c **** 
 623:Generated_Source\PSoC5/TimerRX.c **** 
 624:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_EnableTrigger
 626:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 627:Generated_Source\PSoC5/TimerRX.c **** *
 628:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 629:Generated_Source\PSoC5/TimerRX.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/TimerRX.c **** *
 631:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 632:Generated_Source\PSoC5/TimerRX.c **** *  void
 633:Generated_Source\PSoC5/TimerRX.c **** *
 634:Generated_Source\PSoC5/TimerRX.c **** * Return:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 18


 635:Generated_Source\PSoC5/TimerRX.c **** *  void
 636:Generated_Source\PSoC5/TimerRX.c **** *
 637:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_EnableTrigger(void) 
 639:Generated_Source\PSoC5/TimerRX.c **** {
 640:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL |= TimerRX_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/TimerRX.c **** }
 644:Generated_Source\PSoC5/TimerRX.c **** 
 645:Generated_Source\PSoC5/TimerRX.c **** 
 646:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_DisableTrigger
 648:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 649:Generated_Source\PSoC5/TimerRX.c **** *
 650:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 651:Generated_Source\PSoC5/TimerRX.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/TimerRX.c **** *
 653:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 654:Generated_Source\PSoC5/TimerRX.c **** *  void
 655:Generated_Source\PSoC5/TimerRX.c **** *
 656:Generated_Source\PSoC5/TimerRX.c **** * Return:
 657:Generated_Source\PSoC5/TimerRX.c **** *  void
 658:Generated_Source\PSoC5/TimerRX.c **** *
 659:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_DisableTrigger(void) 
 661:Generated_Source\PSoC5/TimerRX.c **** {
 662:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed *
 663:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= ((uint8)(~TimerRX_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/TimerRX.c **** }
 666:Generated_Source\PSoC5/TimerRX.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/TimerRX.c **** 
 668:Generated_Source\PSoC5/TimerRX.c **** #if(TimerRX_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/TimerRX.c **** 
 670:Generated_Source\PSoC5/TimerRX.c **** 
 671:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SetInterruptCount
 673:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 674:Generated_Source\PSoC5/TimerRX.c **** *
 675:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 676:Generated_Source\PSoC5/TimerRX.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/TimerRX.c **** *
 678:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 679:Generated_Source\PSoC5/TimerRX.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/TimerRX.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/TimerRX.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/TimerRX.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/TimerRX.c **** *
 684:Generated_Source\PSoC5/TimerRX.c **** * Return:
 685:Generated_Source\PSoC5/TimerRX.c **** *  void
 686:Generated_Source\PSoC5/TimerRX.c **** *
 687:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/TimerRX.c **** {
 690:Generated_Source\PSoC5/TimerRX.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/TimerRX.c ****     interruptCount &= TimerRX_CTRL_INTCNT_MASK;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 19


 692:Generated_Source\PSoC5/TimerRX.c **** 
 693:Generated_Source\PSoC5/TimerRX.c ****     #if (!TimerRX_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/TimerRX.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL &= ((uint8)(~TimerRX_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/TimerRX.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/TimerRX.c ****     #endif /* (!TimerRX_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/TimerRX.c **** }
 700:Generated_Source\PSoC5/TimerRX.c **** #endif /* TimerRX_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/TimerRX.c **** 
 702:Generated_Source\PSoC5/TimerRX.c **** 
 703:Generated_Source\PSoC5/TimerRX.c **** #if (TimerRX_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/TimerRX.c **** 
 705:Generated_Source\PSoC5/TimerRX.c **** 
 706:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_SetCaptureCount
 708:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 709:Generated_Source\PSoC5/TimerRX.c **** *
 710:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 711:Generated_Source\PSoC5/TimerRX.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/TimerRX.c **** *
 713:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 714:Generated_Source\PSoC5/TimerRX.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/TimerRX.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/TimerRX.c **** *                captures.
 717:Generated_Source\PSoC5/TimerRX.c **** *
 718:Generated_Source\PSoC5/TimerRX.c **** * Return:
 719:Generated_Source\PSoC5/TimerRX.c **** *  void
 720:Generated_Source\PSoC5/TimerRX.c **** *
 721:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/TimerRX.c **** {
 336              		.loc 1 723 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL4:
 724:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_CAP_COUNT = captureCount;
 342              		.loc 1 724 0
 343 0000 014B     		ldr	r3, .L38
 344 0002 1870     		strb	r0, [r3]
 345 0004 7047     		bx	lr
 346              	.L39:
 347 0006 00BF     		.align	2
 348              	.L38:
 349 0008 87650040 		.word	1073767815
 350              		.cfi_endproc
 351              	.LFE14:
 352              		.size	TimerRX_SetCaptureCount, .-TimerRX_SetCaptureCount
 353              		.section	.text.TimerRX_ReadCaptureCount,"ax",%progbits
 354              		.align	2
 355              		.global	TimerRX_ReadCaptureCount
 356              		.thumb
 357              		.thumb_func
 358              		.type	TimerRX_ReadCaptureCount, %function
 359              	TimerRX_ReadCaptureCount:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 20


 360              	.LFB15:
 725:Generated_Source\PSoC5/TimerRX.c **** }
 726:Generated_Source\PSoC5/TimerRX.c **** 
 727:Generated_Source\PSoC5/TimerRX.c **** 
 728:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ReadCaptureCount
 730:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 731:Generated_Source\PSoC5/TimerRX.c **** *
 732:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 733:Generated_Source\PSoC5/TimerRX.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/TimerRX.c **** *
 735:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 736:Generated_Source\PSoC5/TimerRX.c **** *  void
 737:Generated_Source\PSoC5/TimerRX.c **** *
 738:Generated_Source\PSoC5/TimerRX.c **** * Return:
 739:Generated_Source\PSoC5/TimerRX.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/TimerRX.c **** *
 741:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/TimerRX.c **** uint8 TimerRX_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/TimerRX.c **** {
 361              		.loc 1 743 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 744:Generated_Source\PSoC5/TimerRX.c ****     return ((uint8)TimerRX_CAP_COUNT);
 366              		.loc 1 744 0
 367 0000 014B     		ldr	r3, .L41
 368 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 745:Generated_Source\PSoC5/TimerRX.c **** }
 369              		.loc 1 745 0
 370 0004 7047     		bx	lr
 371              	.L42:
 372 0006 00BF     		.align	2
 373              	.L41:
 374 0008 87650040 		.word	1073767815
 375              		.cfi_endproc
 376              	.LFE15:
 377              		.size	TimerRX_ReadCaptureCount, .-TimerRX_ReadCaptureCount
 378              		.section	.text.TimerRX_ClearFIFO,"ax",%progbits
 379              		.align	2
 380              		.global	TimerRX_ClearFIFO
 381              		.thumb
 382              		.thumb_func
 383              		.type	TimerRX_ClearFIFO, %function
 384              	TimerRX_ClearFIFO:
 385              	.LFB16:
 746:Generated_Source\PSoC5/TimerRX.c **** #endif /* TimerRX_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/TimerRX.c **** 
 748:Generated_Source\PSoC5/TimerRX.c **** 
 749:Generated_Source\PSoC5/TimerRX.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/TimerRX.c **** * Function Name: TimerRX_ClearFIFO
 751:Generated_Source\PSoC5/TimerRX.c **** ********************************************************************************
 752:Generated_Source\PSoC5/TimerRX.c **** *
 753:Generated_Source\PSoC5/TimerRX.c **** * Summary:
 754:Generated_Source\PSoC5/TimerRX.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/TimerRX.c **** *
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 21


 756:Generated_Source\PSoC5/TimerRX.c **** * Parameters:
 757:Generated_Source\PSoC5/TimerRX.c **** *  void
 758:Generated_Source\PSoC5/TimerRX.c **** *
 759:Generated_Source\PSoC5/TimerRX.c **** * Return:
 760:Generated_Source\PSoC5/TimerRX.c **** *  void
 761:Generated_Source\PSoC5/TimerRX.c **** *
 762:Generated_Source\PSoC5/TimerRX.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/TimerRX.c **** void TimerRX_ClearFIFO(void) 
 764:Generated_Source\PSoC5/TimerRX.c **** {
 386              		.loc 1 764 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 08B5     		push	{r3, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 3, -8
 393              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/TimerRX.c ****     while(0u != (TimerRX_ReadStatusRegister() & TimerRX_STATUS_FIFONEMP))
 394              		.loc 1 765 0
 395 0002 01E0     		b	.L44
 396              	.L45:
 766:Generated_Source\PSoC5/TimerRX.c ****     {
 767:Generated_Source\PSoC5/TimerRX.c ****         (void)TimerRX_ReadCapture();
 397              		.loc 1 767 0
 398 0004 FFF7FEFF 		bl	TimerRX_ReadCapture
 399              	.LVL5:
 400              	.L44:
 765:Generated_Source\PSoC5/TimerRX.c ****     while(0u != (TimerRX_ReadStatusRegister() & TimerRX_STATUS_FIFONEMP))
 401              		.loc 1 765 0
 402 0008 FFF7FEFF 		bl	TimerRX_ReadStatusRegister
 403              	.LVL6:
 404 000c 10F0080F 		tst	r0, #8
 405 0010 F8D1     		bne	.L45
 768:Generated_Source\PSoC5/TimerRX.c ****     }
 769:Generated_Source\PSoC5/TimerRX.c **** }
 406              		.loc 1 769 0
 407 0012 08BD     		pop	{r3, pc}
 408              		.cfi_endproc
 409              	.LFE16:
 410              		.size	TimerRX_ClearFIFO, .-TimerRX_ClearFIFO
 411              		.section	.text.TimerRX_Init,"ax",%progbits
 412              		.align	2
 413              		.global	TimerRX_Init
 414              		.thumb
 415              		.thumb_func
 416              		.type	TimerRX_Init, %function
 417              	TimerRX_Init:
 418              	.LFB0:
  44:Generated_Source\PSoC5/TimerRX.c ****     #if(!TimerRX_UsingFixedFunction)
 419              		.loc 1 44 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 08B5     		push	{r3, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 3, -8
 426              		.cfi_offset 14, -4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 22


 118:Generated_Source\PSoC5/TimerRX.c ****     TimerRX_WriteCounter(TimerRX_INIT_PERIOD);
 427              		.loc 1 118 0
 428 0002 0920     		movs	r0, #9
 429 0004 FFF7FEFF 		bl	TimerRX_WritePeriod
 430              	.LVL7:
 119:Generated_Source\PSoC5/TimerRX.c **** 
 431              		.loc 1 119 0
 432 0008 0920     		movs	r0, #9
 433 000a FFF7FEFF 		bl	TimerRX_WriteCounter
 434              	.LVL8:
 122:Generated_Source\PSoC5/TimerRX.c ****         TimerRX_SetCaptureCount(TimerRX_INIT_CAPTURE_COUNT);
 435              		.loc 1 122 0
 436 000e 0B4A     		ldr	r2, .L49
 437 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438 0012 43F02003 		orr	r3, r3, #32
 439 0016 1370     		strb	r3, [r2]
 123:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Configure capture counter value */
 440              		.loc 1 123 0
 441 0018 0220     		movs	r0, #2
 442 001a FFF7FEFF 		bl	TimerRX_SetCaptureCount
 443              	.LVL9:
 142:Generated_Source\PSoC5/TimerRX.c **** 
 444              		.loc 1 142 0
 445 001e FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL10:
 145:Generated_Source\PSoC5/TimerRX.c **** 
 447              		.loc 1 145 0
 448 0022 074A     		ldr	r2, .L49+4
 449 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 450 0026 43F01003 		orr	r3, r3, #16
 451 002a 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/TimerRX.c **** 
 452              		.loc 1 148 0
 453 002c FFF7FEFF 		bl	CyExitCriticalSection
 454              	.LVL11:
 159:Generated_Source\PSoC5/TimerRX.c ****     #endif /* Configure additional features of UDB implementation */
 455              		.loc 1 159 0
 456 0030 FFF7FEFF 		bl	TimerRX_ClearFIFO
 457              	.LVL12:
 162:Generated_Source\PSoC5/TimerRX.c **** }
 458              		.loc 1 162 0
 459 0034 0120     		movs	r0, #1
 460 0036 FFF7FEFF 		bl	TimerRX_SetInterruptMode
 461              	.LVL13:
 462 003a 08BD     		pop	{r3, pc}
 463              	.L50:
 464              		.align	2
 465              	.L49:
 466 003c 97650040 		.word	1073767831
 467 0040 97640040 		.word	1073767575
 468              		.cfi_endproc
 469              	.LFE0:
 470              		.size	TimerRX_Init, .-TimerRX_Init
 471              		.section	.text.TimerRX_Start,"ax",%progbits
 472              		.align	2
 473              		.global	TimerRX_Start
 474              		.thumb
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 23


 475              		.thumb_func
 476              		.type	TimerRX_Start, %function
 477              	TimerRX_Start:
 478              	.LFB2:
 216:Generated_Source\PSoC5/TimerRX.c ****     if(TimerRX_initVar == 0u)
 479              		.loc 1 216 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 08B5     		push	{r3, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 3, -8
 486              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/TimerRX.c ****     {
 487              		.loc 1 217 0
 488 0002 054B     		ldr	r3, .L54
 489 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 490 0006 23B9     		cbnz	r3, .L52
 219:Generated_Source\PSoC5/TimerRX.c **** 
 491              		.loc 1 219 0
 492 0008 FFF7FEFF 		bl	TimerRX_Init
 493              	.LVL14:
 221:Generated_Source\PSoC5/TimerRX.c ****     }
 494              		.loc 1 221 0
 495 000c 0122     		movs	r2, #1
 496 000e 024B     		ldr	r3, .L54
 497 0010 1A70     		strb	r2, [r3]
 498              	.L52:
 225:Generated_Source\PSoC5/TimerRX.c **** }
 499              		.loc 1 225 0
 500 0012 FFF7FEFF 		bl	TimerRX_Enable
 501              	.LVL15:
 502 0016 08BD     		pop	{r3, pc}
 503              	.L55:
 504              		.align	2
 505              	.L54:
 506 0018 00000000 		.word	.LANCHOR0
 507              		.cfi_endproc
 508              	.LFE2:
 509              		.size	TimerRX_Start, .-TimerRX_Start
 510              		.global	TimerRX_initVar
 511              		.bss
 512              		.set	.LANCHOR0,. + 0
 513              		.type	TimerRX_initVar, %object
 514              		.size	TimerRX_initVar, 1
 515              	TimerRX_initVar:
 516 0000 00       		.space	1
 517              		.text
 518              	.Letext0:
 519              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 520              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 521              		.section	.debug_info,"",%progbits
 522              	.Ldebug_info0:
 523 0000 36030000 		.4byte	0x336
 524 0004 0400     		.2byte	0x4
 525 0006 00000000 		.4byte	.Ldebug_abbrev0
 526 000a 04       		.byte	0x4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 24


 527 000b 01       		.uleb128 0x1
 528 000c F0000000 		.4byte	.LASF42
 529 0010 0C       		.byte	0xc
 530 0011 0B020000 		.4byte	.LASF43
 531 0015 B7020000 		.4byte	.LASF44
 532 0019 00000000 		.4byte	.Ldebug_ranges0+0
 533 001d 00000000 		.4byte	0
 534 0021 00000000 		.4byte	.Ldebug_line0
 535 0025 02       		.uleb128 0x2
 536 0026 01       		.byte	0x1
 537 0027 06       		.byte	0x6
 538 0028 91030000 		.4byte	.LASF0
 539 002c 02       		.uleb128 0x2
 540 002d 01       		.byte	0x1
 541 002e 08       		.byte	0x8
 542 002f E2000000 		.4byte	.LASF1
 543 0033 02       		.uleb128 0x2
 544 0034 02       		.byte	0x2
 545 0035 05       		.byte	0x5
 546 0036 4C030000 		.4byte	.LASF2
 547 003a 02       		.uleb128 0x2
 548 003b 02       		.byte	0x2
 549 003c 07       		.byte	0x7
 550 003d 6B000000 		.4byte	.LASF3
 551 0041 02       		.uleb128 0x2
 552 0042 04       		.byte	0x4
 553 0043 05       		.byte	0x5
 554 0044 63030000 		.4byte	.LASF4
 555 0048 02       		.uleb128 0x2
 556 0049 04       		.byte	0x4
 557 004a 07       		.byte	0x7
 558 004b 83010000 		.4byte	.LASF5
 559 004f 02       		.uleb128 0x2
 560 0050 08       		.byte	0x8
 561 0051 05       		.byte	0x5
 562 0052 14030000 		.4byte	.LASF6
 563 0056 02       		.uleb128 0x2
 564 0057 08       		.byte	0x8
 565 0058 07       		.byte	0x7
 566 0059 CB000000 		.4byte	.LASF7
 567 005d 03       		.uleb128 0x3
 568 005e 04       		.byte	0x4
 569 005f 05       		.byte	0x5
 570 0060 696E7400 		.ascii	"int\000"
 571 0064 02       		.uleb128 0x2
 572 0065 04       		.byte	0x4
 573 0066 07       		.byte	0x7
 574 0067 2C020000 		.4byte	.LASF8
 575 006b 04       		.uleb128 0x4
 576 006c 95010000 		.4byte	.LASF9
 577 0070 02       		.byte	0x2
 578 0071 9201     		.2byte	0x192
 579 0073 2C000000 		.4byte	0x2c
 580 0077 04       		.uleb128 0x4
 581 0078 04020000 		.4byte	.LASF10
 582 007c 02       		.byte	0x2
 583 007d 9301     		.2byte	0x193
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 25


 584 007f 3A000000 		.4byte	0x3a
 585 0083 02       		.uleb128 0x2
 586 0084 04       		.byte	0x4
 587 0085 04       		.byte	0x4
 588 0086 BD000000 		.4byte	.LASF11
 589 008a 02       		.uleb128 0x2
 590 008b 08       		.byte	0x8
 591 008c 04       		.byte	0x4
 592 008d D4010000 		.4byte	.LASF12
 593 0091 02       		.uleb128 0x2
 594 0092 01       		.byte	0x1
 595 0093 08       		.byte	0x8
 596 0094 7E000000 		.4byte	.LASF13
 597 0098 04       		.uleb128 0x4
 598 0099 7E010000 		.4byte	.LASF14
 599 009d 02       		.byte	0x2
 600 009e 3C02     		.2byte	0x23c
 601 00a0 A4000000 		.4byte	0xa4
 602 00a4 05       		.uleb128 0x5
 603 00a5 6B000000 		.4byte	0x6b
 604 00a9 04       		.uleb128 0x4
 605 00aa 00000000 		.4byte	.LASF15
 606 00ae 02       		.byte	0x2
 607 00af 3D02     		.2byte	0x23d
 608 00b1 B5000000 		.4byte	0xb5
 609 00b5 05       		.uleb128 0x5
 610 00b6 77000000 		.4byte	0x77
 611 00ba 02       		.uleb128 0x2
 612 00bb 08       		.byte	0x8
 613 00bc 04       		.byte	0x4
 614 00bd 85030000 		.4byte	.LASF16
 615 00c1 02       		.uleb128 0x2
 616 00c2 04       		.byte	0x4
 617 00c3 07       		.byte	0x7
 618 00c4 AE020000 		.4byte	.LASF17
 619 00c8 06       		.uleb128 0x6
 620 00c9 42000000 		.4byte	.LASF18
 621 00cd 01       		.byte	0x1
 622 00ce B4       		.byte	0xb4
 623 00cf 00000000 		.4byte	.LFB1
 624 00d3 10000000 		.4byte	.LFE1-.LFB1
 625 00d7 01       		.uleb128 0x1
 626 00d8 9C       		.byte	0x9c
 627 00d9 06       		.uleb128 0x6
 628 00da 06000000 		.4byte	.LASF19
 629 00de 01       		.byte	0x1
 630 00df F7       		.byte	0xf7
 631 00e0 00000000 		.4byte	.LFB3
 632 00e4 10000000 		.4byte	.LFE3-.LFB3
 633 00e8 01       		.uleb128 0x1
 634 00e9 9C       		.byte	0x9c
 635 00ea 07       		.uleb128 0x7
 636 00eb BB010000 		.4byte	.LASF23
 637 00ef 01       		.byte	0x1
 638 00f0 1701     		.2byte	0x117
 639 00f2 00000000 		.4byte	.LFB4
 640 00f6 0C000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 26


 641 00fa 01       		.uleb128 0x1
 642 00fb 9C       		.byte	0x9c
 643 00fc 0F010000 		.4byte	0x10f
 644 0100 08       		.uleb128 0x8
 645 0101 22030000 		.4byte	.LASF25
 646 0105 01       		.byte	0x1
 647 0106 1701     		.2byte	0x117
 648 0108 6B000000 		.4byte	0x6b
 649 010c 01       		.uleb128 0x1
 650 010d 50       		.byte	0x50
 651 010e 00       		.byte	0
 652 010f 09       		.uleb128 0x9
 653 0110 A5000000 		.4byte	.LASF20
 654 0114 01       		.byte	0x1
 655 0115 2E01     		.2byte	0x12e
 656 0117 00000000 		.4byte	.LFB5
 657 011b 0C000000 		.4byte	.LFE5-.LFB5
 658 011f 01       		.uleb128 0x1
 659 0120 9C       		.byte	0x9c
 660 0121 0A       		.uleb128 0xa
 661 0122 9D030000 		.4byte	.LASF21
 662 0126 01       		.byte	0x1
 663 0127 4D01     		.2byte	0x14d
 664 0129 6B000000 		.4byte	0x6b
 665 012d 00000000 		.4byte	.LFB6
 666 0131 0C000000 		.4byte	.LFE6-.LFB6
 667 0135 01       		.uleb128 0x1
 668 0136 9C       		.byte	0x9c
 669 0137 0A       		.uleb128 0xa
 670 0138 30030000 		.4byte	.LASF22
 671 013c 01       		.byte	0x1
 672 013d 6401     		.2byte	0x164
 673 013f 6B000000 		.4byte	0x6b
 674 0143 00000000 		.4byte	.LFB7
 675 0147 0C000000 		.4byte	.LFE7-.LFB7
 676 014b 01       		.uleb128 0x1
 677 014c 9C       		.byte	0x9c
 678 014d 07       		.uleb128 0x7
 679 014e 25000000 		.4byte	.LASF24
 680 0152 01       		.byte	0x1
 681 0153 7B01     		.2byte	0x17b
 682 0155 00000000 		.4byte	.LFB8
 683 0159 0C000000 		.4byte	.LFE8-.LFB8
 684 015d 01       		.uleb128 0x1
 685 015e 9C       		.byte	0x9c
 686 015f 72010000 		.4byte	0x172
 687 0163 08       		.uleb128 0x8
 688 0164 9B010000 		.4byte	.LASF26
 689 0168 01       		.byte	0x1
 690 0169 7B01     		.2byte	0x17b
 691 016b 6B000000 		.4byte	0x6b
 692 016f 01       		.uleb128 0x1
 693 0170 50       		.byte	0x50
 694 0171 00       		.byte	0
 695 0172 0A       		.uleb128 0xa
 696 0173 51000000 		.4byte	.LASF27
 697 0177 01       		.byte	0x1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 27


 698 0178 9501     		.2byte	0x195
 699 017a 77000000 		.4byte	0x77
 700 017e 00000000 		.4byte	.LFB9
 701 0182 0C000000 		.4byte	.LFE9-.LFB9
 702 0186 01       		.uleb128 0x1
 703 0187 9C       		.byte	0x9c
 704 0188 07       		.uleb128 0x7
 705 0189 9A020000 		.4byte	.LASF28
 706 018d 01       		.byte	0x1
 707 018e AF01     		.2byte	0x1af
 708 0190 00000000 		.4byte	.LFB10
 709 0194 0C000000 		.4byte	.LFE10-.LFB10
 710 0198 01       		.uleb128 0x1
 711 0199 9C       		.byte	0x9c
 712 019a AD010000 		.4byte	0x1ad
 713 019e 08       		.uleb128 0x8
 714 019f 64000000 		.4byte	.LASF29
 715 01a3 01       		.byte	0x1
 716 01a4 AF01     		.2byte	0x1af
 717 01a6 77000000 		.4byte	0x77
 718 01aa 01       		.uleb128 0x1
 719 01ab 50       		.byte	0x50
 720 01ac 00       		.byte	0
 721 01ad 0A       		.uleb128 0xa
 722 01ae 83000000 		.4byte	.LASF30
 723 01b2 01       		.byte	0x1
 724 01b3 C801     		.2byte	0x1c8
 725 01b5 77000000 		.4byte	0x77
 726 01b9 00000000 		.4byte	.LFB11
 727 01bd 0C000000 		.4byte	.LFE11-.LFB11
 728 01c1 01       		.uleb128 0x1
 729 01c2 9C       		.byte	0x9c
 730 01c3 07       		.uleb128 0x7
 731 01c4 DB010000 		.4byte	.LASF31
 732 01c8 01       		.byte	0x1
 733 01c9 E001     		.2byte	0x1e0
 734 01cb 00000000 		.4byte	.LFB12
 735 01cf 0C000000 		.4byte	.LFE12-.LFB12
 736 01d3 01       		.uleb128 0x1
 737 01d4 9C       		.byte	0x9c
 738 01d5 E8010000 		.4byte	0x1e8
 739 01d9 08       		.uleb128 0x8
 740 01da C3000000 		.4byte	.LASF32
 741 01de 01       		.byte	0x1
 742 01df E001     		.2byte	0x1e0
 743 01e1 77000000 		.4byte	0x77
 744 01e5 01       		.uleb128 0x1
 745 01e6 50       		.byte	0x50
 746 01e7 00       		.byte	0
 747 01e8 0A       		.uleb128 0xa
 748 01e9 F0010000 		.4byte	.LASF33
 749 01ed 01       		.byte	0x1
 750 01ee FC01     		.2byte	0x1fc
 751 01f0 77000000 		.4byte	0x77
 752 01f4 00000000 		.4byte	.LFB13
 753 01f8 14000000 		.4byte	.LFE13-.LFB13
 754 01fc 01       		.uleb128 0x1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 28


 755 01fd 9C       		.byte	0x9c
 756 01fe 07       		.uleb128 0x7
 757 01ff A3010000 		.4byte	.LASF34
 758 0203 01       		.byte	0x1
 759 0204 D202     		.2byte	0x2d2
 760 0206 00000000 		.4byte	.LFB14
 761 020a 0C000000 		.4byte	.LFE14-.LFB14
 762 020e 01       		.uleb128 0x1
 763 020f 9C       		.byte	0x9c
 764 0210 23020000 		.4byte	0x223
 765 0214 08       		.uleb128 0x8
 766 0215 56030000 		.4byte	.LASF35
 767 0219 01       		.byte	0x1
 768 021a D202     		.2byte	0x2d2
 769 021c 6B000000 		.4byte	0x6b
 770 0220 01       		.uleb128 0x1
 771 0221 50       		.byte	0x50
 772 0222 00       		.byte	0
 773 0223 0A       		.uleb128 0xa
 774 0224 6C030000 		.4byte	.LASF36
 775 0228 01       		.byte	0x1
 776 0229 E602     		.2byte	0x2e6
 777 022b 6B000000 		.4byte	0x6b
 778 022f 00000000 		.4byte	.LFB15
 779 0233 0C000000 		.4byte	.LFE15-.LFB15
 780 0237 01       		.uleb128 0x1
 781 0238 9C       		.byte	0x9c
 782 0239 07       		.uleb128 0x7
 783 023a 13000000 		.4byte	.LASF37
 784 023e 01       		.byte	0x1
 785 023f FB02     		.2byte	0x2fb
 786 0241 00000000 		.4byte	.LFB16
 787 0245 14000000 		.4byte	.LFE16-.LFB16
 788 0249 01       		.uleb128 0x1
 789 024a 9C       		.byte	0x9c
 790 024b 62020000 		.4byte	0x262
 791 024f 0B       		.uleb128 0xb
 792 0250 08000000 		.4byte	.LVL5
 793 0254 AD010000 		.4byte	0x1ad
 794 0258 0B       		.uleb128 0xb
 795 0259 0C000000 		.4byte	.LVL6
 796 025d 21010000 		.4byte	0x121
 797 0261 00       		.byte	0
 798 0262 0C       		.uleb128 0xc
 799 0263 8D020000 		.4byte	.LASF38
 800 0267 01       		.byte	0x1
 801 0268 2B       		.byte	0x2b
 802 0269 00000000 		.4byte	.LFB0
 803 026d 44000000 		.4byte	.LFE0-.LFB0
 804 0271 01       		.uleb128 0x1
 805 0272 9C       		.byte	0x9c
 806 0273 EA020000 		.4byte	0x2ea
 807 0277 0D       		.uleb128 0xd
 808 0278 5F020000 		.4byte	.LASF45
 809 027c 01       		.byte	0x1
 810 027d 2F       		.byte	0x2f
 811 027e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 29


 812 0282 00000000 		.4byte	.LLST0
 813 0286 0E       		.uleb128 0xe
 814 0287 08000000 		.4byte	.LVL7
 815 028b 88010000 		.4byte	0x188
 816 028f 99020000 		.4byte	0x299
 817 0293 0F       		.uleb128 0xf
 818 0294 01       		.uleb128 0x1
 819 0295 50       		.byte	0x50
 820 0296 01       		.uleb128 0x1
 821 0297 39       		.byte	0x39
 822 0298 00       		.byte	0
 823 0299 0E       		.uleb128 0xe
 824 029a 0E000000 		.4byte	.LVL8
 825 029e C3010000 		.4byte	0x1c3
 826 02a2 AC020000 		.4byte	0x2ac
 827 02a6 0F       		.uleb128 0xf
 828 02a7 01       		.uleb128 0x1
 829 02a8 50       		.byte	0x50
 830 02a9 01       		.uleb128 0x1
 831 02aa 39       		.byte	0x39
 832 02ab 00       		.byte	0
 833 02ac 0E       		.uleb128 0xe
 834 02ad 1E000000 		.4byte	.LVL9
 835 02b1 FE010000 		.4byte	0x1fe
 836 02b5 BF020000 		.4byte	0x2bf
 837 02b9 0F       		.uleb128 0xf
 838 02ba 01       		.uleb128 0x1
 839 02bb 50       		.byte	0x50
 840 02bc 01       		.uleb128 0x1
 841 02bd 32       		.byte	0x32
 842 02be 00       		.byte	0
 843 02bf 0B       		.uleb128 0xb
 844 02c0 22000000 		.4byte	.LVL10
 845 02c4 23030000 		.4byte	0x323
 846 02c8 0B       		.uleb128 0xb
 847 02c9 30000000 		.4byte	.LVL11
 848 02cd 2E030000 		.4byte	0x32e
 849 02d1 0B       		.uleb128 0xb
 850 02d2 34000000 		.4byte	.LVL12
 851 02d6 39020000 		.4byte	0x239
 852 02da 10       		.uleb128 0x10
 853 02db 3A000000 		.4byte	.LVL13
 854 02df EA000000 		.4byte	0xea
 855 02e3 0F       		.uleb128 0xf
 856 02e4 01       		.uleb128 0x1
 857 02e5 50       		.byte	0x50
 858 02e6 01       		.uleb128 0x1
 859 02e7 31       		.byte	0x31
 860 02e8 00       		.byte	0
 861 02e9 00       		.byte	0
 862 02ea 0C       		.uleb128 0xc
 863 02eb 97000000 		.4byte	.LASF39
 864 02ef 01       		.byte	0x1
 865 02f0 D7       		.byte	0xd7
 866 02f1 00000000 		.4byte	.LFB2
 867 02f5 1C000000 		.4byte	.LFE2-.LFB2
 868 02f9 01       		.uleb128 0x1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 30


 869 02fa 9C       		.byte	0x9c
 870 02fb 12030000 		.4byte	0x312
 871 02ff 0B       		.uleb128 0xb
 872 0300 0C000000 		.4byte	.LVL14
 873 0304 62020000 		.4byte	0x262
 874 0308 0B       		.uleb128 0xb
 875 0309 16000000 		.4byte	.LVL15
 876 030d C8000000 		.4byte	0xc8
 877 0311 00       		.byte	0
 878 0312 11       		.uleb128 0x11
 879 0313 39020000 		.4byte	.LASF46
 880 0317 01       		.byte	0x1
 881 0318 1A       		.byte	0x1a
 882 0319 6B000000 		.4byte	0x6b
 883 031d 05       		.uleb128 0x5
 884 031e 03       		.byte	0x3
 885 031f 00000000 		.4byte	TimerRX_initVar
 886 0323 12       		.uleb128 0x12
 887 0324 76020000 		.4byte	.LASF40
 888 0328 76020000 		.4byte	.LASF40
 889 032c 03       		.byte	0x3
 890 032d 7D       		.byte	0x7d
 891 032e 12       		.uleb128 0x12
 892 032f 49020000 		.4byte	.LASF41
 893 0333 49020000 		.4byte	.LASF41
 894 0337 03       		.byte	0x3
 895 0338 7E       		.byte	0x7e
 896 0339 00       		.byte	0
 897              		.section	.debug_abbrev,"",%progbits
 898              	.Ldebug_abbrev0:
 899 0000 01       		.uleb128 0x1
 900 0001 11       		.uleb128 0x11
 901 0002 01       		.byte	0x1
 902 0003 25       		.uleb128 0x25
 903 0004 0E       		.uleb128 0xe
 904 0005 13       		.uleb128 0x13
 905 0006 0B       		.uleb128 0xb
 906 0007 03       		.uleb128 0x3
 907 0008 0E       		.uleb128 0xe
 908 0009 1B       		.uleb128 0x1b
 909 000a 0E       		.uleb128 0xe
 910 000b 55       		.uleb128 0x55
 911 000c 17       		.uleb128 0x17
 912 000d 11       		.uleb128 0x11
 913 000e 01       		.uleb128 0x1
 914 000f 10       		.uleb128 0x10
 915 0010 17       		.uleb128 0x17
 916 0011 00       		.byte	0
 917 0012 00       		.byte	0
 918 0013 02       		.uleb128 0x2
 919 0014 24       		.uleb128 0x24
 920 0015 00       		.byte	0
 921 0016 0B       		.uleb128 0xb
 922 0017 0B       		.uleb128 0xb
 923 0018 3E       		.uleb128 0x3e
 924 0019 0B       		.uleb128 0xb
 925 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 31


 926 001b 0E       		.uleb128 0xe
 927 001c 00       		.byte	0
 928 001d 00       		.byte	0
 929 001e 03       		.uleb128 0x3
 930 001f 24       		.uleb128 0x24
 931 0020 00       		.byte	0
 932 0021 0B       		.uleb128 0xb
 933 0022 0B       		.uleb128 0xb
 934 0023 3E       		.uleb128 0x3e
 935 0024 0B       		.uleb128 0xb
 936 0025 03       		.uleb128 0x3
 937 0026 08       		.uleb128 0x8
 938 0027 00       		.byte	0
 939 0028 00       		.byte	0
 940 0029 04       		.uleb128 0x4
 941 002a 16       		.uleb128 0x16
 942 002b 00       		.byte	0
 943 002c 03       		.uleb128 0x3
 944 002d 0E       		.uleb128 0xe
 945 002e 3A       		.uleb128 0x3a
 946 002f 0B       		.uleb128 0xb
 947 0030 3B       		.uleb128 0x3b
 948 0031 05       		.uleb128 0x5
 949 0032 49       		.uleb128 0x49
 950 0033 13       		.uleb128 0x13
 951 0034 00       		.byte	0
 952 0035 00       		.byte	0
 953 0036 05       		.uleb128 0x5
 954 0037 35       		.uleb128 0x35
 955 0038 00       		.byte	0
 956 0039 49       		.uleb128 0x49
 957 003a 13       		.uleb128 0x13
 958 003b 00       		.byte	0
 959 003c 00       		.byte	0
 960 003d 06       		.uleb128 0x6
 961 003e 2E       		.uleb128 0x2e
 962 003f 00       		.byte	0
 963 0040 3F       		.uleb128 0x3f
 964 0041 19       		.uleb128 0x19
 965 0042 03       		.uleb128 0x3
 966 0043 0E       		.uleb128 0xe
 967 0044 3A       		.uleb128 0x3a
 968 0045 0B       		.uleb128 0xb
 969 0046 3B       		.uleb128 0x3b
 970 0047 0B       		.uleb128 0xb
 971 0048 27       		.uleb128 0x27
 972 0049 19       		.uleb128 0x19
 973 004a 11       		.uleb128 0x11
 974 004b 01       		.uleb128 0x1
 975 004c 12       		.uleb128 0x12
 976 004d 06       		.uleb128 0x6
 977 004e 40       		.uleb128 0x40
 978 004f 18       		.uleb128 0x18
 979 0050 9742     		.uleb128 0x2117
 980 0052 19       		.uleb128 0x19
 981 0053 00       		.byte	0
 982 0054 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 32


 983 0055 07       		.uleb128 0x7
 984 0056 2E       		.uleb128 0x2e
 985 0057 01       		.byte	0x1
 986 0058 3F       		.uleb128 0x3f
 987 0059 19       		.uleb128 0x19
 988 005a 03       		.uleb128 0x3
 989 005b 0E       		.uleb128 0xe
 990 005c 3A       		.uleb128 0x3a
 991 005d 0B       		.uleb128 0xb
 992 005e 3B       		.uleb128 0x3b
 993 005f 05       		.uleb128 0x5
 994 0060 27       		.uleb128 0x27
 995 0061 19       		.uleb128 0x19
 996 0062 11       		.uleb128 0x11
 997 0063 01       		.uleb128 0x1
 998 0064 12       		.uleb128 0x12
 999 0065 06       		.uleb128 0x6
 1000 0066 40       		.uleb128 0x40
 1001 0067 18       		.uleb128 0x18
 1002 0068 9742     		.uleb128 0x2117
 1003 006a 19       		.uleb128 0x19
 1004 006b 01       		.uleb128 0x1
 1005 006c 13       		.uleb128 0x13
 1006 006d 00       		.byte	0
 1007 006e 00       		.byte	0
 1008 006f 08       		.uleb128 0x8
 1009 0070 05       		.uleb128 0x5
 1010 0071 00       		.byte	0
 1011 0072 03       		.uleb128 0x3
 1012 0073 0E       		.uleb128 0xe
 1013 0074 3A       		.uleb128 0x3a
 1014 0075 0B       		.uleb128 0xb
 1015 0076 3B       		.uleb128 0x3b
 1016 0077 05       		.uleb128 0x5
 1017 0078 49       		.uleb128 0x49
 1018 0079 13       		.uleb128 0x13
 1019 007a 02       		.uleb128 0x2
 1020 007b 18       		.uleb128 0x18
 1021 007c 00       		.byte	0
 1022 007d 00       		.byte	0
 1023 007e 09       		.uleb128 0x9
 1024 007f 2E       		.uleb128 0x2e
 1025 0080 00       		.byte	0
 1026 0081 3F       		.uleb128 0x3f
 1027 0082 19       		.uleb128 0x19
 1028 0083 03       		.uleb128 0x3
 1029 0084 0E       		.uleb128 0xe
 1030 0085 3A       		.uleb128 0x3a
 1031 0086 0B       		.uleb128 0xb
 1032 0087 3B       		.uleb128 0x3b
 1033 0088 05       		.uleb128 0x5
 1034 0089 27       		.uleb128 0x27
 1035 008a 19       		.uleb128 0x19
 1036 008b 11       		.uleb128 0x11
 1037 008c 01       		.uleb128 0x1
 1038 008d 12       		.uleb128 0x12
 1039 008e 06       		.uleb128 0x6
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 33


 1040 008f 40       		.uleb128 0x40
 1041 0090 18       		.uleb128 0x18
 1042 0091 9742     		.uleb128 0x2117
 1043 0093 19       		.uleb128 0x19
 1044 0094 00       		.byte	0
 1045 0095 00       		.byte	0
 1046 0096 0A       		.uleb128 0xa
 1047 0097 2E       		.uleb128 0x2e
 1048 0098 00       		.byte	0
 1049 0099 3F       		.uleb128 0x3f
 1050 009a 19       		.uleb128 0x19
 1051 009b 03       		.uleb128 0x3
 1052 009c 0E       		.uleb128 0xe
 1053 009d 3A       		.uleb128 0x3a
 1054 009e 0B       		.uleb128 0xb
 1055 009f 3B       		.uleb128 0x3b
 1056 00a0 05       		.uleb128 0x5
 1057 00a1 27       		.uleb128 0x27
 1058 00a2 19       		.uleb128 0x19
 1059 00a3 49       		.uleb128 0x49
 1060 00a4 13       		.uleb128 0x13
 1061 00a5 11       		.uleb128 0x11
 1062 00a6 01       		.uleb128 0x1
 1063 00a7 12       		.uleb128 0x12
 1064 00a8 06       		.uleb128 0x6
 1065 00a9 40       		.uleb128 0x40
 1066 00aa 18       		.uleb128 0x18
 1067 00ab 9742     		.uleb128 0x2117
 1068 00ad 19       		.uleb128 0x19
 1069 00ae 00       		.byte	0
 1070 00af 00       		.byte	0
 1071 00b0 0B       		.uleb128 0xb
 1072 00b1 898201   		.uleb128 0x4109
 1073 00b4 00       		.byte	0
 1074 00b5 11       		.uleb128 0x11
 1075 00b6 01       		.uleb128 0x1
 1076 00b7 31       		.uleb128 0x31
 1077 00b8 13       		.uleb128 0x13
 1078 00b9 00       		.byte	0
 1079 00ba 00       		.byte	0
 1080 00bb 0C       		.uleb128 0xc
 1081 00bc 2E       		.uleb128 0x2e
 1082 00bd 01       		.byte	0x1
 1083 00be 3F       		.uleb128 0x3f
 1084 00bf 19       		.uleb128 0x19
 1085 00c0 03       		.uleb128 0x3
 1086 00c1 0E       		.uleb128 0xe
 1087 00c2 3A       		.uleb128 0x3a
 1088 00c3 0B       		.uleb128 0xb
 1089 00c4 3B       		.uleb128 0x3b
 1090 00c5 0B       		.uleb128 0xb
 1091 00c6 27       		.uleb128 0x27
 1092 00c7 19       		.uleb128 0x19
 1093 00c8 11       		.uleb128 0x11
 1094 00c9 01       		.uleb128 0x1
 1095 00ca 12       		.uleb128 0x12
 1096 00cb 06       		.uleb128 0x6
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 34


 1097 00cc 40       		.uleb128 0x40
 1098 00cd 18       		.uleb128 0x18
 1099 00ce 9742     		.uleb128 0x2117
 1100 00d0 19       		.uleb128 0x19
 1101 00d1 01       		.uleb128 0x1
 1102 00d2 13       		.uleb128 0x13
 1103 00d3 00       		.byte	0
 1104 00d4 00       		.byte	0
 1105 00d5 0D       		.uleb128 0xd
 1106 00d6 34       		.uleb128 0x34
 1107 00d7 00       		.byte	0
 1108 00d8 03       		.uleb128 0x3
 1109 00d9 0E       		.uleb128 0xe
 1110 00da 3A       		.uleb128 0x3a
 1111 00db 0B       		.uleb128 0xb
 1112 00dc 3B       		.uleb128 0x3b
 1113 00dd 0B       		.uleb128 0xb
 1114 00de 49       		.uleb128 0x49
 1115 00df 13       		.uleb128 0x13
 1116 00e0 02       		.uleb128 0x2
 1117 00e1 17       		.uleb128 0x17
 1118 00e2 00       		.byte	0
 1119 00e3 00       		.byte	0
 1120 00e4 0E       		.uleb128 0xe
 1121 00e5 898201   		.uleb128 0x4109
 1122 00e8 01       		.byte	0x1
 1123 00e9 11       		.uleb128 0x11
 1124 00ea 01       		.uleb128 0x1
 1125 00eb 31       		.uleb128 0x31
 1126 00ec 13       		.uleb128 0x13
 1127 00ed 01       		.uleb128 0x1
 1128 00ee 13       		.uleb128 0x13
 1129 00ef 00       		.byte	0
 1130 00f0 00       		.byte	0
 1131 00f1 0F       		.uleb128 0xf
 1132 00f2 8A8201   		.uleb128 0x410a
 1133 00f5 00       		.byte	0
 1134 00f6 02       		.uleb128 0x2
 1135 00f7 18       		.uleb128 0x18
 1136 00f8 9142     		.uleb128 0x2111
 1137 00fa 18       		.uleb128 0x18
 1138 00fb 00       		.byte	0
 1139 00fc 00       		.byte	0
 1140 00fd 10       		.uleb128 0x10
 1141 00fe 898201   		.uleb128 0x4109
 1142 0101 01       		.byte	0x1
 1143 0102 11       		.uleb128 0x11
 1144 0103 01       		.uleb128 0x1
 1145 0104 31       		.uleb128 0x31
 1146 0105 13       		.uleb128 0x13
 1147 0106 00       		.byte	0
 1148 0107 00       		.byte	0
 1149 0108 11       		.uleb128 0x11
 1150 0109 34       		.uleb128 0x34
 1151 010a 00       		.byte	0
 1152 010b 03       		.uleb128 0x3
 1153 010c 0E       		.uleb128 0xe
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 35


 1154 010d 3A       		.uleb128 0x3a
 1155 010e 0B       		.uleb128 0xb
 1156 010f 3B       		.uleb128 0x3b
 1157 0110 0B       		.uleb128 0xb
 1158 0111 49       		.uleb128 0x49
 1159 0112 13       		.uleb128 0x13
 1160 0113 3F       		.uleb128 0x3f
 1161 0114 19       		.uleb128 0x19
 1162 0115 02       		.uleb128 0x2
 1163 0116 18       		.uleb128 0x18
 1164 0117 00       		.byte	0
 1165 0118 00       		.byte	0
 1166 0119 12       		.uleb128 0x12
 1167 011a 2E       		.uleb128 0x2e
 1168 011b 00       		.byte	0
 1169 011c 3F       		.uleb128 0x3f
 1170 011d 19       		.uleb128 0x19
 1171 011e 3C       		.uleb128 0x3c
 1172 011f 19       		.uleb128 0x19
 1173 0120 6E       		.uleb128 0x6e
 1174 0121 0E       		.uleb128 0xe
 1175 0122 03       		.uleb128 0x3
 1176 0123 0E       		.uleb128 0xe
 1177 0124 3A       		.uleb128 0x3a
 1178 0125 0B       		.uleb128 0xb
 1179 0126 3B       		.uleb128 0x3b
 1180 0127 0B       		.uleb128 0xb
 1181 0128 00       		.byte	0
 1182 0129 00       		.byte	0
 1183 012a 00       		.byte	0
 1184              		.section	.debug_loc,"",%progbits
 1185              	.Ldebug_loc0:
 1186              	.LLST0:
 1187 0000 22000000 		.4byte	.LVL10
 1188 0004 2F000000 		.4byte	.LVL11-1
 1189 0008 0100     		.2byte	0x1
 1190 000a 50       		.byte	0x50
 1191 000b 00000000 		.4byte	0
 1192 000f 00000000 		.4byte	0
 1193              		.section	.debug_aranges,"",%progbits
 1194 0000 9C000000 		.4byte	0x9c
 1195 0004 0200     		.2byte	0x2
 1196 0006 00000000 		.4byte	.Ldebug_info0
 1197 000a 04       		.byte	0x4
 1198 000b 00       		.byte	0
 1199 000c 0000     		.2byte	0
 1200 000e 0000     		.2byte	0
 1201 0010 00000000 		.4byte	.LFB1
 1202 0014 10000000 		.4byte	.LFE1-.LFB1
 1203 0018 00000000 		.4byte	.LFB3
 1204 001c 10000000 		.4byte	.LFE3-.LFB3
 1205 0020 00000000 		.4byte	.LFB4
 1206 0024 0C000000 		.4byte	.LFE4-.LFB4
 1207 0028 00000000 		.4byte	.LFB5
 1208 002c 0C000000 		.4byte	.LFE5-.LFB5
 1209 0030 00000000 		.4byte	.LFB6
 1210 0034 0C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 36


 1211 0038 00000000 		.4byte	.LFB7
 1212 003c 0C000000 		.4byte	.LFE7-.LFB7
 1213 0040 00000000 		.4byte	.LFB8
 1214 0044 0C000000 		.4byte	.LFE8-.LFB8
 1215 0048 00000000 		.4byte	.LFB9
 1216 004c 0C000000 		.4byte	.LFE9-.LFB9
 1217 0050 00000000 		.4byte	.LFB10
 1218 0054 0C000000 		.4byte	.LFE10-.LFB10
 1219 0058 00000000 		.4byte	.LFB11
 1220 005c 0C000000 		.4byte	.LFE11-.LFB11
 1221 0060 00000000 		.4byte	.LFB12
 1222 0064 0C000000 		.4byte	.LFE12-.LFB12
 1223 0068 00000000 		.4byte	.LFB13
 1224 006c 14000000 		.4byte	.LFE13-.LFB13
 1225 0070 00000000 		.4byte	.LFB14
 1226 0074 0C000000 		.4byte	.LFE14-.LFB14
 1227 0078 00000000 		.4byte	.LFB15
 1228 007c 0C000000 		.4byte	.LFE15-.LFB15
 1229 0080 00000000 		.4byte	.LFB16
 1230 0084 14000000 		.4byte	.LFE16-.LFB16
 1231 0088 00000000 		.4byte	.LFB0
 1232 008c 44000000 		.4byte	.LFE0-.LFB0
 1233 0090 00000000 		.4byte	.LFB2
 1234 0094 1C000000 		.4byte	.LFE2-.LFB2
 1235 0098 00000000 		.4byte	0
 1236 009c 00000000 		.4byte	0
 1237              		.section	.debug_ranges,"",%progbits
 1238              	.Ldebug_ranges0:
 1239 0000 00000000 		.4byte	.LFB1
 1240 0004 10000000 		.4byte	.LFE1
 1241 0008 00000000 		.4byte	.LFB3
 1242 000c 10000000 		.4byte	.LFE3
 1243 0010 00000000 		.4byte	.LFB4
 1244 0014 0C000000 		.4byte	.LFE4
 1245 0018 00000000 		.4byte	.LFB5
 1246 001c 0C000000 		.4byte	.LFE5
 1247 0020 00000000 		.4byte	.LFB6
 1248 0024 0C000000 		.4byte	.LFE6
 1249 0028 00000000 		.4byte	.LFB7
 1250 002c 0C000000 		.4byte	.LFE7
 1251 0030 00000000 		.4byte	.LFB8
 1252 0034 0C000000 		.4byte	.LFE8
 1253 0038 00000000 		.4byte	.LFB9
 1254 003c 0C000000 		.4byte	.LFE9
 1255 0040 00000000 		.4byte	.LFB10
 1256 0044 0C000000 		.4byte	.LFE10
 1257 0048 00000000 		.4byte	.LFB11
 1258 004c 0C000000 		.4byte	.LFE11
 1259 0050 00000000 		.4byte	.LFB12
 1260 0054 0C000000 		.4byte	.LFE12
 1261 0058 00000000 		.4byte	.LFB13
 1262 005c 14000000 		.4byte	.LFE13
 1263 0060 00000000 		.4byte	.LFB14
 1264 0064 0C000000 		.4byte	.LFE14
 1265 0068 00000000 		.4byte	.LFB15
 1266 006c 0C000000 		.4byte	.LFE15
 1267 0070 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 37


 1268 0074 14000000 		.4byte	.LFE16
 1269 0078 00000000 		.4byte	.LFB0
 1270 007c 44000000 		.4byte	.LFE0
 1271 0080 00000000 		.4byte	.LFB2
 1272 0084 1C000000 		.4byte	.LFE2
 1273 0088 00000000 		.4byte	0
 1274 008c 00000000 		.4byte	0
 1275              		.section	.debug_line,"",%progbits
 1276              	.Ldebug_line0:
 1277 0000 93010000 		.section	.debug_str,"MS",%progbits,1
 1277      02004F00 
 1277      00000201 
 1277      FB0E0D00 
 1277      01010101 
 1278              	.LASF15:
 1279 0000 72656731 		.ascii	"reg16\000"
 1279      3600
 1280              	.LASF19:
 1281 0006 54696D65 		.ascii	"TimerRX_Stop\000"
 1281      7252585F 
 1281      53746F70 
 1281      00
 1282              	.LASF37:
 1283 0013 54696D65 		.ascii	"TimerRX_ClearFIFO\000"
 1283      7252585F 
 1283      436C6561 
 1283      72464946 
 1283      4F00
 1284              	.LASF24:
 1285 0025 54696D65 		.ascii	"TimerRX_WriteControlRegister\000"
 1285      7252585F 
 1285      57726974 
 1285      65436F6E 
 1285      74726F6C 
 1286              	.LASF18:
 1287 0042 54696D65 		.ascii	"TimerRX_Enable\000"
 1287      7252585F 
 1287      456E6162 
 1287      6C6500
 1288              	.LASF27:
 1289 0051 54696D65 		.ascii	"TimerRX_ReadPeriod\000"
 1289      7252585F 
 1289      52656164 
 1289      50657269 
 1289      6F6400
 1290              	.LASF29:
 1291 0064 70657269 		.ascii	"period\000"
 1291      6F6400
 1292              	.LASF3:
 1293 006b 73686F72 		.ascii	"short unsigned int\000"
 1293      7420756E 
 1293      7369676E 
 1293      65642069 
 1293      6E7400
 1294              	.LASF13:
 1295 007e 63686172 		.ascii	"char\000"
 1295      00
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 38


 1296              	.LASF30:
 1297 0083 54696D65 		.ascii	"TimerRX_ReadCapture\000"
 1297      7252585F 
 1297      52656164 
 1297      43617074 
 1297      75726500 
 1298              	.LASF39:
 1299 0097 54696D65 		.ascii	"TimerRX_Start\000"
 1299      7252585F 
 1299      53746172 
 1299      7400
 1300              	.LASF20:
 1301 00a5 54696D65 		.ascii	"TimerRX_SoftwareCapture\000"
 1301      7252585F 
 1301      536F6674 
 1301      77617265 
 1301      43617074 
 1302              	.LASF11:
 1303 00bd 666C6F61 		.ascii	"float\000"
 1303      7400
 1304              	.LASF32:
 1305 00c3 636F756E 		.ascii	"counter\000"
 1305      74657200 
 1306              	.LASF7:
 1307 00cb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1307      206C6F6E 
 1307      6720756E 
 1307      7369676E 
 1307      65642069 
 1308              	.LASF1:
 1309 00e2 756E7369 		.ascii	"unsigned char\000"
 1309      676E6564 
 1309      20636861 
 1309      7200
 1310              	.LASF42:
 1311 00f0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1311      43313120 
 1311      352E342E 
 1311      31203230 
 1311      31363036 
 1312 0123 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1312      20726576 
 1312      6973696F 
 1312      6E203233 
 1312      37373135 
 1313 0156 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1313      66756E63 
 1313      74696F6E 
 1313      2D736563 
 1313      74696F6E 
 1314              	.LASF14:
 1315 017e 72656738 		.ascii	"reg8\000"
 1315      00
 1316              	.LASF5:
 1317 0183 6C6F6E67 		.ascii	"long unsigned int\000"
 1317      20756E73 
 1317      69676E65 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 39


 1317      6420696E 
 1317      7400
 1318              	.LASF9:
 1319 0195 75696E74 		.ascii	"uint8\000"
 1319      3800
 1320              	.LASF26:
 1321 019b 636F6E74 		.ascii	"control\000"
 1321      726F6C00 
 1322              	.LASF34:
 1323 01a3 54696D65 		.ascii	"TimerRX_SetCaptureCount\000"
 1323      7252585F 
 1323      53657443 
 1323      61707475 
 1323      7265436F 
 1324              	.LASF23:
 1325 01bb 54696D65 		.ascii	"TimerRX_SetInterruptMode\000"
 1325      7252585F 
 1325      53657449 
 1325      6E746572 
 1325      72757074 
 1326              	.LASF12:
 1327 01d4 646F7562 		.ascii	"double\000"
 1327      6C6500
 1328              	.LASF31:
 1329 01db 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 1329      7252585F 
 1329      57726974 
 1329      65436F75 
 1329      6E746572 
 1330              	.LASF33:
 1331 01f0 54696D65 		.ascii	"TimerRX_ReadCounter\000"
 1331      7252585F 
 1331      52656164 
 1331      436F756E 
 1331      74657200 
 1332              	.LASF10:
 1333 0204 75696E74 		.ascii	"uint16\000"
 1333      313600
 1334              	.LASF43:
 1335 020b 47656E65 		.ascii	"Generated_Source\\PSoC5\\TimerRX.c\000"
 1335      72617465 
 1335      645F536F 
 1335      75726365 
 1335      5C50536F 
 1336              	.LASF8:
 1337 022c 756E7369 		.ascii	"unsigned int\000"
 1337      676E6564 
 1337      20696E74 
 1337      00
 1338              	.LASF46:
 1339 0239 54696D65 		.ascii	"TimerRX_initVar\000"
 1339      7252585F 
 1339      696E6974 
 1339      56617200 
 1340              	.LASF41:
 1341 0249 43794578 		.ascii	"CyExitCriticalSection\000"
 1341      69744372 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 40


 1341      69746963 
 1341      616C5365 
 1341      6374696F 
 1342              	.LASF45:
 1343 025f 54696D65 		.ascii	"TimerRX_interruptState\000"
 1343      7252585F 
 1343      696E7465 
 1343      72727570 
 1343      74537461 
 1344              	.LASF40:
 1345 0276 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1345      74657243 
 1345      72697469 
 1345      63616C53 
 1345      65637469 
 1346              	.LASF38:
 1347 028d 54696D65 		.ascii	"TimerRX_Init\000"
 1347      7252585F 
 1347      496E6974 
 1347      00
 1348              	.LASF28:
 1349 029a 54696D65 		.ascii	"TimerRX_WritePeriod\000"
 1349      7252585F 
 1349      57726974 
 1349      65506572 
 1349      696F6400 
 1350              	.LASF17:
 1351 02ae 73697A65 		.ascii	"sizetype\000"
 1351      74797065 
 1351      00
 1352              	.LASF44:
 1353 02b7 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 1353      73657273 
 1353      5C77696E 
 1353      73746F6E 
 1353      615C446F 
 1354 02e5 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 1354      726B696E 
 1354      6720495C 
 1354      63653439 
 1354      35306C61 
 1355              	.LASF6:
 1356 0314 6C6F6E67 		.ascii	"long long int\000"
 1356      206C6F6E 
 1356      6720696E 
 1356      7400
 1357              	.LASF25:
 1358 0322 696E7465 		.ascii	"interruptMode\000"
 1358      72727570 
 1358      744D6F64 
 1358      6500
 1359              	.LASF22:
 1360 0330 54696D65 		.ascii	"TimerRX_ReadControlRegister\000"
 1360      7252585F 
 1360      52656164 
 1360      436F6E74 
 1360      726F6C52 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccYPOdkW.s 			page 41


 1361              	.LASF2:
 1362 034c 73686F72 		.ascii	"short int\000"
 1362      7420696E 
 1362      7400
 1363              	.LASF35:
 1364 0356 63617074 		.ascii	"captureCount\000"
 1364      75726543 
 1364      6F756E74 
 1364      00
 1365              	.LASF4:
 1366 0363 6C6F6E67 		.ascii	"long int\000"
 1366      20696E74 
 1366      00
 1367              	.LASF36:
 1368 036c 54696D65 		.ascii	"TimerRX_ReadCaptureCount\000"
 1368      7252585F 
 1368      52656164 
 1368      43617074 
 1368      75726543 
 1369              	.LASF16:
 1370 0385 6C6F6E67 		.ascii	"long double\000"
 1370      20646F75 
 1370      626C6500 
 1371              	.LASF0:
 1372 0391 7369676E 		.ascii	"signed char\000"
 1372      65642063 
 1372      68617200 
 1373              	.LASF21:
 1374 039d 54696D65 		.ascii	"TimerRX_ReadStatusRegister\000"
 1374      7252585F 
 1374      52656164 
 1374      53746174 
 1374      75735265 
 1375              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
