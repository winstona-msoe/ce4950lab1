ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	ReceiveInterruptHandler
  22              		.thumb
  23              		.thumb_func
  24              		.type	ReceiveInterruptHandler, %function
  25              	ReceiveInterruptHandler:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - State machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** #include "project.h"
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** #include <stdbool.h>
  23:main.c        **** #include "stdio.h"
  24:main.c        **** 
  25:main.c        **** #define COLLISION_PERIOD                   52
  26:main.c        **** #define COLLISION_COUNTER                  51
  27:main.c        **** #define IDLE_PERIOD                        830
  28:main.c        **** #define IDLE_COUNTER                       829
  29:main.c        **** 
  30:main.c        **** 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 2


  31:main.c        **** #define ADDR1_Start 16
  32:main.c        **** #define ADDR2_Start 25
  33:main.c        **** #define ADDR3_Start 28
  34:main.c        **** #define ADDR_length 2
  35:main.c        **** #define BROADCAST 0
  36:main.c        **** #define PROTOCOL_VERSION 0x01
  37:main.c        **** 
  38:main.c        **** //States include: 
  39:main.c        **** //Busy - signals that the channel monitor is busy
  40:main.c        **** //       and in either line high or line low 
  41:main.c        **** //Collision - collision detected, line high
  42:main.c        **** //Idle - initialized state looking for rising
  43:main.c        **** //       edge to occur
  44:main.c        **** enum state { BUSY, COLLISION, IDLE } systemState;
  45:main.c        **** 
  46:main.c        **** int logicLevel = 0;
  47:main.c        **** int idx = 0; //count
  48:main.c        **** int delay = 500; //delay of 500ms, configured later through random and uniformly distributed to be 
  49:main.c        **** char data[45]; //designed to transmit a message as long as 44 characters 
  50:main.c        **** char *dataPtr; // Pointer to current character in data.
  51:main.c        **** bool firstHalfBit; // Flag for which part of bit we're in.
  52:main.c        **** char binaryOfChar[8]; //represents the 8 bit representation of the character 
  53:main.c        **** bool endOfTransmission;
  54:main.c        **** bool collisionDuringTransmit = false;
  55:main.c        **** #define SERIAL_BUFFER_SIZE 500
  56:main.c        **** unsigned char SERIAL_BUFFER[SERIAL_BUFFER_SIZE];
  57:main.c        **** unsigned char SERIAL_RX_BUFFER[SERIAL_BUFFER_SIZE];
  58:main.c        **** int SERIAL_POS = 0;
  59:main.c        **** int SERIAL_RX_POS = 0;
  60:main.c        **** int UART_RX_DATA_READ_OUT = 0;
  61:main.c        **** int uartConnected = 0;
  62:main.c        **** unsigned char CONVERTED_DATA[SERIAL_BUFFER_SIZE][16];
  63:main.c        **** int dataConvertedReadOutCount = 0;
  64:main.c        **** char currentChar;
  65:main.c        **** int dataSize;
  66:main.c        **** int TX_Bit_Counter = 0; 
  67:main.c        **** int count = 0; 
  68:main.c        **** unsigned char RX_DATA[16]; 
  69:main.c        **** int RX_Bit_Counter = 0;
  70:main.c        **** char RX_Char;
  71:main.c        **** int RX_Lock = 0;
  72:main.c        ****     
  73:main.c        **** /*******************************************************************************
  74:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
  75:main.c        **** ********************************************************************************/
  76:main.c        **** 
  77:main.c        ****  /**********************************************************
  78:main.c        ****  * function name: ReceiveInterruptHandler
  79:main.c        ****  * operation: Handles interrupt timer if the timer expires
  80:main.c        ****  *            indicates an idle condition or colllision
  81:main.c        ****  *            reads the logic levon the input pin/signal
  82:main.c        ****  *            high -> collision set
  83:main.c        ****  *            low -> idle set
  84:main.c        ****  * inputs: none
  85:main.c        ****  * returns: none
  86:main.c        ****  * implemented: 14 Dec 2017
  87:main.c        ****  * edited:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 3


  88:main.c        ****  *********************************************************/ 
  89:main.c        **** CY_ISR(ReceiveInterruptHandler)
  90:main.c        **** {
  28              		.loc 1 90 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  91:main.c        ****    	TimerRX_STATUS; 
  36              		.loc 1 91 0
  37 0002 104B     		ldr	r3, .L5
  38 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  92:main.c        ****     if (logicLevel) {
  39              		.loc 1 92 0
  40 0006 104B     		ldr	r3, .L5+4
  41 0008 1B68     		ldr	r3, [r3]
  42 000a 6BB1     		cbz	r3, .L2
  93:main.c        ****         systemState = COLLISION;
  43              		.loc 1 93 0
  44 000c 0120     		movs	r0, #1
  45 000e 0F4B     		ldr	r3, .L5+8
  46 0010 1870     		strb	r0, [r3]
  94:main.c        ****         collisionDuringTransmit = true;
  47              		.loc 1 94 0
  48 0012 0D4B     		ldr	r3, .L5+4
  49 0014 1871     		strb	r0, [r3, #4]
  95:main.c        ****         COLLISION_Write(1);
  50              		.loc 1 95 0
  51 0016 FFF7FEFF 		bl	COLLISION_Write
  52              	.LVL0:
  96:main.c        ****         BUSY_Write(0);
  53              		.loc 1 96 0
  54 001a 0020     		movs	r0, #0
  55 001c FFF7FEFF 		bl	BUSY_Write
  56              	.LVL1:
  97:main.c        ****         IDLE_Write(0);
  57              		.loc 1 97 0
  58 0020 0020     		movs	r0, #0
  59 0022 FFF7FEFF 		bl	IDLE_Write
  60              	.LVL2:
  61 0026 08BD     		pop	{r3, pc}
  62              	.L2:
  98:main.c        ****     } else {
  99:main.c        ****         systemState = IDLE;
  63              		.loc 1 99 0
  64 0028 0222     		movs	r2, #2
  65 002a 084B     		ldr	r3, .L5+8
  66 002c 1A70     		strb	r2, [r3]
 100:main.c        ****         COLLISION_Write(0);
  67              		.loc 1 100 0
  68 002e 0020     		movs	r0, #0
  69 0030 FFF7FEFF 		bl	COLLISION_Write
  70              	.LVL3:
 101:main.c        ****         BUSY_Write(0);
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 4


  71              		.loc 1 101 0
  72 0034 0020     		movs	r0, #0
  73 0036 FFF7FEFF 		bl	BUSY_Write
  74              	.LVL4:
 102:main.c        ****         IDLE_Write(1);
  75              		.loc 1 102 0
  76 003a 0120     		movs	r0, #1
  77 003c FFF7FEFF 		bl	IDLE_Write
  78              	.LVL5:
  79 0040 08BD     		pop	{r3, pc}
  80              	.L6:
  81 0042 00BF     		.align	2
  82              	.L5:
  83 0044 67640040 		.word	1073767527
  84 0048 00000000 		.word	.LANCHOR0
  85 004c 00000000 		.word	systemState
  86              		.cfi_endproc
  87              	.LFE64:
  88              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
  89              		.section	.text.BackoffInterruptHandler,"ax",%progbits
  90              		.align	2
  91              		.global	BackoffInterruptHandler
  92              		.thumb
  93              		.thumb_func
  94              		.type	BackoffInterruptHandler, %function
  95              	BackoffInterruptHandler:
  96              	.LFB65:
 103:main.c        ****     }
 104:main.c        **** }
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** CY_ISR(BackoffInterruptHandler){
  97              		.loc 1 107 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 08B5     		push	{r3, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
 108:main.c        ****     Backoff_STATUS;
 105              		.loc 1 108 0
 106 0002 044B     		ldr	r3, .L9
 107 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 109:main.c        ****     Backoff_Stop();
 108              		.loc 1 109 0
 109 0006 FFF7FEFF 		bl	Backoff_Stop
 110              	.LVL6:
 110:main.c        ****     systemState = IDLE;
 111              		.loc 1 110 0
 112 000a 0222     		movs	r2, #2
 113 000c 024B     		ldr	r3, .L9+4
 114 000e 1A70     		strb	r2, [r3]
 115 0010 08BD     		pop	{r3, pc}
 116              	.L10:
 117 0012 00BF     		.align	2
 118              	.L9:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 5


 119 0014 67650040 		.word	1073767783
 120 0018 00000000 		.word	systemState
 121              		.cfi_endproc
 122              	.LFE65:
 123              		.size	BackoffInterruptHandler, .-BackoffInterruptHandler
 124              		.global	__aeabi_i2d
 125              		.global	__aeabi_dmul
 126              		.global	__aeabi_d2uiz
 127              		.global	__aeabi_dsub
 128              		.section	.text.TimerInterruptHandler,"ax",%progbits
 129              		.align	2
 130              		.global	TimerInterruptHandler
 131              		.thumb
 132              		.thumb_func
 133              		.type	TimerInterruptHandler, %function
 134              	TimerInterruptHandler:
 135              	.LFB66:
 111:main.c        **** }
 112:main.c        **** 
 113:main.c        ****  /**********************************************************
 114:main.c        ****  * function name: TimerInterruptHandler
 115:main.c        ****  * operation: Handles interrupt timer if the timer expires
 116:main.c        ****  *            indicates an idle condition or colllision
 117:main.c        ****  *            reads the logic levon the input pin/signal
 118:main.c        ****  *            high -> collision set
 119:main.c        ****  *            low -> idle set
 120:main.c        ****  * inputs: none
 121:main.c        ****  * returns: none
 122:main.c        ****  * implemented: 14 Dec 2017
 123:main.c        ****  * edited:
 124:main.c        ****  *********************************************************/ 
 125:main.c        **** CY_ISR(TimerInterruptHandler)
 126:main.c        **** {
 136              		.loc 1 126 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 38B5     		push	{r3, r4, r5, lr}
 141              		.cfi_def_cfa_offset 16
 142              		.cfi_offset 3, -16
 143              		.cfi_offset 4, -12
 144              		.cfi_offset 5, -8
 145              		.cfi_offset 14, -4
 127:main.c        ****    	Timer_STATUS; //clear timer
 146              		.loc 1 127 0
 147 0002 1B4B     		ldr	r3, .L15
 148 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128:main.c        ****     
 129:main.c        ****     if (!(logicLevel) ){
 149              		.loc 1 129 0
 150 0006 1B4B     		ldr	r3, .L15+4
 151 0008 1B68     		ldr	r3, [r3]
 152 000a 1BB9     		cbnz	r3, .L12
 130:main.c        ****         systemState = IDLE;
 153              		.loc 1 130 0
 154 000c 0222     		movs	r2, #2
 155 000e 1A4B     		ldr	r3, .L15+8
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 6


 156 0010 1A70     		strb	r2, [r3]
 157 0012 38BD     		pop	{r3, r4, r5, pc}
 158              	.L12:
 159              	.LBB2:
 131:main.c        ****     } else {
 132:main.c        ****         systemState = COLLISION;
 160              		.loc 1 132 0
 161 0014 0122     		movs	r2, #1
 162 0016 184B     		ldr	r3, .L15+8
 163 0018 1A70     		strb	r2, [r3]
 133:main.c        ****         TRANSMIT_Write(0);
 164              		.loc 1 133 0
 165 001a 0020     		movs	r0, #0
 166 001c FFF7FEFF 		bl	TRANSMIT_Write
 167              	.LVL7:
 134:main.c        ****         TX_Bit_Counter = 0;    
 168              		.loc 1 134 0
 169 0020 144B     		ldr	r3, .L15+4
 170 0022 0022     		movs	r2, #0
 171 0024 9A60     		str	r2, [r3, #8]
 135:main.c        ****         count = 0;
 172              		.loc 1 135 0
 173 0026 DA60     		str	r2, [r3, #12]
 174              	.LVL8:
 136:main.c        ****         int backoff = 0;
 137:main.c        **** 	    //reset current byte transmission 
 138:main.c        **** 	    //generate sudo-random backoff, normally distributed between backoff/128 seconds, where N is a
 139:main.c        **** 	    backoff = (PRS_Read()+1);
 175              		.loc 1 139 0
 176 0028 FFF7FEFF 		bl	PRS_Read
 177              	.LVL9:
 140:main.c        **** 	    //CyDelay((double)(backoff/128.0)*1000); //use cydelay for now, which takes millis
 141:main.c        ****         Backoff_WritePeriod((backoff/128.0)*1000);
 178              		.loc 1 141 0
 179 002c 0130     		adds	r0, r0, #1
 180              	.LVL10:
 181 002e FFF7FEFF 		bl	__aeabi_i2d
 182              	.LVL11:
 183 0032 0022     		movs	r2, #0
 184 0034 4FF07E53 		mov	r3, #1065353216
 185 0038 FFF7FEFF 		bl	__aeabi_dmul
 186              	.LVL12:
 187 003c 0022     		movs	r2, #0
 188 003e 0F4B     		ldr	r3, .L15+12
 189 0040 FFF7FEFF 		bl	__aeabi_dmul
 190              	.LVL13:
 191 0044 0446     		mov	r4, r0
 192 0046 0D46     		mov	r5, r1
 193 0048 FFF7FEFF 		bl	__aeabi_d2uiz
 194              	.LVL14:
 195 004c 80B2     		uxth	r0, r0
 196 004e FFF7FEFF 		bl	Backoff_WritePeriod
 197              	.LVL15:
 142:main.c        ****         Backoff_WriteCounter(((backoff/128.0)*1000)-1);
 198              		.loc 1 142 0
 199 0052 0022     		movs	r2, #0
 200 0054 0A4B     		ldr	r3, .L15+16
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 7


 201 0056 2046     		mov	r0, r4
 202 0058 2946     		mov	r1, r5
 203 005a FFF7FEFF 		bl	__aeabi_dsub
 204              	.LVL16:
 205 005e FFF7FEFF 		bl	__aeabi_d2uiz
 206              	.LVL17:
 207 0062 80B2     		uxth	r0, r0
 208 0064 FFF7FEFF 		bl	Backoff_WriteCounter
 209              	.LVL18:
 143:main.c        ****         Backoff_Start();
 210              		.loc 1 143 0
 211 0068 FFF7FEFF 		bl	Backoff_Start
 212              	.LVL19:
 213 006c 38BD     		pop	{r3, r4, r5, pc}
 214              	.L16:
 215 006e 00BF     		.align	2
 216              	.L15:
 217 0070 65650040 		.word	1073767781
 218 0074 00000000 		.word	.LANCHOR0
 219 0078 00000000 		.word	systemState
 220 007c 00408F40 		.word	1083129856
 221 0080 0000F03F 		.word	1072693248
 222              	.LBE2:
 223              		.cfi_endproc
 224              	.LFE66:
 225              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 226              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 227              		.align	2
 228              		.global	RisingEdgeInterruptHandler
 229              		.thumb
 230              		.thumb_func
 231              		.type	RisingEdgeInterruptHandler, %function
 232              	RisingEdgeInterruptHandler:
 233              	.LFB68:
 144:main.c        ****     }
 145:main.c        **** }
 146:main.c        **** 
 147:main.c        **** CY_ISR(TransmitInterruptHandler)
 148:main.c        **** {
 149:main.c        ****     TimerTX_STATUS;
 150:main.c        ****     if (*dataPtr == '\0') {
 151:main.c        ****         TRANSMIT_Write(0);
 152:main.c        ****         TransmitISR_Stop();
 153:main.c        ****         endOfTransmission = true;
 154:main.c        ****     } else {
 155:main.c        ****         if (systemState == COLLISION) {
 156:main.c        ****             /*TransmitISR_Stop();
 157:main.c        ****             TimerTX_Stop();
 158:main.c        ****             collisionDuringTransmit = true;
 159:main.c        ****             idx = 7;
 160:main.c        ****             firstHalfBit = true;
 161:main.c        ****             TRANSMIT_Write(0);*/
 162:main.c        ****             return;
 163:main.c        ****         }
 164:main.c        ****         if (firstHalfBit) {
 165:main.c        ****             if (idx == 7) {
 166:main.c        ****                 TRANSMIT_Write(1);
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 8


 167:main.c        ****             } else {
 168:main.c        ****                 // Sets the level to the current bit.
 169:main.c        ****                 TRANSMIT_Write((*dataPtr & (1 << idx)) ? 1 : 0);
 170:main.c        ****             }
 171:main.c        ****             firstHalfBit = false;
 172:main.c        ****         } else {
 173:main.c        ****             TRANSMIT_Write(0);
 174:main.c        ****             if (idx == 0) {
 175:main.c        ****                 idx = 7;
 176:main.c        ****                 dataPtr++;
 177:main.c        ****             } else {
 178:main.c        ****                 idx--;
 179:main.c        ****             }
 180:main.c        ****             firstHalfBit = true;
 181:main.c        ****         }
 182:main.c        ****     }
 183:main.c        **** }
 184:main.c        **** 
 185:main.c        ****  /**********************************************************
 186:main.c        ****  * function name: RisingEdgeInterruptHandler
 187:main.c        ****  * operation: Handles interrupt for when a rising edge on 
 188:main.c        ****  *            the timer occurs. Triggers system to look for
 189:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 190:main.c        ****  *            interupt to occur in .6ms and sets state to 
 191:main.c        ****  *            busy
 192:main.c        ****  * inputs: none
 193:main.c        ****  * returns: none
 194:main.c        ****  * implemented: 14 Dec 2017
 195:main.c        ****  * edited:
 196:main.c        ****  *********************************************************/ 
 197:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 198:main.c        **** {
 234              		.loc 1 198 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 38B5     		push	{r3, r4, r5, lr}
 239              		.cfi_def_cfa_offset 16
 240              		.cfi_offset 3, -16
 241              		.cfi_offset 4, -12
 242              		.cfi_offset 5, -8
 243              		.cfi_offset 14, -4
 199:main.c        ****     if ((!logicLevel)){
 244              		.loc 1 199 0
 245 0002 0E4B     		ldr	r3, .L20
 246 0004 1B68     		ldr	r3, [r3]
 247 0006 C3B9     		cbnz	r3, .L17
 200:main.c        ****         TimerRX_Stop();
 248              		.loc 1 200 0
 249 0008 FFF7FEFF 		bl	TimerRX_Stop
 250              	.LVL20:
 201:main.c        ****         TimerRX_WritePeriod(COLLISION_PERIOD);
 251              		.loc 1 201 0
 252 000c 3420     		movs	r0, #52
 253 000e FFF7FEFF 		bl	TimerRX_WritePeriod
 254              	.LVL21:
 202:main.c        ****         TimerRX_WriteCounter(COLLISION_COUNTER);
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 9


 255              		.loc 1 202 0
 256 0012 3320     		movs	r0, #51
 257 0014 FFF7FEFF 		bl	TimerRX_WriteCounter
 258              	.LVL22:
 203:main.c        ****         TimerRX_Start();
 259              		.loc 1 203 0
 260 0018 FFF7FEFF 		bl	TimerRX_Start
 261              	.LVL23:
 204:main.c        ****         logicLevel = 1;
 262              		.loc 1 204 0
 263 001c 0125     		movs	r5, #1
 264 001e 074B     		ldr	r3, .L20
 265 0020 1D60     		str	r5, [r3]
 205:main.c        ****         systemState = BUSY;
 266              		.loc 1 205 0
 267 0022 0024     		movs	r4, #0
 268 0024 064B     		ldr	r3, .L20+4
 269 0026 1C70     		strb	r4, [r3]
 206:main.c        ****         COLLISION_Write(0);
 270              		.loc 1 206 0
 271 0028 2046     		mov	r0, r4
 272 002a FFF7FEFF 		bl	COLLISION_Write
 273              	.LVL24:
 207:main.c        ****         BUSY_Write(1);
 274              		.loc 1 207 0
 275 002e 2846     		mov	r0, r5
 276 0030 FFF7FEFF 		bl	BUSY_Write
 277              	.LVL25:
 208:main.c        ****         IDLE_Write(0);
 278              		.loc 1 208 0
 279 0034 2046     		mov	r0, r4
 280 0036 FFF7FEFF 		bl	IDLE_Write
 281              	.LVL26:
 282              	.L17:
 283 003a 38BD     		pop	{r3, r4, r5, pc}
 284              	.L21:
 285              		.align	2
 286              	.L20:
 287 003c 00000000 		.word	.LANCHOR0
 288 0040 00000000 		.word	systemState
 289              		.cfi_endproc
 290              	.LFE68:
 291              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 292              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 293              		.align	2
 294              		.global	FallingEdgeInterruptHandler
 295              		.thumb
 296              		.thumb_func
 297              		.type	FallingEdgeInterruptHandler, %function
 298              	FallingEdgeInterruptHandler:
 299              	.LFB69:
 209:main.c        ****     } else {
 210:main.c        ****         
 211:main.c        ****     }
 212:main.c        **** }
 213:main.c        ****  
 214:main.c        **** 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 10


 215:main.c        ****  /**********************************************************
 216:main.c        ****  * function name: FallingEdgeInterruptHandler
 217:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 218:main.c        ****  *            the timer occurs. Triggers system to look for
 219:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 220:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 221:main.c        ****  *            busy
 222:main.c        ****  * inputs: none
 223:main.c        ****  * returns: none
 224:main.c        ****  * implemented: 14 Dec 2017
 225:main.c        ****  * edited:
 226:main.c        ****  *********************************************************/ 
 227:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 228:main.c        **** {
 300              		.loc 1 228 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 229:main.c        ****     if (logicLevel){
 304              		.loc 1 229 0
 305 0000 0F4B     		ldr	r3, .L26
 306 0002 1B68     		ldr	r3, [r3]
 307 0004 DBB1     		cbz	r3, .L25
 228:main.c        ****     if (logicLevel){
 308              		.loc 1 228 0
 309 0006 10B5     		push	{r4, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 4, -8
 312              		.cfi_offset 14, -4
 230:main.c        ****         TimerRX_Stop();
 313              		.loc 1 230 0
 314 0008 FFF7FEFF 		bl	TimerRX_Stop
 315              	.LVL27:
 231:main.c        ****         TimerRX_WritePeriod(IDLE_PERIOD);
 316              		.loc 1 231 0
 317 000c 40F23E30 		movw	r0, #830
 318 0010 FFF7FEFF 		bl	TimerRX_WritePeriod
 319              	.LVL28:
 232:main.c        ****         TimerRX_WriteCounter(IDLE_COUNTER);
 320              		.loc 1 232 0
 321 0014 40F23D30 		movw	r0, #829
 322 0018 FFF7FEFF 		bl	TimerRX_WriteCounter
 323              	.LVL29:
 233:main.c        ****         TimerRX_Start();
 324              		.loc 1 233 0
 325 001c FFF7FEFF 		bl	TimerRX_Start
 326              	.LVL30:
 234:main.c        ****         logicLevel = 0;
 327              		.loc 1 234 0
 328 0020 0024     		movs	r4, #0
 329 0022 074B     		ldr	r3, .L26
 330 0024 1C60     		str	r4, [r3]
 235:main.c        ****         systemState = BUSY;
 331              		.loc 1 235 0
 332 0026 074B     		ldr	r3, .L26+4
 333 0028 1C70     		strb	r4, [r3]
 236:main.c        ****         COLLISION_Write(0);
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 11


 334              		.loc 1 236 0
 335 002a 2046     		mov	r0, r4
 336 002c FFF7FEFF 		bl	COLLISION_Write
 337              	.LVL31:
 237:main.c        ****         BUSY_Write(1);
 338              		.loc 1 237 0
 339 0030 0120     		movs	r0, #1
 340 0032 FFF7FEFF 		bl	BUSY_Write
 341              	.LVL32:
 238:main.c        ****         IDLE_Write(0);
 342              		.loc 1 238 0
 343 0036 2046     		mov	r0, r4
 344 0038 FFF7FEFF 		bl	IDLE_Write
 345              	.LVL33:
 346 003c 10BD     		pop	{r4, pc}
 347              	.L25:
 348              		.cfi_def_cfa_offset 0
 349              		.cfi_restore 4
 350              		.cfi_restore 14
 351 003e 7047     		bx	lr
 352              	.L27:
 353              		.align	2
 354              	.L26:
 355 0040 00000000 		.word	.LANCHOR0
 356 0044 00000000 		.word	systemState
 357              		.cfi_endproc
 358              	.LFE69:
 359              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 360              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 361              		.align	2
 362              		.global	TransmitInterruptHandler
 363              		.thumb
 364              		.thumb_func
 365              		.type	TransmitInterruptHandler, %function
 366              	TransmitInterruptHandler:
 367              	.LFB67:
 148:main.c        ****     TimerTX_STATUS;
 368              		.loc 1 148 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 149:main.c        ****     if (*dataPtr == '\0') {
 376              		.loc 1 149 0
 377 0002 1E4B     		ldr	r3, .L37
 378 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 150:main.c        ****         TRANSMIT_Write(0);
 379              		.loc 1 150 0
 380 0006 1E4B     		ldr	r3, .L37+4
 381 0008 1B68     		ldr	r3, [r3]
 382 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383 000c 43B9     		cbnz	r3, .L29
 151:main.c        ****         TransmitISR_Stop();
 384              		.loc 1 151 0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 12


 385 000e 0020     		movs	r0, #0
 386 0010 FFF7FEFF 		bl	TRANSMIT_Write
 387              	.LVL34:
 152:main.c        ****         endOfTransmission = true;
 388              		.loc 1 152 0
 389 0014 FFF7FEFF 		bl	TransmitISR_Stop
 390              	.LVL35:
 153:main.c        ****     } else {
 391              		.loc 1 153 0
 392 0018 0122     		movs	r2, #1
 393 001a 1A4B     		ldr	r3, .L37+8
 394 001c 1A70     		strb	r2, [r3]
 395 001e 08BD     		pop	{r3, pc}
 396              	.L29:
 155:main.c        ****             /*TransmitISR_Stop();
 397              		.loc 1 155 0
 398 0020 194A     		ldr	r2, .L37+12
 399 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 400 0024 012A     		cmp	r2, #1
 401 0026 28D0     		beq	.L28
 164:main.c        ****             if (idx == 7) {
 402              		.loc 1 164 0
 403 0028 184A     		ldr	r2, .L37+16
 404 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 405 002c 8AB1     		cbz	r2, .L31
 165:main.c        ****                 TRANSMIT_Write(1);
 406              		.loc 1 165 0
 407 002e 184A     		ldr	r2, .L37+20
 408 0030 1069     		ldr	r0, [r2, #16]
 409 0032 0728     		cmp	r0, #7
 410 0034 03D1     		bne	.L32
 166:main.c        ****             } else {
 411              		.loc 1 166 0
 412 0036 0120     		movs	r0, #1
 413 0038 FFF7FEFF 		bl	TRANSMIT_Write
 414              	.LVL36:
 415 003c 05E0     		b	.L33
 416              	.L32:
 169:main.c        ****             }
 417              		.loc 1 169 0
 418 003e 43FA00F0 		asr	r0, r3, r0
 419 0042 00F00100 		and	r0, r0, #1
 420 0046 FFF7FEFF 		bl	TRANSMIT_Write
 421              	.LVL37:
 422              	.L33:
 171:main.c        ****         } else {
 423              		.loc 1 171 0
 424 004a 0022     		movs	r2, #0
 425 004c 0F4B     		ldr	r3, .L37+16
 426 004e 1A70     		strb	r2, [r3]
 427 0050 08BD     		pop	{r3, pc}
 428              	.L31:
 173:main.c        ****             if (idx == 0) {
 429              		.loc 1 173 0
 430 0052 0020     		movs	r0, #0
 431 0054 FFF7FEFF 		bl	TRANSMIT_Write
 432              	.LVL38:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 13


 174:main.c        ****                 idx = 7;
 433              		.loc 1 174 0
 434 0058 0D4B     		ldr	r3, .L37+20
 435 005a 1B69     		ldr	r3, [r3, #16]
 436 005c 3BB9     		cbnz	r3, .L34
 175:main.c        ****                 dataPtr++;
 437              		.loc 1 175 0
 438 005e 0722     		movs	r2, #7
 439 0060 0B4B     		ldr	r3, .L37+20
 440 0062 1A61     		str	r2, [r3, #16]
 176:main.c        ****             } else {
 441              		.loc 1 176 0
 442 0064 064A     		ldr	r2, .L37+4
 443 0066 1368     		ldr	r3, [r2]
 444 0068 0133     		adds	r3, r3, #1
 445 006a 1360     		str	r3, [r2]
 446 006c 02E0     		b	.L35
 447              	.L34:
 178:main.c        ****             }
 448              		.loc 1 178 0
 449 006e 013B     		subs	r3, r3, #1
 450 0070 074A     		ldr	r2, .L37+20
 451 0072 1361     		str	r3, [r2, #16]
 452              	.L35:
 180:main.c        ****         }
 453              		.loc 1 180 0
 454 0074 0122     		movs	r2, #1
 455 0076 054B     		ldr	r3, .L37+16
 456 0078 1A70     		strb	r2, [r3]
 457              	.L28:
 458 007a 08BD     		pop	{r3, pc}
 459              	.L38:
 460              		.align	2
 461              	.L37:
 462 007c 034F0040 		.word	1073762051
 463 0080 00000000 		.word	dataPtr
 464 0084 00000000 		.word	endOfTransmission
 465 0088 00000000 		.word	systemState
 466 008c 00000000 		.word	firstHalfBit
 467 0090 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE67:
 470              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 471              		.section	.text.main,"ax",%progbits
 472              		.align	2
 473              		.global	main
 474              		.thumb
 475              		.thumb_func
 476              		.type	main, %function
 477              	main:
 478              	.LFB70:
 239:main.c        ****     } 
 240:main.c        ****     else {
 241:main.c        ****     } 
 242:main.c        **** }
 243:main.c        **** 
 244:main.c        **** 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 14


 245:main.c        **** int getInputData(char *);
 246:main.c        **** 
 247:main.c        **** 
 248:main.c        **** 
 249:main.c        ****  /**********************************************************
 250:main.c        ****  * function name: main
 251:main.c        ****  * operation: Handles the main state machine diagram for the
 252:main.c        ****  *            system. Changes  states when needed and calls
 253:main.c        ****  *            appropriate interrupt routines when triggered.                
 254:main.c        ****  * inputs: none
 255:main.c        ****  * returns: none
 256:main.c        ****  * implemented: 14 Dec 2017
 257:main.c        ****  * edited:
 258:main.c        ****  *********************************************************/ 
 259:main.c        **** int main(void)
 260:main.c        **** {
 479              		.loc 1 260 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 10B5     		push	{r4, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 4, -8
 486              		.cfi_offset 14, -4
 261:main.c        ****     CyGlobalIntEnable; //enable global interrupts
 487              		.loc 1 261 0
 488              		.syntax unified
 489              	@ 261 "main.c" 1
 490 0002 62B6     		CPSIE   i
 491              	@ 0 "" 2
 262:main.c        ****     //starting the interrupt handlers
 263:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 492              		.loc 1 263 0
 493              		.thumb
 494              		.syntax unified
 495 0004 2F48     		ldr	r0, .L51
 496 0006 FFF7FEFF 		bl	TimerISR_StartEx
 497              	.LVL39:
 264:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 498              		.loc 1 264 0
 499 000a 2F48     		ldr	r0, .L51+4
 500 000c FFF7FEFF 		bl	RisingEdgeISR_StartEx
 501              	.LVL40:
 265:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 502              		.loc 1 265 0
 503 0010 2E48     		ldr	r0, .L51+8
 504 0012 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 505              	.LVL41:
 266:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 506              		.loc 1 266 0
 507 0016 2E48     		ldr	r0, .L51+12
 508 0018 FFF7FEFF 		bl	ReceiveISR_StartEx
 509              	.LVL42:
 267:main.c        ****     USBUART_Start(USBUART_device, USBUART_5V_OPERATION); //configuring USBUART to start
 510              		.loc 1 267 0
 511 001c 2D4B     		ldr	r3, .L51+16
 512 001e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 15


 513 0020 0121     		movs	r1, #1
 514 0022 FFF7FEFF 		bl	USBUART_Start
 515              	.LVL43:
 268:main.c        ****     TRANSMIT_Write(0);
 516              		.loc 1 268 0
 517 0026 0020     		movs	r0, #0
 518 0028 FFF7FEFF 		bl	TRANSMIT_Write
 519              	.LVL44:
 269:main.c        ****     BackoffISR_StartEx(BackoffInterruptHandler);
 520              		.loc 1 269 0
 521 002c 2A48     		ldr	r0, .L51+20
 522 002e FFF7FEFF 		bl	BackoffISR_StartEx
 523              	.LVL45:
 270:main.c        ****     PRS_Start();
 524              		.loc 1 270 0
 525 0032 FFF7FEFF 		bl	PRS_Start
 526              	.LVL46:
 271:main.c        ****     systemState = IDLE;
 527              		.loc 1 271 0
 528 0036 0222     		movs	r2, #2
 529 0038 284B     		ldr	r3, .L51+24
 530 003a 1A70     		strb	r2, [r3]
 531              	.L44:
 272:main.c        **** 
 273:main.c        ****     while(1){
 274:main.c        ****          //check if UART is connected, then set flag
 275:main.c        **** 		if(USBUART_GetDTERate() == 57600){
 532              		.loc 1 275 0
 533 003c FFF7FEFF 		bl	USBUART_GetDTERate
 534              	.LVL47:
 535 0040 B0F5614F 		cmp	r0, #57600
 536 0044 02D1     		bne	.L40
 276:main.c        **** 			uartConnected = 1;
 537              		.loc 1 276 0
 538 0046 0122     		movs	r2, #1
 539 0048 254B     		ldr	r3, .L51+28
 540 004a 5A61     		str	r2, [r3, #20]
 541              	.L40:
 277:main.c        **** 		}
 278:main.c        **** 	
 279:main.c        **** 		//Host can send double SET_INTERFACE request, which sounds sub-optimal for us if we don't handle 
 280:main.c        **** 		if (0 != USBUART_IsConfigurationChanged())
 542              		.loc 1 280 0
 543 004c FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 544              	.LVL48:
 545 0050 20B1     		cbz	r0, .L41
 281:main.c        **** 		{
 282:main.c        **** 			//re-initialize device
 283:main.c        **** 			if (0 != USBUART_GetConfiguration())
 546              		.loc 1 283 0
 547 0052 FFF7FEFF 		bl	USBUART_GetConfiguration
 548              	.LVL49:
 549 0056 08B1     		cbz	r0, .L41
 284:main.c        **** 			{
 285:main.c        **** 				//Enumeration is done, allow receieving data from host
 286:main.c        **** 				USBUART_CDC_Init();
 550              		.loc 1 286 0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 16


 551 0058 FFF7FEFF 		bl	USBUART_CDC_Init
 552              	.LVL50:
 553              	.L41:
 287:main.c        **** 			}
 288:main.c        **** 		}
 289:main.c        ****                 
 290:main.c        ****         //check if the UART has data, then place in buffer
 291:main.c        ****         if(USBUART_DataIsReady() != 0){
 554              		.loc 1 291 0
 555 005c FFF7FEFF 		bl	USBUART_DataIsReady
 556              	.LVL51:
 557 0060 70B1     		cbz	r0, .L42
 292:main.c        ****             dataSize = USBUART_GetAll(SERIAL_BUFFER);
 558              		.loc 1 292 0
 559 0062 2048     		ldr	r0, .L51+32
 560 0064 FFF7FEFF 		bl	USBUART_GetAll
 561              	.LVL52:
 562 0068 1F4B     		ldr	r3, .L51+36
 563 006a 1860     		str	r0, [r3]
 564              	.L43:
 293:main.c        ****             while(!USBUART_CDCIsReady());
 565              		.loc 1 293 0 discriminator 1
 566 006c FFF7FEFF 		bl	USBUART_CDCIsReady
 567              	.LVL53:
 568 0070 0028     		cmp	r0, #0
 569 0072 FBD0     		beq	.L43
 294:main.c        ****             USBUART_PutCRLF();
 570              		.loc 1 294 0
 571 0074 FFF7FEFF 		bl	USBUART_PutCRLF
 572              	.LVL54:
 295:main.c        ****             dataConvertedReadOutCount = 0;            
 573              		.loc 1 295 0
 574 0078 194B     		ldr	r3, .L51+28
 575 007a 0022     		movs	r2, #0
 576 007c 9A61     		str	r2, [r3, #24]
 296:main.c        ****             SERIAL_POS = 0;
 577              		.loc 1 296 0
 578 007e DA61     		str	r2, [r3, #28]
 579              	.L42:
 297:main.c        ****         }
 298:main.c        ****         //write converted data to UART
 299:main.c        ****     /*
 300:main.c        ****         if(UART_CDCIsReady() != 0){
 301:main.c        ****             if(dataConvertedReadOutCount < dataSize && SERIAL_POS == dataSize){
 302:main.c        ****                 for(int y = 0; y < 16; y++){
 303:main.c        ****                  while(!UART_CDCIsReady());
 304:main.c        ****                  //UART_PutChar(CONVERTED_DATA[dataConvertedReadOutCount][y]); 
 305:main.c        ****                 UART_PutChar(RX_DATA[y]);
 306:main.c        ****                 }
 307:main.c        ****                 ++dataConvertedReadOutCount;
 308:main.c        ****                 while(!UART_CDCIsReady());
 309:main.c        ****                 UART_PutCRLF();
 310:main.c        ****             }
 311:main.c        ****         }
 312:main.c        ****     */
 313:main.c        ****         
 314:main.c        ****         if(USBUART_CDCIsReady() != 0){
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 17


 580              		.loc 1 314 0
 581 0080 FFF7FEFF 		bl	USBUART_CDCIsReady
 582              	.LVL55:
 583 0084 0028     		cmp	r0, #0
 584 0086 D9D0     		beq	.L44
 315:main.c        ****             
 316:main.c        ****             if(UART_RX_DATA_READ_OUT != SERIAL_RX_POS){
 585              		.loc 1 316 0
 586 0088 154B     		ldr	r3, .L51+28
 587 008a 1A6A     		ldr	r2, [r3, #32]
 588 008c 5B6A     		ldr	r3, [r3, #36]
 589 008e 9A42     		cmp	r2, r3
 590 0090 0ED1     		bne	.L49
 591              	.LBB3:
 592 0092 12E0     		b	.L46
 593              	.LVL56:
 594              	.L47:
 595              	.LBB4:
 317:main.c        ****                 for(int y = 0; y < SERIAL_RX_POS; y++){
 318:main.c        ****                     int startHeaderReceieved = 0;
 319:main.c        ****                     int verNumMatch = 0;
 320:main.c        ****                     char sourceAddr = 0x00;
 321:main.c        ****                     char destAddr = 0x00;
 322:main.c        ****                     int dataLength = 0;
 323:main.c        ****                     char CRCused = 0x00;
 324:main.c        ****                     char HeaderCRC = 0x00;
 325:main.c        ****                     int addrDataPrinted = 0;
 326:main.c        ****                     int dataPrintedOut = 0;
 327:main.c        ****                                         
 328:main.c        ****                     while(!USBUART_CDCIsReady());
 596              		.loc 1 328 0 discriminator 1
 597 0094 FFF7FEFF 		bl	USBUART_CDCIsReady
 598              	.LVL57:
 599 0098 0028     		cmp	r0, #0
 600 009a FBD0     		beq	.L47
 329:main.c        ****                     //check for start bit
 330:main.c        ****                     if(y == 0){
 331:main.c        ****                         if(SERIAL_RX_BUFFER[y] == 0x00){
 332:main.c        ****                             startHeaderReceieved = 1;
 333:main.c        ****                         }
 334:main.c        ****                     }
 335:main.c        ****                     //check for version number
 336:main.c        ****                     else if(y == 1){
 337:main.c        ****                         if(SERIAL_RX_BUFFER[y] == 0x01){
 338:main.c        ****                             verNumMatch = 1;
 339:main.c        ****                         }
 340:main.c        ****                     }
 341:main.c        ****                     //get source address
 342:main.c        ****                     else if(y == 2){
 343:main.c        ****                         sourceAddr = SERIAL_RX_BUFFER[y];
 344:main.c        ****                     }
 345:main.c        ****                     //get destination address
 346:main.c        ****                     else if(y == 3){
 347:main.c        ****                         destAddr = SERIAL_RX_BUFFER[y];
 348:main.c        ****                     //get datalegnth     
 349:main.c        ****                     }else if(y == 4){
 350:main.c        ****                         dataLength = SERIAL_RX_BUFFER[y];
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 18


 351:main.c        ****                     //get CRC related data
 352:main.c        ****                     }else if(y == 5){
 353:main.c        ****                         CRCused = SERIAL_RX_BUFFER[y];
 354:main.c        ****                     } else if(y == 6){
 355:main.c        ****                         HeaderCRC = SERIAL_RX_BUFFER[y];   
 356:main.c        ****                     }
 357:main.c        ****                     
 358:main.c        ****                     //check version numbers and start bit
 359:main.c        ****                     else if((startHeaderReceieved)&&(verNumMatch)){
 360:main.c        ****                         //check that the destination address is this terminal 
 361:main.c        ****                         if(destAddr == BROADCAST || 
 362:main.c        ****                             ((destAddr >= ADDR1_Start) && (destAddr <= ADDR1_Start+ADDR_length)) ||
 363:main.c        ****                             ((destAddr >= ADDR2_Start) && (destAddr <= ADDR2_Start+ADDR_length)) ||
 364:main.c        ****                             ((destAddr >= ADDR3_Start) && (destAddr <= ADDR3_Start+ADDR_length))){
 365:main.c        ****                             
 366:main.c        ****                             if(addrDataPrinted == 0){
 367:main.c        ****                                 addrDataPrinted = 1; 
 368:main.c        ****                                 while(!USBUART_CDCIsReady());
 369:main.c        ****                                 USBUART_PutString("Source Address: ");
 370:main.c        ****                                 while(!USBUART_CDCIsReady());
 371:main.c        ****                                 USBUART_PutChar(sourceAddr);
 372:main.c        ****                                 while(!USBUART_CDCIsReady());
 373:main.c        ****                                 USBUART_PutCRLF();
 374:main.c        ****                                 while(!USBUART_CDCIsReady());
 375:main.c        ****                                 USBUART_PutString("Destination Address: ");
 376:main.c        ****                                 while(!USBUART_CDCIsReady());
 377:main.c        ****                                 USBUART_PutChar(destAddr);
 378:main.c        ****                                 while(!USBUART_CDCIsReady());
 379:main.c        ****                                 USBUART_PutCRLF();
 380:main.c        ****                             }
 381:main.c        ****                             //print out data
 382:main.c        ****                             if(dataPrintedOut < dataLength){
 383:main.c        ****                                 while(!USBUART_CDCIsReady());
 384:main.c        ****                                 USBUART_PutChar(SERIAL_RX_BUFFER[y]);
 385:main.c        ****                                 ++dataPrintedOut;
 386:main.c        ****                             }else{
 387:main.c        ****                             //we are out of data here
 388:main.c        ****                             while(!USBUART_CDCIsReady());
 389:main.c        ****                             USBUART_PutCRLF();
 390:main.c        ****                             }
 391:main.c        ****                                 
 392:main.c        ****                         }
 393:main.c        ****                     }
 394:main.c        ****                     USBUART_PutChar(SERIAL_RX_BUFFER[y]); //send data to UART
 601              		.loc 1 394 0 discriminator 2
 602 009c 134B     		ldr	r3, .L51+40
 603 009e 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 604 00a0 FFF7FEFF 		bl	USBUART_PutChar
 605              	.LVL58:
 395:main.c        ****                     ++UART_RX_DATA_READ_OUT;
 606              		.loc 1 395 0 discriminator 2
 607 00a4 0E4A     		ldr	r2, .L51+28
 608 00a6 136A     		ldr	r3, [r2, #32]
 609 00a8 0133     		adds	r3, r3, #1
 610 00aa 1362     		str	r3, [r2, #32]
 611              	.LBE4:
 317:main.c        ****                 for(int y = 0; y < SERIAL_RX_POS; y++){
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 19


 612              		.loc 1 317 0 discriminator 2
 613 00ac 0134     		adds	r4, r4, #1
 614              	.LVL59:
 615 00ae 00E0     		b	.L45
 616              	.LVL60:
 617              	.L49:
 618              	.LBE3:
 619 00b0 0024     		movs	r4, #0
 620              	.L45:
 621              	.LVL61:
 622              	.LBB5:
 317:main.c        ****                 for(int y = 0; y < SERIAL_RX_POS; y++){
 623              		.loc 1 317 0 is_stmt 0 discriminator 1
 624 00b2 0B4B     		ldr	r3, .L51+28
 625 00b4 5B6A     		ldr	r3, [r3, #36]
 626 00b6 9C42     		cmp	r4, r3
 627 00b8 ECDB     		blt	.L47
 628              	.LVL62:
 629              	.L46:
 630              	.LBE5:
 396:main.c        ****                     //while(!UART_CDCIsReady());
 397:main.c        ****                     //UART_PutCRLF();
 398:main.c        ****                 }
 399:main.c        ****             }
 400:main.c        ****                 SERIAL_RX_POS = 0;
 631              		.loc 1 400 0 is_stmt 1
 632 00ba 094B     		ldr	r3, .L51+28
 633 00bc 0022     		movs	r2, #0
 634 00be 5A62     		str	r2, [r3, #36]
 401:main.c        ****                 UART_RX_DATA_READ_OUT = 0;
 635              		.loc 1 401 0
 636 00c0 1A62     		str	r2, [r3, #32]
 637 00c2 BBE7     		b	.L44
 638              	.L52:
 639              		.align	2
 640              	.L51:
 641 00c4 00000000 		.word	TimerInterruptHandler
 642 00c8 00000000 		.word	RisingEdgeInterruptHandler
 643 00cc 00000000 		.word	FallingEdgeInterruptHandler
 644 00d0 00000000 		.word	ReceiveInterruptHandler
 645 00d4 00000000 		.word	USBUART_device
 646 00d8 00000000 		.word	BackoffInterruptHandler
 647 00dc 00000000 		.word	systemState
 648 00e0 00000000 		.word	.LANCHOR0
 649 00e4 00000000 		.word	SERIAL_BUFFER
 650 00e8 00000000 		.word	dataSize
 651 00ec 00000000 		.word	SERIAL_RX_BUFFER
 652              		.cfi_endproc
 653              	.LFE70:
 654              		.size	main, .-main
 655              		.section	.text.getInputData,"ax",%progbits
 656              		.align	2
 657              		.global	getInputData
 658              		.thumb
 659              		.thumb_func
 660              		.type	getInputData, %function
 661              	getInputData:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 20


 662              	.LFB71:
 402:main.c        ****                         
 403:main.c        ****         }
 404:main.c        ****     }
 405:main.c        **** }
 406:main.c        ****         
 407:main.c        ****         
 408:main.c        **** //    while (1) {  
 409:main.c        **** //        
 410:main.c        **** //        int size = getInputData(data);
 411:main.c        **** //        data[size] = '\0'; // Null termination at CR.
 412:main.c        **** //        
 413:main.c        **** //        dataPtr = data;
 414:main.c        **** //        firstHalfBit = true;
 415:main.c        **** //        idx = 7;
 416:main.c        **** //        
 417:main.c        **** //        // int index = 0;
 418:main.c        **** //        endOfTransmission = 0; //boolean sigifying complete transmission of data
 419:main.c        **** //        
 420:main.c        **** //        while (systemState != IDLE);
 421:main.c        **** //        TransmitISR_StartEx(TransmitInterruptHandler);
 422:main.c        **** //        TimerTX_Start();
 423:main.c        **** //        while (!endOfTransmission) {
 424:main.c        **** //            if (collisionDuringTransmit) {
 425:main.c        **** //                TransmitISR_Stop();
 426:main.c        **** //                TimerTX_Stop();
 427:main.c        **** //                TRANSMIT_Write(0);
 428:main.c        **** //                idx = 7;
 429:main.c        **** //                firstHalfBit = true;
 430:main.c        **** //                delay = (rand() % 1000) + 1;
 431:main.c        **** //                CyDelay(delay);
 432:main.c        **** //               // CyDelay(delay);
 433:main.c        **** //                collisionDuringTransmit = false;
 434:main.c        **** //                while (systemState != IDLE);
 435:main.c        **** //                TransmitISR_StartEx(TransmitInterruptHandler);
 436:main.c        **** //                TimerTX_Start();
 437:main.c        **** //            }
 438:main.c        **** //        }
 439:main.c        **** //        endOfTransmission = false;
 440:main.c        ****         /*while (!endOfTransmission) 
 441:main.c        ****         { */    
 442:main.c        **** //            switch(systemState)
 443:main.c        **** //            {
 444:main.c        **** //                case IDLE:
 445:main.c        **** //                    IDLE_Write(1);
 446:main.c        **** //                    BUSY_Write(!IDLE_Read());
 447:main.c        **** //                    COLLISION_Write(!IDLE_Read());
 448:main.c        **** //                    if((*(data+index)) != '\0')
 449:main.c        **** //                    {
 450:main.c        **** //                        TRANSMIT_Write(1);
 451:main.c        **** //                        CyDelayUs(delay);
 452:main.c        **** //                        TRANSMIT_Write(0);
 453:main.c        **** //                        CyDelayUs(delay);
 454:main.c        **** //                        
 455:main.c        **** //                        itoa((*(data+index)), binaryOfChar, 2);
 456:main.c        **** //                        for (int i = 0; i < 7; ++i) 
 457:main.c        **** //                        {
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 21


 458:main.c        **** //                            if(binaryOfChar[i] == '1')
 459:main.c        **** //                            {
 460:main.c        **** //                                TRANSMIT_Write(1);
 461:main.c        **** //                                CyDelayUs(500);
 462:main.c        **** //                                TRANSMIT_Write(0);
 463:main.c        **** //                                CyDelayUs(delay);                                                
 464:main.c        **** //                            } else {
 465:main.c        **** //                                TRANSMIT_Write(0);
 466:main.c        **** //                                CyDelayUs(2*delay);
 467:main.c        **** //                            }
 468:main.c        **** //                        }
 469:main.c        **** //                        ++index;
 470:main.c        **** //                    } else {
 471:main.c        **** //                        endOfTransmission = 1;
 472:main.c        **** //                    }
 473:main.c        **** //                                       
 474:main.c        **** //                break;
 475:main.c        **** //                
 476:main.c        **** //                case BUSY:
 477:main.c        **** //                    BUSY_Write(1);
 478:main.c        **** //                    IDLE_Write(!BUSY_Read());
 479:main.c        **** //                    COLLISION_Write(!BUSY_Read());
 480:main.c        **** //                break;
 481:main.c        **** //                
 482:main.c        **** //                case COLLISION:
 483:main.c        **** //                    COLLISION_Write(1);
 484:main.c        **** //                    IDLE_Write(!COLLISION_Read());
 485:main.c        **** //                    BUSY_Write(!COLLISION_Read());
 486:main.c        **** //                    delay = ((rand() / 128) * 1000);
 487:main.c        **** //                    
 488:main.c        **** //                break;
 489:main.c        **** //            }
 490:main.c        **** //        }
 491:main.c        **** //}
 492:main.c        ****     
 493:main.c        **** int getInputData(char* input) 
 494:main.c        **** {
 663              		.loc 1 494 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 16
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL63:
 668 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 669              		.cfi_def_cfa_offset 24
 670              		.cfi_offset 4, -24
 671              		.cfi_offset 5, -20
 672              		.cfi_offset 6, -16
 673              		.cfi_offset 7, -12
 674              		.cfi_offset 8, -8
 675              		.cfi_offset 14, -4
 676 0004 84B0     		sub	sp, sp, #16
 677              		.cfi_def_cfa_offset 40
 678 0006 0746     		mov	r7, r0
 679              	.LVL64:
 495:main.c        ****     int dataSize = 0; //size of retrieved data to then be transmitted
 496:main.c        ****     int dataPosition = 0; //position looping through the data to transmit
 497:main.c        ****     int endOfData = 0; //boolean to determine if the entire characters has been received
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 22


 680              		.loc 1 497 0
 681 0008 0024     		movs	r4, #0
 498:main.c        ****     unsigned char buffer[10]; //buffer used to hold single blob of data 
 499:main.c        ****            
 500:main.c        ****     dataPosition = 0;
 682              		.loc 1 500 0
 683 000a 2646     		mov	r6, r4
 501:main.c        ****     
 502:main.c        ****     while (endOfData == 0) {      
 684              		.loc 1 502 0
 685 000c 24E0     		b	.L56
 686              	.LVL65:
 687              	.L62:
 503:main.c        ****         //Ensure device is connected and configured 
 504:main.c        ****         if (0u != USBUART_IsConfigurationChanged())
 688              		.loc 1 504 0
 689 000e FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 690              	.LVL66:
 691 0012 20B1     		cbz	r0, .L55
 505:main.c        ****         {           
 506:main.c        ****             // Initialize IN endpoints
 507:main.c        ****             if (0u != USBUART_GetConfiguration())
 692              		.loc 1 507 0
 693 0014 FFF7FEFF 		bl	USBUART_GetConfiguration
 694              	.LVL67:
 695 0018 08B1     		cbz	r0, .L55
 508:main.c        ****             {
 509:main.c        ****                 // Enable OUT endpoint to receive data from host
 510:main.c        ****                 USBUART_CDC_Init();
 696              		.loc 1 510 0
 697 001a FFF7FEFF 		bl	USBUART_CDC_Init
 698              	.LVL68:
 699              	.L55:
 511:main.c        ****             }
 512:main.c        ****         }      
 513:main.c        ****         // Check for input data
 514:main.c        ****         if (0u != USBUART_GetConfiguration())
 700              		.loc 1 514 0
 701 001e FFF7FEFF 		bl	USBUART_GetConfiguration
 702              	.LVL69:
 703 0022 C8B1     		cbz	r0, .L56
 515:main.c        ****         {
 516:main.c        ****             if (0u != USBUART_DataIsReady())
 704              		.loc 1 516 0
 705 0024 FFF7FEFF 		bl	USBUART_DataIsReady
 706              	.LVL70:
 707 0028 B0B1     		cbz	r0, .L56
 517:main.c        ****             {
 518:main.c        ****                 // Read received data
 519:main.c        ****                 dataSize = USBUART_GetAll(buffer);
 708              		.loc 1 519 0
 709 002a 01A8     		add	r0, sp, #4
 710 002c FFF7FEFF 		bl	USBUART_GetAll
 711              	.LVL71:
 712 0030 8046     		mov	r8, r0
 713              	.LVL72:
 520:main.c        ****                 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 23


 521:main.c        ****                 if (0u != dataSize) 
 714              		.loc 1 521 0
 715 0032 70B9     		cbnz	r0, .L63
 716              	.LBB6:
 717 0034 10E0     		b	.L56
 718              	.LVL73:
 719              	.L61:
 522:main.c        ****                 {
 523:main.c        ****                     for(int i=0; i<dataSize; i++)
 524:main.c        ****                     {
 525:main.c        ****                         if(buffer[i]==0x0D)
 720              		.loc 1 525 0
 721 0036 04AB     		add	r3, sp, #16
 722 0038 2B44     		add	r3, r3, r5
 723 003a 13F80C3C 		ldrb	r3, [r3, #-12]	@ zero_extendqisi2
 724 003e 0D2B     		cmp	r3, #13
 725 0040 03D1     		bne	.L59
 726              	.LVL74:
 526:main.c        ****                         //if((buffer[i]=='\r') || (buffer[i] == '\n'))
 527:main.c        ****                         {
 528:main.c        ****                             endOfData=1;
 529:main.c        ****                             USBUART_PutCRLF();
 727              		.loc 1 529 0
 728 0042 FFF7FEFF 		bl	USBUART_PutCRLF
 729              	.LVL75:
 528:main.c        ****                             USBUART_PutCRLF();
 730              		.loc 1 528 0
 731 0046 0124     		movs	r4, #1
 732 0048 01E0     		b	.L60
 733              	.LVL76:
 734              	.L59:
 530:main.c        ****                         }
 531:main.c        ****                         else
 532:main.c        ****                         {
 533:main.c        ****                             input[dataPosition]=buffer[i];
 735              		.loc 1 533 0
 736 004a BB55     		strb	r3, [r7, r6]
 534:main.c        ****                             dataPosition++;
 737              		.loc 1 534 0
 738 004c 0136     		adds	r6, r6, #1
 739              	.LVL77:
 740              	.L60:
 523:main.c        ****                     {
 741              		.loc 1 523 0 discriminator 2
 742 004e 0135     		adds	r5, r5, #1
 743              	.LVL78:
 744 0050 00E0     		b	.L58
 745              	.LVL79:
 746              	.L63:
 747              	.LBE6:
 748 0052 0025     		movs	r5, #0
 749              	.LVL80:
 750              	.L58:
 751              	.LBB7:
 523:main.c        ****                     {
 752              		.loc 1 523 0 is_stmt 0 discriminator 1
 753 0054 4545     		cmp	r5, r8
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 24


 754 0056 EEDB     		blt	.L61
 755              	.LVL81:
 756              	.L56:
 757              	.LBE7:
 502:main.c        ****         //Ensure device is connected and configured 
 758              		.loc 1 502 0 is_stmt 1
 759 0058 002C     		cmp	r4, #0
 760 005a D8D0     		beq	.L62
 535:main.c        ****                         }
 536:main.c        ****                     }                  
 537:main.c        ****                 }
 538:main.c        ****             }
 539:main.c        ****         }
 540:main.c        ****     }
 541:main.c        ****     return dataPosition;
 542:main.c        **** }
 761              		.loc 1 542 0
 762 005c 3046     		mov	r0, r6
 763 005e 04B0     		add	sp, sp, #16
 764              		.cfi_def_cfa_offset 24
 765              		@ sp needed
 766 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 767              		.cfi_endproc
 768              	.LFE71:
 769              		.size	getInputData, .-getInputData
 770              		.global	RX_Lock
 771              		.comm	RX_Char,1,1
 772              		.global	RX_Bit_Counter
 773              		.comm	RX_DATA,16,4
 774              		.global	count
 775              		.global	TX_Bit_Counter
 776              		.comm	dataSize,4,4
 777              		.comm	currentChar,1,1
 778              		.global	dataConvertedReadOutCount
 779              		.comm	CONVERTED_DATA,8000,4
 780              		.global	uartConnected
 781              		.global	UART_RX_DATA_READ_OUT
 782              		.global	SERIAL_RX_POS
 783              		.global	SERIAL_POS
 784              		.comm	SERIAL_RX_BUFFER,500,4
 785              		.comm	SERIAL_BUFFER,500,4
 786              		.global	collisionDuringTransmit
 787              		.comm	endOfTransmission,1,1
 788              		.comm	binaryOfChar,8,4
 789              		.comm	firstHalfBit,1,1
 790              		.comm	dataPtr,4,4
 791              		.comm	data,45,4
 792              		.global	delay
 793              		.global	idx
 794              		.global	logicLevel
 795              		.comm	systemState,1,1
 796              		.data
 797              		.align	2
 798              		.type	delay, %object
 799              		.size	delay, 4
 800              	delay:
 801 0000 F4010000 		.word	500
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 25


 802              		.bss
 803              		.align	2
 804              		.set	.LANCHOR0,. + 0
 805              		.type	logicLevel, %object
 806              		.size	logicLevel, 4
 807              	logicLevel:
 808 0000 00000000 		.space	4
 809              		.type	collisionDuringTransmit, %object
 810              		.size	collisionDuringTransmit, 1
 811              	collisionDuringTransmit:
 812 0004 00       		.space	1
 813 0005 000000   		.space	3
 814              		.type	TX_Bit_Counter, %object
 815              		.size	TX_Bit_Counter, 4
 816              	TX_Bit_Counter:
 817 0008 00000000 		.space	4
 818              		.type	count, %object
 819              		.size	count, 4
 820              	count:
 821 000c 00000000 		.space	4
 822              		.type	idx, %object
 823              		.size	idx, 4
 824              	idx:
 825 0010 00000000 		.space	4
 826              		.type	uartConnected, %object
 827              		.size	uartConnected, 4
 828              	uartConnected:
 829 0014 00000000 		.space	4
 830              		.type	dataConvertedReadOutCount, %object
 831              		.size	dataConvertedReadOutCount, 4
 832              	dataConvertedReadOutCount:
 833 0018 00000000 		.space	4
 834              		.type	SERIAL_POS, %object
 835              		.size	SERIAL_POS, 4
 836              	SERIAL_POS:
 837 001c 00000000 		.space	4
 838              		.type	UART_RX_DATA_READ_OUT, %object
 839              		.size	UART_RX_DATA_READ_OUT, 4
 840              	UART_RX_DATA_READ_OUT:
 841 0020 00000000 		.space	4
 842              		.type	SERIAL_RX_POS, %object
 843              		.size	SERIAL_RX_POS, 4
 844              	SERIAL_RX_POS:
 845 0024 00000000 		.space	4
 846              		.type	RX_Lock, %object
 847              		.size	RX_Lock, 4
 848              	RX_Lock:
 849 0028 00000000 		.space	4
 850              		.type	RX_Bit_Counter, %object
 851              		.size	RX_Bit_Counter, 4
 852              	RX_Bit_Counter:
 853 002c 00000000 		.space	4
 854              		.text
 855              	.Letext0:
 856              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 857              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 858              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 26


 859              		.file 5 "Generated_Source\\PSoC5/USBUART.h"
 860              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 861              		.file 7 "Generated_Source\\PSoC5/COLLISION.h"
 862              		.file 8 "Generated_Source\\PSoC5/BUSY.h"
 863              		.file 9 "Generated_Source\\PSoC5/IDLE.h"
 864              		.file 10 "Generated_Source\\PSoC5/Backoff.h"
 865              		.file 11 "Generated_Source\\PSoC5/TRANSMIT.h"
 866              		.file 12 "Generated_Source\\PSoC5/PRS.h"
 867              		.file 13 "Generated_Source\\PSoC5/TimerRX.h"
 868              		.file 14 "Generated_Source\\PSoC5/TransmitISR.h"
 869              		.file 15 "Generated_Source\\PSoC5/USBUART_cdc.h"
 870              		.file 16 "Generated_Source\\PSoC5/TimerISR.h"
 871              		.file 17 "Generated_Source\\PSoC5/RisingEdgeISR.h"
 872              		.file 18 "Generated_Source\\PSoC5/FallingEdgeISR.h"
 873              		.file 19 "Generated_Source\\PSoC5/ReceiveISR.h"
 874              		.file 20 "Generated_Source\\PSoC5/BackoffISR.h"
 875              		.section	.debug_info,"",%progbits
 876              	.Ldebug_info0:
 877 0000 75090000 		.4byte	0x975
 878 0004 0400     		.2byte	0x4
 879 0006 00000000 		.4byte	.Ldebug_abbrev0
 880 000a 04       		.byte	0x4
 881 000b 01       		.uleb128 0x1
 882 000c 6B050000 		.4byte	.LASF98
 883 0010 0C       		.byte	0xc
 884 0011 43040000 		.4byte	.LASF99
 885 0015 82040000 		.4byte	.LASF100
 886 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 887 001d 00000000 		.4byte	0
 888 0021 00000000 		.4byte	.Ldebug_line0
 889 0025 02       		.uleb128 0x2
 890 0026 01       		.byte	0x1
 891 0027 06       		.byte	0x6
 892 0028 AE020000 		.4byte	.LASF0
 893 002c 02       		.uleb128 0x2
 894 002d 01       		.byte	0x1
 895 002e 08       		.byte	0x8
 896 002f 66020000 		.4byte	.LASF1
 897 0033 02       		.uleb128 0x2
 898 0034 02       		.byte	0x2
 899 0035 05       		.byte	0x5
 900 0036 84000000 		.4byte	.LASF2
 901 003a 02       		.uleb128 0x2
 902 003b 02       		.byte	0x2
 903 003c 07       		.byte	0x7
 904 003d AD030000 		.4byte	.LASF3
 905 0041 03       		.uleb128 0x3
 906 0042 C8040000 		.4byte	.LASF9
 907 0046 02       		.byte	0x2
 908 0047 3F       		.byte	0x3f
 909 0048 4C000000 		.4byte	0x4c
 910 004c 02       		.uleb128 0x2
 911 004d 04       		.byte	0x4
 912 004e 05       		.byte	0x5
 913 004f AB010000 		.4byte	.LASF4
 914 0053 02       		.uleb128 0x2
 915 0054 04       		.byte	0x4
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 27


 916 0055 07       		.byte	0x7
 917 0056 2A030000 		.4byte	.LASF5
 918 005a 02       		.uleb128 0x2
 919 005b 08       		.byte	0x8
 920 005c 05       		.byte	0x5
 921 005d 79010000 		.4byte	.LASF6
 922 0061 02       		.uleb128 0x2
 923 0062 08       		.byte	0x8
 924 0063 07       		.byte	0x7
 925 0064 D2020000 		.4byte	.LASF7
 926 0068 04       		.uleb128 0x4
 927 0069 04       		.byte	0x4
 928 006a 05       		.byte	0x5
 929 006b 696E7400 		.ascii	"int\000"
 930 006f 02       		.uleb128 0x2
 931 0070 04       		.byte	0x4
 932 0071 07       		.byte	0x7
 933 0072 FE020000 		.4byte	.LASF8
 934 0076 03       		.uleb128 0x3
 935 0077 8D030000 		.4byte	.LASF10
 936 007b 03       		.byte	0x3
 937 007c 2C       		.byte	0x2c
 938 007d 41000000 		.4byte	0x41
 939 0081 05       		.uleb128 0x5
 940 0082 17050000 		.4byte	.LASF11
 941 0086 04       		.byte	0x4
 942 0087 9201     		.2byte	0x192
 943 0089 2C000000 		.4byte	0x2c
 944 008d 02       		.uleb128 0x2
 945 008e 04       		.byte	0x4
 946 008f 04       		.byte	0x4
 947 0090 5A010000 		.4byte	.LASF12
 948 0094 02       		.uleb128 0x2
 949 0095 08       		.byte	0x8
 950 0096 04       		.byte	0x4
 951 0097 64040000 		.4byte	.LASF13
 952 009b 02       		.uleb128 0x2
 953 009c 01       		.byte	0x1
 954 009d 08       		.byte	0x8
 955 009e 82030000 		.4byte	.LASF14
 956 00a2 05       		.uleb128 0x5
 957 00a3 4A040000 		.4byte	.LASF15
 958 00a7 04       		.byte	0x4
 959 00a8 3C02     		.2byte	0x23c
 960 00aa AE000000 		.4byte	0xae
 961 00ae 06       		.uleb128 0x6
 962 00af 81000000 		.4byte	0x81
 963 00b3 02       		.uleb128 0x2
 964 00b4 08       		.byte	0x8
 965 00b5 04       		.byte	0x4
 966 00b6 4D020000 		.4byte	.LASF16
 967 00ba 02       		.uleb128 0x2
 968 00bb 04       		.byte	0x4
 969 00bc 07       		.byte	0x7
 970 00bd 94000000 		.4byte	.LASF17
 971 00c1 07       		.uleb128 0x7
 972 00c2 04       		.byte	0x4
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 28


 973 00c3 9B000000 		.4byte	0x9b
 974 00c7 08       		.uleb128 0x8
 975 00c8 9B000000 		.4byte	0x9b
 976 00cc D7000000 		.4byte	0xd7
 977 00d0 09       		.uleb128 0x9
 978 00d1 BA000000 		.4byte	0xba
 979 00d5 07       		.byte	0x7
 980 00d6 00       		.byte	0
 981 00d7 0A       		.uleb128 0xa
 982 00d8 57000000 		.4byte	.LASF101
 983 00dc 01       		.byte	0x1
 984 00dd 2C000000 		.4byte	0x2c
 985 00e1 01       		.byte	0x1
 986 00e2 2C       		.byte	0x2c
 987 00e3 FA000000 		.4byte	0xfa
 988 00e7 0B       		.uleb128 0xb
 989 00e8 72030000 		.4byte	.LASF18
 990 00ec 00       		.byte	0
 991 00ed 0B       		.uleb128 0xb
 992 00ee 31020000 		.4byte	.LASF19
 993 00f2 01       		.byte	0x1
 994 00f3 0B       		.uleb128 0xb
 995 00f4 3C010000 		.4byte	.LASF20
 996 00f8 02       		.byte	0x2
 997 00f9 00       		.byte	0
 998 00fa 0C       		.uleb128 0xc
 999 00fb 6C000000 		.4byte	.LASF21
 1000 00ff 01       		.byte	0x1
 1001 0100 59       		.byte	0x59
 1002 0101 00000000 		.4byte	.LFB64
 1003 0105 50000000 		.4byte	.LFE64-.LFB64
 1004 0109 01       		.uleb128 0x1
 1005 010a 9C       		.byte	0x9c
 1006 010b 7E010000 		.4byte	0x17e
 1007 010f 0D       		.uleb128 0xd
 1008 0110 1A000000 		.4byte	.LVL0
 1009 0114 2B080000 		.4byte	0x82b
 1010 0118 22010000 		.4byte	0x122
 1011 011c 0E       		.uleb128 0xe
 1012 011d 01       		.uleb128 0x1
 1013 011e 50       		.byte	0x50
 1014 011f 01       		.uleb128 0x1
 1015 0120 31       		.byte	0x31
 1016 0121 00       		.byte	0
 1017 0122 0D       		.uleb128 0xd
 1018 0123 20000000 		.4byte	.LVL1
 1019 0127 36080000 		.4byte	0x836
 1020 012b 35010000 		.4byte	0x135
 1021 012f 0E       		.uleb128 0xe
 1022 0130 01       		.uleb128 0x1
 1023 0131 50       		.byte	0x50
 1024 0132 01       		.uleb128 0x1
 1025 0133 30       		.byte	0x30
 1026 0134 00       		.byte	0
 1027 0135 0D       		.uleb128 0xd
 1028 0136 26000000 		.4byte	.LVL2
 1029 013a 41080000 		.4byte	0x841
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 29


 1030 013e 48010000 		.4byte	0x148
 1031 0142 0E       		.uleb128 0xe
 1032 0143 01       		.uleb128 0x1
 1033 0144 50       		.byte	0x50
 1034 0145 01       		.uleb128 0x1
 1035 0146 30       		.byte	0x30
 1036 0147 00       		.byte	0
 1037 0148 0D       		.uleb128 0xd
 1038 0149 34000000 		.4byte	.LVL3
 1039 014d 2B080000 		.4byte	0x82b
 1040 0151 5B010000 		.4byte	0x15b
 1041 0155 0E       		.uleb128 0xe
 1042 0156 01       		.uleb128 0x1
 1043 0157 50       		.byte	0x50
 1044 0158 01       		.uleb128 0x1
 1045 0159 30       		.byte	0x30
 1046 015a 00       		.byte	0
 1047 015b 0D       		.uleb128 0xd
 1048 015c 3A000000 		.4byte	.LVL4
 1049 0160 36080000 		.4byte	0x836
 1050 0164 6E010000 		.4byte	0x16e
 1051 0168 0E       		.uleb128 0xe
 1052 0169 01       		.uleb128 0x1
 1053 016a 50       		.byte	0x50
 1054 016b 01       		.uleb128 0x1
 1055 016c 30       		.byte	0x30
 1056 016d 00       		.byte	0
 1057 016e 0F       		.uleb128 0xf
 1058 016f 40000000 		.4byte	.LVL5
 1059 0173 41080000 		.4byte	0x841
 1060 0177 0E       		.uleb128 0xe
 1061 0178 01       		.uleb128 0x1
 1062 0179 50       		.byte	0x50
 1063 017a 01       		.uleb128 0x1
 1064 017b 31       		.byte	0x31
 1065 017c 00       		.byte	0
 1066 017d 00       		.byte	0
 1067 017e 0C       		.uleb128 0xc
 1068 017f BA020000 		.4byte	.LASF22
 1069 0183 01       		.byte	0x1
 1070 0184 6B       		.byte	0x6b
 1071 0185 00000000 		.4byte	.LFB65
 1072 0189 1C000000 		.4byte	.LFE65-.LFB65
 1073 018d 01       		.uleb128 0x1
 1074 018e 9C       		.byte	0x9c
 1075 018f 9D010000 		.4byte	0x19d
 1076 0193 10       		.uleb128 0x10
 1077 0194 0A000000 		.4byte	.LVL6
 1078 0198 4C080000 		.4byte	0x84c
 1079 019c 00       		.byte	0
 1080 019d 11       		.uleb128 0x11
 1081 019e 0B020000 		.4byte	.LASF23
 1082 01a2 01       		.byte	0x1
 1083 01a3 7D       		.byte	0x7d
 1084 01a4 00000000 		.4byte	.LFB66
 1085 01a8 84000000 		.4byte	.LFE66-.LFB66
 1086 01ac 01       		.uleb128 0x1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 30


 1087 01ad 9C       		.byte	0x9c
 1088 01ae 03020000 		.4byte	0x203
 1089 01b2 12       		.uleb128 0x12
 1090 01b3 14000000 		.4byte	.LBB2
 1091 01b7 70000000 		.4byte	.LBE2-.LBB2
 1092 01bb 13       		.uleb128 0x13
 1093 01bc 21020000 		.4byte	.LASF27
 1094 01c0 01       		.byte	0x1
 1095 01c1 88       		.byte	0x88
 1096 01c2 68000000 		.4byte	0x68
 1097 01c6 00000000 		.4byte	.LLST0
 1098 01ca 0D       		.uleb128 0xd
 1099 01cb 20000000 		.4byte	.LVL7
 1100 01cf 57080000 		.4byte	0x857
 1101 01d3 DD010000 		.4byte	0x1dd
 1102 01d7 0E       		.uleb128 0xe
 1103 01d8 01       		.uleb128 0x1
 1104 01d9 50       		.byte	0x50
 1105 01da 01       		.uleb128 0x1
 1106 01db 30       		.byte	0x30
 1107 01dc 00       		.byte	0
 1108 01dd 10       		.uleb128 0x10
 1109 01de 2C000000 		.4byte	.LVL9
 1110 01e2 62080000 		.4byte	0x862
 1111 01e6 10       		.uleb128 0x10
 1112 01e7 52000000 		.4byte	.LVL15
 1113 01eb 6D080000 		.4byte	0x86d
 1114 01ef 10       		.uleb128 0x10
 1115 01f0 68000000 		.4byte	.LVL18
 1116 01f4 78080000 		.4byte	0x878
 1117 01f8 10       		.uleb128 0x10
 1118 01f9 6C000000 		.4byte	.LVL19
 1119 01fd 83080000 		.4byte	0x883
 1120 0201 00       		.byte	0
 1121 0202 00       		.byte	0
 1122 0203 0C       		.uleb128 0xc
 1123 0204 0E060000 		.4byte	.LASF24
 1124 0208 01       		.byte	0x1
 1125 0209 C5       		.byte	0xc5
 1126 020a 00000000 		.4byte	.LFB68
 1127 020e 44000000 		.4byte	.LFE68-.LFB68
 1128 0212 01       		.uleb128 0x1
 1129 0213 9C       		.byte	0x9c
 1130 0214 8B020000 		.4byte	0x28b
 1131 0218 10       		.uleb128 0x10
 1132 0219 0C000000 		.4byte	.LVL20
 1133 021d 8E080000 		.4byte	0x88e
 1134 0221 0D       		.uleb128 0xd
 1135 0222 12000000 		.4byte	.LVL21
 1136 0226 99080000 		.4byte	0x899
 1137 022a 35020000 		.4byte	0x235
 1138 022e 0E       		.uleb128 0xe
 1139 022f 01       		.uleb128 0x1
 1140 0230 50       		.byte	0x50
 1141 0231 02       		.uleb128 0x2
 1142 0232 08       		.byte	0x8
 1143 0233 34       		.byte	0x34
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 31


 1144 0234 00       		.byte	0
 1145 0235 0D       		.uleb128 0xd
 1146 0236 18000000 		.4byte	.LVL22
 1147 023a A4080000 		.4byte	0x8a4
 1148 023e 49020000 		.4byte	0x249
 1149 0242 0E       		.uleb128 0xe
 1150 0243 01       		.uleb128 0x1
 1151 0244 50       		.byte	0x50
 1152 0245 02       		.uleb128 0x2
 1153 0246 08       		.byte	0x8
 1154 0247 33       		.byte	0x33
 1155 0248 00       		.byte	0
 1156 0249 10       		.uleb128 0x10
 1157 024a 1C000000 		.4byte	.LVL23
 1158 024e AF080000 		.4byte	0x8af
 1159 0252 0D       		.uleb128 0xd
 1160 0253 2E000000 		.4byte	.LVL24
 1161 0257 2B080000 		.4byte	0x82b
 1162 025b 66020000 		.4byte	0x266
 1163 025f 0E       		.uleb128 0xe
 1164 0260 01       		.uleb128 0x1
 1165 0261 50       		.byte	0x50
 1166 0262 02       		.uleb128 0x2
 1167 0263 74       		.byte	0x74
 1168 0264 00       		.sleb128 0
 1169 0265 00       		.byte	0
 1170 0266 0D       		.uleb128 0xd
 1171 0267 34000000 		.4byte	.LVL25
 1172 026b 36080000 		.4byte	0x836
 1173 026f 7A020000 		.4byte	0x27a
 1174 0273 0E       		.uleb128 0xe
 1175 0274 01       		.uleb128 0x1
 1176 0275 50       		.byte	0x50
 1177 0276 02       		.uleb128 0x2
 1178 0277 75       		.byte	0x75
 1179 0278 00       		.sleb128 0
 1180 0279 00       		.byte	0
 1181 027a 0F       		.uleb128 0xf
 1182 027b 3A000000 		.4byte	.LVL26
 1183 027f 41080000 		.4byte	0x841
 1184 0283 0E       		.uleb128 0xe
 1185 0284 01       		.uleb128 0x1
 1186 0285 50       		.byte	0x50
 1187 0286 02       		.uleb128 0x2
 1188 0287 74       		.byte	0x74
 1189 0288 00       		.sleb128 0
 1190 0289 00       		.byte	0
 1191 028a 00       		.byte	0
 1192 028b 0C       		.uleb128 0xc
 1193 028c EF010000 		.4byte	.LASF25
 1194 0290 01       		.byte	0x1
 1195 0291 E3       		.byte	0xe3
 1196 0292 00000000 		.4byte	.LFB69
 1197 0296 48000000 		.4byte	.LFE69-.LFB69
 1198 029a 01       		.uleb128 0x1
 1199 029b 9C       		.byte	0x9c
 1200 029c 14030000 		.4byte	0x314
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 32


 1201 02a0 10       		.uleb128 0x10
 1202 02a1 0C000000 		.4byte	.LVL27
 1203 02a5 8E080000 		.4byte	0x88e
 1204 02a9 0D       		.uleb128 0xd
 1205 02aa 14000000 		.4byte	.LVL28
 1206 02ae 99080000 		.4byte	0x899
 1207 02b2 BE020000 		.4byte	0x2be
 1208 02b6 0E       		.uleb128 0xe
 1209 02b7 01       		.uleb128 0x1
 1210 02b8 50       		.byte	0x50
 1211 02b9 03       		.uleb128 0x3
 1212 02ba 0A       		.byte	0xa
 1213 02bb 3E03     		.2byte	0x33e
 1214 02bd 00       		.byte	0
 1215 02be 0D       		.uleb128 0xd
 1216 02bf 1C000000 		.4byte	.LVL29
 1217 02c3 A4080000 		.4byte	0x8a4
 1218 02c7 D3020000 		.4byte	0x2d3
 1219 02cb 0E       		.uleb128 0xe
 1220 02cc 01       		.uleb128 0x1
 1221 02cd 50       		.byte	0x50
 1222 02ce 03       		.uleb128 0x3
 1223 02cf 0A       		.byte	0xa
 1224 02d0 3D03     		.2byte	0x33d
 1225 02d2 00       		.byte	0
 1226 02d3 10       		.uleb128 0x10
 1227 02d4 20000000 		.4byte	.LVL30
 1228 02d8 AF080000 		.4byte	0x8af
 1229 02dc 0D       		.uleb128 0xd
 1230 02dd 30000000 		.4byte	.LVL31
 1231 02e1 2B080000 		.4byte	0x82b
 1232 02e5 F0020000 		.4byte	0x2f0
 1233 02e9 0E       		.uleb128 0xe
 1234 02ea 01       		.uleb128 0x1
 1235 02eb 50       		.byte	0x50
 1236 02ec 02       		.uleb128 0x2
 1237 02ed 74       		.byte	0x74
 1238 02ee 00       		.sleb128 0
 1239 02ef 00       		.byte	0
 1240 02f0 0D       		.uleb128 0xd
 1241 02f1 36000000 		.4byte	.LVL32
 1242 02f5 36080000 		.4byte	0x836
 1243 02f9 03030000 		.4byte	0x303
 1244 02fd 0E       		.uleb128 0xe
 1245 02fe 01       		.uleb128 0x1
 1246 02ff 50       		.byte	0x50
 1247 0300 01       		.uleb128 0x1
 1248 0301 31       		.byte	0x31
 1249 0302 00       		.byte	0
 1250 0303 0F       		.uleb128 0xf
 1251 0304 3C000000 		.4byte	.LVL33
 1252 0308 41080000 		.4byte	0x841
 1253 030c 0E       		.uleb128 0xe
 1254 030d 01       		.uleb128 0x1
 1255 030e 50       		.byte	0x50
 1256 030f 02       		.uleb128 0x2
 1257 0310 74       		.byte	0x74
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 33


 1258 0311 00       		.sleb128 0
 1259 0312 00       		.byte	0
 1260 0313 00       		.byte	0
 1261 0314 0C       		.uleb128 0xc
 1262 0315 92010000 		.4byte	.LASF26
 1263 0319 01       		.byte	0x1
 1264 031a 93       		.byte	0x93
 1265 031b 00000000 		.4byte	.LFB67
 1266 031f 94000000 		.4byte	.LFE67-.LFB67
 1267 0323 01       		.uleb128 0x1
 1268 0324 9C       		.byte	0x9c
 1269 0325 71030000 		.4byte	0x371
 1270 0329 0D       		.uleb128 0xd
 1271 032a 14000000 		.4byte	.LVL34
 1272 032e 57080000 		.4byte	0x857
 1273 0332 3C030000 		.4byte	0x33c
 1274 0336 0E       		.uleb128 0xe
 1275 0337 01       		.uleb128 0x1
 1276 0338 50       		.byte	0x50
 1277 0339 01       		.uleb128 0x1
 1278 033a 30       		.byte	0x30
 1279 033b 00       		.byte	0
 1280 033c 10       		.uleb128 0x10
 1281 033d 18000000 		.4byte	.LVL35
 1282 0341 BA080000 		.4byte	0x8ba
 1283 0345 0D       		.uleb128 0xd
 1284 0346 3C000000 		.4byte	.LVL36
 1285 034a 57080000 		.4byte	0x857
 1286 034e 58030000 		.4byte	0x358
 1287 0352 0E       		.uleb128 0xe
 1288 0353 01       		.uleb128 0x1
 1289 0354 50       		.byte	0x50
 1290 0355 01       		.uleb128 0x1
 1291 0356 31       		.byte	0x31
 1292 0357 00       		.byte	0
 1293 0358 10       		.uleb128 0x10
 1294 0359 4A000000 		.4byte	.LVL37
 1295 035d 57080000 		.4byte	0x857
 1296 0361 0F       		.uleb128 0xf
 1297 0362 58000000 		.4byte	.LVL38
 1298 0366 57080000 		.4byte	0x857
 1299 036a 0E       		.uleb128 0xe
 1300 036b 01       		.uleb128 0x1
 1301 036c 50       		.byte	0x50
 1302 036d 01       		.uleb128 0x1
 1303 036e 30       		.byte	0x30
 1304 036f 00       		.byte	0
 1305 0370 00       		.byte	0
 1306 0371 14       		.uleb128 0x14
 1307 0372 C7000000 		.4byte	.LASF102
 1308 0376 01       		.byte	0x1
 1309 0377 0301     		.2byte	0x103
 1310 0379 68000000 		.4byte	0x68
 1311 037d 00000000 		.4byte	.LFB70
 1312 0381 F0000000 		.4byte	.LFE70-.LFB70
 1313 0385 01       		.uleb128 0x1
 1314 0386 9C       		.byte	0x9c
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 34


 1315 0387 2D050000 		.4byte	0x52d
 1316 038b 15       		.uleb128 0x15
 1317 038c 00000000 		.4byte	.Ldebug_ranges0+0
 1318 0390 2B040000 		.4byte	0x42b
 1319 0394 16       		.uleb128 0x16
 1320 0395 7900     		.ascii	"y\000"
 1321 0397 01       		.byte	0x1
 1322 0398 3D01     		.2byte	0x13d
 1323 039a 68000000 		.4byte	0x68
 1324 039e 2C000000 		.4byte	.LLST1
 1325 03a2 12       		.uleb128 0x12
 1326 03a3 94000000 		.4byte	.LBB4
 1327 03a7 18000000 		.4byte	.LBE4-.LBB4
 1328 03ab 17       		.uleb128 0x17
 1329 03ac F9050000 		.4byte	.LASF28
 1330 03b0 01       		.byte	0x1
 1331 03b1 3E01     		.2byte	0x13e
 1332 03b3 68000000 		.4byte	0x68
 1333 03b7 17       		.uleb128 0x17
 1334 03b8 A2020000 		.4byte	.LASF29
 1335 03bc 01       		.byte	0x1
 1336 03bd 3F01     		.2byte	0x13f
 1337 03bf 68000000 		.4byte	0x68
 1338 03c3 17       		.uleb128 0x17
 1339 03c4 77030000 		.4byte	.LASF30
 1340 03c8 01       		.byte	0x1
 1341 03c9 4001     		.2byte	0x140
 1342 03cb 9B000000 		.4byte	0x9b
 1343 03cf 17       		.uleb128 0x17
 1344 03d0 95030000 		.4byte	.LASF31
 1345 03d4 01       		.byte	0x1
 1346 03d5 4101     		.2byte	0x141
 1347 03d7 9B000000 		.4byte	0x9b
 1348 03db 17       		.uleb128 0x17
 1349 03dc 23010000 		.4byte	.LASF32
 1350 03e0 01       		.byte	0x1
 1351 03e1 4201     		.2byte	0x142
 1352 03e3 68000000 		.4byte	0x68
 1353 03e7 17       		.uleb128 0x17
 1354 03e8 E7010000 		.4byte	.LASF33
 1355 03ec 01       		.byte	0x1
 1356 03ed 4301     		.2byte	0x143
 1357 03ef 9B000000 		.4byte	0x9b
 1358 03f3 17       		.uleb128 0x17
 1359 03f4 68030000 		.4byte	.LASF34
 1360 03f8 01       		.byte	0x1
 1361 03f9 4401     		.2byte	0x144
 1362 03fb 9B000000 		.4byte	0x9b
 1363 03ff 17       		.uleb128 0x17
 1364 0400 4A010000 		.4byte	.LASF35
 1365 0404 01       		.byte	0x1
 1366 0405 4501     		.2byte	0x145
 1367 0407 68000000 		.4byte	0x68
 1368 040b 17       		.uleb128 0x17
 1369 040c 5D000000 		.4byte	.LASF36
 1370 0410 01       		.byte	0x1
 1371 0411 4601     		.2byte	0x146
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 35


 1372 0413 68000000 		.4byte	0x68
 1373 0417 10       		.uleb128 0x10
 1374 0418 98000000 		.4byte	.LVL57
 1375 041c C5080000 		.4byte	0x8c5
 1376 0420 10       		.uleb128 0x10
 1377 0421 A4000000 		.4byte	.LVL58
 1378 0425 D0080000 		.4byte	0x8d0
 1379 0429 00       		.byte	0
 1380 042a 00       		.byte	0
 1381 042b 0D       		.uleb128 0xd
 1382 042c 0A000000 		.4byte	.LVL39
 1383 0430 DB080000 		.4byte	0x8db
 1384 0434 42040000 		.4byte	0x442
 1385 0438 0E       		.uleb128 0xe
 1386 0439 01       		.uleb128 0x1
 1387 043a 50       		.byte	0x50
 1388 043b 05       		.uleb128 0x5
 1389 043c 03       		.byte	0x3
 1390 043d 00000000 		.4byte	TimerInterruptHandler
 1391 0441 00       		.byte	0
 1392 0442 0D       		.uleb128 0xd
 1393 0443 10000000 		.4byte	.LVL40
 1394 0447 E6080000 		.4byte	0x8e6
 1395 044b 59040000 		.4byte	0x459
 1396 044f 0E       		.uleb128 0xe
 1397 0450 01       		.uleb128 0x1
 1398 0451 50       		.byte	0x50
 1399 0452 05       		.uleb128 0x5
 1400 0453 03       		.byte	0x3
 1401 0454 00000000 		.4byte	RisingEdgeInterruptHandler
 1402 0458 00       		.byte	0
 1403 0459 0D       		.uleb128 0xd
 1404 045a 16000000 		.4byte	.LVL41
 1405 045e F1080000 		.4byte	0x8f1
 1406 0462 70040000 		.4byte	0x470
 1407 0466 0E       		.uleb128 0xe
 1408 0467 01       		.uleb128 0x1
 1409 0468 50       		.byte	0x50
 1410 0469 05       		.uleb128 0x5
 1411 046a 03       		.byte	0x3
 1412 046b 00000000 		.4byte	FallingEdgeInterruptHandler
 1413 046f 00       		.byte	0
 1414 0470 0D       		.uleb128 0xd
 1415 0471 1C000000 		.4byte	.LVL42
 1416 0475 FC080000 		.4byte	0x8fc
 1417 0479 87040000 		.4byte	0x487
 1418 047d 0E       		.uleb128 0xe
 1419 047e 01       		.uleb128 0x1
 1420 047f 50       		.byte	0x50
 1421 0480 05       		.uleb128 0x5
 1422 0481 03       		.byte	0x3
 1423 0482 00000000 		.4byte	ReceiveInterruptHandler
 1424 0486 00       		.byte	0
 1425 0487 0D       		.uleb128 0xd
 1426 0488 26000000 		.4byte	.LVL43
 1427 048c 07090000 		.4byte	0x907
 1428 0490 9A040000 		.4byte	0x49a
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 36


 1429 0494 0E       		.uleb128 0xe
 1430 0495 01       		.uleb128 0x1
 1431 0496 51       		.byte	0x51
 1432 0497 01       		.uleb128 0x1
 1433 0498 31       		.byte	0x31
 1434 0499 00       		.byte	0
 1435 049a 0D       		.uleb128 0xd
 1436 049b 2C000000 		.4byte	.LVL44
 1437 049f 57080000 		.4byte	0x857
 1438 04a3 AD040000 		.4byte	0x4ad
 1439 04a7 0E       		.uleb128 0xe
 1440 04a8 01       		.uleb128 0x1
 1441 04a9 50       		.byte	0x50
 1442 04aa 01       		.uleb128 0x1
 1443 04ab 30       		.byte	0x30
 1444 04ac 00       		.byte	0
 1445 04ad 0D       		.uleb128 0xd
 1446 04ae 32000000 		.4byte	.LVL45
 1447 04b2 13090000 		.4byte	0x913
 1448 04b6 C4040000 		.4byte	0x4c4
 1449 04ba 0E       		.uleb128 0xe
 1450 04bb 01       		.uleb128 0x1
 1451 04bc 50       		.byte	0x50
 1452 04bd 05       		.uleb128 0x5
 1453 04be 03       		.byte	0x3
 1454 04bf 00000000 		.4byte	BackoffInterruptHandler
 1455 04c3 00       		.byte	0
 1456 04c4 10       		.uleb128 0x10
 1457 04c5 36000000 		.4byte	.LVL46
 1458 04c9 1E090000 		.4byte	0x91e
 1459 04cd 10       		.uleb128 0x10
 1460 04ce 40000000 		.4byte	.LVL47
 1461 04d2 29090000 		.4byte	0x929
 1462 04d6 10       		.uleb128 0x10
 1463 04d7 50000000 		.4byte	.LVL48
 1464 04db 34090000 		.4byte	0x934
 1465 04df 10       		.uleb128 0x10
 1466 04e0 56000000 		.4byte	.LVL49
 1467 04e4 40090000 		.4byte	0x940
 1468 04e8 10       		.uleb128 0x10
 1469 04e9 5C000000 		.4byte	.LVL50
 1470 04ed 4C090000 		.4byte	0x94c
 1471 04f1 10       		.uleb128 0x10
 1472 04f2 60000000 		.4byte	.LVL51
 1473 04f6 57090000 		.4byte	0x957
 1474 04fa 0D       		.uleb128 0xd
 1475 04fb 68000000 		.4byte	.LVL52
 1476 04ff 62090000 		.4byte	0x962
 1477 0503 11050000 		.4byte	0x511
 1478 0507 0E       		.uleb128 0xe
 1479 0508 01       		.uleb128 0x1
 1480 0509 50       		.byte	0x50
 1481 050a 05       		.uleb128 0x5
 1482 050b 03       		.byte	0x3
 1483 050c 00000000 		.4byte	SERIAL_BUFFER
 1484 0510 00       		.byte	0
 1485 0511 10       		.uleb128 0x10
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 37


 1486 0512 70000000 		.4byte	.LVL53
 1487 0516 C5080000 		.4byte	0x8c5
 1488 051a 10       		.uleb128 0x10
 1489 051b 78000000 		.4byte	.LVL54
 1490 051f 6D090000 		.4byte	0x96d
 1491 0523 10       		.uleb128 0x10
 1492 0524 84000000 		.4byte	.LVL55
 1493 0528 C5080000 		.4byte	0x8c5
 1494 052c 00       		.byte	0
 1495 052d 18       		.uleb128 0x18
 1496 052e 29060000 		.4byte	.LASF103
 1497 0532 01       		.byte	0x1
 1498 0533 ED01     		.2byte	0x1ed
 1499 0535 68000000 		.4byte	0x68
 1500 0539 00000000 		.4byte	.LFB71
 1501 053d 64000000 		.4byte	.LFE71-.LFB71
 1502 0541 01       		.uleb128 0x1
 1503 0542 9C       		.byte	0x9c
 1504 0543 F5050000 		.4byte	0x5f5
 1505 0547 19       		.uleb128 0x19
 1506 0548 8E000000 		.4byte	.LASF104
 1507 054c 01       		.byte	0x1
 1508 054d ED01     		.2byte	0x1ed
 1509 054f C1000000 		.4byte	0xc1
 1510 0553 4A000000 		.4byte	.LLST2
 1511 0557 1A       		.uleb128 0x1a
 1512 0558 41010000 		.4byte	.LASF37
 1513 055c 01       		.byte	0x1
 1514 055d EF01     		.2byte	0x1ef
 1515 055f 68000000 		.4byte	0x68
 1516 0563 68000000 		.4byte	.LLST3
 1517 0567 1A       		.uleb128 0x1a
 1518 0568 AC000000 		.4byte	.LASF38
 1519 056c 01       		.byte	0x1
 1520 056d F001     		.2byte	0x1f0
 1521 056f 68000000 		.4byte	0x68
 1522 0573 A8000000 		.4byte	.LLST4
 1523 0577 1A       		.uleb128 0x1a
 1524 0578 78040000 		.4byte	.LASF39
 1525 057c 01       		.byte	0x1
 1526 057d F101     		.2byte	0x1f1
 1527 057f 68000000 		.4byte	0x68
 1528 0583 C7000000 		.4byte	.LLST5
 1529 0587 1B       		.uleb128 0x1b
 1530 0588 2C040000 		.4byte	.LASF40
 1531 058c 01       		.byte	0x1
 1532 058d F201     		.2byte	0x1f2
 1533 058f F5050000 		.4byte	0x5f5
 1534 0593 02       		.uleb128 0x2
 1535 0594 91       		.byte	0x91
 1536 0595 5C       		.sleb128 -36
 1537 0596 15       		.uleb128 0x15
 1538 0597 18000000 		.4byte	.Ldebug_ranges0+0x18
 1539 059b B7050000 		.4byte	0x5b7
 1540 059f 16       		.uleb128 0x16
 1541 05a0 6900     		.ascii	"i\000"
 1542 05a2 01       		.byte	0x1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 38


 1543 05a3 0B02     		.2byte	0x20b
 1544 05a5 68000000 		.4byte	0x68
 1545 05a9 FD000000 		.4byte	.LLST6
 1546 05ad 10       		.uleb128 0x10
 1547 05ae 46000000 		.4byte	.LVL75
 1548 05b2 6D090000 		.4byte	0x96d
 1549 05b6 00       		.byte	0
 1550 05b7 10       		.uleb128 0x10
 1551 05b8 12000000 		.4byte	.LVL66
 1552 05bc 34090000 		.4byte	0x934
 1553 05c0 10       		.uleb128 0x10
 1554 05c1 18000000 		.4byte	.LVL67
 1555 05c5 40090000 		.4byte	0x940
 1556 05c9 10       		.uleb128 0x10
 1557 05ca 1E000000 		.4byte	.LVL68
 1558 05ce 4C090000 		.4byte	0x94c
 1559 05d2 10       		.uleb128 0x10
 1560 05d3 22000000 		.4byte	.LVL69
 1561 05d7 40090000 		.4byte	0x940
 1562 05db 10       		.uleb128 0x10
 1563 05dc 28000000 		.4byte	.LVL70
 1564 05e0 57090000 		.4byte	0x957
 1565 05e4 0F       		.uleb128 0xf
 1566 05e5 30000000 		.4byte	.LVL71
 1567 05e9 62090000 		.4byte	0x962
 1568 05ed 0E       		.uleb128 0xe
 1569 05ee 01       		.uleb128 0x1
 1570 05ef 50       		.byte	0x50
 1571 05f0 02       		.uleb128 0x2
 1572 05f1 91       		.byte	0x91
 1573 05f2 5C       		.sleb128 -36
 1574 05f3 00       		.byte	0
 1575 05f4 00       		.byte	0
 1576 05f5 08       		.uleb128 0x8
 1577 05f6 2C000000 		.4byte	0x2c
 1578 05fa 05060000 		.4byte	0x605
 1579 05fe 09       		.uleb128 0x9
 1580 05ff BA000000 		.4byte	0xba
 1581 0603 09       		.byte	0x9
 1582 0604 00       		.byte	0
 1583 0605 1C       		.uleb128 0x1c
 1584 0606 B4010000 		.4byte	.LASF41
 1585 060a 05       		.byte	0x5
 1586 060b D602     		.2byte	0x2d6
 1587 060d AE000000 		.4byte	0xae
 1588 0611 1C       		.uleb128 0x1c
 1589 0612 6B040000 		.4byte	.LASF42
 1590 0616 06       		.byte	0x6
 1591 0617 1207     		.2byte	0x712
 1592 0619 1D060000 		.4byte	0x61d
 1593 061d 06       		.uleb128 0x6
 1594 061e 76000000 		.4byte	0x76
 1595 0622 1D       		.uleb128 0x1d
 1596 0623 74020000 		.4byte	.LASF43
 1597 0627 01       		.byte	0x1
 1598 0628 2C       		.byte	0x2c
 1599 0629 D7000000 		.4byte	0xd7
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 39


 1600 062d 05       		.uleb128 0x5
 1601 062e 03       		.byte	0x3
 1602 062f 00000000 		.4byte	systemState
 1603 0633 1D       		.uleb128 0x1d
 1604 0634 87010000 		.4byte	.LASF44
 1605 0638 01       		.byte	0x1
 1606 0639 2E       		.byte	0x2e
 1607 063a 68000000 		.4byte	0x68
 1608 063e 05       		.uleb128 0x5
 1609 063f 03       		.byte	0x3
 1610 0640 00000000 		.4byte	logicLevel
 1611 0644 1E       		.uleb128 0x1e
 1612 0645 69647800 		.ascii	"idx\000"
 1613 0649 01       		.byte	0x1
 1614 064a 2F       		.byte	0x2f
 1615 064b 68000000 		.4byte	0x68
 1616 064f 05       		.uleb128 0x5
 1617 0650 03       		.byte	0x3
 1618 0651 00000000 		.4byte	idx
 1619 0655 1D       		.uleb128 0x1d
 1620 0656 CC000000 		.4byte	.LASF45
 1621 065a 01       		.byte	0x1
 1622 065b 30       		.byte	0x30
 1623 065c 68000000 		.4byte	0x68
 1624 0660 05       		.uleb128 0x5
 1625 0661 03       		.byte	0x3
 1626 0662 00000000 		.4byte	delay
 1627 0666 08       		.uleb128 0x8
 1628 0667 9B000000 		.4byte	0x9b
 1629 066b 76060000 		.4byte	0x676
 1630 066f 09       		.uleb128 0x9
 1631 0670 BA000000 		.4byte	0xba
 1632 0674 2C       		.byte	0x2c
 1633 0675 00       		.byte	0
 1634 0676 1D       		.uleb128 0x1d
 1635 0677 10040000 		.4byte	.LASF46
 1636 067b 01       		.byte	0x1
 1637 067c 31       		.byte	0x31
 1638 067d 66060000 		.4byte	0x666
 1639 0681 05       		.uleb128 0x5
 1640 0682 03       		.byte	0x3
 1641 0683 00000000 		.4byte	data
 1642 0687 1D       		.uleb128 0x1d
 1643 0688 3C030000 		.4byte	.LASF47
 1644 068c 01       		.byte	0x1
 1645 068d 32       		.byte	0x32
 1646 068e C1000000 		.4byte	0xc1
 1647 0692 05       		.uleb128 0x5
 1648 0693 03       		.byte	0x3
 1649 0694 00000000 		.4byte	dataPtr
 1650 0698 1D       		.uleb128 0x1d
 1651 0699 59020000 		.4byte	.LASF48
 1652 069d 01       		.byte	0x1
 1653 069e 33       		.byte	0x33
 1654 069f A9060000 		.4byte	0x6a9
 1655 06a3 05       		.uleb128 0x5
 1656 06a4 03       		.byte	0x3
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 40


 1657 06a5 00000000 		.4byte	firstHalfBit
 1658 06a9 02       		.uleb128 0x2
 1659 06aa 01       		.byte	0x1
 1660 06ab 02       		.byte	0x2
 1661 06ac 87030000 		.4byte	.LASF49
 1662 06b0 1D       		.uleb128 0x1d
 1663 06b1 D2010000 		.4byte	.LASF50
 1664 06b5 01       		.byte	0x1
 1665 06b6 34       		.byte	0x34
 1666 06b7 C7000000 		.4byte	0xc7
 1667 06bb 05       		.uleb128 0x5
 1668 06bc 03       		.byte	0x3
 1669 06bd 00000000 		.4byte	binaryOfChar
 1670 06c1 1D       		.uleb128 0x1d
 1671 06c2 3B020000 		.4byte	.LASF51
 1672 06c6 01       		.byte	0x1
 1673 06c7 35       		.byte	0x35
 1674 06c8 A9060000 		.4byte	0x6a9
 1675 06cc 05       		.uleb128 0x5
 1676 06cd 03       		.byte	0x3
 1677 06ce 00000000 		.4byte	endOfTransmission
 1678 06d2 1D       		.uleb128 0x1d
 1679 06d3 53050000 		.4byte	.LASF52
 1680 06d7 01       		.byte	0x1
 1681 06d8 36       		.byte	0x36
 1682 06d9 A9060000 		.4byte	0x6a9
 1683 06dd 05       		.uleb128 0x5
 1684 06de 03       		.byte	0x3
 1685 06df 00000000 		.4byte	collisionDuringTransmit
 1686 06e3 08       		.uleb128 0x8
 1687 06e4 2C000000 		.4byte	0x2c
 1688 06e8 F4060000 		.4byte	0x6f4
 1689 06ec 1F       		.uleb128 0x1f
 1690 06ed BA000000 		.4byte	0xba
 1691 06f1 F301     		.2byte	0x1f3
 1692 06f3 00       		.byte	0
 1693 06f4 1D       		.uleb128 0x1d
 1694 06f5 02040000 		.4byte	.LASF53
 1695 06f9 01       		.byte	0x1
 1696 06fa 38       		.byte	0x38
 1697 06fb E3060000 		.4byte	0x6e3
 1698 06ff 05       		.uleb128 0x5
 1699 0700 03       		.byte	0x3
 1700 0701 00000000 		.4byte	SERIAL_BUFFER
 1701 0705 1D       		.uleb128 0x1d
 1702 0706 44030000 		.4byte	.LASF54
 1703 070a 01       		.byte	0x1
 1704 070b 39       		.byte	0x39
 1705 070c E3060000 		.4byte	0x6e3
 1706 0710 05       		.uleb128 0x5
 1707 0711 03       		.byte	0x3
 1708 0712 00000000 		.4byte	SERIAL_RX_BUFFER
 1709 0716 1D       		.uleb128 0x1d
 1710 0717 D2040000 		.4byte	.LASF55
 1711 071b 01       		.byte	0x1
 1712 071c 3A       		.byte	0x3a
 1713 071d 68000000 		.4byte	0x68
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 41


 1714 0721 05       		.uleb128 0x5
 1715 0722 03       		.byte	0x3
 1716 0723 00000000 		.4byte	SERIAL_POS
 1717 0727 1D       		.uleb128 0x1d
 1718 0728 B9000000 		.4byte	.LASF56
 1719 072c 01       		.byte	0x1
 1720 072d 3B       		.byte	0x3b
 1721 072e 68000000 		.4byte	0x68
 1722 0732 05       		.uleb128 0x5
 1723 0733 03       		.byte	0x3
 1724 0734 00000000 		.4byte	SERIAL_RX_POS
 1725 0738 1D       		.uleb128 0x1d
 1726 0739 36060000 		.4byte	.LASF57
 1727 073d 01       		.byte	0x1
 1728 073e 3C       		.byte	0x3c
 1729 073f 68000000 		.4byte	0x68
 1730 0743 05       		.uleb128 0x5
 1731 0744 03       		.byte	0x3
 1732 0745 00000000 		.4byte	UART_RX_DATA_READ_OUT
 1733 0749 1D       		.uleb128 0x1d
 1734 074a 2E010000 		.4byte	.LASF58
 1735 074e 01       		.byte	0x1
 1736 074f 3D       		.byte	0x3d
 1737 0750 68000000 		.4byte	0x68
 1738 0754 05       		.uleb128 0x5
 1739 0755 03       		.byte	0x3
 1740 0756 00000000 		.4byte	uartConnected
 1741 075a 08       		.uleb128 0x8
 1742 075b 2C000000 		.4byte	0x2c
 1743 075f 71070000 		.4byte	0x771
 1744 0763 1F       		.uleb128 0x1f
 1745 0764 BA000000 		.4byte	0xba
 1746 0768 F301     		.2byte	0x1f3
 1747 076a 09       		.uleb128 0x9
 1748 076b BA000000 		.4byte	0xba
 1749 076f 0F       		.byte	0xf
 1750 0770 00       		.byte	0
 1751 0771 1D       		.uleb128 0x1d
 1752 0772 C3010000 		.4byte	.LASF59
 1753 0776 01       		.byte	0x1
 1754 0777 3E       		.byte	0x3e
 1755 0778 5A070000 		.4byte	0x75a
 1756 077c 05       		.uleb128 0x5
 1757 077d 03       		.byte	0x3
 1758 077e 00000000 		.4byte	CONVERTED_DATA
 1759 0782 1D       		.uleb128 0x1d
 1760 0783 88020000 		.4byte	.LASF60
 1761 0787 01       		.byte	0x1
 1762 0788 3F       		.byte	0x3f
 1763 0789 68000000 		.4byte	0x68
 1764 078d 05       		.uleb128 0x5
 1765 078e 03       		.byte	0x3
 1766 078f 00000000 		.4byte	dataConvertedReadOutCount
 1767 0793 1D       		.uleb128 0x1d
 1768 0794 4F040000 		.4byte	.LASF61
 1769 0798 01       		.byte	0x1
 1770 0799 40       		.byte	0x40
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 42


 1771 079a 9B000000 		.4byte	0x9b
 1772 079e 05       		.uleb128 0x5
 1773 079f 03       		.byte	0x3
 1774 07a0 00000000 		.4byte	currentChar
 1775 07a4 1D       		.uleb128 0x1d
 1776 07a5 41010000 		.4byte	.LASF37
 1777 07a9 01       		.byte	0x1
 1778 07aa 41       		.byte	0x41
 1779 07ab 68000000 		.4byte	0x68
 1780 07af 05       		.uleb128 0x5
 1781 07b0 03       		.byte	0x3
 1782 07b1 00000000 		.4byte	dataSize
 1783 07b5 1D       		.uleb128 0x1d
 1784 07b6 9E030000 		.4byte	.LASF62
 1785 07ba 01       		.byte	0x1
 1786 07bb 42       		.byte	0x42
 1787 07bc 68000000 		.4byte	0x68
 1788 07c0 05       		.uleb128 0x5
 1789 07c1 03       		.byte	0x3
 1790 07c2 00000000 		.4byte	TX_Bit_Counter
 1791 07c6 1D       		.uleb128 0x1d
 1792 07c7 FC030000 		.4byte	.LASF63
 1793 07cb 01       		.byte	0x1
 1794 07cc 43       		.byte	0x43
 1795 07cd 68000000 		.4byte	0x68
 1796 07d1 05       		.uleb128 0x5
 1797 07d2 03       		.byte	0x3
 1798 07d3 00000000 		.4byte	count
 1799 07d7 08       		.uleb128 0x8
 1800 07d8 2C000000 		.4byte	0x2c
 1801 07dc E7070000 		.4byte	0x7e7
 1802 07e0 09       		.uleb128 0x9
 1803 07e1 BA000000 		.4byte	0xba
 1804 07e5 0F       		.byte	0xf
 1805 07e6 00       		.byte	0
 1806 07e7 1D       		.uleb128 0x1d
 1807 07e8 80020000 		.4byte	.LASF64
 1808 07ec 01       		.byte	0x1
 1809 07ed 44       		.byte	0x44
 1810 07ee D7070000 		.4byte	0x7d7
 1811 07f2 05       		.uleb128 0x5
 1812 07f3 03       		.byte	0x3
 1813 07f4 00000000 		.4byte	RX_DATA
 1814 07f8 1D       		.uleb128 0x1d
 1815 07f9 13000000 		.4byte	.LASF65
 1816 07fd 01       		.byte	0x1
 1817 07fe 45       		.byte	0x45
 1818 07ff 68000000 		.4byte	0x68
 1819 0803 05       		.uleb128 0x5
 1820 0804 03       		.byte	0x3
 1821 0805 00000000 		.4byte	RX_Bit_Counter
 1822 0809 1D       		.uleb128 0x1d
 1823 080a DF010000 		.4byte	.LASF66
 1824 080e 01       		.byte	0x1
 1825 080f 46       		.byte	0x46
 1826 0810 9B000000 		.4byte	0x9b
 1827 0814 05       		.uleb128 0x5
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 43


 1828 0815 03       		.byte	0x3
 1829 0816 00000000 		.4byte	RX_Char
 1830 081a 1D       		.uleb128 0x1d
 1831 081b 29020000 		.4byte	.LASF67
 1832 081f 01       		.byte	0x1
 1833 0820 47       		.byte	0x47
 1834 0821 68000000 		.4byte	0x68
 1835 0825 05       		.uleb128 0x5
 1836 0826 03       		.byte	0x3
 1837 0827 00000000 		.4byte	RX_Lock
 1838 082b 20       		.uleb128 0x20
 1839 082c 33040000 		.4byte	.LASF68
 1840 0830 33040000 		.4byte	.LASF68
 1841 0834 07       		.byte	0x7
 1842 0835 26       		.byte	0x26
 1843 0836 20       		.uleb128 0x20
 1844 0837 18010000 		.4byte	.LASF69
 1845 083b 18010000 		.4byte	.LASF69
 1846 083f 08       		.byte	0x8
 1847 0840 26       		.byte	0x26
 1848 0841 20       		.uleb128 0x20
 1849 0842 C0030000 		.4byte	.LASF70
 1850 0846 C0030000 		.4byte	.LASF70
 1851 084a 09       		.byte	0x9
 1852 084b 26       		.byte	0x26
 1853 084c 20       		.uleb128 0x20
 1854 084d CB030000 		.4byte	.LASF71
 1855 0851 CB030000 		.4byte	.LASF71
 1856 0855 0A       		.byte	0xa
 1857 0856 5B       		.byte	0x5b
 1858 0857 20       		.uleb128 0x20
 1859 0858 DD040000 		.4byte	.LASF72
 1860 085c DD040000 		.4byte	.LASF72
 1861 0860 0B       		.byte	0xb
 1862 0861 26       		.byte	0x26
 1863 0862 20       		.uleb128 0x20
 1864 0863 5B040000 		.4byte	.LASF73
 1865 0867 5B040000 		.4byte	.LASF73
 1866 086b 0C       		.byte	0xc
 1867 086c 6D       		.byte	0x6d
 1868 086d 20       		.uleb128 0x20
 1869 086e E5000000 		.4byte	.LASF74
 1870 0872 E5000000 		.4byte	.LASF74
 1871 0876 0A       		.byte	0xa
 1872 0877 68       		.byte	0x68
 1873 0878 20       		.uleb128 0x20
 1874 0879 E9020000 		.4byte	.LASF75
 1875 087d E9020000 		.4byte	.LASF75
 1876 0881 0A       		.byte	0xa
 1877 0882 6A       		.byte	0x6a
 1878 0883 20       		.uleb128 0x20
 1879 0884 0B030000 		.4byte	.LASF76
 1880 0888 0B030000 		.4byte	.LASF76
 1881 088c 0A       		.byte	0xa
 1882 088d 5A       		.byte	0x5a
 1883 088e 20       		.uleb128 0x20
 1884 088f 60060000 		.4byte	.LASF77
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 44


 1885 0893 60060000 		.4byte	.LASF77
 1886 0897 0D       		.byte	0xd
 1887 0898 5B       		.byte	0x5b
 1888 0899 20       		.uleb128 0x20
 1889 089a D8030000 		.4byte	.LASF78
 1890 089e D8030000 		.4byte	.LASF78
 1891 08a2 0D       		.byte	0xd
 1892 08a3 68       		.byte	0x68
 1893 08a4 20       		.uleb128 0x20
 1894 08a5 3E050000 		.4byte	.LASF79
 1895 08a9 3E050000 		.4byte	.LASF79
 1896 08ad 0D       		.byte	0xd
 1897 08ae 6A       		.byte	0x6a
 1898 08af 20       		.uleb128 0x20
 1899 08b0 09050000 		.4byte	.LASF80
 1900 08b4 09050000 		.4byte	.LASF80
 1901 08b8 0D       		.byte	0xd
 1902 08b9 5A       		.byte	0x5a
 1903 08ba 20       		.uleb128 0x20
 1904 08bb 07010000 		.4byte	.LASF81
 1905 08bf 07010000 		.4byte	.LASF81
 1906 08c3 0E       		.byte	0xe
 1907 08c4 19       		.byte	0x19
 1908 08c5 20       		.uleb128 0x20
 1909 08c6 00000000 		.4byte	.LASF82
 1910 08ca 00000000 		.4byte	.LASF82
 1911 08ce 0F       		.byte	0xf
 1912 08cf 28       		.byte	0x28
 1913 08d0 20       		.uleb128 0x20
 1914 08d1 EC030000 		.4byte	.LASF83
 1915 08d5 EC030000 		.4byte	.LASF83
 1916 08d9 0F       		.byte	0xf
 1917 08da 25       		.byte	0x25
 1918 08db 20       		.uleb128 0x20
 1919 08dc 19030000 		.4byte	.LASF84
 1920 08e0 19030000 		.4byte	.LASF84
 1921 08e4 10       		.byte	0x10
 1922 08e5 18       		.byte	0x18
 1923 08e6 20       		.uleb128 0x20
 1924 08e7 41000000 		.4byte	.LASF85
 1925 08eb 41000000 		.4byte	.LASF85
 1926 08ef 11       		.byte	0x11
 1927 08f0 18       		.byte	0x18
 1928 08f1 20       		.uleb128 0x20
 1929 08f2 15040000 		.4byte	.LASF86
 1930 08f6 15040000 		.4byte	.LASF86
 1931 08fa 12       		.byte	0x12
 1932 08fb 18       		.byte	0x18
 1933 08fc 20       		.uleb128 0x20
 1934 08fd 55030000 		.4byte	.LASF87
 1935 0901 55030000 		.4byte	.LASF87
 1936 0905 13       		.byte	0x13
 1937 0906 18       		.byte	0x18
 1938 0907 21       		.uleb128 0x21
 1939 0908 F9000000 		.4byte	.LASF88
 1940 090c F9000000 		.4byte	.LASF88
 1941 0910 05       		.byte	0x5
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 45


 1942 0911 2E01     		.2byte	0x12e
 1943 0913 20       		.uleb128 0x20
 1944 0914 D2000000 		.4byte	.LASF89
 1945 0918 D2000000 		.4byte	.LASF89
 1946 091c 14       		.byte	0x14
 1947 091d 18       		.byte	0x18
 1948 091e 20       		.uleb128 0x20
 1949 091f FF040000 		.4byte	.LASF90
 1950 0923 FF040000 		.4byte	.LASF90
 1951 0927 0C       		.byte	0xc
 1952 0928 59       		.byte	0x59
 1953 0929 20       		.uleb128 0x20
 1954 092a EC040000 		.4byte	.LASF91
 1955 092e EC040000 		.4byte	.LASF91
 1956 0932 0F       		.byte	0xf
 1957 0933 2E       		.byte	0x2e
 1958 0934 21       		.uleb128 0x21
 1959 0935 22000000 		.4byte	.LASF92
 1960 0939 22000000 		.4byte	.LASF92
 1961 093d 05       		.byte	0x5
 1962 093e 3201     		.2byte	0x132
 1963 0940 21       		.uleb128 0x21
 1964 0941 60010000 		.4byte	.LASF93
 1965 0945 60010000 		.4byte	.LASF93
 1966 0949 05       		.byte	0x5
 1967 094a 3101     		.2byte	0x131
 1968 094c 20       		.uleb128 0x20
 1969 094d 2D050000 		.4byte	.LASF94
 1970 0951 2D050000 		.4byte	.LASF94
 1971 0955 0F       		.byte	0xf
 1972 0956 22       		.byte	0x22
 1973 0957 20       		.uleb128 0x20
 1974 0958 4C060000 		.4byte	.LASF95
 1975 095c 4C060000 		.4byte	.LASF95
 1976 0960 0F       		.byte	0xf
 1977 0961 29       		.byte	0x29
 1978 0962 20       		.uleb128 0x20
 1979 0963 9D000000 		.4byte	.LASF96
 1980 0967 9D000000 		.4byte	.LASF96
 1981 096b 0F       		.byte	0xf
 1982 096c 2B       		.byte	0x2b
 1983 096d 20       		.uleb128 0x20
 1984 096e 1D050000 		.4byte	.LASF97
 1985 0972 1D050000 		.4byte	.LASF97
 1986 0976 0F       		.byte	0xf
 1987 0977 26       		.byte	0x26
 1988 0978 00       		.byte	0
 1989              		.section	.debug_abbrev,"",%progbits
 1990              	.Ldebug_abbrev0:
 1991 0000 01       		.uleb128 0x1
 1992 0001 11       		.uleb128 0x11
 1993 0002 01       		.byte	0x1
 1994 0003 25       		.uleb128 0x25
 1995 0004 0E       		.uleb128 0xe
 1996 0005 13       		.uleb128 0x13
 1997 0006 0B       		.uleb128 0xb
 1998 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 46


 1999 0008 0E       		.uleb128 0xe
 2000 0009 1B       		.uleb128 0x1b
 2001 000a 0E       		.uleb128 0xe
 2002 000b 55       		.uleb128 0x55
 2003 000c 17       		.uleb128 0x17
 2004 000d 11       		.uleb128 0x11
 2005 000e 01       		.uleb128 0x1
 2006 000f 10       		.uleb128 0x10
 2007 0010 17       		.uleb128 0x17
 2008 0011 00       		.byte	0
 2009 0012 00       		.byte	0
 2010 0013 02       		.uleb128 0x2
 2011 0014 24       		.uleb128 0x24
 2012 0015 00       		.byte	0
 2013 0016 0B       		.uleb128 0xb
 2014 0017 0B       		.uleb128 0xb
 2015 0018 3E       		.uleb128 0x3e
 2016 0019 0B       		.uleb128 0xb
 2017 001a 03       		.uleb128 0x3
 2018 001b 0E       		.uleb128 0xe
 2019 001c 00       		.byte	0
 2020 001d 00       		.byte	0
 2021 001e 03       		.uleb128 0x3
 2022 001f 16       		.uleb128 0x16
 2023 0020 00       		.byte	0
 2024 0021 03       		.uleb128 0x3
 2025 0022 0E       		.uleb128 0xe
 2026 0023 3A       		.uleb128 0x3a
 2027 0024 0B       		.uleb128 0xb
 2028 0025 3B       		.uleb128 0x3b
 2029 0026 0B       		.uleb128 0xb
 2030 0027 49       		.uleb128 0x49
 2031 0028 13       		.uleb128 0x13
 2032 0029 00       		.byte	0
 2033 002a 00       		.byte	0
 2034 002b 04       		.uleb128 0x4
 2035 002c 24       		.uleb128 0x24
 2036 002d 00       		.byte	0
 2037 002e 0B       		.uleb128 0xb
 2038 002f 0B       		.uleb128 0xb
 2039 0030 3E       		.uleb128 0x3e
 2040 0031 0B       		.uleb128 0xb
 2041 0032 03       		.uleb128 0x3
 2042 0033 08       		.uleb128 0x8
 2043 0034 00       		.byte	0
 2044 0035 00       		.byte	0
 2045 0036 05       		.uleb128 0x5
 2046 0037 16       		.uleb128 0x16
 2047 0038 00       		.byte	0
 2048 0039 03       		.uleb128 0x3
 2049 003a 0E       		.uleb128 0xe
 2050 003b 3A       		.uleb128 0x3a
 2051 003c 0B       		.uleb128 0xb
 2052 003d 3B       		.uleb128 0x3b
 2053 003e 05       		.uleb128 0x5
 2054 003f 49       		.uleb128 0x49
 2055 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 47


 2056 0041 00       		.byte	0
 2057 0042 00       		.byte	0
 2058 0043 06       		.uleb128 0x6
 2059 0044 35       		.uleb128 0x35
 2060 0045 00       		.byte	0
 2061 0046 49       		.uleb128 0x49
 2062 0047 13       		.uleb128 0x13
 2063 0048 00       		.byte	0
 2064 0049 00       		.byte	0
 2065 004a 07       		.uleb128 0x7
 2066 004b 0F       		.uleb128 0xf
 2067 004c 00       		.byte	0
 2068 004d 0B       		.uleb128 0xb
 2069 004e 0B       		.uleb128 0xb
 2070 004f 49       		.uleb128 0x49
 2071 0050 13       		.uleb128 0x13
 2072 0051 00       		.byte	0
 2073 0052 00       		.byte	0
 2074 0053 08       		.uleb128 0x8
 2075 0054 01       		.uleb128 0x1
 2076 0055 01       		.byte	0x1
 2077 0056 49       		.uleb128 0x49
 2078 0057 13       		.uleb128 0x13
 2079 0058 01       		.uleb128 0x1
 2080 0059 13       		.uleb128 0x13
 2081 005a 00       		.byte	0
 2082 005b 00       		.byte	0
 2083 005c 09       		.uleb128 0x9
 2084 005d 21       		.uleb128 0x21
 2085 005e 00       		.byte	0
 2086 005f 49       		.uleb128 0x49
 2087 0060 13       		.uleb128 0x13
 2088 0061 2F       		.uleb128 0x2f
 2089 0062 0B       		.uleb128 0xb
 2090 0063 00       		.byte	0
 2091 0064 00       		.byte	0
 2092 0065 0A       		.uleb128 0xa
 2093 0066 04       		.uleb128 0x4
 2094 0067 01       		.byte	0x1
 2095 0068 03       		.uleb128 0x3
 2096 0069 0E       		.uleb128 0xe
 2097 006a 0B       		.uleb128 0xb
 2098 006b 0B       		.uleb128 0xb
 2099 006c 49       		.uleb128 0x49
 2100 006d 13       		.uleb128 0x13
 2101 006e 3A       		.uleb128 0x3a
 2102 006f 0B       		.uleb128 0xb
 2103 0070 3B       		.uleb128 0x3b
 2104 0071 0B       		.uleb128 0xb
 2105 0072 01       		.uleb128 0x1
 2106 0073 13       		.uleb128 0x13
 2107 0074 00       		.byte	0
 2108 0075 00       		.byte	0
 2109 0076 0B       		.uleb128 0xb
 2110 0077 28       		.uleb128 0x28
 2111 0078 00       		.byte	0
 2112 0079 03       		.uleb128 0x3
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 48


 2113 007a 0E       		.uleb128 0xe
 2114 007b 1C       		.uleb128 0x1c
 2115 007c 0B       		.uleb128 0xb
 2116 007d 00       		.byte	0
 2117 007e 00       		.byte	0
 2118 007f 0C       		.uleb128 0xc
 2119 0080 2E       		.uleb128 0x2e
 2120 0081 01       		.byte	0x1
 2121 0082 3F       		.uleb128 0x3f
 2122 0083 19       		.uleb128 0x19
 2123 0084 03       		.uleb128 0x3
 2124 0085 0E       		.uleb128 0xe
 2125 0086 3A       		.uleb128 0x3a
 2126 0087 0B       		.uleb128 0xb
 2127 0088 3B       		.uleb128 0x3b
 2128 0089 0B       		.uleb128 0xb
 2129 008a 27       		.uleb128 0x27
 2130 008b 19       		.uleb128 0x19
 2131 008c 11       		.uleb128 0x11
 2132 008d 01       		.uleb128 0x1
 2133 008e 12       		.uleb128 0x12
 2134 008f 06       		.uleb128 0x6
 2135 0090 40       		.uleb128 0x40
 2136 0091 18       		.uleb128 0x18
 2137 0092 9742     		.uleb128 0x2117
 2138 0094 19       		.uleb128 0x19
 2139 0095 01       		.uleb128 0x1
 2140 0096 13       		.uleb128 0x13
 2141 0097 00       		.byte	0
 2142 0098 00       		.byte	0
 2143 0099 0D       		.uleb128 0xd
 2144 009a 898201   		.uleb128 0x4109
 2145 009d 01       		.byte	0x1
 2146 009e 11       		.uleb128 0x11
 2147 009f 01       		.uleb128 0x1
 2148 00a0 31       		.uleb128 0x31
 2149 00a1 13       		.uleb128 0x13
 2150 00a2 01       		.uleb128 0x1
 2151 00a3 13       		.uleb128 0x13
 2152 00a4 00       		.byte	0
 2153 00a5 00       		.byte	0
 2154 00a6 0E       		.uleb128 0xe
 2155 00a7 8A8201   		.uleb128 0x410a
 2156 00aa 00       		.byte	0
 2157 00ab 02       		.uleb128 0x2
 2158 00ac 18       		.uleb128 0x18
 2159 00ad 9142     		.uleb128 0x2111
 2160 00af 18       		.uleb128 0x18
 2161 00b0 00       		.byte	0
 2162 00b1 00       		.byte	0
 2163 00b2 0F       		.uleb128 0xf
 2164 00b3 898201   		.uleb128 0x4109
 2165 00b6 01       		.byte	0x1
 2166 00b7 11       		.uleb128 0x11
 2167 00b8 01       		.uleb128 0x1
 2168 00b9 31       		.uleb128 0x31
 2169 00ba 13       		.uleb128 0x13
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 49


 2170 00bb 00       		.byte	0
 2171 00bc 00       		.byte	0
 2172 00bd 10       		.uleb128 0x10
 2173 00be 898201   		.uleb128 0x4109
 2174 00c1 00       		.byte	0
 2175 00c2 11       		.uleb128 0x11
 2176 00c3 01       		.uleb128 0x1
 2177 00c4 31       		.uleb128 0x31
 2178 00c5 13       		.uleb128 0x13
 2179 00c6 00       		.byte	0
 2180 00c7 00       		.byte	0
 2181 00c8 11       		.uleb128 0x11
 2182 00c9 2E       		.uleb128 0x2e
 2183 00ca 01       		.byte	0x1
 2184 00cb 3F       		.uleb128 0x3f
 2185 00cc 19       		.uleb128 0x19
 2186 00cd 03       		.uleb128 0x3
 2187 00ce 0E       		.uleb128 0xe
 2188 00cf 3A       		.uleb128 0x3a
 2189 00d0 0B       		.uleb128 0xb
 2190 00d1 3B       		.uleb128 0x3b
 2191 00d2 0B       		.uleb128 0xb
 2192 00d3 27       		.uleb128 0x27
 2193 00d4 19       		.uleb128 0x19
 2194 00d5 11       		.uleb128 0x11
 2195 00d6 01       		.uleb128 0x1
 2196 00d7 12       		.uleb128 0x12
 2197 00d8 06       		.uleb128 0x6
 2198 00d9 40       		.uleb128 0x40
 2199 00da 18       		.uleb128 0x18
 2200 00db 9642     		.uleb128 0x2116
 2201 00dd 19       		.uleb128 0x19
 2202 00de 01       		.uleb128 0x1
 2203 00df 13       		.uleb128 0x13
 2204 00e0 00       		.byte	0
 2205 00e1 00       		.byte	0
 2206 00e2 12       		.uleb128 0x12
 2207 00e3 0B       		.uleb128 0xb
 2208 00e4 01       		.byte	0x1
 2209 00e5 11       		.uleb128 0x11
 2210 00e6 01       		.uleb128 0x1
 2211 00e7 12       		.uleb128 0x12
 2212 00e8 06       		.uleb128 0x6
 2213 00e9 00       		.byte	0
 2214 00ea 00       		.byte	0
 2215 00eb 13       		.uleb128 0x13
 2216 00ec 34       		.uleb128 0x34
 2217 00ed 00       		.byte	0
 2218 00ee 03       		.uleb128 0x3
 2219 00ef 0E       		.uleb128 0xe
 2220 00f0 3A       		.uleb128 0x3a
 2221 00f1 0B       		.uleb128 0xb
 2222 00f2 3B       		.uleb128 0x3b
 2223 00f3 0B       		.uleb128 0xb
 2224 00f4 49       		.uleb128 0x49
 2225 00f5 13       		.uleb128 0x13
 2226 00f6 02       		.uleb128 0x2
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 50


 2227 00f7 17       		.uleb128 0x17
 2228 00f8 00       		.byte	0
 2229 00f9 00       		.byte	0
 2230 00fa 14       		.uleb128 0x14
 2231 00fb 2E       		.uleb128 0x2e
 2232 00fc 01       		.byte	0x1
 2233 00fd 3F       		.uleb128 0x3f
 2234 00fe 19       		.uleb128 0x19
 2235 00ff 03       		.uleb128 0x3
 2236 0100 0E       		.uleb128 0xe
 2237 0101 3A       		.uleb128 0x3a
 2238 0102 0B       		.uleb128 0xb
 2239 0103 3B       		.uleb128 0x3b
 2240 0104 05       		.uleb128 0x5
 2241 0105 27       		.uleb128 0x27
 2242 0106 19       		.uleb128 0x19
 2243 0107 49       		.uleb128 0x49
 2244 0108 13       		.uleb128 0x13
 2245 0109 8701     		.uleb128 0x87
 2246 010b 19       		.uleb128 0x19
 2247 010c 11       		.uleb128 0x11
 2248 010d 01       		.uleb128 0x1
 2249 010e 12       		.uleb128 0x12
 2250 010f 06       		.uleb128 0x6
 2251 0110 40       		.uleb128 0x40
 2252 0111 18       		.uleb128 0x18
 2253 0112 9742     		.uleb128 0x2117
 2254 0114 19       		.uleb128 0x19
 2255 0115 01       		.uleb128 0x1
 2256 0116 13       		.uleb128 0x13
 2257 0117 00       		.byte	0
 2258 0118 00       		.byte	0
 2259 0119 15       		.uleb128 0x15
 2260 011a 0B       		.uleb128 0xb
 2261 011b 01       		.byte	0x1
 2262 011c 55       		.uleb128 0x55
 2263 011d 17       		.uleb128 0x17
 2264 011e 01       		.uleb128 0x1
 2265 011f 13       		.uleb128 0x13
 2266 0120 00       		.byte	0
 2267 0121 00       		.byte	0
 2268 0122 16       		.uleb128 0x16
 2269 0123 34       		.uleb128 0x34
 2270 0124 00       		.byte	0
 2271 0125 03       		.uleb128 0x3
 2272 0126 08       		.uleb128 0x8
 2273 0127 3A       		.uleb128 0x3a
 2274 0128 0B       		.uleb128 0xb
 2275 0129 3B       		.uleb128 0x3b
 2276 012a 05       		.uleb128 0x5
 2277 012b 49       		.uleb128 0x49
 2278 012c 13       		.uleb128 0x13
 2279 012d 02       		.uleb128 0x2
 2280 012e 17       		.uleb128 0x17
 2281 012f 00       		.byte	0
 2282 0130 00       		.byte	0
 2283 0131 17       		.uleb128 0x17
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 51


 2284 0132 34       		.uleb128 0x34
 2285 0133 00       		.byte	0
 2286 0134 03       		.uleb128 0x3
 2287 0135 0E       		.uleb128 0xe
 2288 0136 3A       		.uleb128 0x3a
 2289 0137 0B       		.uleb128 0xb
 2290 0138 3B       		.uleb128 0x3b
 2291 0139 05       		.uleb128 0x5
 2292 013a 49       		.uleb128 0x49
 2293 013b 13       		.uleb128 0x13
 2294 013c 00       		.byte	0
 2295 013d 00       		.byte	0
 2296 013e 18       		.uleb128 0x18
 2297 013f 2E       		.uleb128 0x2e
 2298 0140 01       		.byte	0x1
 2299 0141 3F       		.uleb128 0x3f
 2300 0142 19       		.uleb128 0x19
 2301 0143 03       		.uleb128 0x3
 2302 0144 0E       		.uleb128 0xe
 2303 0145 3A       		.uleb128 0x3a
 2304 0146 0B       		.uleb128 0xb
 2305 0147 3B       		.uleb128 0x3b
 2306 0148 05       		.uleb128 0x5
 2307 0149 27       		.uleb128 0x27
 2308 014a 19       		.uleb128 0x19
 2309 014b 49       		.uleb128 0x49
 2310 014c 13       		.uleb128 0x13
 2311 014d 11       		.uleb128 0x11
 2312 014e 01       		.uleb128 0x1
 2313 014f 12       		.uleb128 0x12
 2314 0150 06       		.uleb128 0x6
 2315 0151 40       		.uleb128 0x40
 2316 0152 18       		.uleb128 0x18
 2317 0153 9742     		.uleb128 0x2117
 2318 0155 19       		.uleb128 0x19
 2319 0156 01       		.uleb128 0x1
 2320 0157 13       		.uleb128 0x13
 2321 0158 00       		.byte	0
 2322 0159 00       		.byte	0
 2323 015a 19       		.uleb128 0x19
 2324 015b 05       		.uleb128 0x5
 2325 015c 00       		.byte	0
 2326 015d 03       		.uleb128 0x3
 2327 015e 0E       		.uleb128 0xe
 2328 015f 3A       		.uleb128 0x3a
 2329 0160 0B       		.uleb128 0xb
 2330 0161 3B       		.uleb128 0x3b
 2331 0162 05       		.uleb128 0x5
 2332 0163 49       		.uleb128 0x49
 2333 0164 13       		.uleb128 0x13
 2334 0165 02       		.uleb128 0x2
 2335 0166 17       		.uleb128 0x17
 2336 0167 00       		.byte	0
 2337 0168 00       		.byte	0
 2338 0169 1A       		.uleb128 0x1a
 2339 016a 34       		.uleb128 0x34
 2340 016b 00       		.byte	0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 52


 2341 016c 03       		.uleb128 0x3
 2342 016d 0E       		.uleb128 0xe
 2343 016e 3A       		.uleb128 0x3a
 2344 016f 0B       		.uleb128 0xb
 2345 0170 3B       		.uleb128 0x3b
 2346 0171 05       		.uleb128 0x5
 2347 0172 49       		.uleb128 0x49
 2348 0173 13       		.uleb128 0x13
 2349 0174 02       		.uleb128 0x2
 2350 0175 17       		.uleb128 0x17
 2351 0176 00       		.byte	0
 2352 0177 00       		.byte	0
 2353 0178 1B       		.uleb128 0x1b
 2354 0179 34       		.uleb128 0x34
 2355 017a 00       		.byte	0
 2356 017b 03       		.uleb128 0x3
 2357 017c 0E       		.uleb128 0xe
 2358 017d 3A       		.uleb128 0x3a
 2359 017e 0B       		.uleb128 0xb
 2360 017f 3B       		.uleb128 0x3b
 2361 0180 05       		.uleb128 0x5
 2362 0181 49       		.uleb128 0x49
 2363 0182 13       		.uleb128 0x13
 2364 0183 02       		.uleb128 0x2
 2365 0184 18       		.uleb128 0x18
 2366 0185 00       		.byte	0
 2367 0186 00       		.byte	0
 2368 0187 1C       		.uleb128 0x1c
 2369 0188 34       		.uleb128 0x34
 2370 0189 00       		.byte	0
 2371 018a 03       		.uleb128 0x3
 2372 018b 0E       		.uleb128 0xe
 2373 018c 3A       		.uleb128 0x3a
 2374 018d 0B       		.uleb128 0xb
 2375 018e 3B       		.uleb128 0x3b
 2376 018f 05       		.uleb128 0x5
 2377 0190 49       		.uleb128 0x49
 2378 0191 13       		.uleb128 0x13
 2379 0192 3F       		.uleb128 0x3f
 2380 0193 19       		.uleb128 0x19
 2381 0194 3C       		.uleb128 0x3c
 2382 0195 19       		.uleb128 0x19
 2383 0196 00       		.byte	0
 2384 0197 00       		.byte	0
 2385 0198 1D       		.uleb128 0x1d
 2386 0199 34       		.uleb128 0x34
 2387 019a 00       		.byte	0
 2388 019b 03       		.uleb128 0x3
 2389 019c 0E       		.uleb128 0xe
 2390 019d 3A       		.uleb128 0x3a
 2391 019e 0B       		.uleb128 0xb
 2392 019f 3B       		.uleb128 0x3b
 2393 01a0 0B       		.uleb128 0xb
 2394 01a1 49       		.uleb128 0x49
 2395 01a2 13       		.uleb128 0x13
 2396 01a3 3F       		.uleb128 0x3f
 2397 01a4 19       		.uleb128 0x19
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 53


 2398 01a5 02       		.uleb128 0x2
 2399 01a6 18       		.uleb128 0x18
 2400 01a7 00       		.byte	0
 2401 01a8 00       		.byte	0
 2402 01a9 1E       		.uleb128 0x1e
 2403 01aa 34       		.uleb128 0x34
 2404 01ab 00       		.byte	0
 2405 01ac 03       		.uleb128 0x3
 2406 01ad 08       		.uleb128 0x8
 2407 01ae 3A       		.uleb128 0x3a
 2408 01af 0B       		.uleb128 0xb
 2409 01b0 3B       		.uleb128 0x3b
 2410 01b1 0B       		.uleb128 0xb
 2411 01b2 49       		.uleb128 0x49
 2412 01b3 13       		.uleb128 0x13
 2413 01b4 3F       		.uleb128 0x3f
 2414 01b5 19       		.uleb128 0x19
 2415 01b6 02       		.uleb128 0x2
 2416 01b7 18       		.uleb128 0x18
 2417 01b8 00       		.byte	0
 2418 01b9 00       		.byte	0
 2419 01ba 1F       		.uleb128 0x1f
 2420 01bb 21       		.uleb128 0x21
 2421 01bc 00       		.byte	0
 2422 01bd 49       		.uleb128 0x49
 2423 01be 13       		.uleb128 0x13
 2424 01bf 2F       		.uleb128 0x2f
 2425 01c0 05       		.uleb128 0x5
 2426 01c1 00       		.byte	0
 2427 01c2 00       		.byte	0
 2428 01c3 20       		.uleb128 0x20
 2429 01c4 2E       		.uleb128 0x2e
 2430 01c5 00       		.byte	0
 2431 01c6 3F       		.uleb128 0x3f
 2432 01c7 19       		.uleb128 0x19
 2433 01c8 3C       		.uleb128 0x3c
 2434 01c9 19       		.uleb128 0x19
 2435 01ca 6E       		.uleb128 0x6e
 2436 01cb 0E       		.uleb128 0xe
 2437 01cc 03       		.uleb128 0x3
 2438 01cd 0E       		.uleb128 0xe
 2439 01ce 3A       		.uleb128 0x3a
 2440 01cf 0B       		.uleb128 0xb
 2441 01d0 3B       		.uleb128 0x3b
 2442 01d1 0B       		.uleb128 0xb
 2443 01d2 00       		.byte	0
 2444 01d3 00       		.byte	0
 2445 01d4 21       		.uleb128 0x21
 2446 01d5 2E       		.uleb128 0x2e
 2447 01d6 00       		.byte	0
 2448 01d7 3F       		.uleb128 0x3f
 2449 01d8 19       		.uleb128 0x19
 2450 01d9 3C       		.uleb128 0x3c
 2451 01da 19       		.uleb128 0x19
 2452 01db 6E       		.uleb128 0x6e
 2453 01dc 0E       		.uleb128 0xe
 2454 01dd 03       		.uleb128 0x3
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 54


 2455 01de 0E       		.uleb128 0xe
 2456 01df 3A       		.uleb128 0x3a
 2457 01e0 0B       		.uleb128 0xb
 2458 01e1 3B       		.uleb128 0x3b
 2459 01e2 05       		.uleb128 0x5
 2460 01e3 00       		.byte	0
 2461 01e4 00       		.byte	0
 2462 01e5 00       		.byte	0
 2463              		.section	.debug_loc,"",%progbits
 2464              	.Ldebug_loc0:
 2465              	.LLST0:
 2466 0000 28000000 		.4byte	.LVL8
 2467 0004 2C000000 		.4byte	.LVL9
 2468 0008 0200     		.2byte	0x2
 2469 000a 30       		.byte	0x30
 2470 000b 9F       		.byte	0x9f
 2471 000c 2C000000 		.4byte	.LVL9
 2472 0010 2E000000 		.4byte	.LVL10
 2473 0014 0300     		.2byte	0x3
 2474 0016 70       		.byte	0x70
 2475 0017 01       		.sleb128 1
 2476 0018 9F       		.byte	0x9f
 2477 0019 2E000000 		.4byte	.LVL10
 2478 001d 31000000 		.4byte	.LVL11-1
 2479 0021 0100     		.2byte	0x1
 2480 0023 50       		.byte	0x50
 2481 0024 00000000 		.4byte	0
 2482 0028 00000000 		.4byte	0
 2483              	.LLST1:
 2484 002c 94000000 		.4byte	.LVL56
 2485 0030 B0000000 		.4byte	.LVL60
 2486 0034 0100     		.2byte	0x1
 2487 0036 54       		.byte	0x54
 2488 0037 B2000000 		.4byte	.LVL61
 2489 003b BA000000 		.4byte	.LVL62
 2490 003f 0100     		.2byte	0x1
 2491 0041 54       		.byte	0x54
 2492 0042 00000000 		.4byte	0
 2493 0046 00000000 		.4byte	0
 2494              	.LLST2:
 2495 004a 00000000 		.4byte	.LVL63
 2496 004e 0E000000 		.4byte	.LVL65
 2497 0052 0100     		.2byte	0x1
 2498 0054 50       		.byte	0x50
 2499 0055 0E000000 		.4byte	.LVL65
 2500 0059 64000000 		.4byte	.LFE71
 2501 005d 0100     		.2byte	0x1
 2502 005f 57       		.byte	0x57
 2503 0060 00000000 		.4byte	0
 2504 0064 00000000 		.4byte	0
 2505              	.LLST3:
 2506 0068 08000000 		.4byte	.LVL64
 2507 006c 0E000000 		.4byte	.LVL65
 2508 0070 0200     		.2byte	0x2
 2509 0072 30       		.byte	0x30
 2510 0073 9F       		.byte	0x9f
 2511 0074 32000000 		.4byte	.LVL72
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 55


 2512 0078 36000000 		.4byte	.LVL73
 2513 007c 0100     		.2byte	0x1
 2514 007e 50       		.byte	0x50
 2515 007f 36000000 		.4byte	.LVL73
 2516 0083 52000000 		.4byte	.LVL79
 2517 0087 0100     		.2byte	0x1
 2518 0089 58       		.byte	0x58
 2519 008a 52000000 		.4byte	.LVL79
 2520 008e 54000000 		.4byte	.LVL80
 2521 0092 0100     		.2byte	0x1
 2522 0094 50       		.byte	0x50
 2523 0095 54000000 		.4byte	.LVL80
 2524 0099 58000000 		.4byte	.LVL81
 2525 009d 0100     		.2byte	0x1
 2526 009f 58       		.byte	0x58
 2527 00a0 00000000 		.4byte	0
 2528 00a4 00000000 		.4byte	0
 2529              	.LLST4:
 2530 00a8 08000000 		.4byte	.LVL64
 2531 00ac 0E000000 		.4byte	.LVL65
 2532 00b0 0200     		.2byte	0x2
 2533 00b2 30       		.byte	0x30
 2534 00b3 9F       		.byte	0x9f
 2535 00b4 0E000000 		.4byte	.LVL65
 2536 00b8 64000000 		.4byte	.LFE71
 2537 00bc 0100     		.2byte	0x1
 2538 00be 56       		.byte	0x56
 2539 00bf 00000000 		.4byte	0
 2540 00c3 00000000 		.4byte	0
 2541              	.LLST5:
 2542 00c7 08000000 		.4byte	.LVL64
 2543 00cb 0E000000 		.4byte	.LVL65
 2544 00cf 0200     		.2byte	0x2
 2545 00d1 30       		.byte	0x30
 2546 00d2 9F       		.byte	0x9f
 2547 00d3 0E000000 		.4byte	.LVL65
 2548 00d7 42000000 		.4byte	.LVL74
 2549 00db 0100     		.2byte	0x1
 2550 00dd 54       		.byte	0x54
 2551 00de 42000000 		.4byte	.LVL74
 2552 00e2 4A000000 		.4byte	.LVL76
 2553 00e6 0200     		.2byte	0x2
 2554 00e8 31       		.byte	0x31
 2555 00e9 9F       		.byte	0x9f
 2556 00ea 4A000000 		.4byte	.LVL76
 2557 00ee 64000000 		.4byte	.LFE71
 2558 00f2 0100     		.2byte	0x1
 2559 00f4 54       		.byte	0x54
 2560 00f5 00000000 		.4byte	0
 2561 00f9 00000000 		.4byte	0
 2562              	.LLST6:
 2563 00fd 36000000 		.4byte	.LVL73
 2564 0101 52000000 		.4byte	.LVL79
 2565 0105 0100     		.2byte	0x1
 2566 0107 55       		.byte	0x55
 2567 0108 54000000 		.4byte	.LVL80
 2568 010c 58000000 		.4byte	.LVL81
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 56


 2569 0110 0100     		.2byte	0x1
 2570 0112 55       		.byte	0x55
 2571 0113 00000000 		.4byte	0
 2572 0117 00000000 		.4byte	0
 2573              		.section	.debug_aranges,"",%progbits
 2574 0000 54000000 		.4byte	0x54
 2575 0004 0200     		.2byte	0x2
 2576 0006 00000000 		.4byte	.Ldebug_info0
 2577 000a 04       		.byte	0x4
 2578 000b 00       		.byte	0
 2579 000c 0000     		.2byte	0
 2580 000e 0000     		.2byte	0
 2581 0010 00000000 		.4byte	.LFB64
 2582 0014 50000000 		.4byte	.LFE64-.LFB64
 2583 0018 00000000 		.4byte	.LFB65
 2584 001c 1C000000 		.4byte	.LFE65-.LFB65
 2585 0020 00000000 		.4byte	.LFB66
 2586 0024 84000000 		.4byte	.LFE66-.LFB66
 2587 0028 00000000 		.4byte	.LFB68
 2588 002c 44000000 		.4byte	.LFE68-.LFB68
 2589 0030 00000000 		.4byte	.LFB69
 2590 0034 48000000 		.4byte	.LFE69-.LFB69
 2591 0038 00000000 		.4byte	.LFB67
 2592 003c 94000000 		.4byte	.LFE67-.LFB67
 2593 0040 00000000 		.4byte	.LFB70
 2594 0044 F0000000 		.4byte	.LFE70-.LFB70
 2595 0048 00000000 		.4byte	.LFB71
 2596 004c 64000000 		.4byte	.LFE71-.LFB71
 2597 0050 00000000 		.4byte	0
 2598 0054 00000000 		.4byte	0
 2599              		.section	.debug_ranges,"",%progbits
 2600              	.Ldebug_ranges0:
 2601 0000 92000000 		.4byte	.LBB3
 2602 0004 B0000000 		.4byte	.LBE3
 2603 0008 B2000000 		.4byte	.LBB5
 2604 000c BA000000 		.4byte	.LBE5
 2605 0010 00000000 		.4byte	0
 2606 0014 00000000 		.4byte	0
 2607 0018 34000000 		.4byte	.LBB6
 2608 001c 52000000 		.4byte	.LBE6
 2609 0020 54000000 		.4byte	.LBB7
 2610 0024 58000000 		.4byte	.LBE7
 2611 0028 00000000 		.4byte	0
 2612 002c 00000000 		.4byte	0
 2613 0030 00000000 		.4byte	.LFB64
 2614 0034 50000000 		.4byte	.LFE64
 2615 0038 00000000 		.4byte	.LFB65
 2616 003c 1C000000 		.4byte	.LFE65
 2617 0040 00000000 		.4byte	.LFB66
 2618 0044 84000000 		.4byte	.LFE66
 2619 0048 00000000 		.4byte	.LFB68
 2620 004c 44000000 		.4byte	.LFE68
 2621 0050 00000000 		.4byte	.LFB69
 2622 0054 48000000 		.4byte	.LFE69
 2623 0058 00000000 		.4byte	.LFB67
 2624 005c 94000000 		.4byte	.LFE67
 2625 0060 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 57


 2626 0064 F0000000 		.4byte	.LFE70
 2627 0068 00000000 		.4byte	.LFB71
 2628 006c 64000000 		.4byte	.LFE71
 2629 0070 00000000 		.4byte	0
 2630 0074 00000000 		.4byte	0
 2631              		.section	.debug_line,"",%progbits
 2632              	.Ldebug_line0:
 2633 0000 54030000 		.section	.debug_str,"MS",%progbits,1
 2633      02002402 
 2633      00000201 
 2633      FB0E0D00 
 2633      01010101 
 2634              	.LASF82:
 2635 0000 55534255 		.ascii	"USBUART_CDCIsReady\000"
 2635      4152545F 
 2635      43444349 
 2635      73526561 
 2635      647900
 2636              	.LASF65:
 2637 0013 52585F42 		.ascii	"RX_Bit_Counter\000"
 2637      69745F43 
 2637      6F756E74 
 2637      657200
 2638              	.LASF92:
 2639 0022 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 2639      4152545F 
 2639      4973436F 
 2639      6E666967 
 2639      75726174 
 2640              	.LASF85:
 2641 0041 52697369 		.ascii	"RisingEdgeISR_StartEx\000"
 2641      6E674564 
 2641      67654953 
 2641      525F5374 
 2641      61727445 
 2642              	.LASF101:
 2643 0057 73746174 		.ascii	"state\000"
 2643      6500
 2644              	.LASF36:
 2645 005d 64617461 		.ascii	"dataPrintedOut\000"
 2645      5072696E 
 2645      7465644F 
 2645      757400
 2646              	.LASF21:
 2647 006c 52656365 		.ascii	"ReceiveInterruptHandler\000"
 2647      69766549 
 2647      6E746572 
 2647      72757074 
 2647      48616E64 
 2648              	.LASF2:
 2649 0084 73686F72 		.ascii	"short int\000"
 2649      7420696E 
 2649      7400
 2650              	.LASF104:
 2651 008e 696E7075 		.ascii	"input\000"
 2651      7400
 2652              	.LASF17:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 58


 2653 0094 73697A65 		.ascii	"sizetype\000"
 2653      74797065 
 2653      00
 2654              	.LASF96:
 2655 009d 55534255 		.ascii	"USBUART_GetAll\000"
 2655      4152545F 
 2655      47657441 
 2655      6C6C00
 2656              	.LASF38:
 2657 00ac 64617461 		.ascii	"dataPosition\000"
 2657      506F7369 
 2657      74696F6E 
 2657      00
 2658              	.LASF56:
 2659 00b9 53455249 		.ascii	"SERIAL_RX_POS\000"
 2659      414C5F52 
 2659      585F504F 
 2659      5300
 2660              	.LASF102:
 2661 00c7 6D61696E 		.ascii	"main\000"
 2661      00
 2662              	.LASF45:
 2663 00cc 64656C61 		.ascii	"delay\000"
 2663      7900
 2664              	.LASF89:
 2665 00d2 4261636B 		.ascii	"BackoffISR_StartEx\000"
 2665      6F666649 
 2665      53525F53 
 2665      74617274 
 2665      457800
 2666              	.LASF74:
 2667 00e5 4261636B 		.ascii	"Backoff_WritePeriod\000"
 2667      6F66665F 
 2667      57726974 
 2667      65506572 
 2667      696F6400 
 2668              	.LASF88:
 2669 00f9 55534255 		.ascii	"USBUART_Start\000"
 2669      4152545F 
 2669      53746172 
 2669      7400
 2670              	.LASF81:
 2671 0107 5472616E 		.ascii	"TransmitISR_Stop\000"
 2671      736D6974 
 2671      4953525F 
 2671      53746F70 
 2671      00
 2672              	.LASF69:
 2673 0118 42555359 		.ascii	"BUSY_Write\000"
 2673      5F577269 
 2673      746500
 2674              	.LASF32:
 2675 0123 64617461 		.ascii	"dataLength\000"
 2675      4C656E67 
 2675      746800
 2676              	.LASF58:
 2677 012e 75617274 		.ascii	"uartConnected\000"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 59


 2677      436F6E6E 
 2677      65637465 
 2677      6400
 2678              	.LASF20:
 2679 013c 49444C45 		.ascii	"IDLE\000"
 2679      00
 2680              	.LASF37:
 2681 0141 64617461 		.ascii	"dataSize\000"
 2681      53697A65 
 2681      00
 2682              	.LASF35:
 2683 014a 61646472 		.ascii	"addrDataPrinted\000"
 2683      44617461 
 2683      5072696E 
 2683      74656400 
 2684              	.LASF12:
 2685 015a 666C6F61 		.ascii	"float\000"
 2685      7400
 2686              	.LASF93:
 2687 0160 55534255 		.ascii	"USBUART_GetConfiguration\000"
 2687      4152545F 
 2687      47657443 
 2687      6F6E6669 
 2687      67757261 
 2688              	.LASF6:
 2689 0179 6C6F6E67 		.ascii	"long long int\000"
 2689      206C6F6E 
 2689      6720696E 
 2689      7400
 2690              	.LASF44:
 2691 0187 6C6F6769 		.ascii	"logicLevel\000"
 2691      634C6576 
 2691      656C00
 2692              	.LASF26:
 2693 0192 5472616E 		.ascii	"TransmitInterruptHandler\000"
 2693      736D6974 
 2693      496E7465 
 2693      72727570 
 2693      7448616E 
 2694              	.LASF4:
 2695 01ab 6C6F6E67 		.ascii	"long int\000"
 2695      20696E74 
 2695      00
 2696              	.LASF41:
 2697 01b4 55534255 		.ascii	"USBUART_device\000"
 2697      4152545F 
 2697      64657669 
 2697      636500
 2698              	.LASF59:
 2699 01c3 434F4E56 		.ascii	"CONVERTED_DATA\000"
 2699      45525445 
 2699      445F4441 
 2699      544100
 2700              	.LASF50:
 2701 01d2 62696E61 		.ascii	"binaryOfChar\000"
 2701      72794F66 
 2701      43686172 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 60


 2701      00
 2702              	.LASF66:
 2703 01df 52585F43 		.ascii	"RX_Char\000"
 2703      68617200 
 2704              	.LASF33:
 2705 01e7 43524375 		.ascii	"CRCused\000"
 2705      73656400 
 2706              	.LASF25:
 2707 01ef 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 2707      696E6745 
 2707      64676549 
 2707      6E746572 
 2707      72757074 
 2708              	.LASF23:
 2709 020b 54696D65 		.ascii	"TimerInterruptHandler\000"
 2709      72496E74 
 2709      65727275 
 2709      70744861 
 2709      6E646C65 
 2710              	.LASF27:
 2711 0221 6261636B 		.ascii	"backoff\000"
 2711      6F666600 
 2712              	.LASF67:
 2713 0229 52585F4C 		.ascii	"RX_Lock\000"
 2713      6F636B00 
 2714              	.LASF19:
 2715 0231 434F4C4C 		.ascii	"COLLISION\000"
 2715      4953494F 
 2715      4E00
 2716              	.LASF51:
 2717 023b 656E644F 		.ascii	"endOfTransmission\000"
 2717      66547261 
 2717      6E736D69 
 2717      7373696F 
 2717      6E00
 2718              	.LASF16:
 2719 024d 6C6F6E67 		.ascii	"long double\000"
 2719      20646F75 
 2719      626C6500 
 2720              	.LASF48:
 2721 0259 66697273 		.ascii	"firstHalfBit\000"
 2721      7448616C 
 2721      66426974 
 2721      00
 2722              	.LASF1:
 2723 0266 756E7369 		.ascii	"unsigned char\000"
 2723      676E6564 
 2723      20636861 
 2723      7200
 2724              	.LASF43:
 2725 0274 73797374 		.ascii	"systemState\000"
 2725      656D5374 
 2725      61746500 
 2726              	.LASF64:
 2727 0280 52585F44 		.ascii	"RX_DATA\000"
 2727      41544100 
 2728              	.LASF60:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 61


 2729 0288 64617461 		.ascii	"dataConvertedReadOutCount\000"
 2729      436F6E76 
 2729      65727465 
 2729      64526561 
 2729      644F7574 
 2730              	.LASF29:
 2731 02a2 7665724E 		.ascii	"verNumMatch\000"
 2731      756D4D61 
 2731      74636800 
 2732              	.LASF0:
 2733 02ae 7369676E 		.ascii	"signed char\000"
 2733      65642063 
 2733      68617200 
 2734              	.LASF22:
 2735 02ba 4261636B 		.ascii	"BackoffInterruptHandler\000"
 2735      6F666649 
 2735      6E746572 
 2735      72757074 
 2735      48616E64 
 2736              	.LASF7:
 2737 02d2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2737      206C6F6E 
 2737      6720756E 
 2737      7369676E 
 2737      65642069 
 2738              	.LASF75:
 2739 02e9 4261636B 		.ascii	"Backoff_WriteCounter\000"
 2739      6F66665F 
 2739      57726974 
 2739      65436F75 
 2739      6E746572 
 2740              	.LASF8:
 2741 02fe 756E7369 		.ascii	"unsigned int\000"
 2741      676E6564 
 2741      20696E74 
 2741      00
 2742              	.LASF76:
 2743 030b 4261636B 		.ascii	"Backoff_Start\000"
 2743      6F66665F 
 2743      53746172 
 2743      7400
 2744              	.LASF84:
 2745 0319 54696D65 		.ascii	"TimerISR_StartEx\000"
 2745      72495352 
 2745      5F537461 
 2745      72744578 
 2745      00
 2746              	.LASF5:
 2747 032a 6C6F6E67 		.ascii	"long unsigned int\000"
 2747      20756E73 
 2747      69676E65 
 2747      6420696E 
 2747      7400
 2748              	.LASF47:
 2749 033c 64617461 		.ascii	"dataPtr\000"
 2749      50747200 
 2750              	.LASF54:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 62


 2751 0344 53455249 		.ascii	"SERIAL_RX_BUFFER\000"
 2751      414C5F52 
 2751      585F4255 
 2751      46464552 
 2751      00
 2752              	.LASF87:
 2753 0355 52656365 		.ascii	"ReceiveISR_StartEx\000"
 2753      69766549 
 2753      53525F53 
 2753      74617274 
 2753      457800
 2754              	.LASF34:
 2755 0368 48656164 		.ascii	"HeaderCRC\000"
 2755      65724352 
 2755      4300
 2756              	.LASF18:
 2757 0372 42555359 		.ascii	"BUSY\000"
 2757      00
 2758              	.LASF30:
 2759 0377 736F7572 		.ascii	"sourceAddr\000"
 2759      63654164 
 2759      647200
 2760              	.LASF14:
 2761 0382 63686172 		.ascii	"char\000"
 2761      00
 2762              	.LASF49:
 2763 0387 5F426F6F 		.ascii	"_Bool\000"
 2763      6C00
 2764              	.LASF10:
 2765 038d 696E7433 		.ascii	"int32_t\000"
 2765      325F7400 
 2766              	.LASF31:
 2767 0395 64657374 		.ascii	"destAddr\000"
 2767      41646472 
 2767      00
 2768              	.LASF62:
 2769 039e 54585F42 		.ascii	"TX_Bit_Counter\000"
 2769      69745F43 
 2769      6F756E74 
 2769      657200
 2770              	.LASF3:
 2771 03ad 73686F72 		.ascii	"short unsigned int\000"
 2771      7420756E 
 2771      7369676E 
 2771      65642069 
 2771      6E7400
 2772              	.LASF70:
 2773 03c0 49444C45 		.ascii	"IDLE_Write\000"
 2773      5F577269 
 2773      746500
 2774              	.LASF71:
 2775 03cb 4261636B 		.ascii	"Backoff_Stop\000"
 2775      6F66665F 
 2775      53746F70 
 2775      00
 2776              	.LASF78:
 2777 03d8 54696D65 		.ascii	"TimerRX_WritePeriod\000"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 63


 2777      7252585F 
 2777      57726974 
 2777      65506572 
 2777      696F6400 
 2778              	.LASF83:
 2779 03ec 55534255 		.ascii	"USBUART_PutChar\000"
 2779      4152545F 
 2779      50757443 
 2779      68617200 
 2780              	.LASF63:
 2781 03fc 636F756E 		.ascii	"count\000"
 2781      7400
 2782              	.LASF53:
 2783 0402 53455249 		.ascii	"SERIAL_BUFFER\000"
 2783      414C5F42 
 2783      55464645 
 2783      5200
 2784              	.LASF46:
 2785 0410 64617461 		.ascii	"data\000"
 2785      00
 2786              	.LASF86:
 2787 0415 46616C6C 		.ascii	"FallingEdgeISR_StartEx\000"
 2787      696E6745 
 2787      64676549 
 2787      53525F53 
 2787      74617274 
 2788              	.LASF40:
 2789 042c 62756666 		.ascii	"buffer\000"
 2789      657200
 2790              	.LASF68:
 2791 0433 434F4C4C 		.ascii	"COLLISION_Write\000"
 2791      4953494F 
 2791      4E5F5772 
 2791      69746500 
 2792              	.LASF99:
 2793 0443 6D61696E 		.ascii	"main.c\000"
 2793      2E6300
 2794              	.LASF15:
 2795 044a 72656738 		.ascii	"reg8\000"
 2795      00
 2796              	.LASF61:
 2797 044f 63757272 		.ascii	"currentChar\000"
 2797      656E7443 
 2797      68617200 
 2798              	.LASF73:
 2799 045b 5052535F 		.ascii	"PRS_Read\000"
 2799      52656164 
 2799      00
 2800              	.LASF13:
 2801 0464 646F7562 		.ascii	"double\000"
 2801      6C6500
 2802              	.LASF42:
 2803 046b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2803      52784275 
 2803      66666572 
 2803      00
 2804              	.LASF39:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 64


 2805 0478 656E644F 		.ascii	"endOfData\000"
 2805      66446174 
 2805      6100
 2806              	.LASF100:
 2807 0482 433A5C32 		.ascii	"C:\\2018 Winter\\CE4950\\GroupProject\\ce4950lab1\\"
 2807      30313820 
 2807      57696E74 
 2807      65725C43 
 2807      45343935 
 2808 04b0 4E657477 		.ascii	"NetworkingProject.cydsn\000"
 2808      6F726B69 
 2808      6E675072 
 2808      6F6A6563 
 2808      742E6379 
 2809              	.LASF9:
 2810 04c8 5F5F696E 		.ascii	"__int32_t\000"
 2810      7433325F 
 2810      7400
 2811              	.LASF55:
 2812 04d2 53455249 		.ascii	"SERIAL_POS\000"
 2812      414C5F50 
 2812      4F5300
 2813              	.LASF72:
 2814 04dd 5452414E 		.ascii	"TRANSMIT_Write\000"
 2814      534D4954 
 2814      5F577269 
 2814      746500
 2815              	.LASF91:
 2816 04ec 55534255 		.ascii	"USBUART_GetDTERate\000"
 2816      4152545F 
 2816      47657444 
 2816      54455261 
 2816      746500
 2817              	.LASF90:
 2818 04ff 5052535F 		.ascii	"PRS_Start\000"
 2818      53746172 
 2818      7400
 2819              	.LASF80:
 2820 0509 54696D65 		.ascii	"TimerRX_Start\000"
 2820      7252585F 
 2820      53746172 
 2820      7400
 2821              	.LASF11:
 2822 0517 75696E74 		.ascii	"uint8\000"
 2822      3800
 2823              	.LASF97:
 2824 051d 55534255 		.ascii	"USBUART_PutCRLF\000"
 2824      4152545F 
 2824      50757443 
 2824      524C4600 
 2825              	.LASF94:
 2826 052d 55534255 		.ascii	"USBUART_CDC_Init\000"
 2826      4152545F 
 2826      4344435F 
 2826      496E6974 
 2826      00
 2827              	.LASF79:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 65


 2828 053e 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 2828      7252585F 
 2828      57726974 
 2828      65436F75 
 2828      6E746572 
 2829              	.LASF52:
 2830 0553 636F6C6C 		.ascii	"collisionDuringTransmit\000"
 2830      6973696F 
 2830      6E447572 
 2830      696E6754 
 2830      72616E73 
 2831              	.LASF98:
 2832 056b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2832      43313120 
 2832      352E342E 
 2832      31203230 
 2832      31363036 
 2833 059e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2833      20726576 
 2833      6973696F 
 2833      6E203233 
 2833      37373135 
 2834 05d1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2834      66756E63 
 2834      74696F6E 
 2834      2D736563 
 2834      74696F6E 
 2835              	.LASF28:
 2836 05f9 73746172 		.ascii	"startHeaderReceieved\000"
 2836      74486561 
 2836      64657252 
 2836      65636569 
 2836      65766564 
 2837              	.LASF24:
 2838 060e 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 2838      6E674564 
 2838      6765496E 
 2838      74657272 
 2838      75707448 
 2839              	.LASF103:
 2840 0629 67657449 		.ascii	"getInputData\000"
 2840      6E707574 
 2840      44617461 
 2840      00
 2841              	.LASF57:
 2842 0636 55415254 		.ascii	"UART_RX_DATA_READ_OUT\000"
 2842      5F52585F 
 2842      44415441 
 2842      5F524541 
 2842      445F4F55 
 2843              	.LASF95:
 2844 064c 55534255 		.ascii	"USBUART_DataIsReady\000"
 2844      4152545F 
 2844      44617461 
 2844      49735265 
 2844      61647900 
 2845              	.LASF77:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccAdGTbj.s 			page 66


 2846 0660 54696D65 		.ascii	"TimerRX_Stop\000"
 2846      7252585F 
 2846      53746F70 
 2846      00
 2847              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
