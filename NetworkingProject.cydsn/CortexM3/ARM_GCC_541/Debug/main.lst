ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	ReceiveInterruptHandler
  22              		.thumb
  23              		.thumb_func
  24              		.type	ReceiveInterruptHandler, %function
  25              	ReceiveInterruptHandler:
  26              	.LFB63:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** 
  14:main.c        **** typedef enum state {idleState, collisionState, busyState} State;
  15:main.c        **** 
  16:main.c        **** State systemState = idleState;
  17:main.c        **** 
  18:main.c        **** _Bool lowFlag = 0;
  19:main.c        **** //Address constants
  20:main.c        **** #define ADDR1_Start 16
  21:main.c        **** #define ADDR2_Start 25
  22:main.c        **** #define ADDR3_Start 28
  23:main.c        **** #define ADDR_length 2
  24:main.c        **** #define BROADCAST 0
  25:main.c        **** #define PROTOCOL_VERSION 0x01
  26:main.c        **** 
  27:main.c        **** //CRC constants
  28:main.c        **** #define CRC_USE 128 //crcs not used
  29:main.c        **** #define HEADER_CRC 0b1110111 
  30:main.c        **** 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 2


  31:main.c        **** //period and counter for timer
  32:main.c        **** #define COLL_PERIOD     52
  33:main.c        **** #define COLL_COUNTER    51
  34:main.c        **** #define IDLE_PERIOD     830
  35:main.c        **** #define IDLE_COUNTER    829
  36:main.c        **** //Receive timer stuff
  37:main.c        **** #define RX_PERIOD   52
  38:main.c        **** #define RX_COUNTER  51
  39:main.c        **** //transmit timer stuff
  40:main.c        **** #define TX_PERIOD     47 //gives 0.50ms or 500us for unipolar-rz at 1000bps
  41:main.c        **** #define TX_COUNTER    46 //empirically tuned...
  42:main.c        **** #define RANDON_BACKOFF_MAX_RETRY 10
  43:main.c        **** //serial buffer size
  44:main.c        **** #define SERIAL_BUFFER_SIZE 500
  45:main.c        **** //serial buffer
  46:main.c        **** unsigned char SERIAL_BUFFER[SERIAL_BUFFER_SIZE];
  47:main.c        **** unsigned char SERIAL_RX_BUFFER[SERIAL_BUFFER_SIZE];
  48:main.c        **** int SERIAL_POS = 0;
  49:main.c        **** int SERIAL_RX_POS = 0;
  50:main.c        **** int USBUART_RX_DATA_READ_OUT = 0;
  51:main.c        **** //flag to determine if the UART is connected
  52:main.c        **** int uartConnected = 0;
  53:main.c        **** //data cache for later use
  54:main.c        **** unsigned char CONVERTED_DATA[SERIAL_BUFFER_SIZE][16];
  55:main.c        **** int dataConvertedReadOutCount = 0;
  56:main.c        **** char currentChar;
  57:main.c        **** int dataSize;
  58:main.c        **** int TX_Bit_Counter = 0; //keeps track of what would be a for loop in the ISR
  59:main.c        **** int count = 0; //keeps track of which bit we're on
  60:main.c        **** unsigned char RX_DATA[16]; //receieved data buffer
  61:main.c        **** int RX_Bit_Counter = 0;
  62:main.c        **** char RX_Char;
  63:main.c        **** int RX_Lock = 0;
  64:main.c        **** int TX_Lock = 0; //allows us to transmit when in busy if we are transmitting
  65:main.c        **** int bitConCatCount = 0;
  66:main.c        **** unsigned char TX_Addr = 0; //transmit dest address
  67:main.c        **** unsigned char TX_length = 0; //transmit length
  68:main.c        **** 
  69:main.c        **** int startHeaderReceieved = 0;
  70:main.c        **** int verNumMatch = 0;
  71:main.c        **** char sourceAddr = 0x00;
  72:main.c        **** char destAddr = 0x00;
  73:main.c        **** int dataLength = 0;
  74:main.c        **** char CRCused = 0x00;
  75:main.c        **** char HeaderCRC = 0x00;
  76:main.c        **** int addrDataPrinted = 0;
  77:main.c        **** int dataPrintedOut = 0;
  78:main.c        **** 
  79:main.c        **** void checkNewBytes(); //gets new messages
  80:main.c        **** void checkState(); //gets current system state
  81:main.c        **** void getHeader(); //gets the header
  82:main.c        **** 
  83:main.c        **** CY_ISR(ReceiveInterruptHandler){
  28              		.loc 1 83 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 3


  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              	.LVL0:
  84:main.c        ****     int bitConCatCount = 0;
  85:main.c        ****     char characterRX = 0;
  86:main.c        ****     
  87:main.c        ****     TimerRX_STATUS; //clear stat
  39              		.loc 1 87 0
  40 0002 1F4B     		ldr	r3, .L11
  41 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88:main.c        ****     //only receive data in not collision
  89:main.c        ****     if(systemState != collisionState){
  42              		.loc 1 89 0
  43 0006 1F4B     		ldr	r3, .L11+4
  44 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  45 000a 012B     		cmp	r3, #1
  46 000c 0BD0     		beq	.L2
  90:main.c        ****         TimerRX_Start();
  47              		.loc 1 90 0
  48 000e FFF7FEFF 		bl	TimerRX_Start
  49              	.LVL1:
  91:main.c        ****         RX_DATA[RX_Bit_Counter] = RECEIVE_Read(); //read bit
  50              		.loc 1 91 0
  51 0012 1C4C     		ldr	r4, .L11+4
  52 0014 6568     		ldr	r5, [r4, #4]
  53 0016 FFF7FEFF 		bl	RECEIVE_Read
  54              	.LVL2:
  55 001a 1B4B     		ldr	r3, .L11+8
  56 001c 5855     		strb	r0, [r3, r5]
  92:main.c        ****         ++RX_Bit_Counter;
  57              		.loc 1 92 0
  58 001e 6368     		ldr	r3, [r4, #4]
  59 0020 0133     		adds	r3, r3, #1
  60 0022 6360     		str	r3, [r4, #4]
  61 0024 07E0     		b	.L3
  62              	.L2:
  93:main.c        ****         
  94:main.c        ****     }else{
  95:main.c        ****         //reset buffers when in collision 
  96:main.c        ****         RX_Bit_Counter = 0;   
  63              		.loc 1 96 0
  64 0026 174C     		ldr	r4, .L11+4
  65 0028 0025     		movs	r5, #0
  66 002a 6560     		str	r5, [r4, #4]
  97:main.c        ****         SERIAL_RX_POS = 0;
  67              		.loc 1 97 0
  68 002c A560     		str	r5, [r4, #8]
  98:main.c        ****         USBUART_RX_DATA_READ_OUT = 0;
  69              		.loc 1 98 0
  70 002e E560     		str	r5, [r4, #12]
  99:main.c        ****         TimerRX_Stop();
  71              		.loc 1 99 0
  72 0030 FFF7FEFF 		bl	TimerRX_Stop
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 4


  73              	.LVL3:
 100:main.c        ****         RX_Lock = 0;
  74              		.loc 1 100 0
  75 0034 2561     		str	r5, [r4, #16]
  76              	.L3:
 101:main.c        ****     }
 102:main.c        ****     //reset bit counter if we intook all the bits
 103:main.c        ****     if(RX_Bit_Counter >= 15 ){
  77              		.loc 1 103 0
  78 0036 134B     		ldr	r3, .L11+4
  79 0038 5B68     		ldr	r3, [r3, #4]
  80 003a 0E2B     		cmp	r3, #14
  81 003c 1FDD     		ble	.L1
 104:main.c        ****         RX_Bit_Counter = 0;
  82              		.loc 1 104 0
  83 003e 114D     		ldr	r5, .L11+4
  84 0040 0024     		movs	r4, #0
  85 0042 6C60     		str	r4, [r5, #4]
 105:main.c        ****         TimerRX_Stop();
  86              		.loc 1 105 0
  87 0044 FFF7FEFF 		bl	TimerRX_Stop
  88              	.LVL4:
 106:main.c        ****         RX_Lock = 0;
  89              		.loc 1 106 0
  90 0048 2C61     		str	r4, [r5, #16]
  91              	.LVL5:
  92              	.LBB2:
 107:main.c        ****         
 108:main.c        ****         
 109:main.c        ****         for(int x = 15; x >= 0; x--){
  93              		.loc 1 109 0
  94 004a 0F23     		movs	r3, #15
  95              	.LBE2:
  85:main.c        ****     
  96              		.loc 1 85 0
  97 004c 2246     		mov	r2, r4
  84:main.c        ****     char characterRX = 0;
  98              		.loc 1 84 0
  99 004e 2046     		mov	r0, r4
 100              	.LBB3:
 101              		.loc 1 109 0
 102 0050 0DE0     		b	.L5
 103              	.LVL6:
 104              	.L8:
 110:main.c        ****             if(x == 15){
 105              		.loc 1 110 0
 106 0052 0F2B     		cmp	r3, #15
 107 0054 00D1     		bne	.L6
 111:main.c        ****              characterRX = 0x00; //account for start bit   
 108              		.loc 1 111 0
 109 0056 0022     		movs	r2, #0
 110              	.LVL7:
 111              	.L6:
 112:main.c        ****             }
 113:main.c        ****             if(x % 2 != 0){
 112              		.loc 1 113 0
 113 0058 13F0010F 		tst	r3, #1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 5


 114 005c 06D0     		beq	.L7
 114:main.c        ****                 characterRX = (characterRX | (RX_DATA[x] << (bitConCatCount-1)));
 115              		.loc 1 114 0
 116 005e 0A49     		ldr	r1, .L11+8
 117 0060 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 118 0062 441E     		subs	r4, r0, #1
 119 0064 A140     		lsls	r1, r1, r4
 120 0066 0A43     		orrs	r2, r2, r1
 121              	.LVL8:
 122 0068 D2B2     		uxtb	r2, r2
 123              	.LVL9:
 115:main.c        ****                 //UART_PutChar((RX_DATA[x])+0x30);
 116:main.c        ****                 ++bitConCatCount;
 124              		.loc 1 116 0
 125 006a 0130     		adds	r0, r0, #1
 126              	.LVL10:
 127              	.L7:
 109:main.c        ****             if(x == 15){
 128              		.loc 1 109 0 discriminator 2
 129 006c 013B     		subs	r3, r3, #1
 130              	.LVL11:
 131              	.L5:
 109:main.c        ****             if(x == 15){
 132              		.loc 1 109 0 is_stmt 0 discriminator 1
 133 006e 002B     		cmp	r3, #0
 134 0070 EFDA     		bge	.L8
 135              	.LBE3:
 117:main.c        ****             }
 118:main.c        ****         }
 119:main.c        ****         SERIAL_RX_BUFFER[SERIAL_RX_POS] = characterRX;
 136              		.loc 1 119 0 is_stmt 1
 137 0072 0449     		ldr	r1, .L11+4
 138 0074 8B68     		ldr	r3, [r1, #8]
 139              	.LVL12:
 140 0076 0548     		ldr	r0, .L11+12
 141              	.LVL13:
 142 0078 C254     		strb	r2, [r0, r3]
 120:main.c        ****         ++SERIAL_RX_POS;
 143              		.loc 1 120 0
 144 007a 0133     		adds	r3, r3, #1
 145 007c 8B60     		str	r3, [r1, #8]
 146              	.LVL14:
 147              	.L1:
 148 007e 38BD     		pop	{r3, r4, r5, pc}
 149              	.L12:
 150              		.align	2
 151              	.L11:
 152 0080 67640040 		.word	1073767527
 153 0084 00000000 		.word	.LANCHOR0
 154 0088 00000000 		.word	RX_DATA
 155 008c 00000000 		.word	SERIAL_RX_BUFFER
 156              		.cfi_endproc
 157              	.LFE63:
 158              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 159              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 160              		.align	2
 161              		.global	TransmitInterruptHandler
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 6


 162              		.thumb
 163              		.thumb_func
 164              		.type	TransmitInterruptHandler, %function
 165              	TransmitInterruptHandler:
 166              	.LFB64:
 121:main.c        ****        
 122:main.c        ****     }
 123:main.c        **** }
 124:main.c        **** 
 125:main.c        **** CY_ISR(TransmitInterruptHandler)
 126:main.c        **** {
 167              		.loc 1 126 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 127:main.c        **** 	TimerTX_STATUS; //clear TX timer
 175              		.loc 1 127 0
 176 0002 364B     		ldr	r3, .L23
 177 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 128:main.c        **** 	//get data
 129:main.c        **** 	currentChar = SERIAL_BUFFER[SERIAL_POS];
 178              		.loc 1 129 0
 179 0006 364B     		ldr	r3, .L23+4
 180 0008 5B69     		ldr	r3, [r3, #20]
 181 000a 364A     		ldr	r2, .L23+8
 182 000c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 183 000e 3649     		ldr	r1, .L23+12
 184 0010 0A70     		strb	r2, [r1]
 130:main.c        **** 
 131:main.c        **** 	if(((SERIAL_POS < dataSize) && (systemState == idleState)) || ((TX_Lock) && (systemState == busySt
 185              		.loc 1 131 0
 186 0012 3649     		ldr	r1, .L23+16
 187 0014 0968     		ldr	r1, [r1]
 188 0016 8B42     		cmp	r3, r1
 189 0018 02DA     		bge	.L14
 190              		.loc 1 131 0 is_stmt 0 discriminator 1
 191 001a 314B     		ldr	r3, .L23+4
 192 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 193 001e 3BB1     		cbz	r3, .L15
 194              	.L14:
 195              		.loc 1 131 0 discriminator 3
 196 0020 2F4B     		ldr	r3, .L23+4
 197 0022 9B69     		ldr	r3, [r3, #24]
 198 0024 002B     		cmp	r3, #0
 199 0026 58D0     		beq	.L13
 200              		.loc 1 131 0 discriminator 4
 201 0028 2D4B     		ldr	r3, .L23+4
 202 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 203 002c 022B     		cmp	r3, #2
 204 002e 54D1     		bne	.L13
 205              	.L15:
 132:main.c        **** 	//encode into Unipolar-RZ
 133:main.c        **** 	
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 7


 134:main.c        **** 	//Data to be transmitted. This represents one byte of data and will
 135:main.c        **** 	//be encoded in unipolar RZ. For every bit there will be 2 bits, and there are 8 bits
 136:main.c        **** 	
 137:main.c        **** 		if(TX_Bit_Counter == 0){
 206              		.loc 1 137 0 is_stmt 1
 207 0030 2B4B     		ldr	r3, .L23+4
 208 0032 DB69     		ldr	r3, [r3, #28]
 209 0034 5BB9     		cbnz	r3, .L17
 138:main.c        **** 			TRANSMIT_Write(1);
 210              		.loc 1 138 0
 211 0036 0120     		movs	r0, #1
 212 0038 FFF7FEFF 		bl	TRANSMIT_Write
 213              	.LVL15:
 139:main.c        **** 			CONVERTED_DATA[SERIAL_POS][TX_Bit_Counter] = 0x31;
 214              		.loc 1 139 0
 215 003c 284A     		ldr	r2, .L23+4
 216 003e 5169     		ldr	r1, [r2, #20]
 217 0040 D269     		ldr	r2, [r2, #28]
 218 0042 2B4B     		ldr	r3, .L23+20
 219 0044 03EB0113 		add	r3, r3, r1, lsl #4
 220 0048 3121     		movs	r1, #49
 221 004a 9954     		strb	r1, [r3, r2]
 222 004c 31E0     		b	.L18
 223              	.L17:
 140:main.c        **** 		}else if(TX_Bit_Counter%2 != 0){
 224              		.loc 1 140 0
 225 004e 13F0010F 		tst	r3, #1
 226 0052 0BD0     		beq	.L19
 141:main.c        **** 			TRANSMIT_Write(0);
 227              		.loc 1 141 0
 228 0054 0020     		movs	r0, #0
 229 0056 FFF7FEFF 		bl	TRANSMIT_Write
 230              	.LVL16:
 142:main.c        **** 			CONVERTED_DATA[SERIAL_POS][TX_Bit_Counter] = 0x30;
 231              		.loc 1 142 0
 232 005a 214A     		ldr	r2, .L23+4
 233 005c 5169     		ldr	r1, [r2, #20]
 234 005e D269     		ldr	r2, [r2, #28]
 235 0060 234B     		ldr	r3, .L23+20
 236 0062 03EB0113 		add	r3, r3, r1, lsl #4
 237 0066 3021     		movs	r1, #48
 238 0068 9954     		strb	r1, [r3, r2]
 239 006a 22E0     		b	.L18
 240              	.L19:
 143:main.c        **** 		}else{
 144:main.c        **** 			//see if a 1 exists at the bit of the char, otherwise write a 0 out
 145:main.c        **** 			//this should transmit MSB first
 146:main.c        **** 			if(currentChar & (1<<(6-count))){
 241              		.loc 1 146 0
 242 006c 1C4B     		ldr	r3, .L23+4
 243 006e 1B6A     		ldr	r3, [r3, #32]
 244 0070 C3F10603 		rsb	r3, r3, #6
 245 0074 1A41     		asrs	r2, r2, r3
 246 0076 12F0010F 		tst	r2, #1
 247 007a 0BD0     		beq	.L20
 147:main.c        **** 				TRANSMIT_Write(1);
 248              		.loc 1 147 0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 8


 249 007c 0120     		movs	r0, #1
 250 007e FFF7FEFF 		bl	TRANSMIT_Write
 251              	.LVL17:
 148:main.c        **** 				CONVERTED_DATA[SERIAL_POS][TX_Bit_Counter] = 0x31;
 252              		.loc 1 148 0
 253 0082 174A     		ldr	r2, .L23+4
 254 0084 5169     		ldr	r1, [r2, #20]
 255 0086 D269     		ldr	r2, [r2, #28]
 256 0088 194B     		ldr	r3, .L23+20
 257 008a 03EB0113 		add	r3, r3, r1, lsl #4
 258 008e 3121     		movs	r1, #49
 259 0090 9954     		strb	r1, [r3, r2]
 260 0092 0AE0     		b	.L21
 261              	.L20:
 149:main.c        **** 			}else{
 150:main.c        **** 				TRANSMIT_Write(0);
 262              		.loc 1 150 0
 263 0094 0020     		movs	r0, #0
 264 0096 FFF7FEFF 		bl	TRANSMIT_Write
 265              	.LVL18:
 151:main.c        **** 				CONVERTED_DATA[SERIAL_POS][TX_Bit_Counter] = 0x30;   
 266              		.loc 1 151 0
 267 009a 114A     		ldr	r2, .L23+4
 268 009c 5169     		ldr	r1, [r2, #20]
 269 009e D269     		ldr	r2, [r2, #28]
 270 00a0 134B     		ldr	r3, .L23+20
 271 00a2 03EB0113 		add	r3, r3, r1, lsl #4
 272 00a6 3021     		movs	r1, #48
 273 00a8 9954     		strb	r1, [r3, r2]
 274              	.L21:
 152:main.c        **** 			}
 153:main.c        **** 				++count;
 275              		.loc 1 153 0
 276 00aa 0D4A     		ldr	r2, .L23+4
 277 00ac 136A     		ldr	r3, [r2, #32]
 278 00ae 0133     		adds	r3, r3, #1
 279 00b0 1362     		str	r3, [r2, #32]
 280              	.L18:
 154:main.c        **** 		}
 155:main.c        ****         CyDelayUs(495);
 281              		.loc 1 155 0
 282 00b2 40F2EF10 		movw	r0, #495
 283 00b6 FFF7FEFF 		bl	CyDelayUs
 284              	.LVL19:
 156:main.c        ****         ++TX_Bit_Counter;
 285              		.loc 1 156 0
 286 00ba 094A     		ldr	r2, .L23+4
 287 00bc D369     		ldr	r3, [r2, #28]
 288 00be 0133     		adds	r3, r3, #1
 289 00c0 D361     		str	r3, [r2, #28]
 157:main.c        ****         if(TX_Bit_Counter >= 16){
 290              		.loc 1 157 0
 291 00c2 0F2B     		cmp	r3, #15
 292 00c4 09DD     		ble	.L13
 158:main.c        **** 		    ++SERIAL_POS;
 293              		.loc 1 158 0
 294 00c6 1346     		mov	r3, r2
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 9


 295 00c8 5269     		ldr	r2, [r2, #20]
 296 00ca 0132     		adds	r2, r2, #1
 297 00cc 5A61     		str	r2, [r3, #20]
 159:main.c        **** 		    count = 0;
 298              		.loc 1 159 0
 299 00ce 0020     		movs	r0, #0
 300 00d0 1862     		str	r0, [r3, #32]
 160:main.c        **** 		    TX_Bit_Counter = 0;
 301              		.loc 1 160 0
 302 00d2 D861     		str	r0, [r3, #28]
 161:main.c        ****             TX_Lock = 0;
 303              		.loc 1 161 0
 304 00d4 9861     		str	r0, [r3, #24]
 162:main.c        ****             TRANSMIT_Write(0);
 305              		.loc 1 162 0
 306 00d6 FFF7FEFF 		bl	TRANSMIT_Write
 307              	.LVL20:
 308              	.L13:
 309 00da 08BD     		pop	{r3, pc}
 310              	.L24:
 311              		.align	2
 312              	.L23:
 313 00dc 034F0040 		.word	1073762051
 314 00e0 00000000 		.word	.LANCHOR0
 315 00e4 00000000 		.word	SERIAL_BUFFER
 316 00e8 00000000 		.word	currentChar
 317 00ec 00000000 		.word	dataSize
 318 00f0 00000000 		.word	CONVERTED_DATA
 319              		.cfi_endproc
 320              	.LFE64:
 321              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 322              		.section	.text.BackoffInterruptHandler,"ax",%progbits
 323              		.align	2
 324              		.global	BackoffInterruptHandler
 325              		.thumb
 326              		.thumb_func
 327              		.type	BackoffInterruptHandler, %function
 328              	BackoffInterruptHandler:
 329              	.LFB65:
 163:main.c        ****         }
 164:main.c        ****  
 165:main.c        ****     }else if(systemState == collisionState){
 166:main.c        ****       
 167:main.c        ****     }
 168:main.c        **** 	
 169:main.c        **** }
 170:main.c        **** 
 171:main.c        **** CY_ISR(BackoffInterruptHandler){
 330              		.loc 1 171 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 08B5     		push	{r3, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 172:main.c        ****     Backoff_STATUS;
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 10


 338              		.loc 1 172 0
 339 0002 054B     		ldr	r3, .L27
 340 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173:main.c        ****     Backoff_Stop();
 341              		.loc 1 173 0
 342 0006 FFF7FEFF 		bl	Backoff_Stop
 343              	.LVL21:
 174:main.c        ****     TX_Lock = 1;
 344              		.loc 1 174 0
 345 000a 044B     		ldr	r3, .L27+4
 346 000c 0122     		movs	r2, #1
 347 000e 9A61     		str	r2, [r3, #24]
 175:main.c        ****     systemState = idleState;
 348              		.loc 1 175 0
 349 0010 0022     		movs	r2, #0
 350 0012 1A70     		strb	r2, [r3]
 351 0014 08BD     		pop	{r3, pc}
 352              	.L28:
 353 0016 00BF     		.align	2
 354              	.L27:
 355 0018 67650040 		.word	1073767783
 356 001c 00000000 		.word	.LANCHOR0
 357              		.cfi_endproc
 358              	.LFE65:
 359              		.size	BackoffInterruptHandler, .-BackoffInterruptHandler
 360              		.global	__aeabi_i2d
 361              		.global	__aeabi_dmul
 362              		.global	__aeabi_d2uiz
 363              		.global	__aeabi_dsub
 364              		.section	.text.TimerInterruptHandler,"ax",%progbits
 365              		.align	2
 366              		.global	TimerInterruptHandler
 367              		.thumb
 368              		.thumb_func
 369              		.type	TimerInterruptHandler, %function
 370              	TimerInterruptHandler:
 371              	.LFB66:
 176:main.c        **** }
 177:main.c        **** 
 178:main.c        **** CY_ISR(TimerInterruptHandler)
 179:main.c        **** {
 372              		.loc 1 179 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 38B5     		push	{r3, r4, r5, lr}
 377              		.cfi_def_cfa_offset 16
 378              		.cfi_offset 3, -16
 379              		.cfi_offset 4, -12
 380              		.cfi_offset 5, -8
 381              		.cfi_offset 14, -4
 180:main.c        ****    	Timer_STATUS; //clear timer
 382              		.loc 1 180 0
 383 0002 1B4B     		ldr	r3, .L33
 384 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181:main.c        ****     
 182:main.c        ****     if (!(lowFlag) ){
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 11


 385              		.loc 1 182 0
 386 0006 1B4B     		ldr	r3, .L33+4
 387 0008 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 388 000c 1BB9     		cbnz	r3, .L30
 183:main.c        ****         systemState = idleState;
 389              		.loc 1 183 0
 390 000e 0022     		movs	r2, #0
 391 0010 184B     		ldr	r3, .L33+4
 392 0012 1A70     		strb	r2, [r3]
 393 0014 38BD     		pop	{r3, r4, r5, pc}
 394              	.L30:
 395              	.LBB4:
 184:main.c        ****     } else {
 185:main.c        ****         systemState = collisionState;
 396              		.loc 1 185 0
 397 0016 174C     		ldr	r4, .L33+4
 398 0018 0123     		movs	r3, #1
 399 001a 2370     		strb	r3, [r4]
 186:main.c        ****         TRANSMIT_Write(0);
 400              		.loc 1 186 0
 401 001c 0020     		movs	r0, #0
 402 001e FFF7FEFF 		bl	TRANSMIT_Write
 403              	.LVL22:
 187:main.c        ****         TX_Bit_Counter = 0;    
 404              		.loc 1 187 0
 405 0022 0023     		movs	r3, #0
 406 0024 E361     		str	r3, [r4, #28]
 188:main.c        ****         TX_Lock = 0;
 407              		.loc 1 188 0
 408 0026 A361     		str	r3, [r4, #24]
 189:main.c        ****         count = 0;
 409              		.loc 1 189 0
 410 0028 2362     		str	r3, [r4, #32]
 411              	.LVL23:
 190:main.c        ****         int backoff = 0;
 191:main.c        **** 	    //reset current byte transmission 
 192:main.c        **** 	    //generate sudo-random backoff, normally distributed between backoff/128 seconds, where N is a
 193:main.c        **** 	    backoff = (PRS_Read()+1);
 412              		.loc 1 193 0
 413 002a FFF7FEFF 		bl	PRS_Read
 414              	.LVL24:
 194:main.c        **** 	    //CyDelay((double)(backoff/128.0)*1000); //use cydelay for now, which takes millis
 195:main.c        ****         Backoff_WritePeriod((backoff/128.0)*1000);
 415              		.loc 1 195 0
 416 002e 0130     		adds	r0, r0, #1
 417              	.LVL25:
 418 0030 FFF7FEFF 		bl	__aeabi_i2d
 419              	.LVL26:
 420 0034 0022     		movs	r2, #0
 421 0036 4FF07E53 		mov	r3, #1065353216
 422 003a FFF7FEFF 		bl	__aeabi_dmul
 423              	.LVL27:
 424 003e 0022     		movs	r2, #0
 425 0040 0D4B     		ldr	r3, .L33+8
 426 0042 FFF7FEFF 		bl	__aeabi_dmul
 427              	.LVL28:
 428 0046 0446     		mov	r4, r0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 12


 429 0048 0D46     		mov	r5, r1
 430 004a FFF7FEFF 		bl	__aeabi_d2uiz
 431              	.LVL29:
 432 004e 80B2     		uxth	r0, r0
 433 0050 FFF7FEFF 		bl	Backoff_WritePeriod
 434              	.LVL30:
 196:main.c        ****         Backoff_WriteCounter(((backoff/128.0)*1000)-1);
 435              		.loc 1 196 0
 436 0054 0022     		movs	r2, #0
 437 0056 094B     		ldr	r3, .L33+12
 438 0058 2046     		mov	r0, r4
 439 005a 2946     		mov	r1, r5
 440 005c FFF7FEFF 		bl	__aeabi_dsub
 441              	.LVL31:
 442 0060 FFF7FEFF 		bl	__aeabi_d2uiz
 443              	.LVL32:
 444 0064 80B2     		uxth	r0, r0
 445 0066 FFF7FEFF 		bl	Backoff_WriteCounter
 446              	.LVL33:
 197:main.c        ****         Backoff_Start();
 447              		.loc 1 197 0
 448 006a FFF7FEFF 		bl	Backoff_Start
 449              	.LVL34:
 450 006e 38BD     		pop	{r3, r4, r5, pc}
 451              	.L34:
 452              		.align	2
 453              	.L33:
 454 0070 65650040 		.word	1073767781
 455 0074 00000000 		.word	.LANCHOR0
 456 0078 00408F40 		.word	1083129856
 457 007c 0000F03F 		.word	1072693248
 458              	.LBE4:
 459              		.cfi_endproc
 460              	.LFE66:
 461              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 462              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 463              		.align	2
 464              		.global	RisingEdgeInterruptHandler
 465              		.thumb
 466              		.thumb_func
 467              		.type	RisingEdgeInterruptHandler, %function
 468              	RisingEdgeInterruptHandler:
 469              	.LFB67:
 198:main.c        ****     }
 199:main.c        **** }
 200:main.c        **** 
 201:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 202:main.c        **** {
 470              		.loc 1 202 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 08B5     		push	{r3, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 203:main.c        ****     if ((!lowFlag)){
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 13


 478              		.loc 1 203 0
 479 0002 0D4B     		ldr	r3, .L39
 480 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 481 0008 6BB9     		cbnz	r3, .L36
 204:main.c        ****         Timer_WritePeriod(COLL_PERIOD);
 482              		.loc 1 204 0
 483 000a 3420     		movs	r0, #52
 484 000c FFF7FEFF 		bl	Timer_WritePeriod
 485              	.LVL35:
 205:main.c        ****         Timer_WriteCounter(COLL_COUNTER);
 486              		.loc 1 205 0
 487 0010 3320     		movs	r0, #51
 488 0012 FFF7FEFF 		bl	Timer_WriteCounter
 489              	.LVL36:
 206:main.c        ****         Timer_Start();
 490              		.loc 1 206 0
 491 0016 FFF7FEFF 		bl	Timer_Start
 492              	.LVL37:
 207:main.c        ****         lowFlag = 1;
 493              		.loc 1 207 0
 494 001a 074B     		ldr	r3, .L39
 495 001c 0122     		movs	r2, #1
 496 001e 83F82420 		strb	r2, [r3, #36]
 208:main.c        ****         systemState = busyState;
 497              		.loc 1 208 0
 498 0022 0222     		movs	r2, #2
 499 0024 1A70     		strb	r2, [r3]
 500              	.L36:
 209:main.c        ****     }
 210:main.c        ****     if(RX_Lock == 0){
 501              		.loc 1 210 0
 502 0026 044B     		ldr	r3, .L39
 503 0028 1B69     		ldr	r3, [r3, #16]
 504 002a 23B9     		cbnz	r3, .L35
 211:main.c        ****         TimerRX_Start();
 505              		.loc 1 211 0
 506 002c FFF7FEFF 		bl	TimerRX_Start
 507              	.LVL38:
 212:main.c        ****         RX_Lock = 1;
 508              		.loc 1 212 0
 509 0030 0122     		movs	r2, #1
 510 0032 014B     		ldr	r3, .L39
 511 0034 1A61     		str	r2, [r3, #16]
 512              	.L35:
 513 0036 08BD     		pop	{r3, pc}
 514              	.L40:
 515              		.align	2
 516              	.L39:
 517 0038 00000000 		.word	.LANCHOR0
 518              		.cfi_endproc
 519              	.LFE67:
 520              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 521              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 522              		.align	2
 523              		.global	FallingEdgeInterruptHandler
 524              		.thumb
 525              		.thumb_func
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 14


 526              		.type	FallingEdgeInterruptHandler, %function
 527              	FallingEdgeInterruptHandler:
 528              	.LFB68:
 213:main.c        ****         
 214:main.c        ****     }
 215:main.c        **** }
 216:main.c        ****  
 217:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 218:main.c        **** {
 529              		.loc 1 218 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 219:main.c        ****     if (lowFlag){
 537              		.loc 1 219 0
 538 0002 0A4B     		ldr	r3, .L44
 539 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 540 0008 7BB1     		cbz	r3, .L41
 220:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 541              		.loc 1 220 0
 542 000a 40F23E30 		movw	r0, #830
 543 000e FFF7FEFF 		bl	Timer_WritePeriod
 544              	.LVL39:
 221:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 545              		.loc 1 221 0
 546 0012 40F23D30 		movw	r0, #829
 547 0016 FFF7FEFF 		bl	Timer_WriteCounter
 548              	.LVL40:
 222:main.c        ****         Timer_Start();
 549              		.loc 1 222 0
 550 001a FFF7FEFF 		bl	Timer_Start
 551              	.LVL41:
 223:main.c        ****         lowFlag = 0;
 552              		.loc 1 223 0
 553 001e 034B     		ldr	r3, .L44
 554 0020 0022     		movs	r2, #0
 555 0022 83F82420 		strb	r2, [r3, #36]
 224:main.c        ****         systemState = busyState;
 556              		.loc 1 224 0
 557 0026 0222     		movs	r2, #2
 558 0028 1A70     		strb	r2, [r3]
 559              	.L41:
 560 002a 08BD     		pop	{r3, pc}
 561              	.L45:
 562              		.align	2
 563              	.L44:
 564 002c 00000000 		.word	.LANCHOR0
 565              		.cfi_endproc
 566              	.LFE68:
 567              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 568              		.section	.text.checkState,"ax",%progbits
 569              		.align	2
 570              		.global	checkState
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 15


 571              		.thumb
 572              		.thumb_func
 573              		.type	checkState, %function
 574              	checkState:
 575              	.LFB70:
 225:main.c        ****     }
 226:main.c        **** }
 227:main.c        **** 
 228:main.c        **** int main(void)
 229:main.c        **** {
 230:main.c        **** 
 231:main.c        ****     CyGlobalIntEnable; //enable global interrupts
 232:main.c        ****     //starting the interrupt handlers
 233:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 234:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 235:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 236:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 237:main.c        **** 
 238:main.c        ****     TimerTX_Start();
 239:main.c        ****     TimerTX_WritePeriod(TX_PERIOD);
 240:main.c        ****     TimerTX_WriteCounter(TX_COUNTER);
 241:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 242:main.c        ****     
 243:main.c        ****     TimerRX_WriteCounter(RX_COUNTER);
 244:main.c        ****     TimerRX_WritePeriod(RX_PERIOD);
 245:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 246:main.c        ****     
 247:main.c        ****     BackoffISR_StartEx(BackoffInterruptHandler);
 248:main.c        ****     PRS_Start();
 249:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 250:main.c        **** 
 251:main.c        **** 
 252:main.c        ****     while(1){
 253:main.c        ****         int printPrompt = 0;
 254:main.c        ****          //check if UART is connected, then set flag
 255:main.c        **** 		if(USBUART_GetDTERate() == 57600){
 256:main.c        **** 			uartConnected = 1;
 257:main.c        **** 		}
 258:main.c        **** 	
 259:main.c        **** 		//Host can send double SET_INTERFACE request, which sounds sub-optimal for us if we don't handle 
 260:main.c        **** 		if (0 != USBUART_IsConfigurationChanged())
 261:main.c        **** 		{
 262:main.c        **** 			//re-initialize device
 263:main.c        **** 			if (0 != USBUART_GetConfiguration())
 264:main.c        **** 			{
 265:main.c        **** 				//Enumeration is done, allow receieving data from host
 266:main.c        **** 				USBUART_CDC_Init();
 267:main.c        **** 			}
 268:main.c        **** 		}
 269:main.c        ****         
 270:main.c        ****         //get address
 271:main.c        ****         if(printPrompt == 0 && uartConnected){
 272:main.c        ****             int inCount = 0;
 273:main.c        ****             TX_Addr = 0;
 274:main.c        ****             char input = 0;
 275:main.c        ****             while(!USBUART_CDCIsReady());
 276:main.c        ****             USBUART_PutString("Enter Address (3 digits): ");
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 16


 277:main.c        ****             while(inCount < 3){
 278:main.c        ****                 while(USBUART_DataIsReady() == 0){ //wait for digits, perform other tasks here
 279:main.c        ****                     checkNewBytes();
 280:main.c        ****                     checkState();
 281:main.c        ****                 }
 282:main.c        ****                 //why minus 0x30? because these are ASCII chars from the keyboard...
 283:main.c        ****                 input = USBUART_GetChar();
 284:main.c        ****                 if(inCount == 0){
 285:main.c        ****                     TX_Addr  += 100*(input - (0x30));
 286:main.c        ****                     USBUART_PutChar(input);
 287:main.c        ****                 }else if(inCount == 1){
 288:main.c        ****                     TX_Addr  += 10*(input - (0x30));
 289:main.c        ****                     USBUART_PutChar(input);
 290:main.c        ****                 }else if (inCount == 2){
 291:main.c        ****                     TX_Addr  += input - (0x30);   
 292:main.c        ****                     USBUART_PutChar(input);
 293:main.c        ****                 }
 294:main.c        ****                 ++inCount;
 295:main.c        ****             } 
 296:main.c        ****             //Display print newline and prompt for message
 297:main.c        ****             while(!USBUART_CDCIsReady());
 298:main.c        ****             USBUART_PutCRLF();
 299:main.c        ****             while(!USBUART_CDCIsReady());
 300:main.c        ****             USBUART_PutString("Enter message: ");
 301:main.c        ****             inCount = 6; //reset counter, accounting for header
 302:main.c        ****             input = 0; //reset input
 303:main.c        ****             //encode header
 304:main.c        ****             
 305:main.c        ****             SERIAL_BUFFER[0] = 0x00; //does not take into account starting bit
 306:main.c        ****             SERIAL_BUFFER[1] = PROTOCOL_VERSION;
 307:main.c        ****             SERIAL_BUFFER[2] = ADDR1_Start;
 308:main.c        ****             SERIAL_BUFFER[3] = TX_Addr;
 309:main.c        ****             SERIAL_BUFFER[4] = 0x00; //padding for now, will be replaced with actual length after u
 310:main.c        ****             SERIAL_BUFFER[5] = CRC_USE;
 311:main.c        ****             SERIAL_BUFFER[6] = HEADER_CRC;
 312:main.c        ****             
 313:main.c        ****             //OD is the 'enter' key
 314:main.c        ****             while(input != 0x0D){
 315:main.c        ****                 while(USBUART_DataIsReady() == 0); //wait for message data
 316:main.c        ****                 input = USBUART_GetChar();
 317:main.c        ****                 if(input != 0x0D){
 318:main.c        ****                     SERIAL_BUFFER[inCount] = input;
 319:main.c        ****                     while(!USBUART_CDCIsReady());
 320:main.c        ****                     USBUART_PutChar(SERIAL_BUFFER[inCount]);
 321:main.c        ****                     ++inCount;
 322:main.c        ****                 }
 323:main.c        ****             }
 324:main.c        ****             SERIAL_BUFFER[4] = inCount; //replace padding with actual message length
 325:main.c        ****         //send data by setting variable
 326:main.c        ****         dataSize = SERIAL_BUFFER[4];
 327:main.c        ****         SERIAL_POS = 0;
 328:main.c        ****         printPrompt = 0;
 329:main.c        ****         while(!USBUART_CDCIsReady());
 330:main.c        ****         USBUART_PutCRLF();       
 331:main.c        ****         }
 332:main.c        ****         
 333:main.c        **** 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 17


 334:main.c        ****         
 335:main.c        ****     }
 336:main.c        **** }
 337:main.c        **** 
 338:main.c        **** void checkState(){
 576              		.loc 1 338 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580 0000 08B5     		push	{r3, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 3, -8
 583              		.cfi_offset 14, -4
 339:main.c        ****  switch(systemState){
 584              		.loc 1 339 0
 585 0002 214B     		ldr	r3, .L52
 586 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 587 0006 012B     		cmp	r3, #1
 588 0008 2CD0     		beq	.L48
 589 000a 13B1     		cbz	r3, .L49
 590 000c 022B     		cmp	r3, #2
 591 000e 17D0     		beq	.L50
 592 0010 08BD     		pop	{r3, pc}
 593              	.L49:
 340:main.c        ****         //idle state
 341:main.c        ****         case idleState :;
 342:main.c        ****             IDLE_Write(1);
 594              		.loc 1 342 0
 595 0012 0120     		movs	r0, #1
 596 0014 FFF7FEFF 		bl	IDLE_Write
 597              	.LVL42:
 343:main.c        ****             BUSY_Write(!IDLE_Read());
 598              		.loc 1 343 0
 599 0018 FFF7FEFF 		bl	IDLE_Read
 600              	.LVL43:
 601 001c B0FA80F0 		clz	r0, r0
 602 0020 4009     		lsrs	r0, r0, #5
 603 0022 FFF7FEFF 		bl	BUSY_Write
 604              	.LVL44:
 344:main.c        ****             COLLISION_Write(!IDLE_Read());
 605              		.loc 1 344 0
 606 0026 FFF7FEFF 		bl	IDLE_Read
 607              	.LVL45:
 608 002a B0FA80F0 		clz	r0, r0
 609 002e 4009     		lsrs	r0, r0, #5
 610 0030 FFF7FEFF 		bl	COLLISION_Write
 611              	.LVL46:
 345:main.c        ****             //since nothing happens in IDLE this is a safe bet...
 346:main.c        ****             USBUART_RX_DATA_READ_OUT = 0;
 612              		.loc 1 346 0
 613 0034 144B     		ldr	r3, .L52
 614 0036 0022     		movs	r2, #0
 615 0038 DA60     		str	r2, [r3, #12]
 347:main.c        ****             SERIAL_RX_POS = 0;
 616              		.loc 1 347 0
 617 003a 9A60     		str	r2, [r3, #8]
 348:main.c        ****             addrDataPrinted = 0;
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 18


 618              		.loc 1 348 0
 619 003c 9A62     		str	r2, [r3, #40]
 349:main.c        ****         break;
 620              		.loc 1 349 0
 621 003e 08BD     		pop	{r3, pc}
 622              	.L50:
 350:main.c        ****         //busy state
 351:main.c        ****         case busyState:
 352:main.c        ****             BUSY_Write(1);
 623              		.loc 1 352 0
 624 0040 0120     		movs	r0, #1
 625 0042 FFF7FEFF 		bl	BUSY_Write
 626              	.LVL47:
 353:main.c        ****             IDLE_Write(!BUSY_Read());
 627              		.loc 1 353 0
 628 0046 FFF7FEFF 		bl	BUSY_Read
 629              	.LVL48:
 630 004a B0FA80F0 		clz	r0, r0
 631 004e 4009     		lsrs	r0, r0, #5
 632 0050 FFF7FEFF 		bl	IDLE_Write
 633              	.LVL49:
 354:main.c        ****             COLLISION_Write(!BUSY_Read());
 634              		.loc 1 354 0
 635 0054 FFF7FEFF 		bl	BUSY_Read
 636              	.LVL50:
 637 0058 B0FA80F0 		clz	r0, r0
 638 005c 4009     		lsrs	r0, r0, #5
 639 005e FFF7FEFF 		bl	COLLISION_Write
 640              	.LVL51:
 355:main.c        ****         break;
 641              		.loc 1 355 0
 642 0062 08BD     		pop	{r3, pc}
 643              	.L48:
 356:main.c        ****         //collision state
 357:main.c        ****         case collisionState:;
 358:main.c        ****             COLLISION_Write(1);
 644              		.loc 1 358 0
 645 0064 0120     		movs	r0, #1
 646 0066 FFF7FEFF 		bl	COLLISION_Write
 647              	.LVL52:
 359:main.c        ****             IDLE_Write(!COLLISION_Read());
 648              		.loc 1 359 0
 649 006a FFF7FEFF 		bl	COLLISION_Read
 650              	.LVL53:
 651 006e B0FA80F0 		clz	r0, r0
 652 0072 4009     		lsrs	r0, r0, #5
 653 0074 FFF7FEFF 		bl	IDLE_Write
 654              	.LVL54:
 360:main.c        ****             BUSY_Write(!COLLISION_Read());
 655              		.loc 1 360 0
 656 0078 FFF7FEFF 		bl	COLLISION_Read
 657              	.LVL55:
 658 007c B0FA80F0 		clz	r0, r0
 659 0080 4009     		lsrs	r0, r0, #5
 660 0082 FFF7FEFF 		bl	BUSY_Write
 661              	.LVL56:
 662 0086 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 19


 663              	.L53:
 664              		.align	2
 665              	.L52:
 666 0088 00000000 		.word	.LANCHOR0
 667              		.cfi_endproc
 668              	.LFE70:
 669              		.size	checkState, .-checkState
 670              		.section	.text.getHeader,"ax",%progbits
 671              		.align	2
 672              		.global	getHeader
 673              		.thumb
 674              		.thumb_func
 675              		.type	getHeader, %function
 676              	getHeader:
 677              	.LFB72:
 361:main.c        ****         break;
 362:main.c        ****     }   
 363:main.c        **** }
 364:main.c        **** 
 365:main.c        **** void checkNewBytes(){
 366:main.c        ****  if(USBUART_CDCIsReady() != 0){
 367:main.c        ****     while(USBUART_RX_DATA_READ_OUT != SERIAL_RX_POS){
 368:main.c        ****         if(USBUART_RX_DATA_READ_OUT == 0){
 369:main.c        ****             getHeader();
 370:main.c        ****         }
 371:main.c        ****         if(destAddr == BROADCAST || 
 372:main.c        ****         ((destAddr >= ADDR1_Start) && (destAddr <= ADDR1_Start+ADDR_length)) ||
 373:main.c        ****         ((destAddr >= ADDR2_Start) && (destAddr <= ADDR2_Start+ADDR_length)) ||
 374:main.c        ****         ((destAddr >= ADDR3_Start) && (destAddr <= ADDR3_Start+ADDR_length))){
 375:main.c        ****             if(addrDataPrinted == 0){
 376:main.c        ****             while(!USBUART_CDCIsReady());
 377:main.c        ****             USBUART_PutCRLF();
 378:main.c        ****             while(!USBUART_CDCIsReady());
 379:main.c        ****             USBUART_PutCRLF();
 380:main.c        ****             while(!USBUART_CDCIsReady());
 381:main.c        ****             USBUART_PutCRLF(); 
 382:main.c        ****             while(!USBUART_CDCIsReady());
 383:main.c        ****             USBUART_PutString("Message From: ");
 384:main.c        ****             while(!USBUART_CDCIsReady());
 385:main.c        ****             //convert numbers to ascii
 386:main.c        ****             //hundreds
 387:main.c        ****             USBUART_PutChar(((sourceAddr)/100)+0x30);
 388:main.c        ****             //tens
 389:main.c        ****             while(!USBUART_CDCIsReady());
 390:main.c        ****             USBUART_PutChar(((sourceAddr/10)%10)+0x30);
 391:main.c        ****             while(!USBUART_CDCIsReady());
 392:main.c        ****             //ones
 393:main.c        ****             USBUART_PutChar(((sourceAddr%10)%10)+0x30);
 394:main.c        ****             while(!USBUART_CDCIsReady());
 395:main.c        ****             USBUART_PutCRLF();
 396:main.c        ****             while(!USBUART_CDCIsReady());
 397:main.c        ****             USBUART_PutString("Sent To: ");
 398:main.c        ****             if(destAddr == BROADCAST){
 399:main.c        ****                 while(!USBUART_CDCIsReady());
 400:main.c        ****                 USBUART_PutString("BCST ");
 401:main.c        ****                 while(!USBUART_CDCIsReady());
 402:main.c        ****                 USBUART_PutCRLF();
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 20


 403:main.c        ****             }else{
 404:main.c        ****                 while(!USBUART_CDCIsReady());
 405:main.c        ****                 //hundreds
 406:main.c        ****                 USBUART_PutChar(((destAddr)/100)+0x30);
 407:main.c        ****                 //tens
 408:main.c        ****                 while(!USBUART_CDCIsReady());
 409:main.c        ****                 USBUART_PutChar(((destAddr/10)%10)+0x30);
 410:main.c        ****                 while(!USBUART_CDCIsReady());
 411:main.c        ****                 //ones
 412:main.c        ****                 USBUART_PutChar(((destAddr%10)%10)+0x30);
 413:main.c        ****                 USBUART_PutCRLF();
 414:main.c        ****                 while(!USBUART_CDCIsReady());
 415:main.c        ****             }
 416:main.c        ****             while(!USBUART_CDCIsReady());
 417:main.c        ****             USBUART_PutString("Size: ");
 418:main.c        ****             while(!USBUART_CDCIsReady());
 419:main.c        ****             //hundreds
 420:main.c        ****             USBUART_PutChar(((dataLength)/100)+0x30);
 421:main.c        ****             //tens
 422:main.c        ****             while(!USBUART_CDCIsReady());
 423:main.c        ****             USBUART_PutChar(((dataLength/10)%10)+0x30);
 424:main.c        ****             while(!USBUART_CDCIsReady());
 425:main.c        ****             //ones
 426:main.c        ****             USBUART_PutChar(((dataLength%10)%10)+0x30);
 427:main.c        ****             while(!USBUART_CDCIsReady());
 428:main.c        ****             USBUART_PutCRLF();
 429:main.c        ****             while(!USBUART_CDCIsReady());
 430:main.c        ****             USBUART_PutString("Message: ");
 431:main.c        ****             while(!USBUART_CDCIsReady());
 432:main.c        ****             addrDataPrinted = 1;
 433:main.c        ****             }
 434:main.c        ****             if(USBUART_RX_DATA_READ_OUT > 6){
 435:main.c        ****             USBUART_PutChar(SERIAL_RX_BUFFER[USBUART_RX_DATA_READ_OUT]);
 436:main.c        ****             }
 437:main.c        ****             
 438:main.c        ****         }
 439:main.c        ****         ++USBUART_RX_DATA_READ_OUT;
 440:main.c        ****     }
 441:main.c        ****      
 442:main.c        ****    }
 443:main.c        **** }
 444:main.c        **** 
 445:main.c        **** void getHeader(){
 678              		.loc 1 445 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 446:main.c        ****     //if there is at least enough data in the buffer to hold the header, fetch it
 447:main.c        ****     if(SERIAL_RX_BUFFER[0] == 0x00){
 683              		.loc 1 447 0
 684 0000 0E4B     		ldr	r3, .L57
 685 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 686 0004 13B9     		cbnz	r3, .L55
 448:main.c        ****         startHeaderReceieved = 1;
 687              		.loc 1 448 0
 688 0006 0122     		movs	r2, #1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 21


 689 0008 0D4B     		ldr	r3, .L57+4
 690 000a DA62     		str	r2, [r3, #44]
 691              	.L55:
 449:main.c        ****     
 450:main.c        ****     }
 451:main.c        ****     //check for version number
 452:main.c        ****     if(SERIAL_RX_BUFFER[1] == 0x01){
 692              		.loc 1 452 0
 693 000c 0B4B     		ldr	r3, .L57
 694 000e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 695 0010 012B     		cmp	r3, #1
 696 0012 02D1     		bne	.L56
 453:main.c        ****             verNumMatch = 1;
 697              		.loc 1 453 0
 698 0014 0122     		movs	r2, #1
 699 0016 0A4B     		ldr	r3, .L57+4
 700 0018 1A63     		str	r2, [r3, #48]
 701              	.L56:
 454:main.c        ****    }
 455:main.c        ****    //get source address
 456:main.c        ****     sourceAddr = SERIAL_RX_BUFFER[2];
 702              		.loc 1 456 0
 703 001a 084A     		ldr	r2, .L57
 704 001c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 705 001e 084B     		ldr	r3, .L57+4
 706 0020 83F83410 		strb	r1, [r3, #52]
 457:main.c        ****     //get destination address
 458:main.c        ****     destAddr = SERIAL_RX_BUFFER[3];
 707              		.loc 1 458 0
 708 0024 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 709 0026 83F83510 		strb	r1, [r3, #53]
 459:main.c        ****   
 460:main.c        ****     //get datalegnth     
 461:main.c        ****     dataLength = SERIAL_RX_BUFFER[4];
 710              		.loc 1 461 0
 711 002a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 712 002c 9963     		str	r1, [r3, #56]
 462:main.c        **** 
 463:main.c        ****     //get CRC related data
 464:main.c        ****     CRCused = SERIAL_RX_BUFFER[5];
 713              		.loc 1 464 0
 714 002e 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 715 0030 83F83C10 		strb	r1, [r3, #60]
 465:main.c        **** 
 466:main.c        ****     HeaderCRC = SERIAL_RX_BUFFER[6];
 716              		.loc 1 466 0
 717 0034 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 718 0036 83F83D20 		strb	r2, [r3, #61]
 719 003a 7047     		bx	lr
 720              	.L58:
 721              		.align	2
 722              	.L57:
 723 003c 00000000 		.word	SERIAL_RX_BUFFER
 724 0040 00000000 		.word	.LANCHOR0
 725              		.cfi_endproc
 726              	.LFE72:
 727              		.size	getHeader, .-getHeader
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 22


 728              		.section	.text.checkNewBytes,"ax",%progbits
 729              		.align	2
 730              		.global	checkNewBytes
 731              		.thumb
 732              		.thumb_func
 733              		.type	checkNewBytes, %function
 734              	checkNewBytes:
 735              	.LFB71:
 365:main.c        ****  if(USBUART_CDCIsReady() != 0){
 736              		.loc 1 365 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 08B5     		push	{r3, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 3, -8
 743              		.cfi_offset 14, -4
 366:main.c        ****     while(USBUART_RX_DATA_READ_OUT != SERIAL_RX_POS){
 744              		.loc 1 366 0
 745 0002 FFF7FEFF 		bl	USBUART_CDCIsReady
 746              	.LVL57:
 747 0006 0028     		cmp	r0, #0
 748 0008 40F04781 		bne	.L60
 749 000c 08BD     		pop	{r3, pc}
 750              	.L89:
 368:main.c        ****             getHeader();
 751              		.loc 1 368 0
 752 000e 0AB9     		cbnz	r2, .L62
 369:main.c        ****         }
 753              		.loc 1 369 0
 754 0010 FFF7FEFF 		bl	getHeader
 755              	.LVL58:
 756              	.L62:
 371:main.c        ****         ((destAddr >= ADDR1_Start) && (destAddr <= ADDR1_Start+ADDR_length)) ||
 757              		.loc 1 371 0
 758 0014 A44B     		ldr	r3, .L91
 759 0016 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 760 001a 73B1     		cbz	r3, .L63
 372:main.c        ****         ((destAddr >= ADDR2_Start) && (destAddr <= ADDR2_Start+ADDR_length)) ||
 761              		.loc 1 372 0 discriminator 1
 762 001c A3F11002 		sub	r2, r3, #16
 763 0020 D2B2     		uxtb	r2, r2
 371:main.c        ****         ((destAddr >= ADDR1_Start) && (destAddr <= ADDR1_Start+ADDR_length)) ||
 764              		.loc 1 371 0 discriminator 1
 765 0022 022A     		cmp	r2, #2
 766 0024 09D9     		bls	.L63
 373:main.c        ****         ((destAddr >= ADDR3_Start) && (destAddr <= ADDR3_Start+ADDR_length))){
 767              		.loc 1 373 0
 768 0026 A3F11902 		sub	r2, r3, #25
 769 002a D2B2     		uxtb	r2, r2
 372:main.c        ****         ((destAddr >= ADDR2_Start) && (destAddr <= ADDR2_Start+ADDR_length)) ||
 770              		.loc 1 372 0
 771 002c 022A     		cmp	r2, #2
 772 002e 04D9     		bls	.L63
 374:main.c        ****             if(addrDataPrinted == 0){
 773              		.loc 1 374 0
 774 0030 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 23


 775 0032 DBB2     		uxtb	r3, r3
 373:main.c        ****         ((destAddr >= ADDR3_Start) && (destAddr <= ADDR3_Start+ADDR_length))){
 776              		.loc 1 373 0
 777 0034 022B     		cmp	r3, #2
 778 0036 00F22C81 		bhi	.L64
 779              	.L63:
 375:main.c        ****             while(!USBUART_CDCIsReady());
 780              		.loc 1 375 0
 781 003a 9B4B     		ldr	r3, .L91
 782 003c 9B6A     		ldr	r3, [r3, #40]
 783 003e 002B     		cmp	r3, #0
 784 0040 40F01F81 		bne	.L65
 785              	.L66:
 376:main.c        ****             USBUART_PutCRLF();
 786              		.loc 1 376 0 discriminator 1
 787 0044 FFF7FEFF 		bl	USBUART_CDCIsReady
 788              	.LVL59:
 789 0048 0028     		cmp	r0, #0
 790 004a FBD0     		beq	.L66
 377:main.c        ****             while(!USBUART_CDCIsReady());
 791              		.loc 1 377 0
 792 004c FFF7FEFF 		bl	USBUART_PutCRLF
 793              	.LVL60:
 794              	.L67:
 378:main.c        ****             USBUART_PutCRLF();
 795              		.loc 1 378 0 discriminator 1
 796 0050 FFF7FEFF 		bl	USBUART_CDCIsReady
 797              	.LVL61:
 798 0054 0028     		cmp	r0, #0
 799 0056 FBD0     		beq	.L67
 379:main.c        ****             while(!USBUART_CDCIsReady());
 800              		.loc 1 379 0
 801 0058 FFF7FEFF 		bl	USBUART_PutCRLF
 802              	.LVL62:
 803              	.L68:
 380:main.c        ****             USBUART_PutCRLF(); 
 804              		.loc 1 380 0 discriminator 1
 805 005c FFF7FEFF 		bl	USBUART_CDCIsReady
 806              	.LVL63:
 807 0060 0028     		cmp	r0, #0
 808 0062 FBD0     		beq	.L68
 381:main.c        ****             while(!USBUART_CDCIsReady());
 809              		.loc 1 381 0
 810 0064 FFF7FEFF 		bl	USBUART_PutCRLF
 811              	.LVL64:
 812              	.L69:
 382:main.c        ****             USBUART_PutString("Message From: ");
 813              		.loc 1 382 0 discriminator 1
 814 0068 FFF7FEFF 		bl	USBUART_CDCIsReady
 815              	.LVL65:
 816 006c 0028     		cmp	r0, #0
 817 006e FBD0     		beq	.L69
 383:main.c        ****             while(!USBUART_CDCIsReady());
 818              		.loc 1 383 0
 819 0070 8E48     		ldr	r0, .L91+4
 820 0072 FFF7FEFF 		bl	USBUART_PutString
 821              	.LVL66:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 24


 822              	.L70:
 384:main.c        ****             //convert numbers to ascii
 823              		.loc 1 384 0 discriminator 1
 824 0076 FFF7FEFF 		bl	USBUART_CDCIsReady
 825              	.LVL67:
 826 007a 0028     		cmp	r0, #0
 827 007c FBD0     		beq	.L70
 387:main.c        ****             //tens
 828              		.loc 1 387 0
 829 007e 8A4B     		ldr	r3, .L91
 830 0080 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 831 0084 8A48     		ldr	r0, .L91+8
 832 0086 A0FB0330 		umull	r3, r0, r0, r3
 833 008a 4009     		lsrs	r0, r0, #5
 834 008c 3030     		adds	r0, r0, #48
 835 008e FFF7FEFF 		bl	USBUART_PutChar
 836              	.LVL68:
 837              	.L71:
 389:main.c        ****             USBUART_PutChar(((sourceAddr/10)%10)+0x30);
 838              		.loc 1 389 0 discriminator 1
 839 0092 FFF7FEFF 		bl	USBUART_CDCIsReady
 840              	.LVL69:
 841 0096 0028     		cmp	r0, #0
 842 0098 FBD0     		beq	.L71
 390:main.c        ****             while(!USBUART_CDCIsReady());
 843              		.loc 1 390 0
 844 009a 834B     		ldr	r3, .L91
 845 009c 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 846 00a0 844A     		ldr	r2, .L91+12
 847 00a2 A2FB0313 		umull	r1, r3, r2, r3
 848 00a6 DB08     		lsrs	r3, r3, #3
 849 00a8 A2FB0312 		umull	r1, r2, r2, r3
 850 00ac D208     		lsrs	r2, r2, #3
 851 00ae 02EB8202 		add	r2, r2, r2, lsl #2
 852 00b2 5000     		lsls	r0, r2, #1
 853 00b4 181A     		subs	r0, r3, r0
 854 00b6 3030     		adds	r0, r0, #48
 855 00b8 C0B2     		uxtb	r0, r0
 856 00ba FFF7FEFF 		bl	USBUART_PutChar
 857              	.LVL70:
 858              	.L72:
 391:main.c        ****             //ones
 859              		.loc 1 391 0 discriminator 1
 860 00be FFF7FEFF 		bl	USBUART_CDCIsReady
 861              	.LVL71:
 862 00c2 0028     		cmp	r0, #0
 863 00c4 FBD0     		beq	.L72
 393:main.c        ****             while(!USBUART_CDCIsReady());
 864              		.loc 1 393 0
 865 00c6 784B     		ldr	r3, .L91
 866 00c8 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 867 00cc 794A     		ldr	r2, .L91+12
 868 00ce A2FB0301 		umull	r0, r1, r2, r3
 869 00d2 C908     		lsrs	r1, r1, #3
 870 00d4 01EB8101 		add	r1, r1, r1, lsl #2
 871 00d8 4800     		lsls	r0, r1, #1
 872 00da 1B1A     		subs	r3, r3, r0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 25


 873 00dc DBB2     		uxtb	r3, r3
 874 00de A2FB0312 		umull	r1, r2, r2, r3
 875 00e2 D208     		lsrs	r2, r2, #3
 876 00e4 02EB8202 		add	r2, r2, r2, lsl #2
 877 00e8 5000     		lsls	r0, r2, #1
 878 00ea 181A     		subs	r0, r3, r0
 879 00ec 3030     		adds	r0, r0, #48
 880 00ee C0B2     		uxtb	r0, r0
 881 00f0 FFF7FEFF 		bl	USBUART_PutChar
 882              	.LVL72:
 883              	.L73:
 394:main.c        ****             USBUART_PutCRLF();
 884              		.loc 1 394 0 discriminator 1
 885 00f4 FFF7FEFF 		bl	USBUART_CDCIsReady
 886              	.LVL73:
 887 00f8 0028     		cmp	r0, #0
 888 00fa FBD0     		beq	.L73
 395:main.c        ****             while(!USBUART_CDCIsReady());
 889              		.loc 1 395 0
 890 00fc FFF7FEFF 		bl	USBUART_PutCRLF
 891              	.LVL74:
 892              	.L74:
 396:main.c        ****             USBUART_PutString("Sent To: ");
 893              		.loc 1 396 0 discriminator 1
 894 0100 FFF7FEFF 		bl	USBUART_CDCIsReady
 895              	.LVL75:
 896 0104 0028     		cmp	r0, #0
 897 0106 FBD0     		beq	.L74
 397:main.c        ****             if(destAddr == BROADCAST){
 898              		.loc 1 397 0
 899 0108 6B48     		ldr	r0, .L91+16
 900 010a FFF7FEFF 		bl	USBUART_PutString
 901              	.LVL76:
 398:main.c        ****                 while(!USBUART_CDCIsReady());
 902              		.loc 1 398 0
 903 010e 664B     		ldr	r3, .L91
 904 0110 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 905 0114 6BB9     		cbnz	r3, .L75
 906              	.L76:
 399:main.c        ****                 USBUART_PutString("BCST ");
 907              		.loc 1 399 0 discriminator 1
 908 0116 FFF7FEFF 		bl	USBUART_CDCIsReady
 909              	.LVL77:
 910 011a 0028     		cmp	r0, #0
 911 011c FBD0     		beq	.L76
 400:main.c        ****                 while(!USBUART_CDCIsReady());
 912              		.loc 1 400 0
 913 011e 6748     		ldr	r0, .L91+20
 914 0120 FFF7FEFF 		bl	USBUART_PutString
 915              	.LVL78:
 916              	.L77:
 401:main.c        ****                 USBUART_PutCRLF();
 917              		.loc 1 401 0 discriminator 1
 918 0124 FFF7FEFF 		bl	USBUART_CDCIsReady
 919              	.LVL79:
 920 0128 0028     		cmp	r0, #0
 921 012a FBD0     		beq	.L77
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 26


 402:main.c        ****             }else{
 922              		.loc 1 402 0
 923 012c FFF7FEFF 		bl	USBUART_PutCRLF
 924              	.LVL80:
 925 0130 46E0     		b	.L82
 926              	.L75:
 404:main.c        ****                 //hundreds
 927              		.loc 1 404 0 discriminator 1
 928 0132 FFF7FEFF 		bl	USBUART_CDCIsReady
 929              	.LVL81:
 930 0136 0028     		cmp	r0, #0
 931 0138 FBD0     		beq	.L75
 406:main.c        ****                 //tens
 932              		.loc 1 406 0
 933 013a 5B4B     		ldr	r3, .L91
 934 013c 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 935 0140 5B48     		ldr	r0, .L91+8
 936 0142 A0FB0330 		umull	r3, r0, r0, r3
 937 0146 4009     		lsrs	r0, r0, #5
 938 0148 3030     		adds	r0, r0, #48
 939 014a FFF7FEFF 		bl	USBUART_PutChar
 940              	.LVL82:
 941              	.L79:
 408:main.c        ****                 USBUART_PutChar(((destAddr/10)%10)+0x30);
 942              		.loc 1 408 0 discriminator 1
 943 014e FFF7FEFF 		bl	USBUART_CDCIsReady
 944              	.LVL83:
 945 0152 0028     		cmp	r0, #0
 946 0154 FBD0     		beq	.L79
 409:main.c        ****                 while(!USBUART_CDCIsReady());
 947              		.loc 1 409 0
 948 0156 544B     		ldr	r3, .L91
 949 0158 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 950 015c 554A     		ldr	r2, .L91+12
 951 015e A2FB0313 		umull	r1, r3, r2, r3
 952 0162 DB08     		lsrs	r3, r3, #3
 953 0164 A2FB0312 		umull	r1, r2, r2, r3
 954 0168 D208     		lsrs	r2, r2, #3
 955 016a 02EB8202 		add	r2, r2, r2, lsl #2
 956 016e 5000     		lsls	r0, r2, #1
 957 0170 1B1A     		subs	r3, r3, r0
 958 0172 03F13000 		add	r0, r3, #48
 959 0176 C0B2     		uxtb	r0, r0
 960 0178 FFF7FEFF 		bl	USBUART_PutChar
 961              	.LVL84:
 962              	.L80:
 410:main.c        ****                 //ones
 963              		.loc 1 410 0 discriminator 1
 964 017c FFF7FEFF 		bl	USBUART_CDCIsReady
 965              	.LVL85:
 966 0180 0028     		cmp	r0, #0
 967 0182 FBD0     		beq	.L80
 412:main.c        ****                 USBUART_PutCRLF();
 968              		.loc 1 412 0
 969 0184 484B     		ldr	r3, .L91
 970 0186 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 971 018a 4A4A     		ldr	r2, .L91+12
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 27


 972 018c A2FB0301 		umull	r0, r1, r2, r3
 973 0190 C908     		lsrs	r1, r1, #3
 974 0192 01EB8101 		add	r1, r1, r1, lsl #2
 975 0196 4800     		lsls	r0, r1, #1
 976 0198 1B1A     		subs	r3, r3, r0
 977 019a DBB2     		uxtb	r3, r3
 978 019c A2FB0312 		umull	r1, r2, r2, r3
 979 01a0 D208     		lsrs	r2, r2, #3
 980 01a2 02EB8202 		add	r2, r2, r2, lsl #2
 981 01a6 5000     		lsls	r0, r2, #1
 982 01a8 1B1A     		subs	r3, r3, r0
 983 01aa 03F13000 		add	r0, r3, #48
 984 01ae C0B2     		uxtb	r0, r0
 985 01b0 FFF7FEFF 		bl	USBUART_PutChar
 986              	.LVL86:
 413:main.c        ****                 while(!USBUART_CDCIsReady());
 987              		.loc 1 413 0
 988 01b4 FFF7FEFF 		bl	USBUART_PutCRLF
 989              	.LVL87:
 990              	.L81:
 414:main.c        ****             }
 991              		.loc 1 414 0 discriminator 1
 992 01b8 FFF7FEFF 		bl	USBUART_CDCIsReady
 993              	.LVL88:
 994 01bc 0028     		cmp	r0, #0
 995 01be FBD0     		beq	.L81
 996              	.L82:
 416:main.c        ****             USBUART_PutString("Size: ");
 997              		.loc 1 416 0 discriminator 1
 998 01c0 FFF7FEFF 		bl	USBUART_CDCIsReady
 999              	.LVL89:
 1000 01c4 0028     		cmp	r0, #0
 1001 01c6 FBD0     		beq	.L82
 417:main.c        ****             while(!USBUART_CDCIsReady());
 1002              		.loc 1 417 0
 1003 01c8 3D48     		ldr	r0, .L91+24
 1004 01ca FFF7FEFF 		bl	USBUART_PutString
 1005              	.LVL90:
 1006              	.L83:
 418:main.c        ****             //hundreds
 1007              		.loc 1 418 0 discriminator 1
 1008 01ce FFF7FEFF 		bl	USBUART_CDCIsReady
 1009              	.LVL91:
 1010 01d2 0028     		cmp	r0, #0
 1011 01d4 FBD0     		beq	.L83
 420:main.c        ****             //tens
 1012              		.loc 1 420 0
 1013 01d6 344B     		ldr	r3, .L91
 1014 01d8 9B6B     		ldr	r3, [r3, #56]
 1015 01da 3548     		ldr	r0, .L91+8
 1016 01dc 80FB0320 		smull	r2, r0, r0, r3
 1017 01e0 DB17     		asrs	r3, r3, #31
 1018 01e2 C3EB6010 		rsb	r0, r3, r0, asr #5
 1019 01e6 3030     		adds	r0, r0, #48
 1020 01e8 C0B2     		uxtb	r0, r0
 1021 01ea FFF7FEFF 		bl	USBUART_PutChar
 1022              	.LVL92:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 28


 1023              	.L84:
 422:main.c        ****             USBUART_PutChar(((dataLength/10)%10)+0x30);
 1024              		.loc 1 422 0 discriminator 1
 1025 01ee FFF7FEFF 		bl	USBUART_CDCIsReady
 1026              	.LVL93:
 1027 01f2 0028     		cmp	r0, #0
 1028 01f4 FBD0     		beq	.L84
 423:main.c        ****             while(!USBUART_CDCIsReady());
 1029              		.loc 1 423 0
 1030 01f6 2C4B     		ldr	r3, .L91
 1031 01f8 9B6B     		ldr	r3, [r3, #56]
 1032 01fa 3248     		ldr	r0, .L91+28
 1033 01fc 80FB0312 		smull	r1, r2, r0, r3
 1034 0200 DB17     		asrs	r3, r3, #31
 1035 0202 C3EBA202 		rsb	r2, r3, r2, asr #2
 1036 0206 80FB0230 		smull	r3, r0, r0, r2
 1037 020a D317     		asrs	r3, r2, #31
 1038 020c C3EBA000 		rsb	r0, r3, r0, asr #2
 1039 0210 00EB8000 		add	r0, r0, r0, lsl #2
 1040 0214 4300     		lsls	r3, r0, #1
 1041 0216 D01A     		subs	r0, r2, r3
 1042 0218 3030     		adds	r0, r0, #48
 1043 021a C0B2     		uxtb	r0, r0
 1044 021c FFF7FEFF 		bl	USBUART_PutChar
 1045              	.LVL94:
 1046              	.L85:
 424:main.c        ****             //ones
 1047              		.loc 1 424 0 discriminator 1
 1048 0220 FFF7FEFF 		bl	USBUART_CDCIsReady
 1049              	.LVL95:
 1050 0224 0028     		cmp	r0, #0
 1051 0226 FBD0     		beq	.L85
 426:main.c        ****             while(!USBUART_CDCIsReady());
 1052              		.loc 1 426 0
 1053 0228 1F4B     		ldr	r3, .L91
 1054 022a 996B     		ldr	r1, [r3, #56]
 1055 022c 2548     		ldr	r0, .L91+28
 1056 022e 80FB0132 		smull	r3, r2, r0, r1
 1057 0232 CB17     		asrs	r3, r1, #31
 1058 0234 C3EBA202 		rsb	r2, r3, r2, asr #2
 1059 0238 02EB8202 		add	r2, r2, r2, lsl #2
 1060 023c 5300     		lsls	r3, r2, #1
 1061 023e CA1A     		subs	r2, r1, r3
 1062 0240 80FB0230 		smull	r3, r0, r0, r2
 1063 0244 D317     		asrs	r3, r2, #31
 1064 0246 C3EBA000 		rsb	r0, r3, r0, asr #2
 1065 024a 00EB8000 		add	r0, r0, r0, lsl #2
 1066 024e 4300     		lsls	r3, r0, #1
 1067 0250 D01A     		subs	r0, r2, r3
 1068 0252 3030     		adds	r0, r0, #48
 1069 0254 C0B2     		uxtb	r0, r0
 1070 0256 FFF7FEFF 		bl	USBUART_PutChar
 1071              	.LVL96:
 1072              	.L86:
 427:main.c        ****             USBUART_PutCRLF();
 1073              		.loc 1 427 0 discriminator 1
 1074 025a FFF7FEFF 		bl	USBUART_CDCIsReady
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 29


 1075              	.LVL97:
 1076 025e 0028     		cmp	r0, #0
 1077 0260 FBD0     		beq	.L86
 428:main.c        ****             while(!USBUART_CDCIsReady());
 1078              		.loc 1 428 0
 1079 0262 FFF7FEFF 		bl	USBUART_PutCRLF
 1080              	.LVL98:
 1081              	.L87:
 429:main.c        ****             USBUART_PutString("Message: ");
 1082              		.loc 1 429 0 discriminator 1
 1083 0266 FFF7FEFF 		bl	USBUART_CDCIsReady
 1084              	.LVL99:
 1085 026a 0028     		cmp	r0, #0
 1086 026c FBD0     		beq	.L87
 430:main.c        ****             while(!USBUART_CDCIsReady());
 1087              		.loc 1 430 0
 1088 026e 1648     		ldr	r0, .L91+32
 1089 0270 FFF7FEFF 		bl	USBUART_PutString
 1090              	.LVL100:
 1091              	.L88:
 431:main.c        ****             addrDataPrinted = 1;
 1092              		.loc 1 431 0 discriminator 1
 1093 0274 FFF7FEFF 		bl	USBUART_CDCIsReady
 1094              	.LVL101:
 1095 0278 0028     		cmp	r0, #0
 1096 027a FBD0     		beq	.L88
 432:main.c        ****             }
 1097              		.loc 1 432 0
 1098 027c 0122     		movs	r2, #1
 1099 027e 0A4B     		ldr	r3, .L91
 1100 0280 9A62     		str	r2, [r3, #40]
 1101              	.L65:
 434:main.c        ****             USBUART_PutChar(SERIAL_RX_BUFFER[USBUART_RX_DATA_READ_OUT]);
 1102              		.loc 1 434 0
 1103 0282 094B     		ldr	r3, .L91
 1104 0284 DB68     		ldr	r3, [r3, #12]
 1105 0286 062B     		cmp	r3, #6
 1106 0288 03DD     		ble	.L64
 435:main.c        ****             }
 1107              		.loc 1 435 0
 1108 028a 104A     		ldr	r2, .L91+36
 1109 028c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1110 028e FFF7FEFF 		bl	USBUART_PutChar
 1111              	.LVL102:
 1112              	.L64:
 439:main.c        ****     }
 1113              		.loc 1 439 0
 1114 0292 054A     		ldr	r2, .L91
 1115 0294 D368     		ldr	r3, [r2, #12]
 1116 0296 0133     		adds	r3, r3, #1
 1117 0298 D360     		str	r3, [r2, #12]
 1118              	.L60:
 367:main.c        ****         if(USBUART_RX_DATA_READ_OUT == 0){
 1119              		.loc 1 367 0
 1120 029a 034B     		ldr	r3, .L91
 1121 029c DA68     		ldr	r2, [r3, #12]
 1122 029e 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 30


 1123 02a0 9A42     		cmp	r2, r3
 1124 02a2 7FF4B4AE 		bne	.L89
 1125 02a6 08BD     		pop	{r3, pc}
 1126              	.L92:
 1127              		.align	2
 1128              	.L91:
 1129 02a8 00000000 		.word	.LANCHOR0
 1130 02ac 00000000 		.word	.LC0
 1131 02b0 1F85EB51 		.word	1374389535
 1132 02b4 CDCCCCCC 		.word	-858993459
 1133 02b8 10000000 		.word	.LC1
 1134 02bc 1C000000 		.word	.LC2
 1135 02c0 24000000 		.word	.LC3
 1136 02c4 67666666 		.word	1717986919
 1137 02c8 2C000000 		.word	.LC4
 1138 02cc 00000000 		.word	SERIAL_RX_BUFFER
 1139              		.cfi_endproc
 1140              	.LFE71:
 1141              		.size	checkNewBytes, .-checkNewBytes
 1142              		.section	.text.main,"ax",%progbits
 1143              		.align	2
 1144              		.global	main
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	main, %function
 1148              	main:
 1149              	.LFB69:
 229:main.c        **** 
 1150              		.loc 1 229 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154 0000 38B5     		push	{r3, r4, r5, lr}
 1155              		.cfi_def_cfa_offset 16
 1156              		.cfi_offset 3, -16
 1157              		.cfi_offset 4, -12
 1158              		.cfi_offset 5, -8
 1159              		.cfi_offset 14, -4
 231:main.c        ****     //starting the interrupt handlers
 1160              		.loc 1 231 0
 1161              		.syntax unified
 1162              	@ 231 "main.c" 1
 1163 0002 62B6     		CPSIE   i
 1164              	@ 0 "" 2
 233:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 1165              		.loc 1 233 0
 1166              		.thumb
 1167              		.syntax unified
 1168 0004 6448     		ldr	r0, .L113
 1169 0006 FFF7FEFF 		bl	TimerISR_StartEx
 1170              	.LVL103:
 234:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 1171              		.loc 1 234 0
 1172 000a 6448     		ldr	r0, .L113+4
 1173 000c FFF7FEFF 		bl	RisingEdgeISR_StartEx
 1174              	.LVL104:
 235:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 31


 1175              		.loc 1 235 0
 1176 0010 6348     		ldr	r0, .L113+8
 1177 0012 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 1178              	.LVL105:
 236:main.c        **** 
 1179              		.loc 1 236 0
 1180 0016 634C     		ldr	r4, .L113+12
 1181 0018 2046     		mov	r0, r4
 1182 001a FFF7FEFF 		bl	ReceiveISR_StartEx
 1183              	.LVL106:
 238:main.c        ****     TimerTX_WritePeriod(TX_PERIOD);
 1184              		.loc 1 238 0
 1185 001e FFF7FEFF 		bl	TimerTX_Start
 1186              	.LVL107:
 239:main.c        ****     TimerTX_WriteCounter(TX_COUNTER);
 1187              		.loc 1 239 0
 1188 0022 2F20     		movs	r0, #47
 1189 0024 FFF7FEFF 		bl	TimerTX_WritePeriod
 1190              	.LVL108:
 240:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 1191              		.loc 1 240 0
 1192 0028 2E20     		movs	r0, #46
 1193 002a FFF7FEFF 		bl	TimerTX_WriteCounter
 1194              	.LVL109:
 241:main.c        ****     
 1195              		.loc 1 241 0
 1196 002e 5E48     		ldr	r0, .L113+16
 1197 0030 FFF7FEFF 		bl	TransmitISR_StartEx
 1198              	.LVL110:
 243:main.c        ****     TimerRX_WritePeriod(RX_PERIOD);
 1199              		.loc 1 243 0
 1200 0034 3320     		movs	r0, #51
 1201 0036 FFF7FEFF 		bl	TimerRX_WriteCounter
 1202              	.LVL111:
 244:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 1203              		.loc 1 244 0
 1204 003a 3420     		movs	r0, #52
 1205 003c FFF7FEFF 		bl	TimerRX_WritePeriod
 1206              	.LVL112:
 245:main.c        ****     
 1207              		.loc 1 245 0
 1208 0040 2046     		mov	r0, r4
 1209 0042 FFF7FEFF 		bl	ReceiveISR_StartEx
 1210              	.LVL113:
 247:main.c        ****     PRS_Start();
 1211              		.loc 1 247 0
 1212 0046 5948     		ldr	r0, .L113+20
 1213 0048 FFF7FEFF 		bl	BackoffISR_StartEx
 1214              	.LVL114:
 248:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 1215              		.loc 1 248 0
 1216 004c FFF7FEFF 		bl	PRS_Start
 1217              	.LVL115:
 249:main.c        **** 
 1218              		.loc 1 249 0
 1219 0050 574B     		ldr	r3, .L113+24
 1220 0052 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 32


 1221 0054 0121     		movs	r1, #1
 1222 0056 FFF7FEFF 		bl	USBUART_Start
 1223              	.LVL116:
 1224              	.L96:
 1225              	.LBB5:
 255:main.c        **** 			uartConnected = 1;
 1226              		.loc 1 255 0
 1227 005a FFF7FEFF 		bl	USBUART_GetDTERate
 1228              	.LVL117:
 1229 005e B0F5614F 		cmp	r0, #57600
 1230 0062 02D1     		bne	.L94
 256:main.c        **** 		}
 1231              		.loc 1 256 0
 1232 0064 0122     		movs	r2, #1
 1233 0066 534B     		ldr	r3, .L113+28
 1234 0068 1A64     		str	r2, [r3, #64]
 1235              	.L94:
 260:main.c        **** 		{
 1236              		.loc 1 260 0
 1237 006a FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 1238              	.LVL118:
 1239 006e 20B1     		cbz	r0, .L95
 263:main.c        **** 			{
 1240              		.loc 1 263 0
 1241 0070 FFF7FEFF 		bl	USBUART_GetConfiguration
 1242              	.LVL119:
 1243 0074 08B1     		cbz	r0, .L95
 266:main.c        **** 			}
 1244              		.loc 1 266 0
 1245 0076 FFF7FEFF 		bl	USBUART_CDC_Init
 1246              	.LVL120:
 1247              	.L95:
 271:main.c        ****             int inCount = 0;
 1248              		.loc 1 271 0
 1249 007a 4E4B     		ldr	r3, .L113+28
 1250 007c 1B6C     		ldr	r3, [r3, #64]
 1251 007e 002B     		cmp	r3, #0
 1252 0080 EBD0     		beq	.L96
 1253              	.LVL121:
 1254              	.LBB6:
 273:main.c        ****             char input = 0;
 1255              		.loc 1 273 0
 1256 0082 0022     		movs	r2, #0
 1257 0084 4B4B     		ldr	r3, .L113+28
 1258 0086 83F84420 		strb	r2, [r3, #68]
 1259              	.LVL122:
 1260              	.L97:
 275:main.c        ****             USBUART_PutString("Enter Address (3 digits): ");
 1261              		.loc 1 275 0 discriminator 1
 1262 008a FFF7FEFF 		bl	USBUART_CDCIsReady
 1263              	.LVL123:
 1264 008e 0028     		cmp	r0, #0
 1265 0090 FBD0     		beq	.L97
 276:main.c        ****             while(inCount < 3){
 1266              		.loc 1 276 0
 1267 0092 4948     		ldr	r0, .L113+32
 1268 0094 FFF7FEFF 		bl	USBUART_PutString
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 33


 1269              	.LVL124:
 272:main.c        ****             TX_Addr = 0;
 1270              		.loc 1 272 0
 1271 0098 0024     		movs	r4, #0
 277:main.c        ****                 while(USBUART_DataIsReady() == 0){ //wait for digits, perform other tasks here
 1272              		.loc 1 277 0
 1273 009a 36E0     		b	.L98
 1274              	.LVL125:
 1275              	.L99:
 279:main.c        ****                     checkState();
 1276              		.loc 1 279 0
 1277 009c FFF7FEFF 		bl	checkNewBytes
 1278              	.LVL126:
 280:main.c        ****                 }
 1279              		.loc 1 280 0
 1280 00a0 FFF7FEFF 		bl	checkState
 1281              	.LVL127:
 1282              	.L103:
 278:main.c        ****                     checkNewBytes();
 1283              		.loc 1 278 0
 1284 00a4 FFF7FEFF 		bl	USBUART_DataIsReady
 1285              	.LVL128:
 1286 00a8 0028     		cmp	r0, #0
 1287 00aa F7D0     		beq	.L99
 283:main.c        ****                 if(inCount == 0){
 1288              		.loc 1 283 0
 1289 00ac FFF7FEFF 		bl	USBUART_GetChar
 1290              	.LVL129:
 284:main.c        ****                     TX_Addr  += 100*(input - (0x30));
 1291              		.loc 1 284 0
 1292 00b0 7CB9     		cbnz	r4, .L100
 285:main.c        ****                     USBUART_PutChar(input);
 1293              		.loc 1 285 0
 1294 00b2 A0F13003 		sub	r3, r0, #48
 1295 00b6 3F4A     		ldr	r2, .L113+28
 1296 00b8 03EB8303 		add	r3, r3, r3, lsl #2
 1297 00bc 03EB8303 		add	r3, r3, r3, lsl #2
 1298 00c0 9900     		lsls	r1, r3, #2
 1299 00c2 92F84430 		ldrb	r3, [r2, #68]	@ zero_extendqisi2
 1300 00c6 0B44     		add	r3, r3, r1
 1301 00c8 82F84430 		strb	r3, [r2, #68]
 286:main.c        ****                 }else if(inCount == 1){
 1302              		.loc 1 286 0
 1303 00cc FFF7FEFF 		bl	USBUART_PutChar
 1304              	.LVL130:
 1305 00d0 1AE0     		b	.L101
 1306              	.LVL131:
 1307              	.L100:
 287:main.c        ****                     TX_Addr  += 10*(input - (0x30));
 1308              		.loc 1 287 0
 1309 00d2 012C     		cmp	r4, #1
 1310 00d4 0DD1     		bne	.L102
 288:main.c        ****                     USBUART_PutChar(input);
 1311              		.loc 1 288 0
 1312 00d6 A0F13003 		sub	r3, r0, #48
 1313 00da 364A     		ldr	r2, .L113+28
 1314 00dc 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 34


 1315 00e0 5900     		lsls	r1, r3, #1
 1316 00e2 92F84430 		ldrb	r3, [r2, #68]	@ zero_extendqisi2
 1317 00e6 0B44     		add	r3, r3, r1
 1318 00e8 82F84430 		strb	r3, [r2, #68]
 289:main.c        ****                 }else if (inCount == 2){
 1319              		.loc 1 289 0
 1320 00ec FFF7FEFF 		bl	USBUART_PutChar
 1321              	.LVL132:
 1322 00f0 0AE0     		b	.L101
 1323              	.LVL133:
 1324              	.L102:
 290:main.c        ****                     TX_Addr  += input - (0x30);   
 1325              		.loc 1 290 0
 1326 00f2 022C     		cmp	r4, #2
 1327 00f4 08D1     		bne	.L101
 291:main.c        ****                     USBUART_PutChar(input);
 1328              		.loc 1 291 0
 1329 00f6 2F4A     		ldr	r2, .L113+28
 1330 00f8 92F84430 		ldrb	r3, [r2, #68]	@ zero_extendqisi2
 1331 00fc 0344     		add	r3, r3, r0
 1332 00fe 303B     		subs	r3, r3, #48
 1333 0100 82F84430 		strb	r3, [r2, #68]
 292:main.c        ****                 }
 1334              		.loc 1 292 0
 1335 0104 FFF7FEFF 		bl	USBUART_PutChar
 1336              	.LVL134:
 1337              	.L101:
 294:main.c        ****             } 
 1338              		.loc 1 294 0
 1339 0108 0134     		adds	r4, r4, #1
 1340              	.LVL135:
 1341              	.L98:
 277:main.c        ****                 while(USBUART_DataIsReady() == 0){ //wait for digits, perform other tasks here
 1342              		.loc 1 277 0
 1343 010a 022C     		cmp	r4, #2
 1344 010c CADD     		ble	.L103
 1345              	.L104:
 297:main.c        ****             USBUART_PutCRLF();
 1346              		.loc 1 297 0 discriminator 1
 1347 010e FFF7FEFF 		bl	USBUART_CDCIsReady
 1348              	.LVL136:
 1349 0112 0028     		cmp	r0, #0
 1350 0114 FBD0     		beq	.L104
 298:main.c        ****             while(!USBUART_CDCIsReady());
 1351              		.loc 1 298 0
 1352 0116 FFF7FEFF 		bl	USBUART_PutCRLF
 1353              	.LVL137:
 1354              	.L105:
 299:main.c        ****             USBUART_PutString("Enter message: ");
 1355              		.loc 1 299 0 discriminator 1
 1356 011a FFF7FEFF 		bl	USBUART_CDCIsReady
 1357              	.LVL138:
 1358 011e 0028     		cmp	r0, #0
 1359 0120 FBD0     		beq	.L105
 300:main.c        ****             inCount = 6; //reset counter, accounting for header
 1360              		.loc 1 300 0
 1361 0122 2648     		ldr	r0, .L113+36
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 35


 1362 0124 FFF7FEFF 		bl	USBUART_PutString
 1363              	.LVL139:
 305:main.c        ****             SERIAL_BUFFER[1] = PROTOCOL_VERSION;
 1364              		.loc 1 305 0
 1365 0128 254B     		ldr	r3, .L113+40
 1366 012a 0024     		movs	r4, #0
 1367 012c 1C70     		strb	r4, [r3]
 306:main.c        ****             SERIAL_BUFFER[2] = ADDR1_Start;
 1368              		.loc 1 306 0
 1369 012e 0122     		movs	r2, #1
 1370 0130 5A70     		strb	r2, [r3, #1]
 307:main.c        ****             SERIAL_BUFFER[3] = TX_Addr;
 1371              		.loc 1 307 0
 1372 0132 1022     		movs	r2, #16
 1373 0134 9A70     		strb	r2, [r3, #2]
 308:main.c        ****             SERIAL_BUFFER[4] = 0x00; //padding for now, will be replaced with actual length after u
 1374              		.loc 1 308 0
 1375 0136 1F4A     		ldr	r2, .L113+28
 1376 0138 92F84420 		ldrb	r2, [r2, #68]	@ zero_extendqisi2
 1377 013c DA70     		strb	r2, [r3, #3]
 309:main.c        ****             SERIAL_BUFFER[5] = CRC_USE;
 1378              		.loc 1 309 0
 1379 013e 1C71     		strb	r4, [r3, #4]
 310:main.c        ****             SERIAL_BUFFER[6] = HEADER_CRC;
 1380              		.loc 1 310 0
 1381 0140 8022     		movs	r2, #128
 1382 0142 5A71     		strb	r2, [r3, #5]
 311:main.c        ****             
 1383              		.loc 1 311 0
 1384 0144 7722     		movs	r2, #119
 1385 0146 9A71     		strb	r2, [r3, #6]
 301:main.c        ****             input = 0; //reset input
 1386              		.loc 1 301 0
 1387 0148 0625     		movs	r5, #6
 314:main.c        ****                 while(USBUART_DataIsReady() == 0); //wait for message data
 1388              		.loc 1 314 0
 1389 014a 13E0     		b	.L106
 1390              	.LVL140:
 1391              	.L107:
 315:main.c        ****                 input = USBUART_GetChar();
 1392              		.loc 1 315 0 discriminator 1
 1393 014c FFF7FEFF 		bl	USBUART_DataIsReady
 1394              	.LVL141:
 1395 0150 0028     		cmp	r0, #0
 1396 0152 FBD0     		beq	.L107
 316:main.c        ****                 if(input != 0x0D){
 1397              		.loc 1 316 0
 1398 0154 FFF7FEFF 		bl	USBUART_GetChar
 1399              	.LVL142:
 1400 0158 0446     		mov	r4, r0
 1401              	.LVL143:
 317:main.c        ****                     SERIAL_BUFFER[inCount] = input;
 1402              		.loc 1 317 0
 1403 015a 0D28     		cmp	r0, #13
 1404 015c 0AD0     		beq	.L106
 318:main.c        ****                     while(!USBUART_CDCIsReady());
 1405              		.loc 1 318 0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 36


 1406 015e 184B     		ldr	r3, .L113+40
 1407 0160 5855     		strb	r0, [r3, r5]
 1408              	.LVL144:
 1409              	.L109:
 319:main.c        ****                     USBUART_PutChar(SERIAL_BUFFER[inCount]);
 1410              		.loc 1 319 0 discriminator 1
 1411 0162 FFF7FEFF 		bl	USBUART_CDCIsReady
 1412              	.LVL145:
 1413 0166 0028     		cmp	r0, #0
 1414 0168 FBD0     		beq	.L109
 320:main.c        ****                     ++inCount;
 1415              		.loc 1 320 0
 1416 016a 154B     		ldr	r3, .L113+40
 1417 016c 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1418 016e FFF7FEFF 		bl	USBUART_PutChar
 1419              	.LVL146:
 321:main.c        ****                 }
 1420              		.loc 1 321 0
 1421 0172 0135     		adds	r5, r5, #1
 1422              	.LVL147:
 1423              	.L106:
 314:main.c        ****                 while(USBUART_DataIsReady() == 0); //wait for message data
 1424              		.loc 1 314 0
 1425 0174 0D2C     		cmp	r4, #13
 1426 0176 E9D1     		bne	.L107
 324:main.c        ****         //send data by setting variable
 1427              		.loc 1 324 0
 1428 0178 EDB2     		uxtb	r5, r5
 1429              	.LVL148:
 1430 017a 114B     		ldr	r3, .L113+40
 1431 017c 1D71     		strb	r5, [r3, #4]
 326:main.c        ****         SERIAL_POS = 0;
 1432              		.loc 1 326 0
 1433 017e 114B     		ldr	r3, .L113+44
 1434 0180 1D60     		str	r5, [r3]
 327:main.c        ****         printPrompt = 0;
 1435              		.loc 1 327 0
 1436 0182 0022     		movs	r2, #0
 1437 0184 0B4B     		ldr	r3, .L113+28
 1438 0186 5A61     		str	r2, [r3, #20]
 1439              	.L110:
 329:main.c        ****         USBUART_PutCRLF();       
 1440              		.loc 1 329 0 discriminator 1
 1441 0188 FFF7FEFF 		bl	USBUART_CDCIsReady
 1442              	.LVL149:
 1443 018c 0028     		cmp	r0, #0
 1444 018e FBD0     		beq	.L110
 330:main.c        ****         }
 1445              		.loc 1 330 0
 1446 0190 FFF7FEFF 		bl	USBUART_PutCRLF
 1447              	.LVL150:
 1448 0194 61E7     		b	.L96
 1449              	.L114:
 1450 0196 00BF     		.align	2
 1451              	.L113:
 1452 0198 00000000 		.word	TimerInterruptHandler
 1453 019c 00000000 		.word	RisingEdgeInterruptHandler
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 37


 1454 01a0 00000000 		.word	FallingEdgeInterruptHandler
 1455 01a4 00000000 		.word	ReceiveInterruptHandler
 1456 01a8 00000000 		.word	TransmitInterruptHandler
 1457 01ac 00000000 		.word	BackoffInterruptHandler
 1458 01b0 00000000 		.word	USBUART_device
 1459 01b4 00000000 		.word	.LANCHOR0
 1460 01b8 38000000 		.word	.LC5
 1461 01bc 54000000 		.word	.LC6
 1462 01c0 00000000 		.word	SERIAL_BUFFER
 1463 01c4 00000000 		.word	dataSize
 1464              	.LBE6:
 1465              	.LBE5:
 1466              		.cfi_endproc
 1467              	.LFE69:
 1468              		.size	main, .-main
 1469              		.global	dataPrintedOut
 1470              		.global	addrDataPrinted
 1471              		.global	HeaderCRC
 1472              		.global	CRCused
 1473              		.global	dataLength
 1474              		.global	destAddr
 1475              		.global	sourceAddr
 1476              		.global	verNumMatch
 1477              		.global	startHeaderReceieved
 1478              		.global	TX_length
 1479              		.global	TX_Addr
 1480              		.global	bitConCatCount
 1481              		.global	TX_Lock
 1482              		.global	RX_Lock
 1483              		.comm	RX_Char,1,1
 1484              		.global	RX_Bit_Counter
 1485              		.comm	RX_DATA,16,4
 1486              		.global	count
 1487              		.global	TX_Bit_Counter
 1488              		.comm	dataSize,4,4
 1489              		.comm	currentChar,1,1
 1490              		.global	dataConvertedReadOutCount
 1491              		.comm	CONVERTED_DATA,8000,4
 1492              		.global	uartConnected
 1493              		.global	USBUART_RX_DATA_READ_OUT
 1494              		.global	SERIAL_RX_POS
 1495              		.global	SERIAL_POS
 1496              		.comm	SERIAL_RX_BUFFER,500,4
 1497              		.comm	SERIAL_BUFFER,500,4
 1498              		.global	lowFlag
 1499              		.global	systemState
 1500              		.section	.rodata.str1.4,"aMS",%progbits,1
 1501              		.align	2
 1502              	.LC0:
 1503 0000 4D657373 		.ascii	"Message From: \000"
 1503      61676520 
 1503      46726F6D 
 1503      3A2000
 1504 000f 00       		.space	1
 1505              	.LC1:
 1506 0010 53656E74 		.ascii	"Sent To: \000"
 1506      20546F3A 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 38


 1506      2000
 1507 001a 0000     		.space	2
 1508              	.LC2:
 1509 001c 42435354 		.ascii	"BCST \000"
 1509      2000
 1510 0022 0000     		.space	2
 1511              	.LC3:
 1512 0024 53697A65 		.ascii	"Size: \000"
 1512      3A2000
 1513 002b 00       		.space	1
 1514              	.LC4:
 1515 002c 4D657373 		.ascii	"Message: \000"
 1515      6167653A 
 1515      2000
 1516 0036 0000     		.space	2
 1517              	.LC5:
 1518 0038 456E7465 		.ascii	"Enter Address (3 digits): \000"
 1518      72204164 
 1518      64726573 
 1518      73202833 
 1518      20646967 
 1519 0053 00       		.space	1
 1520              	.LC6:
 1521 0054 456E7465 		.ascii	"Enter message: \000"
 1521      72206D65 
 1521      73736167 
 1521      653A2000 
 1522              		.bss
 1523              		.align	2
 1524              		.set	.LANCHOR0,. + 0
 1525              		.type	systemState, %object
 1526              		.size	systemState, 1
 1527              	systemState:
 1528 0000 00       		.space	1
 1529 0001 000000   		.space	3
 1530              		.type	RX_Bit_Counter, %object
 1531              		.size	RX_Bit_Counter, 4
 1532              	RX_Bit_Counter:
 1533 0004 00000000 		.space	4
 1534              		.type	SERIAL_RX_POS, %object
 1535              		.size	SERIAL_RX_POS, 4
 1536              	SERIAL_RX_POS:
 1537 0008 00000000 		.space	4
 1538              		.type	USBUART_RX_DATA_READ_OUT, %object
 1539              		.size	USBUART_RX_DATA_READ_OUT, 4
 1540              	USBUART_RX_DATA_READ_OUT:
 1541 000c 00000000 		.space	4
 1542              		.type	RX_Lock, %object
 1543              		.size	RX_Lock, 4
 1544              	RX_Lock:
 1545 0010 00000000 		.space	4
 1546              		.type	SERIAL_POS, %object
 1547              		.size	SERIAL_POS, 4
 1548              	SERIAL_POS:
 1549 0014 00000000 		.space	4
 1550              		.type	TX_Lock, %object
 1551              		.size	TX_Lock, 4
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 39


 1552              	TX_Lock:
 1553 0018 00000000 		.space	4
 1554              		.type	TX_Bit_Counter, %object
 1555              		.size	TX_Bit_Counter, 4
 1556              	TX_Bit_Counter:
 1557 001c 00000000 		.space	4
 1558              		.type	count, %object
 1559              		.size	count, 4
 1560              	count:
 1561 0020 00000000 		.space	4
 1562              		.type	lowFlag, %object
 1563              		.size	lowFlag, 1
 1564              	lowFlag:
 1565 0024 00       		.space	1
 1566 0025 000000   		.space	3
 1567              		.type	addrDataPrinted, %object
 1568              		.size	addrDataPrinted, 4
 1569              	addrDataPrinted:
 1570 0028 00000000 		.space	4
 1571              		.type	startHeaderReceieved, %object
 1572              		.size	startHeaderReceieved, 4
 1573              	startHeaderReceieved:
 1574 002c 00000000 		.space	4
 1575              		.type	verNumMatch, %object
 1576              		.size	verNumMatch, 4
 1577              	verNumMatch:
 1578 0030 00000000 		.space	4
 1579              		.type	sourceAddr, %object
 1580              		.size	sourceAddr, 1
 1581              	sourceAddr:
 1582 0034 00       		.space	1
 1583              		.type	destAddr, %object
 1584              		.size	destAddr, 1
 1585              	destAddr:
 1586 0035 00       		.space	1
 1587 0036 0000     		.space	2
 1588              		.type	dataLength, %object
 1589              		.size	dataLength, 4
 1590              	dataLength:
 1591 0038 00000000 		.space	4
 1592              		.type	CRCused, %object
 1593              		.size	CRCused, 1
 1594              	CRCused:
 1595 003c 00       		.space	1
 1596              		.type	HeaderCRC, %object
 1597              		.size	HeaderCRC, 1
 1598              	HeaderCRC:
 1599 003d 00       		.space	1
 1600 003e 0000     		.space	2
 1601              		.type	uartConnected, %object
 1602              		.size	uartConnected, 4
 1603              	uartConnected:
 1604 0040 00000000 		.space	4
 1605              		.type	TX_Addr, %object
 1606              		.size	TX_Addr, 1
 1607              	TX_Addr:
 1608 0044 00       		.space	1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 40


 1609 0045 000000   		.space	3
 1610              		.type	dataPrintedOut, %object
 1611              		.size	dataPrintedOut, 4
 1612              	dataPrintedOut:
 1613 0048 00000000 		.space	4
 1614              		.type	TX_length, %object
 1615              		.size	TX_length, 1
 1616              	TX_length:
 1617 004c 00       		.space	1
 1618 004d 000000   		.space	3
 1619              		.type	bitConCatCount, %object
 1620              		.size	bitConCatCount, 4
 1621              	bitConCatCount:
 1622 0050 00000000 		.space	4
 1623              		.type	dataConvertedReadOutCount, %object
 1624              		.size	dataConvertedReadOutCount, 4
 1625              	dataConvertedReadOutCount:
 1626 0054 00000000 		.space	4
 1627              		.text
 1628              	.Letext0:
 1629              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1630              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1631              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1632              		.file 5 "Generated_Source\\PSoC5/USBUART.h"
 1633              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1634              		.file 7 "Generated_Source\\PSoC5/TimerRX.h"
 1635              		.file 8 "Generated_Source\\PSoC5/RECEIVE.h"
 1636              		.file 9 "Generated_Source\\PSoC5/TRANSMIT.h"
 1637              		.file 10 "Generated_Source\\PSoC5/CyLib.h"
 1638              		.file 11 "Generated_Source\\PSoC5/Backoff.h"
 1639              		.file 12 "Generated_Source\\PSoC5/PRS.h"
 1640              		.file 13 "Generated_Source\\PSoC5/Timer.h"
 1641              		.file 14 "Generated_Source\\PSoC5/IDLE.h"
 1642              		.file 15 "Generated_Source\\PSoC5/BUSY.h"
 1643              		.file 16 "Generated_Source\\PSoC5/COLLISION.h"
 1644              		.file 17 "Generated_Source\\PSoC5/USBUART_cdc.h"
 1645              		.file 18 "Generated_Source\\PSoC5/TimerISR.h"
 1646              		.file 19 "Generated_Source\\PSoC5/RisingEdgeISR.h"
 1647              		.file 20 "Generated_Source\\PSoC5/FallingEdgeISR.h"
 1648              		.file 21 "Generated_Source\\PSoC5/ReceiveISR.h"
 1649              		.file 22 "Generated_Source\\PSoC5/TimerTX.h"
 1650              		.file 23 "Generated_Source\\PSoC5/TransmitISR.h"
 1651              		.file 24 "Generated_Source\\PSoC5/BackoffISR.h"
 1652              		.section	.debug_info,"",%progbits
 1653              	.Ldebug_info0:
 1654 0000 5D0C0000 		.4byte	0xc5d
 1655 0004 0400     		.2byte	0x4
 1656 0006 00000000 		.4byte	.Ldebug_abbrev0
 1657 000a 04       		.byte	0x4
 1658 000b 01       		.uleb128 0x1
 1659 000c 45060000 		.4byte	.LASF111
 1660 0010 0C       		.byte	0xc
 1661 0011 1C050000 		.4byte	.LASF112
 1662 0015 5B050000 		.4byte	.LASF113
 1663 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1664 001d 00000000 		.4byte	0
 1665 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 41


 1666 0025 02       		.uleb128 0x2
 1667 0026 01       		.byte	0x1
 1668 0027 06       		.byte	0x6
 1669 0028 66030000 		.4byte	.LASF0
 1670 002c 02       		.uleb128 0x2
 1671 002d 01       		.byte	0x1
 1672 002e 08       		.byte	0x8
 1673 002f 16030000 		.4byte	.LASF1
 1674 0033 02       		.uleb128 0x2
 1675 0034 02       		.byte	0x2
 1676 0035 05       		.byte	0x5
 1677 0036 90000000 		.4byte	.LASF2
 1678 003a 02       		.uleb128 0x2
 1679 003b 02       		.byte	0x2
 1680 003c 07       		.byte	0x7
 1681 003d 5D040000 		.4byte	.LASF3
 1682 0041 03       		.uleb128 0x3
 1683 0042 A1050000 		.4byte	.LASF9
 1684 0046 02       		.byte	0x2
 1685 0047 3F       		.byte	0x3f
 1686 0048 4C000000 		.4byte	0x4c
 1687 004c 02       		.uleb128 0x2
 1688 004d 04       		.byte	0x4
 1689 004e 05       		.byte	0x5
 1690 004f 34020000 		.4byte	.LASF4
 1691 0053 02       		.uleb128 0x2
 1692 0054 04       		.byte	0x4
 1693 0055 07       		.byte	0x7
 1694 0056 C0030000 		.4byte	.LASF5
 1695 005a 02       		.uleb128 0x2
 1696 005b 08       		.byte	0x8
 1697 005c 05       		.byte	0x5
 1698 005d FD010000 		.4byte	.LASF6
 1699 0061 02       		.uleb128 0x2
 1700 0062 08       		.byte	0x8
 1701 0063 07       		.byte	0x7
 1702 0064 0B020000 		.4byte	.LASF7
 1703 0068 04       		.uleb128 0x4
 1704 0069 04       		.byte	0x4
 1705 006a 05       		.byte	0x5
 1706 006b 696E7400 		.ascii	"int\000"
 1707 006f 02       		.uleb128 0x2
 1708 0070 04       		.byte	0x4
 1709 0071 07       		.byte	0x7
 1710 0072 94030000 		.4byte	.LASF8
 1711 0076 03       		.uleb128 0x3
 1712 0077 3D040000 		.4byte	.LASF10
 1713 007b 03       		.byte	0x3
 1714 007c 2C       		.byte	0x2c
 1715 007d 41000000 		.4byte	0x41
 1716 0081 05       		.uleb128 0x5
 1717 0082 FC050000 		.4byte	.LASF11
 1718 0086 04       		.byte	0x4
 1719 0087 9201     		.2byte	0x192
 1720 0089 2C000000 		.4byte	0x2c
 1721 008d 02       		.uleb128 0x2
 1722 008e 04       		.byte	0x4
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 42


 1723 008f 04       		.byte	0x4
 1724 0090 DE010000 		.4byte	.LASF12
 1725 0094 02       		.uleb128 0x2
 1726 0095 08       		.byte	0x8
 1727 0096 04       		.byte	0x4
 1728 0097 3D050000 		.4byte	.LASF13
 1729 009b 02       		.uleb128 0x2
 1730 009c 01       		.byte	0x1
 1731 009d 08       		.byte	0x8
 1732 009e 2D040000 		.4byte	.LASF14
 1733 00a2 05       		.uleb128 0x5
 1734 00a3 23050000 		.4byte	.LASF15
 1735 00a7 04       		.byte	0x4
 1736 00a8 3C02     		.2byte	0x23c
 1737 00aa AE000000 		.4byte	0xae
 1738 00ae 06       		.uleb128 0x6
 1739 00af 81000000 		.4byte	0x81
 1740 00b3 02       		.uleb128 0x2
 1741 00b4 08       		.byte	0x8
 1742 00b5 04       		.byte	0x4
 1743 00b6 02010000 		.4byte	.LASF16
 1744 00ba 02       		.uleb128 0x2
 1745 00bb 04       		.byte	0x4
 1746 00bc 07       		.byte	0x7
 1747 00bd A0000000 		.4byte	.LASF17
 1748 00c1 07       		.uleb128 0x7
 1749 00c2 63000000 		.4byte	.LASF114
 1750 00c6 01       		.byte	0x1
 1751 00c7 2C000000 		.4byte	0x2c
 1752 00cb 01       		.byte	0x1
 1753 00cc 0E       		.byte	0xe
 1754 00cd E4000000 		.4byte	0xe4
 1755 00d1 08       		.uleb128 0x8
 1756 00d2 F3020000 		.4byte	.LASF18
 1757 00d6 00       		.byte	0
 1758 00d7 08       		.uleb128 0x8
 1759 00d8 4A010000 		.4byte	.LASF19
 1760 00dc 01       		.byte	0x1
 1761 00dd 08       		.uleb128 0x8
 1762 00de CE040000 		.4byte	.LASF20
 1763 00e2 02       		.byte	0x2
 1764 00e3 00       		.byte	0
 1765 00e4 03       		.uleb128 0x3
 1766 00e5 22020000 		.4byte	.LASF21
 1767 00e9 01       		.byte	0x1
 1768 00ea 0E       		.byte	0xe
 1769 00eb C1000000 		.4byte	0xc1
 1770 00ef 09       		.uleb128 0x9
 1771 00f0 78000000 		.4byte	.LASF24
 1772 00f4 01       		.byte	0x1
 1773 00f5 53       		.byte	0x53
 1774 00f6 00000000 		.4byte	.LFB63
 1775 00fa 90000000 		.4byte	.LFE63-.LFB63
 1776 00fe 01       		.uleb128 0x1
 1777 00ff 9C       		.byte	0x9c
 1778 0100 5E010000 		.4byte	0x15e
 1779 0104 0A       		.uleb128 0xa
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 43


 1780 0105 9C010000 		.4byte	.LASF22
 1781 0109 01       		.byte	0x1
 1782 010a 54       		.byte	0x54
 1783 010b 68000000 		.4byte	0x68
 1784 010f 00000000 		.4byte	.LLST0
 1785 0113 0A       		.uleb128 0xa
 1786 0114 E2050000 		.4byte	.LASF23
 1787 0118 01       		.byte	0x1
 1788 0119 55       		.byte	0x55
 1789 011a 9B000000 		.4byte	0x9b
 1790 011e 1F000000 		.4byte	.LLST1
 1791 0122 0B       		.uleb128 0xb
 1792 0123 00000000 		.4byte	.Ldebug_ranges0+0
 1793 0127 39010000 		.4byte	0x139
 1794 012b 0C       		.uleb128 0xc
 1795 012c 7800     		.ascii	"x\000"
 1796 012e 01       		.byte	0x1
 1797 012f 6D       		.byte	0x6d
 1798 0130 68000000 		.4byte	0x68
 1799 0134 49000000 		.4byte	.LLST2
 1800 0138 00       		.byte	0
 1801 0139 0D       		.uleb128 0xd
 1802 013a 12000000 		.4byte	.LVL1
 1803 013e 8F0A0000 		.4byte	0xa8f
 1804 0142 0D       		.uleb128 0xd
 1805 0143 1A000000 		.4byte	.LVL2
 1806 0147 9A0A0000 		.4byte	0xa9a
 1807 014b 0D       		.uleb128 0xd
 1808 014c 34000000 		.4byte	.LVL3
 1809 0150 A50A0000 		.4byte	0xaa5
 1810 0154 0D       		.uleb128 0xd
 1811 0155 48000000 		.4byte	.LVL4
 1812 0159 A50A0000 		.4byte	0xaa5
 1813 015d 00       		.byte	0
 1814 015e 09       		.uleb128 0x9
 1815 015f E9000000 		.4byte	.LASF25
 1816 0163 01       		.byte	0x1
 1817 0164 7D       		.byte	0x7d
 1818 0165 00000000 		.4byte	.LFB64
 1819 0169 F4000000 		.4byte	.LFE64-.LFB64
 1820 016d 01       		.uleb128 0x1
 1821 016e 9C       		.byte	0x9c
 1822 016f E4010000 		.4byte	0x1e4
 1823 0173 0E       		.uleb128 0xe
 1824 0174 3C000000 		.4byte	.LVL15
 1825 0178 B00A0000 		.4byte	0xab0
 1826 017c 86010000 		.4byte	0x186
 1827 0180 0F       		.uleb128 0xf
 1828 0181 01       		.uleb128 0x1
 1829 0182 50       		.byte	0x50
 1830 0183 01       		.uleb128 0x1
 1831 0184 31       		.byte	0x31
 1832 0185 00       		.byte	0
 1833 0186 0E       		.uleb128 0xe
 1834 0187 5A000000 		.4byte	.LVL16
 1835 018b B00A0000 		.4byte	0xab0
 1836 018f 99010000 		.4byte	0x199
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 44


 1837 0193 0F       		.uleb128 0xf
 1838 0194 01       		.uleb128 0x1
 1839 0195 50       		.byte	0x50
 1840 0196 01       		.uleb128 0x1
 1841 0197 30       		.byte	0x30
 1842 0198 00       		.byte	0
 1843 0199 0E       		.uleb128 0xe
 1844 019a 82000000 		.4byte	.LVL17
 1845 019e B00A0000 		.4byte	0xab0
 1846 01a2 AC010000 		.4byte	0x1ac
 1847 01a6 0F       		.uleb128 0xf
 1848 01a7 01       		.uleb128 0x1
 1849 01a8 50       		.byte	0x50
 1850 01a9 01       		.uleb128 0x1
 1851 01aa 31       		.byte	0x31
 1852 01ab 00       		.byte	0
 1853 01ac 0E       		.uleb128 0xe
 1854 01ad 9A000000 		.4byte	.LVL18
 1855 01b1 B00A0000 		.4byte	0xab0
 1856 01b5 BF010000 		.4byte	0x1bf
 1857 01b9 0F       		.uleb128 0xf
 1858 01ba 01       		.uleb128 0x1
 1859 01bb 50       		.byte	0x50
 1860 01bc 01       		.uleb128 0x1
 1861 01bd 30       		.byte	0x30
 1862 01be 00       		.byte	0
 1863 01bf 0E       		.uleb128 0xe
 1864 01c0 BA000000 		.4byte	.LVL19
 1865 01c4 BB0A0000 		.4byte	0xabb
 1866 01c8 D4010000 		.4byte	0x1d4
 1867 01cc 0F       		.uleb128 0xf
 1868 01cd 01       		.uleb128 0x1
 1869 01ce 50       		.byte	0x50
 1870 01cf 03       		.uleb128 0x3
 1871 01d0 0A       		.byte	0xa
 1872 01d1 EF01     		.2byte	0x1ef
 1873 01d3 00       		.byte	0
 1874 01d4 10       		.uleb128 0x10
 1875 01d5 DA000000 		.4byte	.LVL20
 1876 01d9 B00A0000 		.4byte	0xab0
 1877 01dd 0F       		.uleb128 0xf
 1878 01de 01       		.uleb128 0x1
 1879 01df 50       		.byte	0x50
 1880 01e0 01       		.uleb128 0x1
 1881 01e1 30       		.byte	0x30
 1882 01e2 00       		.byte	0
 1883 01e3 00       		.byte	0
 1884 01e4 09       		.uleb128 0x9
 1885 01e5 72030000 		.4byte	.LASF26
 1886 01e9 01       		.byte	0x1
 1887 01ea AB       		.byte	0xab
 1888 01eb 00000000 		.4byte	.LFB65
 1889 01ef 20000000 		.4byte	.LFE65-.LFB65
 1890 01f3 01       		.uleb128 0x1
 1891 01f4 9C       		.byte	0x9c
 1892 01f5 03020000 		.4byte	0x203
 1893 01f9 0D       		.uleb128 0xd
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 45


 1894 01fa 0A000000 		.4byte	.LVL21
 1895 01fe C60A0000 		.4byte	0xac6
 1896 0202 00       		.byte	0
 1897 0203 11       		.uleb128 0x11
 1898 0204 A9000000 		.4byte	.LASF27
 1899 0208 01       		.byte	0x1
 1900 0209 B2       		.byte	0xb2
 1901 020a 00000000 		.4byte	.LFB66
 1902 020e 80000000 		.4byte	.LFE66-.LFB66
 1903 0212 01       		.uleb128 0x1
 1904 0213 9C       		.byte	0x9c
 1905 0214 69020000 		.4byte	0x269
 1906 0218 12       		.uleb128 0x12
 1907 0219 16000000 		.4byte	.LBB4
 1908 021d 6A000000 		.4byte	.LBE4-.LBB4
 1909 0221 0A       		.uleb128 0xa
 1910 0222 9E020000 		.4byte	.LASF28
 1911 0226 01       		.byte	0x1
 1912 0227 BE       		.byte	0xbe
 1913 0228 68000000 		.4byte	0x68
 1914 022c 68000000 		.4byte	.LLST3
 1915 0230 0E       		.uleb128 0xe
 1916 0231 22000000 		.4byte	.LVL22
 1917 0235 B00A0000 		.4byte	0xab0
 1918 0239 43020000 		.4byte	0x243
 1919 023d 0F       		.uleb128 0xf
 1920 023e 01       		.uleb128 0x1
 1921 023f 50       		.byte	0x50
 1922 0240 01       		.uleb128 0x1
 1923 0241 30       		.byte	0x30
 1924 0242 00       		.byte	0
 1925 0243 0D       		.uleb128 0xd
 1926 0244 2E000000 		.4byte	.LVL24
 1927 0248 D10A0000 		.4byte	0xad1
 1928 024c 0D       		.uleb128 0xd
 1929 024d 54000000 		.4byte	.LVL30
 1930 0251 DC0A0000 		.4byte	0xadc
 1931 0255 0D       		.uleb128 0xd
 1932 0256 6A000000 		.4byte	.LVL33
 1933 025a E70A0000 		.4byte	0xae7
 1934 025e 0D       		.uleb128 0xd
 1935 025f 6E000000 		.4byte	.LVL34
 1936 0263 F20A0000 		.4byte	0xaf2
 1937 0267 00       		.byte	0
 1938 0268 00       		.byte	0
 1939 0269 09       		.uleb128 0x9
 1940 026a E8060000 		.4byte	.LASF29
 1941 026e 01       		.byte	0x1
 1942 026f C9       		.byte	0xc9
 1943 0270 00000000 		.4byte	.LFB67
 1944 0274 3C000000 		.4byte	.LFE67-.LFB67
 1945 0278 01       		.uleb128 0x1
 1946 0279 9C       		.byte	0x9c
 1947 027a B9020000 		.4byte	0x2b9
 1948 027e 0E       		.uleb128 0xe
 1949 027f 10000000 		.4byte	.LVL35
 1950 0283 FD0A0000 		.4byte	0xafd
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 46


 1951 0287 92020000 		.4byte	0x292
 1952 028b 0F       		.uleb128 0xf
 1953 028c 01       		.uleb128 0x1
 1954 028d 50       		.byte	0x50
 1955 028e 02       		.uleb128 0x2
 1956 028f 08       		.byte	0x8
 1957 0290 34       		.byte	0x34
 1958 0291 00       		.byte	0
 1959 0292 0E       		.uleb128 0xe
 1960 0293 16000000 		.4byte	.LVL36
 1961 0297 080B0000 		.4byte	0xb08
 1962 029b A6020000 		.4byte	0x2a6
 1963 029f 0F       		.uleb128 0xf
 1964 02a0 01       		.uleb128 0x1
 1965 02a1 50       		.byte	0x50
 1966 02a2 02       		.uleb128 0x2
 1967 02a3 08       		.byte	0x8
 1968 02a4 33       		.byte	0x33
 1969 02a5 00       		.byte	0
 1970 02a6 0D       		.uleb128 0xd
 1971 02a7 1A000000 		.4byte	.LVL37
 1972 02ab 130B0000 		.4byte	0xb13
 1973 02af 0D       		.uleb128 0xd
 1974 02b0 30000000 		.4byte	.LVL38
 1975 02b4 8F0A0000 		.4byte	0xa8f
 1976 02b8 00       		.byte	0
 1977 02b9 09       		.uleb128 0x9
 1978 02ba 77020000 		.4byte	.LASF30
 1979 02be 01       		.byte	0x1
 1980 02bf D9       		.byte	0xd9
 1981 02c0 00000000 		.4byte	.LFB68
 1982 02c4 30000000 		.4byte	.LFE68-.LFB68
 1983 02c8 01       		.uleb128 0x1
 1984 02c9 9C       		.byte	0x9c
 1985 02ca 02030000 		.4byte	0x302
 1986 02ce 0E       		.uleb128 0xe
 1987 02cf 12000000 		.4byte	.LVL39
 1988 02d3 FD0A0000 		.4byte	0xafd
 1989 02d7 E3020000 		.4byte	0x2e3
 1990 02db 0F       		.uleb128 0xf
 1991 02dc 01       		.uleb128 0x1
 1992 02dd 50       		.byte	0x50
 1993 02de 03       		.uleb128 0x3
 1994 02df 0A       		.byte	0xa
 1995 02e0 3E03     		.2byte	0x33e
 1996 02e2 00       		.byte	0
 1997 02e3 0E       		.uleb128 0xe
 1998 02e4 1A000000 		.4byte	.LVL40
 1999 02e8 080B0000 		.4byte	0xb08
 2000 02ec F8020000 		.4byte	0x2f8
 2001 02f0 0F       		.uleb128 0xf
 2002 02f1 01       		.uleb128 0x1
 2003 02f2 50       		.byte	0x50
 2004 02f3 03       		.uleb128 0x3
 2005 02f4 0A       		.byte	0xa
 2006 02f5 3D03     		.2byte	0x33d
 2007 02f7 00       		.byte	0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 47


 2008 02f8 0D       		.uleb128 0xd
 2009 02f9 1E000000 		.4byte	.LVL41
 2010 02fd 130B0000 		.4byte	0xb13
 2011 0301 00       		.byte	0
 2012 0302 13       		.uleb128 0x13
 2013 0303 59010000 		.4byte	.LASF31
 2014 0307 01       		.byte	0x1
 2015 0308 5201     		.2byte	0x152
 2016 030a 00000000 		.4byte	.LFB70
 2017 030e 8C000000 		.4byte	.LFE70-.LFB70
 2018 0312 01       		.uleb128 0x1
 2019 0313 9C       		.byte	0x9c
 2020 0314 BE030000 		.4byte	0x3be
 2021 0318 0E       		.uleb128 0xe
 2022 0319 18000000 		.4byte	.LVL42
 2023 031d 1E0B0000 		.4byte	0xb1e
 2024 0321 2B030000 		.4byte	0x32b
 2025 0325 0F       		.uleb128 0xf
 2026 0326 01       		.uleb128 0x1
 2027 0327 50       		.byte	0x50
 2028 0328 01       		.uleb128 0x1
 2029 0329 31       		.byte	0x31
 2030 032a 00       		.byte	0
 2031 032b 0D       		.uleb128 0xd
 2032 032c 1C000000 		.4byte	.LVL43
 2033 0330 290B0000 		.4byte	0xb29
 2034 0334 0D       		.uleb128 0xd
 2035 0335 26000000 		.4byte	.LVL44
 2036 0339 340B0000 		.4byte	0xb34
 2037 033d 0D       		.uleb128 0xd
 2038 033e 2A000000 		.4byte	.LVL45
 2039 0342 290B0000 		.4byte	0xb29
 2040 0346 0D       		.uleb128 0xd
 2041 0347 34000000 		.4byte	.LVL46
 2042 034b 3F0B0000 		.4byte	0xb3f
 2043 034f 0E       		.uleb128 0xe
 2044 0350 46000000 		.4byte	.LVL47
 2045 0354 340B0000 		.4byte	0xb34
 2046 0358 62030000 		.4byte	0x362
 2047 035c 0F       		.uleb128 0xf
 2048 035d 01       		.uleb128 0x1
 2049 035e 50       		.byte	0x50
 2050 035f 01       		.uleb128 0x1
 2051 0360 31       		.byte	0x31
 2052 0361 00       		.byte	0
 2053 0362 0D       		.uleb128 0xd
 2054 0363 4A000000 		.4byte	.LVL48
 2055 0367 4A0B0000 		.4byte	0xb4a
 2056 036b 0D       		.uleb128 0xd
 2057 036c 54000000 		.4byte	.LVL49
 2058 0370 1E0B0000 		.4byte	0xb1e
 2059 0374 0D       		.uleb128 0xd
 2060 0375 58000000 		.4byte	.LVL50
 2061 0379 4A0B0000 		.4byte	0xb4a
 2062 037d 0D       		.uleb128 0xd
 2063 037e 62000000 		.4byte	.LVL51
 2064 0382 3F0B0000 		.4byte	0xb3f
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 48


 2065 0386 0E       		.uleb128 0xe
 2066 0387 6A000000 		.4byte	.LVL52
 2067 038b 3F0B0000 		.4byte	0xb3f
 2068 038f 99030000 		.4byte	0x399
 2069 0393 0F       		.uleb128 0xf
 2070 0394 01       		.uleb128 0x1
 2071 0395 50       		.byte	0x50
 2072 0396 01       		.uleb128 0x1
 2073 0397 31       		.byte	0x31
 2074 0398 00       		.byte	0
 2075 0399 0D       		.uleb128 0xd
 2076 039a 6E000000 		.4byte	.LVL53
 2077 039e 550B0000 		.4byte	0xb55
 2078 03a2 0D       		.uleb128 0xd
 2079 03a3 78000000 		.4byte	.LVL54
 2080 03a7 1E0B0000 		.4byte	0xb1e
 2081 03ab 0D       		.uleb128 0xd
 2082 03ac 7C000000 		.4byte	.LVL55
 2083 03b0 550B0000 		.4byte	0xb55
 2084 03b4 0D       		.uleb128 0xd
 2085 03b5 86000000 		.4byte	.LVL56
 2086 03b9 340B0000 		.4byte	0xb34
 2087 03bd 00       		.byte	0
 2088 03be 14       		.uleb128 0x14
 2089 03bf BF000000 		.4byte	.LASF115
 2090 03c3 01       		.byte	0x1
 2091 03c4 BD01     		.2byte	0x1bd
 2092 03c6 00000000 		.4byte	.LFB72
 2093 03ca 44000000 		.4byte	.LFE72-.LFB72
 2094 03ce 01       		.uleb128 0x1
 2095 03cf 9C       		.byte	0x9c
 2096 03d0 13       		.uleb128 0x13
 2097 03d1 C0040000 		.4byte	.LASF32
 2098 03d5 01       		.byte	0x1
 2099 03d6 6D01     		.2byte	0x16d
 2100 03d8 00000000 		.4byte	.LFB71
 2101 03dc D0020000 		.4byte	.LFE71-.LFB71
 2102 03e0 01       		.uleb128 0x1
 2103 03e1 9C       		.byte	0x9c
 2104 03e2 CB050000 		.4byte	0x5cb
 2105 03e6 0D       		.uleb128 0xd
 2106 03e7 06000000 		.4byte	.LVL57
 2107 03eb 600B0000 		.4byte	0xb60
 2108 03ef 0D       		.uleb128 0xd
 2109 03f0 14000000 		.4byte	.LVL58
 2110 03f4 BE030000 		.4byte	0x3be
 2111 03f8 0D       		.uleb128 0xd
 2112 03f9 48000000 		.4byte	.LVL59
 2113 03fd 600B0000 		.4byte	0xb60
 2114 0401 0D       		.uleb128 0xd
 2115 0402 50000000 		.4byte	.LVL60
 2116 0406 6B0B0000 		.4byte	0xb6b
 2117 040a 0D       		.uleb128 0xd
 2118 040b 54000000 		.4byte	.LVL61
 2119 040f 600B0000 		.4byte	0xb60
 2120 0413 0D       		.uleb128 0xd
 2121 0414 5C000000 		.4byte	.LVL62
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 49


 2122 0418 6B0B0000 		.4byte	0xb6b
 2123 041c 0D       		.uleb128 0xd
 2124 041d 60000000 		.4byte	.LVL63
 2125 0421 600B0000 		.4byte	0xb60
 2126 0425 0D       		.uleb128 0xd
 2127 0426 68000000 		.4byte	.LVL64
 2128 042a 6B0B0000 		.4byte	0xb6b
 2129 042e 0D       		.uleb128 0xd
 2130 042f 6C000000 		.4byte	.LVL65
 2131 0433 600B0000 		.4byte	0xb60
 2132 0437 0E       		.uleb128 0xe
 2133 0438 76000000 		.4byte	.LVL66
 2134 043c 760B0000 		.4byte	0xb76
 2135 0440 4E040000 		.4byte	0x44e
 2136 0444 0F       		.uleb128 0xf
 2137 0445 01       		.uleb128 0x1
 2138 0446 50       		.byte	0x50
 2139 0447 05       		.uleb128 0x5
 2140 0448 03       		.byte	0x3
 2141 0449 00000000 		.4byte	.LC0
 2142 044d 00       		.byte	0
 2143 044e 0D       		.uleb128 0xd
 2144 044f 7A000000 		.4byte	.LVL67
 2145 0453 600B0000 		.4byte	0xb60
 2146 0457 0D       		.uleb128 0xd
 2147 0458 92000000 		.4byte	.LVL68
 2148 045c 810B0000 		.4byte	0xb81
 2149 0460 0D       		.uleb128 0xd
 2150 0461 96000000 		.4byte	.LVL69
 2151 0465 600B0000 		.4byte	0xb60
 2152 0469 0D       		.uleb128 0xd
 2153 046a BE000000 		.4byte	.LVL70
 2154 046e 810B0000 		.4byte	0xb81
 2155 0472 0D       		.uleb128 0xd
 2156 0473 C2000000 		.4byte	.LVL71
 2157 0477 600B0000 		.4byte	0xb60
 2158 047b 0D       		.uleb128 0xd
 2159 047c F4000000 		.4byte	.LVL72
 2160 0480 810B0000 		.4byte	0xb81
 2161 0484 0D       		.uleb128 0xd
 2162 0485 F8000000 		.4byte	.LVL73
 2163 0489 600B0000 		.4byte	0xb60
 2164 048d 0D       		.uleb128 0xd
 2165 048e 00010000 		.4byte	.LVL74
 2166 0492 6B0B0000 		.4byte	0xb6b
 2167 0496 0D       		.uleb128 0xd
 2168 0497 04010000 		.4byte	.LVL75
 2169 049b 600B0000 		.4byte	0xb60
 2170 049f 0E       		.uleb128 0xe
 2171 04a0 0E010000 		.4byte	.LVL76
 2172 04a4 760B0000 		.4byte	0xb76
 2173 04a8 B6040000 		.4byte	0x4b6
 2174 04ac 0F       		.uleb128 0xf
 2175 04ad 01       		.uleb128 0x1
 2176 04ae 50       		.byte	0x50
 2177 04af 05       		.uleb128 0x5
 2178 04b0 03       		.byte	0x3
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 50


 2179 04b1 10000000 		.4byte	.LC1
 2180 04b5 00       		.byte	0
 2181 04b6 0D       		.uleb128 0xd
 2182 04b7 1A010000 		.4byte	.LVL77
 2183 04bb 600B0000 		.4byte	0xb60
 2184 04bf 0E       		.uleb128 0xe
 2185 04c0 24010000 		.4byte	.LVL78
 2186 04c4 760B0000 		.4byte	0xb76
 2187 04c8 D6040000 		.4byte	0x4d6
 2188 04cc 0F       		.uleb128 0xf
 2189 04cd 01       		.uleb128 0x1
 2190 04ce 50       		.byte	0x50
 2191 04cf 05       		.uleb128 0x5
 2192 04d0 03       		.byte	0x3
 2193 04d1 1C000000 		.4byte	.LC2
 2194 04d5 00       		.byte	0
 2195 04d6 0D       		.uleb128 0xd
 2196 04d7 28010000 		.4byte	.LVL79
 2197 04db 600B0000 		.4byte	0xb60
 2198 04df 0D       		.uleb128 0xd
 2199 04e0 30010000 		.4byte	.LVL80
 2200 04e4 6B0B0000 		.4byte	0xb6b
 2201 04e8 0D       		.uleb128 0xd
 2202 04e9 36010000 		.4byte	.LVL81
 2203 04ed 600B0000 		.4byte	0xb60
 2204 04f1 0D       		.uleb128 0xd
 2205 04f2 4E010000 		.4byte	.LVL82
 2206 04f6 810B0000 		.4byte	0xb81
 2207 04fa 0D       		.uleb128 0xd
 2208 04fb 52010000 		.4byte	.LVL83
 2209 04ff 600B0000 		.4byte	0xb60
 2210 0503 0D       		.uleb128 0xd
 2211 0504 7C010000 		.4byte	.LVL84
 2212 0508 810B0000 		.4byte	0xb81
 2213 050c 0D       		.uleb128 0xd
 2214 050d 80010000 		.4byte	.LVL85
 2215 0511 600B0000 		.4byte	0xb60
 2216 0515 0D       		.uleb128 0xd
 2217 0516 B4010000 		.4byte	.LVL86
 2218 051a 810B0000 		.4byte	0xb81
 2219 051e 0D       		.uleb128 0xd
 2220 051f B8010000 		.4byte	.LVL87
 2221 0523 6B0B0000 		.4byte	0xb6b
 2222 0527 0D       		.uleb128 0xd
 2223 0528 BC010000 		.4byte	.LVL88
 2224 052c 600B0000 		.4byte	0xb60
 2225 0530 0D       		.uleb128 0xd
 2226 0531 C4010000 		.4byte	.LVL89
 2227 0535 600B0000 		.4byte	0xb60
 2228 0539 0E       		.uleb128 0xe
 2229 053a CE010000 		.4byte	.LVL90
 2230 053e 760B0000 		.4byte	0xb76
 2231 0542 50050000 		.4byte	0x550
 2232 0546 0F       		.uleb128 0xf
 2233 0547 01       		.uleb128 0x1
 2234 0548 50       		.byte	0x50
 2235 0549 05       		.uleb128 0x5
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 51


 2236 054a 03       		.byte	0x3
 2237 054b 24000000 		.4byte	.LC3
 2238 054f 00       		.byte	0
 2239 0550 0D       		.uleb128 0xd
 2240 0551 D2010000 		.4byte	.LVL91
 2241 0555 600B0000 		.4byte	0xb60
 2242 0559 0D       		.uleb128 0xd
 2243 055a EE010000 		.4byte	.LVL92
 2244 055e 810B0000 		.4byte	0xb81
 2245 0562 0D       		.uleb128 0xd
 2246 0563 F2010000 		.4byte	.LVL93
 2247 0567 600B0000 		.4byte	0xb60
 2248 056b 0D       		.uleb128 0xd
 2249 056c 20020000 		.4byte	.LVL94
 2250 0570 810B0000 		.4byte	0xb81
 2251 0574 0D       		.uleb128 0xd
 2252 0575 24020000 		.4byte	.LVL95
 2253 0579 600B0000 		.4byte	0xb60
 2254 057d 0D       		.uleb128 0xd
 2255 057e 5A020000 		.4byte	.LVL96
 2256 0582 810B0000 		.4byte	0xb81
 2257 0586 0D       		.uleb128 0xd
 2258 0587 5E020000 		.4byte	.LVL97
 2259 058b 600B0000 		.4byte	0xb60
 2260 058f 0D       		.uleb128 0xd
 2261 0590 66020000 		.4byte	.LVL98
 2262 0594 6B0B0000 		.4byte	0xb6b
 2263 0598 0D       		.uleb128 0xd
 2264 0599 6A020000 		.4byte	.LVL99
 2265 059d 600B0000 		.4byte	0xb60
 2266 05a1 0E       		.uleb128 0xe
 2267 05a2 74020000 		.4byte	.LVL100
 2268 05a6 760B0000 		.4byte	0xb76
 2269 05aa B8050000 		.4byte	0x5b8
 2270 05ae 0F       		.uleb128 0xf
 2271 05af 01       		.uleb128 0x1
 2272 05b0 50       		.byte	0x50
 2273 05b1 05       		.uleb128 0x5
 2274 05b2 03       		.byte	0x3
 2275 05b3 2C000000 		.4byte	.LC4
 2276 05b7 00       		.byte	0
 2277 05b8 0D       		.uleb128 0xd
 2278 05b9 78020000 		.4byte	.LVL101
 2279 05bd 600B0000 		.4byte	0xb60
 2280 05c1 0D       		.uleb128 0xd
 2281 05c2 92020000 		.4byte	.LVL102
 2282 05c6 810B0000 		.4byte	0xb81
 2283 05ca 00       		.byte	0
 2284 05cb 15       		.uleb128 0x15
 2285 05cc 38040000 		.4byte	.LASF116
 2286 05d0 01       		.byte	0x1
 2287 05d1 E4       		.byte	0xe4
 2288 05d2 68000000 		.4byte	0x68
 2289 05d6 00000000 		.4byte	.LFB69
 2290 05da C8010000 		.4byte	.LFE69-.LFB69
 2291 05de 01       		.uleb128 0x1
 2292 05df 9C       		.byte	0x9c
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 52


 2293 05e0 24080000 		.4byte	0x824
 2294 05e4 16       		.uleb128 0x16
 2295 05e5 5A000000 		.4byte	.LBB5
 2296 05e9 6E010000 		.4byte	.LBE5-.LBB5
 2297 05ed 17070000 		.4byte	0x717
 2298 05f1 17       		.uleb128 0x17
 2299 05f2 D3020000 		.4byte	.LASF33
 2300 05f6 01       		.byte	0x1
 2301 05f7 FD       		.byte	0xfd
 2302 05f8 68000000 		.4byte	0x68
 2303 05fc 00       		.byte	0
 2304 05fd 16       		.uleb128 0x16
 2305 05fe 82000000 		.4byte	.LBB6
 2306 0602 46010000 		.4byte	.LBE6-.LBB6
 2307 0606 F2060000 		.4byte	0x6f2
 2308 060a 18       		.uleb128 0x18
 2309 060b AB010000 		.4byte	.LASF34
 2310 060f 01       		.byte	0x1
 2311 0610 1001     		.2byte	0x110
 2312 0612 68000000 		.4byte	0x68
 2313 0616 94000000 		.4byte	.LLST4
 2314 061a 18       		.uleb128 0x18
 2315 061b 9A000000 		.4byte	.LASF35
 2316 061f 01       		.byte	0x1
 2317 0620 1201     		.2byte	0x112
 2318 0622 9B000000 		.4byte	0x9b
 2319 0626 CA000000 		.4byte	.LLST5
 2320 062a 0D       		.uleb128 0xd
 2321 062b 8E000000 		.4byte	.LVL123
 2322 062f 600B0000 		.4byte	0xb60
 2323 0633 0E       		.uleb128 0xe
 2324 0634 98000000 		.4byte	.LVL124
 2325 0638 760B0000 		.4byte	0xb76
 2326 063c 4A060000 		.4byte	0x64a
 2327 0640 0F       		.uleb128 0xf
 2328 0641 01       		.uleb128 0x1
 2329 0642 50       		.byte	0x50
 2330 0643 05       		.uleb128 0x5
 2331 0644 03       		.byte	0x3
 2332 0645 38000000 		.4byte	.LC5
 2333 0649 00       		.byte	0
 2334 064a 0D       		.uleb128 0xd
 2335 064b A0000000 		.4byte	.LVL126
 2336 064f D0030000 		.4byte	0x3d0
 2337 0653 0D       		.uleb128 0xd
 2338 0654 A4000000 		.4byte	.LVL127
 2339 0658 02030000 		.4byte	0x302
 2340 065c 0D       		.uleb128 0xd
 2341 065d A8000000 		.4byte	.LVL128
 2342 0661 8C0B0000 		.4byte	0xb8c
 2343 0665 0D       		.uleb128 0xd
 2344 0666 B0000000 		.4byte	.LVL129
 2345 066a 970B0000 		.4byte	0xb97
 2346 066e 0D       		.uleb128 0xd
 2347 066f D0000000 		.4byte	.LVL130
 2348 0673 810B0000 		.4byte	0xb81
 2349 0677 0D       		.uleb128 0xd
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 53


 2350 0678 F0000000 		.4byte	.LVL132
 2351 067c 810B0000 		.4byte	0xb81
 2352 0680 0D       		.uleb128 0xd
 2353 0681 08010000 		.4byte	.LVL134
 2354 0685 810B0000 		.4byte	0xb81
 2355 0689 0D       		.uleb128 0xd
 2356 068a 12010000 		.4byte	.LVL136
 2357 068e 600B0000 		.4byte	0xb60
 2358 0692 0D       		.uleb128 0xd
 2359 0693 1A010000 		.4byte	.LVL137
 2360 0697 6B0B0000 		.4byte	0xb6b
 2361 069b 0D       		.uleb128 0xd
 2362 069c 1E010000 		.4byte	.LVL138
 2363 06a0 600B0000 		.4byte	0xb60
 2364 06a4 0E       		.uleb128 0xe
 2365 06a5 28010000 		.4byte	.LVL139
 2366 06a9 760B0000 		.4byte	0xb76
 2367 06ad BB060000 		.4byte	0x6bb
 2368 06b1 0F       		.uleb128 0xf
 2369 06b2 01       		.uleb128 0x1
 2370 06b3 50       		.byte	0x50
 2371 06b4 05       		.uleb128 0x5
 2372 06b5 03       		.byte	0x3
 2373 06b6 54000000 		.4byte	.LC6
 2374 06ba 00       		.byte	0
 2375 06bb 0D       		.uleb128 0xd
 2376 06bc 50010000 		.4byte	.LVL141
 2377 06c0 8C0B0000 		.4byte	0xb8c
 2378 06c4 0D       		.uleb128 0xd
 2379 06c5 58010000 		.4byte	.LVL142
 2380 06c9 970B0000 		.4byte	0xb97
 2381 06cd 0D       		.uleb128 0xd
 2382 06ce 66010000 		.4byte	.LVL145
 2383 06d2 600B0000 		.4byte	0xb60
 2384 06d6 0D       		.uleb128 0xd
 2385 06d7 72010000 		.4byte	.LVL146
 2386 06db 810B0000 		.4byte	0xb81
 2387 06df 0D       		.uleb128 0xd
 2388 06e0 8C010000 		.4byte	.LVL149
 2389 06e4 600B0000 		.4byte	0xb60
 2390 06e8 0D       		.uleb128 0xd
 2391 06e9 94010000 		.4byte	.LVL150
 2392 06ed 6B0B0000 		.4byte	0xb6b
 2393 06f1 00       		.byte	0
 2394 06f2 0D       		.uleb128 0xd
 2395 06f3 5E000000 		.4byte	.LVL117
 2396 06f7 A20B0000 		.4byte	0xba2
 2397 06fb 0D       		.uleb128 0xd
 2398 06fc 6E000000 		.4byte	.LVL118
 2399 0700 AD0B0000 		.4byte	0xbad
 2400 0704 0D       		.uleb128 0xd
 2401 0705 74000000 		.4byte	.LVL119
 2402 0709 B90B0000 		.4byte	0xbb9
 2403 070d 0D       		.uleb128 0xd
 2404 070e 7A000000 		.4byte	.LVL120
 2405 0712 C50B0000 		.4byte	0xbc5
 2406 0716 00       		.byte	0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 54


 2407 0717 0E       		.uleb128 0xe
 2408 0718 0A000000 		.4byte	.LVL103
 2409 071c D00B0000 		.4byte	0xbd0
 2410 0720 2E070000 		.4byte	0x72e
 2411 0724 0F       		.uleb128 0xf
 2412 0725 01       		.uleb128 0x1
 2413 0726 50       		.byte	0x50
 2414 0727 05       		.uleb128 0x5
 2415 0728 03       		.byte	0x3
 2416 0729 00000000 		.4byte	TimerInterruptHandler
 2417 072d 00       		.byte	0
 2418 072e 0E       		.uleb128 0xe
 2419 072f 10000000 		.4byte	.LVL104
 2420 0733 DB0B0000 		.4byte	0xbdb
 2421 0737 45070000 		.4byte	0x745
 2422 073b 0F       		.uleb128 0xf
 2423 073c 01       		.uleb128 0x1
 2424 073d 50       		.byte	0x50
 2425 073e 05       		.uleb128 0x5
 2426 073f 03       		.byte	0x3
 2427 0740 00000000 		.4byte	RisingEdgeInterruptHandler
 2428 0744 00       		.byte	0
 2429 0745 0E       		.uleb128 0xe
 2430 0746 16000000 		.4byte	.LVL105
 2431 074a E60B0000 		.4byte	0xbe6
 2432 074e 5C070000 		.4byte	0x75c
 2433 0752 0F       		.uleb128 0xf
 2434 0753 01       		.uleb128 0x1
 2435 0754 50       		.byte	0x50
 2436 0755 05       		.uleb128 0x5
 2437 0756 03       		.byte	0x3
 2438 0757 00000000 		.4byte	FallingEdgeInterruptHandler
 2439 075b 00       		.byte	0
 2440 075c 0E       		.uleb128 0xe
 2441 075d 1E000000 		.4byte	.LVL106
 2442 0761 F10B0000 		.4byte	0xbf1
 2443 0765 70070000 		.4byte	0x770
 2444 0769 0F       		.uleb128 0xf
 2445 076a 01       		.uleb128 0x1
 2446 076b 50       		.byte	0x50
 2447 076c 02       		.uleb128 0x2
 2448 076d 74       		.byte	0x74
 2449 076e 00       		.sleb128 0
 2450 076f 00       		.byte	0
 2451 0770 0D       		.uleb128 0xd
 2452 0771 22000000 		.4byte	.LVL107
 2453 0775 FC0B0000 		.4byte	0xbfc
 2454 0779 0E       		.uleb128 0xe
 2455 077a 28000000 		.4byte	.LVL108
 2456 077e 070C0000 		.4byte	0xc07
 2457 0782 8D070000 		.4byte	0x78d
 2458 0786 0F       		.uleb128 0xf
 2459 0787 01       		.uleb128 0x1
 2460 0788 50       		.byte	0x50
 2461 0789 02       		.uleb128 0x2
 2462 078a 08       		.byte	0x8
 2463 078b 2F       		.byte	0x2f
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 55


 2464 078c 00       		.byte	0
 2465 078d 0E       		.uleb128 0xe
 2466 078e 2E000000 		.4byte	.LVL109
 2467 0792 120C0000 		.4byte	0xc12
 2468 0796 A1070000 		.4byte	0x7a1
 2469 079a 0F       		.uleb128 0xf
 2470 079b 01       		.uleb128 0x1
 2471 079c 50       		.byte	0x50
 2472 079d 02       		.uleb128 0x2
 2473 079e 08       		.byte	0x8
 2474 079f 2E       		.byte	0x2e
 2475 07a0 00       		.byte	0
 2476 07a1 0E       		.uleb128 0xe
 2477 07a2 34000000 		.4byte	.LVL110
 2478 07a6 1D0C0000 		.4byte	0xc1d
 2479 07aa B8070000 		.4byte	0x7b8
 2480 07ae 0F       		.uleb128 0xf
 2481 07af 01       		.uleb128 0x1
 2482 07b0 50       		.byte	0x50
 2483 07b1 05       		.uleb128 0x5
 2484 07b2 03       		.byte	0x3
 2485 07b3 00000000 		.4byte	TransmitInterruptHandler
 2486 07b7 00       		.byte	0
 2487 07b8 0E       		.uleb128 0xe
 2488 07b9 3A000000 		.4byte	.LVL111
 2489 07bd 280C0000 		.4byte	0xc28
 2490 07c1 CC070000 		.4byte	0x7cc
 2491 07c5 0F       		.uleb128 0xf
 2492 07c6 01       		.uleb128 0x1
 2493 07c7 50       		.byte	0x50
 2494 07c8 02       		.uleb128 0x2
 2495 07c9 08       		.byte	0x8
 2496 07ca 33       		.byte	0x33
 2497 07cb 00       		.byte	0
 2498 07cc 0E       		.uleb128 0xe
 2499 07cd 40000000 		.4byte	.LVL112
 2500 07d1 330C0000 		.4byte	0xc33
 2501 07d5 E0070000 		.4byte	0x7e0
 2502 07d9 0F       		.uleb128 0xf
 2503 07da 01       		.uleb128 0x1
 2504 07db 50       		.byte	0x50
 2505 07dc 02       		.uleb128 0x2
 2506 07dd 08       		.byte	0x8
 2507 07de 34       		.byte	0x34
 2508 07df 00       		.byte	0
 2509 07e0 0E       		.uleb128 0xe
 2510 07e1 46000000 		.4byte	.LVL113
 2511 07e5 F10B0000 		.4byte	0xbf1
 2512 07e9 F4070000 		.4byte	0x7f4
 2513 07ed 0F       		.uleb128 0xf
 2514 07ee 01       		.uleb128 0x1
 2515 07ef 50       		.byte	0x50
 2516 07f0 02       		.uleb128 0x2
 2517 07f1 74       		.byte	0x74
 2518 07f2 00       		.sleb128 0
 2519 07f3 00       		.byte	0
 2520 07f4 0E       		.uleb128 0xe
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 56


 2521 07f5 4C000000 		.4byte	.LVL114
 2522 07f9 3E0C0000 		.4byte	0xc3e
 2523 07fd 0B080000 		.4byte	0x80b
 2524 0801 0F       		.uleb128 0xf
 2525 0802 01       		.uleb128 0x1
 2526 0803 50       		.byte	0x50
 2527 0804 05       		.uleb128 0x5
 2528 0805 03       		.byte	0x3
 2529 0806 00000000 		.4byte	BackoffInterruptHandler
 2530 080a 00       		.byte	0
 2531 080b 0D       		.uleb128 0xd
 2532 080c 50000000 		.4byte	.LVL115
 2533 0810 490C0000 		.4byte	0xc49
 2534 0814 10       		.uleb128 0x10
 2535 0815 5A000000 		.4byte	.LVL116
 2536 0819 540C0000 		.4byte	0xc54
 2537 081d 0F       		.uleb128 0xf
 2538 081e 01       		.uleb128 0x1
 2539 081f 51       		.byte	0x51
 2540 0820 01       		.uleb128 0x1
 2541 0821 31       		.byte	0x31
 2542 0822 00       		.byte	0
 2543 0823 00       		.byte	0
 2544 0824 19       		.uleb128 0x19
 2545 0825 3D020000 		.4byte	.LASF36
 2546 0829 05       		.byte	0x5
 2547 082a D602     		.2byte	0x2d6
 2548 082c AE000000 		.4byte	0xae
 2549 0830 19       		.uleb128 0x19
 2550 0831 38060000 		.4byte	.LASF37
 2551 0835 06       		.byte	0x6
 2552 0836 1207     		.2byte	0x712
 2553 0838 3C080000 		.4byte	0x83c
 2554 083c 06       		.uleb128 0x6
 2555 083d 76000000 		.4byte	0x76
 2556 0841 1A       		.uleb128 0x1a
 2557 0842 24030000 		.4byte	.LASF38
 2558 0846 01       		.byte	0x1
 2559 0847 10       		.byte	0x10
 2560 0848 E4000000 		.4byte	0xe4
 2561 084c 05       		.uleb128 0x5
 2562 084d 03       		.byte	0x3
 2563 084e 00000000 		.4byte	systemState
 2564 0852 1A       		.uleb128 0x1a
 2565 0853 22000000 		.4byte	.LASF39
 2566 0857 01       		.byte	0x1
 2567 0858 12       		.byte	0x12
 2568 0859 63080000 		.4byte	0x863
 2569 085d 05       		.uleb128 0x5
 2570 085e 03       		.byte	0x3
 2571 085f 00000000 		.4byte	lowFlag
 2572 0863 02       		.uleb128 0x2
 2573 0864 01       		.byte	0x1
 2574 0865 02       		.byte	0x2
 2575 0866 32040000 		.4byte	.LASF40
 2576 086a 1B       		.uleb128 0x1b
 2577 086b 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 57


 2578 086f 7B080000 		.4byte	0x87b
 2579 0873 1C       		.uleb128 0x1c
 2580 0874 BA000000 		.4byte	0xba
 2581 0878 F301     		.2byte	0x1f3
 2582 087a 00       		.byte	0
 2583 087b 1A       		.uleb128 0x1a
 2584 087c B2040000 		.4byte	.LASF41
 2585 0880 01       		.byte	0x1
 2586 0881 2E       		.byte	0x2e
 2587 0882 6A080000 		.4byte	0x86a
 2588 0886 05       		.uleb128 0x5
 2589 0887 03       		.byte	0x3
 2590 0888 00000000 		.4byte	SERIAL_BUFFER
 2591 088c 1A       		.uleb128 0x1a
 2592 088d E0030000 		.4byte	.LASF42
 2593 0891 01       		.byte	0x1
 2594 0892 2F       		.byte	0x2f
 2595 0893 6A080000 		.4byte	0x86a
 2596 0897 05       		.uleb128 0x5
 2597 0898 03       		.byte	0x3
 2598 0899 00000000 		.4byte	SERIAL_RX_BUFFER
 2599 089d 1A       		.uleb128 0x1a
 2600 089e AB050000 		.4byte	.LASF43
 2601 08a2 01       		.byte	0x1
 2602 08a3 30       		.byte	0x30
 2603 08a4 68000000 		.4byte	0x68
 2604 08a8 05       		.uleb128 0x5
 2605 08a9 03       		.byte	0x3
 2606 08aa 00000000 		.4byte	SERIAL_POS
 2607 08ae 1A       		.uleb128 0x1a
 2608 08af C9000000 		.4byte	.LASF44
 2609 08b3 01       		.byte	0x1
 2610 08b4 31       		.byte	0x31
 2611 08b5 68000000 		.4byte	0x68
 2612 08b9 05       		.uleb128 0x5
 2613 08ba 03       		.byte	0x3
 2614 08bb 00000000 		.4byte	SERIAL_RX_POS
 2615 08bf 1A       		.uleb128 0x1a
 2616 08c0 FD020000 		.4byte	.LASF45
 2617 08c4 01       		.byte	0x1
 2618 08c5 32       		.byte	0x32
 2619 08c6 68000000 		.4byte	0x68
 2620 08ca 05       		.uleb128 0x5
 2621 08cb 03       		.byte	0x3
 2622 08cc 00000000 		.4byte	USBUART_RX_DATA_READ_OUT
 2623 08d0 1A       		.uleb128 0x1a
 2624 08d1 8E010000 		.4byte	.LASF46
 2625 08d5 01       		.byte	0x1
 2626 08d6 34       		.byte	0x34
 2627 08d7 68000000 		.4byte	0x68
 2628 08db 05       		.uleb128 0x5
 2629 08dc 03       		.byte	0x3
 2630 08dd 00000000 		.4byte	uartConnected
 2631 08e1 1B       		.uleb128 0x1b
 2632 08e2 2C000000 		.4byte	0x2c
 2633 08e6 F8080000 		.4byte	0x8f8
 2634 08ea 1C       		.uleb128 0x1c
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 58


 2635 08eb BA000000 		.4byte	0xba
 2636 08ef F301     		.2byte	0x1f3
 2637 08f1 1D       		.uleb128 0x1d
 2638 08f2 BA000000 		.4byte	0xba
 2639 08f6 0F       		.byte	0xf
 2640 08f7 00       		.byte	0
 2641 08f8 1A       		.uleb128 0x1a
 2642 08f9 4C020000 		.4byte	.LASF47
 2643 08fd 01       		.byte	0x1
 2644 08fe 36       		.byte	0x36
 2645 08ff E1080000 		.4byte	0x8e1
 2646 0903 05       		.uleb128 0x5
 2647 0904 03       		.byte	0x3
 2648 0905 00000000 		.4byte	CONVERTED_DATA
 2649 0909 1A       		.uleb128 0x1a
 2650 090a 38030000 		.4byte	.LASF48
 2651 090e 01       		.byte	0x1
 2652 090f 37       		.byte	0x37
 2653 0910 68000000 		.4byte	0x68
 2654 0914 05       		.uleb128 0x5
 2655 0915 03       		.byte	0x3
 2656 0916 00000000 		.4byte	dataConvertedReadOutCount
 2657 091a 1A       		.uleb128 0x1a
 2658 091b 28050000 		.4byte	.LASF49
 2659 091f 01       		.byte	0x1
 2660 0920 38       		.byte	0x38
 2661 0921 9B000000 		.4byte	0x9b
 2662 0925 05       		.uleb128 0x5
 2663 0926 03       		.byte	0x3
 2664 0927 00000000 		.4byte	currentChar
 2665 092b 1A       		.uleb128 0x1a
 2666 092c B3010000 		.4byte	.LASF50
 2667 0930 01       		.byte	0x1
 2668 0931 39       		.byte	0x39
 2669 0932 68000000 		.4byte	0x68
 2670 0936 05       		.uleb128 0x5
 2671 0937 03       		.byte	0x3
 2672 0938 00000000 		.4byte	dataSize
 2673 093c 1A       		.uleb128 0x1a
 2674 093d 4E040000 		.4byte	.LASF51
 2675 0941 01       		.byte	0x1
 2676 0942 3A       		.byte	0x3a
 2677 0943 68000000 		.4byte	0x68
 2678 0947 05       		.uleb128 0x5
 2679 0948 03       		.byte	0x3
 2680 0949 00000000 		.4byte	TX_Bit_Counter
 2681 094d 1A       		.uleb128 0x1a
 2682 094e AC040000 		.4byte	.LASF52
 2683 0952 01       		.byte	0x1
 2684 0953 3B       		.byte	0x3b
 2685 0954 68000000 		.4byte	0x68
 2686 0958 05       		.uleb128 0x5
 2687 0959 03       		.byte	0x3
 2688 095a 00000000 		.4byte	count
 2689 095e 1B       		.uleb128 0x1b
 2690 095f 2C000000 		.4byte	0x2c
 2691 0963 6E090000 		.4byte	0x96e
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 59


 2692 0967 1D       		.uleb128 0x1d
 2693 0968 BA000000 		.4byte	0xba
 2694 096c 0F       		.byte	0xf
 2695 096d 00       		.byte	0
 2696 096e 1A       		.uleb128 0x1a
 2697 096f 30030000 		.4byte	.LASF53
 2698 0973 01       		.byte	0x1
 2699 0974 3C       		.byte	0x3c
 2700 0975 5E090000 		.4byte	0x95e
 2701 0979 05       		.uleb128 0x5
 2702 097a 03       		.byte	0x3
 2703 097b 00000000 		.4byte	RX_DATA
 2704 097f 1A       		.uleb128 0x1a
 2705 0980 13000000 		.4byte	.LASF54
 2706 0984 01       		.byte	0x1
 2707 0985 3D       		.byte	0x3d
 2708 0986 68000000 		.4byte	0x68
 2709 098a 05       		.uleb128 0x5
 2710 098b 03       		.byte	0x3
 2711 098c 00000000 		.4byte	RX_Bit_Counter
 2712 0990 1A       		.uleb128 0x1a
 2713 0991 6F020000 		.4byte	.LASF55
 2714 0995 01       		.byte	0x1
 2715 0996 3E       		.byte	0x3e
 2716 0997 9B000000 		.4byte	0x9b
 2717 099b 05       		.uleb128 0x5
 2718 099c 03       		.byte	0x3
 2719 099d 00000000 		.4byte	RX_Char
 2720 09a1 1A       		.uleb128 0x1a
 2721 09a2 A6020000 		.4byte	.LASF56
 2722 09a6 01       		.byte	0x1
 2723 09a7 3F       		.byte	0x3f
 2724 09a8 68000000 		.4byte	0x68
 2725 09ac 05       		.uleb128 0x5
 2726 09ad 03       		.byte	0x3
 2727 09ae 00000000 		.4byte	RX_Lock
 2728 09b2 1A       		.uleb128 0x1a
 2729 09b3 5E030000 		.4byte	.LASF57
 2730 09b7 01       		.byte	0x1
 2731 09b8 40       		.byte	0x40
 2732 09b9 68000000 		.4byte	0x68
 2733 09bd 05       		.uleb128 0x5
 2734 09be 03       		.byte	0x3
 2735 09bf 00000000 		.4byte	TX_Lock
 2736 09c3 1A       		.uleb128 0x1a
 2737 09c4 9C010000 		.4byte	.LASF22
 2738 09c8 01       		.byte	0x1
 2739 09c9 41       		.byte	0x41
 2740 09ca 68000000 		.4byte	0x68
 2741 09ce 05       		.uleb128 0x5
 2742 09cf 03       		.byte	0x3
 2743 09d0 00000000 		.4byte	bitConCatCount
 2744 09d4 1A       		.uleb128 0x1a
 2745 09d5 64010000 		.4byte	.LASF58
 2746 09d9 01       		.byte	0x1
 2747 09da 42       		.byte	0x42
 2748 09db 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 60


 2749 09df 05       		.uleb128 0x5
 2750 09e0 03       		.byte	0x3
 2751 09e1 00000000 		.4byte	TX_Addr
 2752 09e5 1A       		.uleb128 0x1a
 2753 09e6 34000000 		.4byte	.LASF59
 2754 09ea 01       		.byte	0x1
 2755 09eb 43       		.byte	0x43
 2756 09ec 2C000000 		.4byte	0x2c
 2757 09f0 05       		.uleb128 0x5
 2758 09f1 03       		.byte	0x3
 2759 09f2 00000000 		.4byte	TX_length
 2760 09f6 1A       		.uleb128 0x1a
 2761 09f7 D3060000 		.4byte	.LASF60
 2762 09fb 01       		.byte	0x1
 2763 09fc 45       		.byte	0x45
 2764 09fd 68000000 		.4byte	0x68
 2765 0a01 05       		.uleb128 0x5
 2766 0a02 03       		.byte	0x3
 2767 0a03 00000000 		.4byte	startHeaderReceieved
 2768 0a07 1A       		.uleb128 0x1a
 2769 0a08 52030000 		.4byte	.LASF61
 2770 0a0c 01       		.byte	0x1
 2771 0a0d 46       		.byte	0x46
 2772 0a0e 68000000 		.4byte	0x68
 2773 0a12 05       		.uleb128 0x5
 2774 0a13 03       		.byte	0x3
 2775 0a14 00000000 		.4byte	verNumMatch
 2776 0a18 1A       		.uleb128 0x1a
 2777 0a19 22040000 		.4byte	.LASF62
 2778 0a1d 01       		.byte	0x1
 2779 0a1e 47       		.byte	0x47
 2780 0a1f 9B000000 		.4byte	0x9b
 2781 0a23 05       		.uleb128 0x5
 2782 0a24 03       		.byte	0x3
 2783 0a25 00000000 		.4byte	sourceAddr
 2784 0a29 1A       		.uleb128 0x1a
 2785 0a2a 45040000 		.4byte	.LASF63
 2786 0a2e 01       		.byte	0x1
 2787 0a2f 48       		.byte	0x48
 2788 0a30 9B000000 		.4byte	0x9b
 2789 0a34 05       		.uleb128 0x5
 2790 0a35 03       		.byte	0x3
 2791 0a36 00000000 		.4byte	destAddr
 2792 0a3a 1A       		.uleb128 0x1a
 2793 0a3b 83010000 		.4byte	.LASF64
 2794 0a3f 01       		.byte	0x1
 2795 0a40 49       		.byte	0x49
 2796 0a41 68000000 		.4byte	0x68
 2797 0a45 05       		.uleb128 0x5
 2798 0a46 03       		.byte	0x3
 2799 0a47 00000000 		.4byte	dataLength
 2800 0a4b 1A       		.uleb128 0x1a
 2801 0a4c 0E010000 		.4byte	.LASF65
 2802 0a50 01       		.byte	0x1
 2803 0a51 4A       		.byte	0x4a
 2804 0a52 9B000000 		.4byte	0x9b
 2805 0a56 05       		.uleb128 0x5
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 61


 2806 0a57 03       		.byte	0x3
 2807 0a58 00000000 		.4byte	CRCused
 2808 0a5c 1A       		.uleb128 0x1a
 2809 0a5d 04040000 		.4byte	.LASF66
 2810 0a61 01       		.byte	0x1
 2811 0a62 4B       		.byte	0x4b
 2812 0a63 9B000000 		.4byte	0x9b
 2813 0a67 05       		.uleb128 0x5
 2814 0a68 03       		.byte	0x3
 2815 0a69 00000000 		.4byte	HeaderCRC
 2816 0a6d 1A       		.uleb128 0x1a
 2817 0a6e CE010000 		.4byte	.LASF67
 2818 0a72 01       		.byte	0x1
 2819 0a73 4C       		.byte	0x4c
 2820 0a74 68000000 		.4byte	0x68
 2821 0a78 05       		.uleb128 0x5
 2822 0a79 03       		.byte	0x3
 2823 0a7a 00000000 		.4byte	addrDataPrinted
 2824 0a7e 1A       		.uleb128 0x1a
 2825 0a7f 69000000 		.4byte	.LASF68
 2826 0a83 01       		.byte	0x1
 2827 0a84 4D       		.byte	0x4d
 2828 0a85 68000000 		.4byte	0x68
 2829 0a89 05       		.uleb128 0x5
 2830 0a8a 03       		.byte	0x3
 2831 0a8b 00000000 		.4byte	dataPrintedOut
 2832 0a8f 1E       		.uleb128 0x1e
 2833 0a90 EE050000 		.4byte	.LASF69
 2834 0a94 EE050000 		.4byte	.LASF69
 2835 0a98 07       		.byte	0x7
 2836 0a99 5A       		.byte	0x5a
 2837 0a9a 1E       		.uleb128 0x1e
 2838 0a9b 44050000 		.4byte	.LASF70
 2839 0a9f 44050000 		.4byte	.LASF70
 2840 0aa3 08       		.byte	0x8
 2841 0aa4 29       		.byte	0x29
 2842 0aa5 1E       		.uleb128 0x1e
 2843 0aa6 17070000 		.4byte	.LASF71
 2844 0aaa 17070000 		.4byte	.LASF71
 2845 0aae 07       		.byte	0x7
 2846 0aaf 5B       		.byte	0x5b
 2847 0ab0 1E       		.uleb128 0x1e
 2848 0ab1 B6050000 		.4byte	.LASF72
 2849 0ab5 B6050000 		.4byte	.LASF72
 2850 0ab9 09       		.byte	0x9
 2851 0aba 26       		.byte	0x26
 2852 0abb 1E       		.uleb128 0x1e
 2853 0abc 8A030000 		.4byte	.LASF73
 2854 0ac0 8A030000 		.4byte	.LASF73
 2855 0ac4 0A       		.byte	0xa
 2856 0ac5 77       		.byte	0x77
 2857 0ac6 1E       		.uleb128 0x1e
 2858 0ac7 7B040000 		.4byte	.LASF74
 2859 0acb 7B040000 		.4byte	.LASF74
 2860 0acf 0B       		.byte	0xb
 2861 0ad0 5B       		.byte	0x5b
 2862 0ad1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 62


 2863 0ad2 34050000 		.4byte	.LASF75
 2864 0ad6 34050000 		.4byte	.LASF75
 2865 0ada 0C       		.byte	0xc
 2866 0adb 6D       		.byte	0x6d
 2867 0adc 1E       		.uleb128 0x1e
 2868 0add DF020000 		.4byte	.LASF76
 2869 0ae1 DF020000 		.4byte	.LASF76
 2870 0ae5 0B       		.byte	0xb
 2871 0ae6 68       		.byte	0x68
 2872 0ae7 1E       		.uleb128 0x1e
 2873 0ae8 BE020000 		.4byte	.LASF77
 2874 0aec BE020000 		.4byte	.LASF77
 2875 0af0 0B       		.byte	0xb
 2876 0af1 6A       		.byte	0x6a
 2877 0af2 1E       		.uleb128 0x1e
 2878 0af3 A1030000 		.4byte	.LASF78
 2879 0af7 A1030000 		.4byte	.LASF78
 2880 0afb 0B       		.byte	0xb
 2881 0afc 5A       		.byte	0x5a
 2882 0afd 1E       		.uleb128 0x1e
 2883 0afe D7000000 		.4byte	.LASF79
 2884 0b02 D7000000 		.4byte	.LASF79
 2885 0b06 0D       		.byte	0xd
 2886 0b07 68       		.byte	0x68
 2887 0b08 1E       		.uleb128 0x1e
 2888 0b09 29010000 		.4byte	.LASF80
 2889 0b0d 29010000 		.4byte	.LASF80
 2890 0b11 0D       		.byte	0xd
 2891 0b12 6A       		.byte	0x6a
 2892 0b13 1E       		.uleb128 0x1e
 2893 0b14 28020000 		.4byte	.LASF81
 2894 0b18 28020000 		.4byte	.LASF81
 2895 0b1c 0D       		.byte	0xd
 2896 0b1d 5A       		.byte	0x5a
 2897 0b1e 1E       		.uleb128 0x1e
 2898 0b1f 70040000 		.4byte	.LASF82
 2899 0b23 70040000 		.4byte	.LASF82
 2900 0b27 0E       		.byte	0xe
 2901 0b28 26       		.byte	0x26
 2902 0b29 1E       		.uleb128 0x1e
 2903 0b2a 2A000000 		.4byte	.LASF83
 2904 0b2e 2A000000 		.4byte	.LASF83
 2905 0b32 0E       		.byte	0xe
 2906 0b33 29       		.byte	0x29
 2907 0b34 1E       		.uleb128 0x1e
 2908 0b35 93020000 		.4byte	.LASF84
 2909 0b39 93020000 		.4byte	.LASF84
 2910 0b3d 0F       		.byte	0xf
 2911 0b3e 26       		.byte	0x26
 2912 0b3f 1E       		.uleb128 0x1e
 2913 0b40 0C050000 		.4byte	.LASF85
 2914 0b44 0C050000 		.4byte	.LASF85
 2915 0b48 10       		.byte	0x10
 2916 0b49 26       		.byte	0x26
 2917 0b4a 1E       		.uleb128 0x1e
 2918 0b4b 51050000 		.4byte	.LASF86
 2919 0b4f 51050000 		.4byte	.LASF86
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 63


 2920 0b53 0F       		.byte	0xf
 2921 0b54 29       		.byte	0x29
 2922 0b55 1E       		.uleb128 0x1e
 2923 0b56 3E000000 		.4byte	.LASF87
 2924 0b5a 3E000000 		.4byte	.LASF87
 2925 0b5e 10       		.byte	0x10
 2926 0b5f 29       		.byte	0x29
 2927 0b60 1E       		.uleb128 0x1e
 2928 0b61 00000000 		.4byte	.LASF88
 2929 0b65 00000000 		.4byte	.LASF88
 2930 0b69 11       		.byte	0x11
 2931 0b6a 28       		.byte	0x28
 2932 0b6b 1E       		.uleb128 0x1e
 2933 0b6c AE020000 		.4byte	.LASF89
 2934 0b70 AE020000 		.4byte	.LASF89
 2935 0b74 11       		.byte	0x11
 2936 0b75 26       		.byte	0x26
 2937 0b76 1E       		.uleb128 0x1e
 2938 0b77 BC010000 		.4byte	.LASF90
 2939 0b7b BC010000 		.4byte	.LASF90
 2940 0b7f 11       		.byte	0x11
 2941 0b80 24       		.byte	0x24
 2942 0b81 1E       		.uleb128 0x1e
 2943 0b82 9C040000 		.4byte	.LASF91
 2944 0b86 9C040000 		.4byte	.LASF91
 2945 0b8a 11       		.byte	0x11
 2946 0b8b 25       		.byte	0x25
 2947 0b8c 1E       		.uleb128 0x1e
 2948 0b8d 03070000 		.4byte	.LASF92
 2949 0b91 03070000 		.4byte	.LASF92
 2950 0b95 11       		.byte	0x11
 2951 0b96 29       		.byte	0x29
 2952 0b97 1E       		.uleb128 0x1e
 2953 0b98 02060000 		.4byte	.LASF93
 2954 0b9c 02060000 		.4byte	.LASF93
 2955 0ba0 11       		.byte	0x11
 2956 0ba1 2C       		.byte	0x2c
 2957 0ba2 1E       		.uleb128 0x1e
 2958 0ba3 C5050000 		.4byte	.LASF94
 2959 0ba7 C5050000 		.4byte	.LASF94
 2960 0bab 11       		.byte	0x11
 2961 0bac 2E       		.byte	0x2e
 2962 0bad 1F       		.uleb128 0x1f
 2963 0bae ED040000 		.4byte	.LASF95
 2964 0bb2 ED040000 		.4byte	.LASF95
 2965 0bb6 05       		.byte	0x5
 2966 0bb7 3201     		.2byte	0x132
 2967 0bb9 1F       		.uleb128 0x1f
 2968 0bba E4010000 		.4byte	.LASF96
 2969 0bbe E4010000 		.4byte	.LASF96
 2970 0bc2 05       		.byte	0x5
 2971 0bc3 3101     		.2byte	0x131
 2972 0bc5 1E       		.uleb128 0x1e
 2973 0bc6 12060000 		.4byte	.LASF97
 2974 0bca 12060000 		.4byte	.LASF97
 2975 0bce 11       		.byte	0x11
 2976 0bcf 22       		.byte	0x22
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 64


 2977 0bd0 1E       		.uleb128 0x1e
 2978 0bd1 AF030000 		.4byte	.LASF98
 2979 0bd5 AF030000 		.4byte	.LASF98
 2980 0bd9 12       		.byte	0x12
 2981 0bda 18       		.byte	0x18
 2982 0bdb 1E       		.uleb128 0x1e
 2983 0bdc 4D000000 		.4byte	.LASF99
 2984 0be0 4D000000 		.4byte	.LASF99
 2985 0be4 13       		.byte	0x13
 2986 0be5 18       		.byte	0x18
 2987 0be6 1E       		.uleb128 0x1e
 2988 0be7 6C010000 		.4byte	.LASF100
 2989 0beb 6C010000 		.4byte	.LASF100
 2990 0bef 14       		.byte	0x14
 2991 0bf0 18       		.byte	0x18
 2992 0bf1 1E       		.uleb128 0x1e
 2993 0bf2 F1030000 		.4byte	.LASF101
 2994 0bf6 F1030000 		.4byte	.LASF101
 2995 0bfa 15       		.byte	0x15
 2996 0bfb 18       		.byte	0x18
 2997 0bfc 1E       		.uleb128 0x1e
 2998 0bfd D2030000 		.4byte	.LASF102
 2999 0c01 D2030000 		.4byte	.LASF102
 3000 0c05 16       		.byte	0x16
 3001 0c06 5A       		.byte	0x5a
 3002 0c07 1E       		.uleb128 0x1e
 3003 0c08 5B020000 		.4byte	.LASF103
 3004 0c0c 5B020000 		.4byte	.LASF103
 3005 0c10 16       		.byte	0x16
 3006 0c11 68       		.byte	0x68
 3007 0c12 1E       		.uleb128 0x1e
 3008 0c13 D8040000 		.4byte	.LASF104
 3009 0c17 D8040000 		.4byte	.LASF104
 3010 0c1b 16       		.byte	0x16
 3011 0c1c 6A       		.byte	0x6a
 3012 0c1d 1E       		.uleb128 0x1e
 3013 0c1e 0E040000 		.4byte	.LASF105
 3014 0c22 0E040000 		.4byte	.LASF105
 3015 0c26 17       		.byte	0x17
 3016 0c27 18       		.byte	0x18
 3017 0c28 1E       		.uleb128 0x1e
 3018 0c29 23060000 		.4byte	.LASF106
 3019 0c2d 23060000 		.4byte	.LASF106
 3020 0c31 07       		.byte	0x7
 3021 0c32 6A       		.byte	0x6a
 3022 0c33 1E       		.uleb128 0x1e
 3023 0c34 88040000 		.4byte	.LASF107
 3024 0c38 88040000 		.4byte	.LASF107
 3025 0c3c 07       		.byte	0x7
 3026 0c3d 68       		.byte	0x68
 3027 0c3e 1E       		.uleb128 0x1e
 3028 0c3f 16010000 		.4byte	.LASF108
 3029 0c43 16010000 		.4byte	.LASF108
 3030 0c47 18       		.byte	0x18
 3031 0c48 18       		.byte	0x18
 3032 0c49 1E       		.uleb128 0x1e
 3033 0c4a D8050000 		.4byte	.LASF109
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 65


 3034 0c4e D8050000 		.4byte	.LASF109
 3035 0c52 0C       		.byte	0xc
 3036 0c53 59       		.byte	0x59
 3037 0c54 1F       		.uleb128 0x1f
 3038 0c55 3C010000 		.4byte	.LASF110
 3039 0c59 3C010000 		.4byte	.LASF110
 3040 0c5d 05       		.byte	0x5
 3041 0c5e 2E01     		.2byte	0x12e
 3042 0c60 00       		.byte	0
 3043              		.section	.debug_abbrev,"",%progbits
 3044              	.Ldebug_abbrev0:
 3045 0000 01       		.uleb128 0x1
 3046 0001 11       		.uleb128 0x11
 3047 0002 01       		.byte	0x1
 3048 0003 25       		.uleb128 0x25
 3049 0004 0E       		.uleb128 0xe
 3050 0005 13       		.uleb128 0x13
 3051 0006 0B       		.uleb128 0xb
 3052 0007 03       		.uleb128 0x3
 3053 0008 0E       		.uleb128 0xe
 3054 0009 1B       		.uleb128 0x1b
 3055 000a 0E       		.uleb128 0xe
 3056 000b 55       		.uleb128 0x55
 3057 000c 17       		.uleb128 0x17
 3058 000d 11       		.uleb128 0x11
 3059 000e 01       		.uleb128 0x1
 3060 000f 10       		.uleb128 0x10
 3061 0010 17       		.uleb128 0x17
 3062 0011 00       		.byte	0
 3063 0012 00       		.byte	0
 3064 0013 02       		.uleb128 0x2
 3065 0014 24       		.uleb128 0x24
 3066 0015 00       		.byte	0
 3067 0016 0B       		.uleb128 0xb
 3068 0017 0B       		.uleb128 0xb
 3069 0018 3E       		.uleb128 0x3e
 3070 0019 0B       		.uleb128 0xb
 3071 001a 03       		.uleb128 0x3
 3072 001b 0E       		.uleb128 0xe
 3073 001c 00       		.byte	0
 3074 001d 00       		.byte	0
 3075 001e 03       		.uleb128 0x3
 3076 001f 16       		.uleb128 0x16
 3077 0020 00       		.byte	0
 3078 0021 03       		.uleb128 0x3
 3079 0022 0E       		.uleb128 0xe
 3080 0023 3A       		.uleb128 0x3a
 3081 0024 0B       		.uleb128 0xb
 3082 0025 3B       		.uleb128 0x3b
 3083 0026 0B       		.uleb128 0xb
 3084 0027 49       		.uleb128 0x49
 3085 0028 13       		.uleb128 0x13
 3086 0029 00       		.byte	0
 3087 002a 00       		.byte	0
 3088 002b 04       		.uleb128 0x4
 3089 002c 24       		.uleb128 0x24
 3090 002d 00       		.byte	0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 66


 3091 002e 0B       		.uleb128 0xb
 3092 002f 0B       		.uleb128 0xb
 3093 0030 3E       		.uleb128 0x3e
 3094 0031 0B       		.uleb128 0xb
 3095 0032 03       		.uleb128 0x3
 3096 0033 08       		.uleb128 0x8
 3097 0034 00       		.byte	0
 3098 0035 00       		.byte	0
 3099 0036 05       		.uleb128 0x5
 3100 0037 16       		.uleb128 0x16
 3101 0038 00       		.byte	0
 3102 0039 03       		.uleb128 0x3
 3103 003a 0E       		.uleb128 0xe
 3104 003b 3A       		.uleb128 0x3a
 3105 003c 0B       		.uleb128 0xb
 3106 003d 3B       		.uleb128 0x3b
 3107 003e 05       		.uleb128 0x5
 3108 003f 49       		.uleb128 0x49
 3109 0040 13       		.uleb128 0x13
 3110 0041 00       		.byte	0
 3111 0042 00       		.byte	0
 3112 0043 06       		.uleb128 0x6
 3113 0044 35       		.uleb128 0x35
 3114 0045 00       		.byte	0
 3115 0046 49       		.uleb128 0x49
 3116 0047 13       		.uleb128 0x13
 3117 0048 00       		.byte	0
 3118 0049 00       		.byte	0
 3119 004a 07       		.uleb128 0x7
 3120 004b 04       		.uleb128 0x4
 3121 004c 01       		.byte	0x1
 3122 004d 03       		.uleb128 0x3
 3123 004e 0E       		.uleb128 0xe
 3124 004f 0B       		.uleb128 0xb
 3125 0050 0B       		.uleb128 0xb
 3126 0051 49       		.uleb128 0x49
 3127 0052 13       		.uleb128 0x13
 3128 0053 3A       		.uleb128 0x3a
 3129 0054 0B       		.uleb128 0xb
 3130 0055 3B       		.uleb128 0x3b
 3131 0056 0B       		.uleb128 0xb
 3132 0057 01       		.uleb128 0x1
 3133 0058 13       		.uleb128 0x13
 3134 0059 00       		.byte	0
 3135 005a 00       		.byte	0
 3136 005b 08       		.uleb128 0x8
 3137 005c 28       		.uleb128 0x28
 3138 005d 00       		.byte	0
 3139 005e 03       		.uleb128 0x3
 3140 005f 0E       		.uleb128 0xe
 3141 0060 1C       		.uleb128 0x1c
 3142 0061 0B       		.uleb128 0xb
 3143 0062 00       		.byte	0
 3144 0063 00       		.byte	0
 3145 0064 09       		.uleb128 0x9
 3146 0065 2E       		.uleb128 0x2e
 3147 0066 01       		.byte	0x1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 67


 3148 0067 3F       		.uleb128 0x3f
 3149 0068 19       		.uleb128 0x19
 3150 0069 03       		.uleb128 0x3
 3151 006a 0E       		.uleb128 0xe
 3152 006b 3A       		.uleb128 0x3a
 3153 006c 0B       		.uleb128 0xb
 3154 006d 3B       		.uleb128 0x3b
 3155 006e 0B       		.uleb128 0xb
 3156 006f 27       		.uleb128 0x27
 3157 0070 19       		.uleb128 0x19
 3158 0071 11       		.uleb128 0x11
 3159 0072 01       		.uleb128 0x1
 3160 0073 12       		.uleb128 0x12
 3161 0074 06       		.uleb128 0x6
 3162 0075 40       		.uleb128 0x40
 3163 0076 18       		.uleb128 0x18
 3164 0077 9742     		.uleb128 0x2117
 3165 0079 19       		.uleb128 0x19
 3166 007a 01       		.uleb128 0x1
 3167 007b 13       		.uleb128 0x13
 3168 007c 00       		.byte	0
 3169 007d 00       		.byte	0
 3170 007e 0A       		.uleb128 0xa
 3171 007f 34       		.uleb128 0x34
 3172 0080 00       		.byte	0
 3173 0081 03       		.uleb128 0x3
 3174 0082 0E       		.uleb128 0xe
 3175 0083 3A       		.uleb128 0x3a
 3176 0084 0B       		.uleb128 0xb
 3177 0085 3B       		.uleb128 0x3b
 3178 0086 0B       		.uleb128 0xb
 3179 0087 49       		.uleb128 0x49
 3180 0088 13       		.uleb128 0x13
 3181 0089 02       		.uleb128 0x2
 3182 008a 17       		.uleb128 0x17
 3183 008b 00       		.byte	0
 3184 008c 00       		.byte	0
 3185 008d 0B       		.uleb128 0xb
 3186 008e 0B       		.uleb128 0xb
 3187 008f 01       		.byte	0x1
 3188 0090 55       		.uleb128 0x55
 3189 0091 17       		.uleb128 0x17
 3190 0092 01       		.uleb128 0x1
 3191 0093 13       		.uleb128 0x13
 3192 0094 00       		.byte	0
 3193 0095 00       		.byte	0
 3194 0096 0C       		.uleb128 0xc
 3195 0097 34       		.uleb128 0x34
 3196 0098 00       		.byte	0
 3197 0099 03       		.uleb128 0x3
 3198 009a 08       		.uleb128 0x8
 3199 009b 3A       		.uleb128 0x3a
 3200 009c 0B       		.uleb128 0xb
 3201 009d 3B       		.uleb128 0x3b
 3202 009e 0B       		.uleb128 0xb
 3203 009f 49       		.uleb128 0x49
 3204 00a0 13       		.uleb128 0x13
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 68


 3205 00a1 02       		.uleb128 0x2
 3206 00a2 17       		.uleb128 0x17
 3207 00a3 00       		.byte	0
 3208 00a4 00       		.byte	0
 3209 00a5 0D       		.uleb128 0xd
 3210 00a6 898201   		.uleb128 0x4109
 3211 00a9 00       		.byte	0
 3212 00aa 11       		.uleb128 0x11
 3213 00ab 01       		.uleb128 0x1
 3214 00ac 31       		.uleb128 0x31
 3215 00ad 13       		.uleb128 0x13
 3216 00ae 00       		.byte	0
 3217 00af 00       		.byte	0
 3218 00b0 0E       		.uleb128 0xe
 3219 00b1 898201   		.uleb128 0x4109
 3220 00b4 01       		.byte	0x1
 3221 00b5 11       		.uleb128 0x11
 3222 00b6 01       		.uleb128 0x1
 3223 00b7 31       		.uleb128 0x31
 3224 00b8 13       		.uleb128 0x13
 3225 00b9 01       		.uleb128 0x1
 3226 00ba 13       		.uleb128 0x13
 3227 00bb 00       		.byte	0
 3228 00bc 00       		.byte	0
 3229 00bd 0F       		.uleb128 0xf
 3230 00be 8A8201   		.uleb128 0x410a
 3231 00c1 00       		.byte	0
 3232 00c2 02       		.uleb128 0x2
 3233 00c3 18       		.uleb128 0x18
 3234 00c4 9142     		.uleb128 0x2111
 3235 00c6 18       		.uleb128 0x18
 3236 00c7 00       		.byte	0
 3237 00c8 00       		.byte	0
 3238 00c9 10       		.uleb128 0x10
 3239 00ca 898201   		.uleb128 0x4109
 3240 00cd 01       		.byte	0x1
 3241 00ce 11       		.uleb128 0x11
 3242 00cf 01       		.uleb128 0x1
 3243 00d0 31       		.uleb128 0x31
 3244 00d1 13       		.uleb128 0x13
 3245 00d2 00       		.byte	0
 3246 00d3 00       		.byte	0
 3247 00d4 11       		.uleb128 0x11
 3248 00d5 2E       		.uleb128 0x2e
 3249 00d6 01       		.byte	0x1
 3250 00d7 3F       		.uleb128 0x3f
 3251 00d8 19       		.uleb128 0x19
 3252 00d9 03       		.uleb128 0x3
 3253 00da 0E       		.uleb128 0xe
 3254 00db 3A       		.uleb128 0x3a
 3255 00dc 0B       		.uleb128 0xb
 3256 00dd 3B       		.uleb128 0x3b
 3257 00de 0B       		.uleb128 0xb
 3258 00df 27       		.uleb128 0x27
 3259 00e0 19       		.uleb128 0x19
 3260 00e1 11       		.uleb128 0x11
 3261 00e2 01       		.uleb128 0x1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 69


 3262 00e3 12       		.uleb128 0x12
 3263 00e4 06       		.uleb128 0x6
 3264 00e5 40       		.uleb128 0x40
 3265 00e6 18       		.uleb128 0x18
 3266 00e7 9642     		.uleb128 0x2116
 3267 00e9 19       		.uleb128 0x19
 3268 00ea 01       		.uleb128 0x1
 3269 00eb 13       		.uleb128 0x13
 3270 00ec 00       		.byte	0
 3271 00ed 00       		.byte	0
 3272 00ee 12       		.uleb128 0x12
 3273 00ef 0B       		.uleb128 0xb
 3274 00f0 01       		.byte	0x1
 3275 00f1 11       		.uleb128 0x11
 3276 00f2 01       		.uleb128 0x1
 3277 00f3 12       		.uleb128 0x12
 3278 00f4 06       		.uleb128 0x6
 3279 00f5 00       		.byte	0
 3280 00f6 00       		.byte	0
 3281 00f7 13       		.uleb128 0x13
 3282 00f8 2E       		.uleb128 0x2e
 3283 00f9 01       		.byte	0x1
 3284 00fa 3F       		.uleb128 0x3f
 3285 00fb 19       		.uleb128 0x19
 3286 00fc 03       		.uleb128 0x3
 3287 00fd 0E       		.uleb128 0xe
 3288 00fe 3A       		.uleb128 0x3a
 3289 00ff 0B       		.uleb128 0xb
 3290 0100 3B       		.uleb128 0x3b
 3291 0101 05       		.uleb128 0x5
 3292 0102 11       		.uleb128 0x11
 3293 0103 01       		.uleb128 0x1
 3294 0104 12       		.uleb128 0x12
 3295 0105 06       		.uleb128 0x6
 3296 0106 40       		.uleb128 0x40
 3297 0107 18       		.uleb128 0x18
 3298 0108 9742     		.uleb128 0x2117
 3299 010a 19       		.uleb128 0x19
 3300 010b 01       		.uleb128 0x1
 3301 010c 13       		.uleb128 0x13
 3302 010d 00       		.byte	0
 3303 010e 00       		.byte	0
 3304 010f 14       		.uleb128 0x14
 3305 0110 2E       		.uleb128 0x2e
 3306 0111 00       		.byte	0
 3307 0112 3F       		.uleb128 0x3f
 3308 0113 19       		.uleb128 0x19
 3309 0114 03       		.uleb128 0x3
 3310 0115 0E       		.uleb128 0xe
 3311 0116 3A       		.uleb128 0x3a
 3312 0117 0B       		.uleb128 0xb
 3313 0118 3B       		.uleb128 0x3b
 3314 0119 05       		.uleb128 0x5
 3315 011a 11       		.uleb128 0x11
 3316 011b 01       		.uleb128 0x1
 3317 011c 12       		.uleb128 0x12
 3318 011d 06       		.uleb128 0x6
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 70


 3319 011e 40       		.uleb128 0x40
 3320 011f 18       		.uleb128 0x18
 3321 0120 9742     		.uleb128 0x2117
 3322 0122 19       		.uleb128 0x19
 3323 0123 00       		.byte	0
 3324 0124 00       		.byte	0
 3325 0125 15       		.uleb128 0x15
 3326 0126 2E       		.uleb128 0x2e
 3327 0127 01       		.byte	0x1
 3328 0128 3F       		.uleb128 0x3f
 3329 0129 19       		.uleb128 0x19
 3330 012a 03       		.uleb128 0x3
 3331 012b 0E       		.uleb128 0xe
 3332 012c 3A       		.uleb128 0x3a
 3333 012d 0B       		.uleb128 0xb
 3334 012e 3B       		.uleb128 0x3b
 3335 012f 0B       		.uleb128 0xb
 3336 0130 27       		.uleb128 0x27
 3337 0131 19       		.uleb128 0x19
 3338 0132 49       		.uleb128 0x49
 3339 0133 13       		.uleb128 0x13
 3340 0134 8701     		.uleb128 0x87
 3341 0136 19       		.uleb128 0x19
 3342 0137 11       		.uleb128 0x11
 3343 0138 01       		.uleb128 0x1
 3344 0139 12       		.uleb128 0x12
 3345 013a 06       		.uleb128 0x6
 3346 013b 40       		.uleb128 0x40
 3347 013c 18       		.uleb128 0x18
 3348 013d 9742     		.uleb128 0x2117
 3349 013f 19       		.uleb128 0x19
 3350 0140 01       		.uleb128 0x1
 3351 0141 13       		.uleb128 0x13
 3352 0142 00       		.byte	0
 3353 0143 00       		.byte	0
 3354 0144 16       		.uleb128 0x16
 3355 0145 0B       		.uleb128 0xb
 3356 0146 01       		.byte	0x1
 3357 0147 11       		.uleb128 0x11
 3358 0148 01       		.uleb128 0x1
 3359 0149 12       		.uleb128 0x12
 3360 014a 06       		.uleb128 0x6
 3361 014b 01       		.uleb128 0x1
 3362 014c 13       		.uleb128 0x13
 3363 014d 00       		.byte	0
 3364 014e 00       		.byte	0
 3365 014f 17       		.uleb128 0x17
 3366 0150 34       		.uleb128 0x34
 3367 0151 00       		.byte	0
 3368 0152 03       		.uleb128 0x3
 3369 0153 0E       		.uleb128 0xe
 3370 0154 3A       		.uleb128 0x3a
 3371 0155 0B       		.uleb128 0xb
 3372 0156 3B       		.uleb128 0x3b
 3373 0157 0B       		.uleb128 0xb
 3374 0158 49       		.uleb128 0x49
 3375 0159 13       		.uleb128 0x13
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 71


 3376 015a 1C       		.uleb128 0x1c
 3377 015b 0B       		.uleb128 0xb
 3378 015c 00       		.byte	0
 3379 015d 00       		.byte	0
 3380 015e 18       		.uleb128 0x18
 3381 015f 34       		.uleb128 0x34
 3382 0160 00       		.byte	0
 3383 0161 03       		.uleb128 0x3
 3384 0162 0E       		.uleb128 0xe
 3385 0163 3A       		.uleb128 0x3a
 3386 0164 0B       		.uleb128 0xb
 3387 0165 3B       		.uleb128 0x3b
 3388 0166 05       		.uleb128 0x5
 3389 0167 49       		.uleb128 0x49
 3390 0168 13       		.uleb128 0x13
 3391 0169 02       		.uleb128 0x2
 3392 016a 17       		.uleb128 0x17
 3393 016b 00       		.byte	0
 3394 016c 00       		.byte	0
 3395 016d 19       		.uleb128 0x19
 3396 016e 34       		.uleb128 0x34
 3397 016f 00       		.byte	0
 3398 0170 03       		.uleb128 0x3
 3399 0171 0E       		.uleb128 0xe
 3400 0172 3A       		.uleb128 0x3a
 3401 0173 0B       		.uleb128 0xb
 3402 0174 3B       		.uleb128 0x3b
 3403 0175 05       		.uleb128 0x5
 3404 0176 49       		.uleb128 0x49
 3405 0177 13       		.uleb128 0x13
 3406 0178 3F       		.uleb128 0x3f
 3407 0179 19       		.uleb128 0x19
 3408 017a 3C       		.uleb128 0x3c
 3409 017b 19       		.uleb128 0x19
 3410 017c 00       		.byte	0
 3411 017d 00       		.byte	0
 3412 017e 1A       		.uleb128 0x1a
 3413 017f 34       		.uleb128 0x34
 3414 0180 00       		.byte	0
 3415 0181 03       		.uleb128 0x3
 3416 0182 0E       		.uleb128 0xe
 3417 0183 3A       		.uleb128 0x3a
 3418 0184 0B       		.uleb128 0xb
 3419 0185 3B       		.uleb128 0x3b
 3420 0186 0B       		.uleb128 0xb
 3421 0187 49       		.uleb128 0x49
 3422 0188 13       		.uleb128 0x13
 3423 0189 3F       		.uleb128 0x3f
 3424 018a 19       		.uleb128 0x19
 3425 018b 02       		.uleb128 0x2
 3426 018c 18       		.uleb128 0x18
 3427 018d 00       		.byte	0
 3428 018e 00       		.byte	0
 3429 018f 1B       		.uleb128 0x1b
 3430 0190 01       		.uleb128 0x1
 3431 0191 01       		.byte	0x1
 3432 0192 49       		.uleb128 0x49
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 72


 3433 0193 13       		.uleb128 0x13
 3434 0194 01       		.uleb128 0x1
 3435 0195 13       		.uleb128 0x13
 3436 0196 00       		.byte	0
 3437 0197 00       		.byte	0
 3438 0198 1C       		.uleb128 0x1c
 3439 0199 21       		.uleb128 0x21
 3440 019a 00       		.byte	0
 3441 019b 49       		.uleb128 0x49
 3442 019c 13       		.uleb128 0x13
 3443 019d 2F       		.uleb128 0x2f
 3444 019e 05       		.uleb128 0x5
 3445 019f 00       		.byte	0
 3446 01a0 00       		.byte	0
 3447 01a1 1D       		.uleb128 0x1d
 3448 01a2 21       		.uleb128 0x21
 3449 01a3 00       		.byte	0
 3450 01a4 49       		.uleb128 0x49
 3451 01a5 13       		.uleb128 0x13
 3452 01a6 2F       		.uleb128 0x2f
 3453 01a7 0B       		.uleb128 0xb
 3454 01a8 00       		.byte	0
 3455 01a9 00       		.byte	0
 3456 01aa 1E       		.uleb128 0x1e
 3457 01ab 2E       		.uleb128 0x2e
 3458 01ac 00       		.byte	0
 3459 01ad 3F       		.uleb128 0x3f
 3460 01ae 19       		.uleb128 0x19
 3461 01af 3C       		.uleb128 0x3c
 3462 01b0 19       		.uleb128 0x19
 3463 01b1 6E       		.uleb128 0x6e
 3464 01b2 0E       		.uleb128 0xe
 3465 01b3 03       		.uleb128 0x3
 3466 01b4 0E       		.uleb128 0xe
 3467 01b5 3A       		.uleb128 0x3a
 3468 01b6 0B       		.uleb128 0xb
 3469 01b7 3B       		.uleb128 0x3b
 3470 01b8 0B       		.uleb128 0xb
 3471 01b9 00       		.byte	0
 3472 01ba 00       		.byte	0
 3473 01bb 1F       		.uleb128 0x1f
 3474 01bc 2E       		.uleb128 0x2e
 3475 01bd 00       		.byte	0
 3476 01be 3F       		.uleb128 0x3f
 3477 01bf 19       		.uleb128 0x19
 3478 01c0 3C       		.uleb128 0x3c
 3479 01c1 19       		.uleb128 0x19
 3480 01c2 6E       		.uleb128 0x6e
 3481 01c3 0E       		.uleb128 0xe
 3482 01c4 03       		.uleb128 0x3
 3483 01c5 0E       		.uleb128 0xe
 3484 01c6 3A       		.uleb128 0x3a
 3485 01c7 0B       		.uleb128 0xb
 3486 01c8 3B       		.uleb128 0x3b
 3487 01c9 05       		.uleb128 0x5
 3488 01ca 00       		.byte	0
 3489 01cb 00       		.byte	0
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 73


 3490 01cc 00       		.byte	0
 3491              		.section	.debug_loc,"",%progbits
 3492              	.Ldebug_loc0:
 3493              	.LLST0:
 3494 0000 02000000 		.4byte	.LVL0
 3495 0004 52000000 		.4byte	.LVL6
 3496 0008 0200     		.2byte	0x2
 3497 000a 30       		.byte	0x30
 3498 000b 9F       		.byte	0x9f
 3499 000c 52000000 		.4byte	.LVL6
 3500 0010 78000000 		.4byte	.LVL13
 3501 0014 0100     		.2byte	0x1
 3502 0016 50       		.byte	0x50
 3503 0017 00000000 		.4byte	0
 3504 001b 00000000 		.4byte	0
 3505              	.LLST1:
 3506 001f 02000000 		.4byte	.LVL0
 3507 0023 52000000 		.4byte	.LVL6
 3508 0027 0200     		.2byte	0x2
 3509 0029 30       		.byte	0x30
 3510 002a 9F       		.byte	0x9f
 3511 002b 52000000 		.4byte	.LVL6
 3512 002f 68000000 		.4byte	.LVL8
 3513 0033 0100     		.2byte	0x1
 3514 0035 52       		.byte	0x52
 3515 0036 6A000000 		.4byte	.LVL9
 3516 003a 7E000000 		.4byte	.LVL14
 3517 003e 0100     		.2byte	0x1
 3518 0040 52       		.byte	0x52
 3519 0041 00000000 		.4byte	0
 3520 0045 00000000 		.4byte	0
 3521              	.LLST2:
 3522 0049 4A000000 		.4byte	.LVL5
 3523 004d 52000000 		.4byte	.LVL6
 3524 0051 0200     		.2byte	0x2
 3525 0053 3F       		.byte	0x3f
 3526 0054 9F       		.byte	0x9f
 3527 0055 52000000 		.4byte	.LVL6
 3528 0059 76000000 		.4byte	.LVL12
 3529 005d 0100     		.2byte	0x1
 3530 005f 53       		.byte	0x53
 3531 0060 00000000 		.4byte	0
 3532 0064 00000000 		.4byte	0
 3533              	.LLST3:
 3534 0068 2A000000 		.4byte	.LVL23
 3535 006c 2E000000 		.4byte	.LVL24
 3536 0070 0200     		.2byte	0x2
 3537 0072 30       		.byte	0x30
 3538 0073 9F       		.byte	0x9f
 3539 0074 2E000000 		.4byte	.LVL24
 3540 0078 30000000 		.4byte	.LVL25
 3541 007c 0300     		.2byte	0x3
 3542 007e 70       		.byte	0x70
 3543 007f 01       		.sleb128 1
 3544 0080 9F       		.byte	0x9f
 3545 0081 30000000 		.4byte	.LVL25
 3546 0085 33000000 		.4byte	.LVL26-1
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 74


 3547 0089 0100     		.2byte	0x1
 3548 008b 50       		.byte	0x50
 3549 008c 00000000 		.4byte	0
 3550 0090 00000000 		.4byte	0
 3551              	.LLST4:
 3552 0094 82000000 		.4byte	.LVL121
 3553 0098 9C000000 		.4byte	.LVL125
 3554 009c 0200     		.2byte	0x2
 3555 009e 30       		.byte	0x30
 3556 009f 9F       		.byte	0x9f
 3557 00a0 9C000000 		.4byte	.LVL125
 3558 00a4 28010000 		.4byte	.LVL139
 3559 00a8 0100     		.2byte	0x1
 3560 00aa 54       		.byte	0x54
 3561 00ab 28010000 		.4byte	.LVL139
 3562 00af 4C010000 		.4byte	.LVL140
 3563 00b3 0200     		.2byte	0x2
 3564 00b5 36       		.byte	0x36
 3565 00b6 9F       		.byte	0x9f
 3566 00b7 4C010000 		.4byte	.LVL140
 3567 00bb 7A010000 		.4byte	.LVL148
 3568 00bf 0100     		.2byte	0x1
 3569 00c1 55       		.byte	0x55
 3570 00c2 00000000 		.4byte	0
 3571 00c6 00000000 		.4byte	0
 3572              	.LLST5:
 3573 00ca 8A000000 		.4byte	.LVL122
 3574 00ce 9C000000 		.4byte	.LVL125
 3575 00d2 0200     		.2byte	0x2
 3576 00d4 30       		.byte	0x30
 3577 00d5 9F       		.byte	0x9f
 3578 00d6 B0000000 		.4byte	.LVL129
 3579 00da CF000000 		.4byte	.LVL130-1
 3580 00de 0100     		.2byte	0x1
 3581 00e0 50       		.byte	0x50
 3582 00e1 D2000000 		.4byte	.LVL131
 3583 00e5 EF000000 		.4byte	.LVL132-1
 3584 00e9 0100     		.2byte	0x1
 3585 00eb 50       		.byte	0x50
 3586 00ec F2000000 		.4byte	.LVL133
 3587 00f0 07010000 		.4byte	.LVL134-1
 3588 00f4 0100     		.2byte	0x1
 3589 00f6 50       		.byte	0x50
 3590 00f7 28010000 		.4byte	.LVL139
 3591 00fb 4C010000 		.4byte	.LVL140
 3592 00ff 0200     		.2byte	0x2
 3593 0101 30       		.byte	0x30
 3594 0102 9F       		.byte	0x9f
 3595 0103 4C010000 		.4byte	.LVL140
 3596 0107 5A010000 		.4byte	.LVL143
 3597 010b 0100     		.2byte	0x1
 3598 010d 54       		.byte	0x54
 3599 010e 5A010000 		.4byte	.LVL143
 3600 0112 62010000 		.4byte	.LVL144
 3601 0116 0100     		.2byte	0x1
 3602 0118 50       		.byte	0x50
 3603 0119 74010000 		.4byte	.LVL147
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 75


 3604 011d C8010000 		.4byte	.LFE69
 3605 0121 0100     		.2byte	0x1
 3606 0123 54       		.byte	0x54
 3607 0124 00000000 		.4byte	0
 3608 0128 00000000 		.4byte	0
 3609              		.section	.debug_aranges,"",%progbits
 3610 0000 64000000 		.4byte	0x64
 3611 0004 0200     		.2byte	0x2
 3612 0006 00000000 		.4byte	.Ldebug_info0
 3613 000a 04       		.byte	0x4
 3614 000b 00       		.byte	0
 3615 000c 0000     		.2byte	0
 3616 000e 0000     		.2byte	0
 3617 0010 00000000 		.4byte	.LFB63
 3618 0014 90000000 		.4byte	.LFE63-.LFB63
 3619 0018 00000000 		.4byte	.LFB64
 3620 001c F4000000 		.4byte	.LFE64-.LFB64
 3621 0020 00000000 		.4byte	.LFB65
 3622 0024 20000000 		.4byte	.LFE65-.LFB65
 3623 0028 00000000 		.4byte	.LFB66
 3624 002c 80000000 		.4byte	.LFE66-.LFB66
 3625 0030 00000000 		.4byte	.LFB67
 3626 0034 3C000000 		.4byte	.LFE67-.LFB67
 3627 0038 00000000 		.4byte	.LFB68
 3628 003c 30000000 		.4byte	.LFE68-.LFB68
 3629 0040 00000000 		.4byte	.LFB70
 3630 0044 8C000000 		.4byte	.LFE70-.LFB70
 3631 0048 00000000 		.4byte	.LFB72
 3632 004c 44000000 		.4byte	.LFE72-.LFB72
 3633 0050 00000000 		.4byte	.LFB71
 3634 0054 D0020000 		.4byte	.LFE71-.LFB71
 3635 0058 00000000 		.4byte	.LFB69
 3636 005c C8010000 		.4byte	.LFE69-.LFB69
 3637 0060 00000000 		.4byte	0
 3638 0064 00000000 		.4byte	0
 3639              		.section	.debug_ranges,"",%progbits
 3640              	.Ldebug_ranges0:
 3641 0000 4A000000 		.4byte	.LBB2
 3642 0004 4C000000 		.4byte	.LBE2
 3643 0008 50000000 		.4byte	.LBB3
 3644 000c 72000000 		.4byte	.LBE3
 3645 0010 00000000 		.4byte	0
 3646 0014 00000000 		.4byte	0
 3647 0018 00000000 		.4byte	.LFB63
 3648 001c 90000000 		.4byte	.LFE63
 3649 0020 00000000 		.4byte	.LFB64
 3650 0024 F4000000 		.4byte	.LFE64
 3651 0028 00000000 		.4byte	.LFB65
 3652 002c 20000000 		.4byte	.LFE65
 3653 0030 00000000 		.4byte	.LFB66
 3654 0034 80000000 		.4byte	.LFE66
 3655 0038 00000000 		.4byte	.LFB67
 3656 003c 3C000000 		.4byte	.LFE67
 3657 0040 00000000 		.4byte	.LFB68
 3658 0044 30000000 		.4byte	.LFE68
 3659 0048 00000000 		.4byte	.LFB70
 3660 004c 8C000000 		.4byte	.LFE70
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 76


 3661 0050 00000000 		.4byte	.LFB72
 3662 0054 44000000 		.4byte	.LFE72
 3663 0058 00000000 		.4byte	.LFB71
 3664 005c D0020000 		.4byte	.LFE71
 3665 0060 00000000 		.4byte	.LFB69
 3666 0064 C8010000 		.4byte	.LFE69
 3667 0068 00000000 		.4byte	0
 3668 006c 00000000 		.4byte	0
 3669              		.section	.debug_line,"",%progbits
 3670              	.Ldebug_line0:
 3671 0000 93040000 		.section	.debug_str,"MS",%progbits,1
 3671      02005402 
 3671      00000201 
 3671      FB0E0D00 
 3671      01010101 
 3672              	.LASF88:
 3673 0000 55534255 		.ascii	"USBUART_CDCIsReady\000"
 3673      4152545F 
 3673      43444349 
 3673      73526561 
 3673      647900
 3674              	.LASF54:
 3675 0013 52585F42 		.ascii	"RX_Bit_Counter\000"
 3675      69745F43 
 3675      6F756E74 
 3675      657200
 3676              	.LASF39:
 3677 0022 6C6F7746 		.ascii	"lowFlag\000"
 3677      6C616700 
 3678              	.LASF83:
 3679 002a 49444C45 		.ascii	"IDLE_Read\000"
 3679      5F526561 
 3679      6400
 3680              	.LASF59:
 3681 0034 54585F6C 		.ascii	"TX_length\000"
 3681      656E6774 
 3681      6800
 3682              	.LASF87:
 3683 003e 434F4C4C 		.ascii	"COLLISION_Read\000"
 3683      4953494F 
 3683      4E5F5265 
 3683      616400
 3684              	.LASF99:
 3685 004d 52697369 		.ascii	"RisingEdgeISR_StartEx\000"
 3685      6E674564 
 3685      67654953 
 3685      525F5374 
 3685      61727445 
 3686              	.LASF114:
 3687 0063 73746174 		.ascii	"state\000"
 3687      6500
 3688              	.LASF68:
 3689 0069 64617461 		.ascii	"dataPrintedOut\000"
 3689      5072696E 
 3689      7465644F 
 3689      757400
 3690              	.LASF24:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 77


 3691 0078 52656365 		.ascii	"ReceiveInterruptHandler\000"
 3691      69766549 
 3691      6E746572 
 3691      72757074 
 3691      48616E64 
 3692              	.LASF2:
 3693 0090 73686F72 		.ascii	"short int\000"
 3693      7420696E 
 3693      7400
 3694              	.LASF35:
 3695 009a 696E7075 		.ascii	"input\000"
 3695      7400
 3696              	.LASF17:
 3697 00a0 73697A65 		.ascii	"sizetype\000"
 3697      74797065 
 3697      00
 3698              	.LASF27:
 3699 00a9 54696D65 		.ascii	"TimerInterruptHandler\000"
 3699      72496E74 
 3699      65727275 
 3699      70744861 
 3699      6E646C65 
 3700              	.LASF115:
 3701 00bf 67657448 		.ascii	"getHeader\000"
 3701      65616465 
 3701      7200
 3702              	.LASF44:
 3703 00c9 53455249 		.ascii	"SERIAL_RX_POS\000"
 3703      414C5F52 
 3703      585F504F 
 3703      5300
 3704              	.LASF79:
 3705 00d7 54696D65 		.ascii	"Timer_WritePeriod\000"
 3705      725F5772 
 3705      69746550 
 3705      6572696F 
 3705      6400
 3706              	.LASF25:
 3707 00e9 5472616E 		.ascii	"TransmitInterruptHandler\000"
 3707      736D6974 
 3707      496E7465 
 3707      72727570 
 3707      7448616E 
 3708              	.LASF16:
 3709 0102 6C6F6E67 		.ascii	"long double\000"
 3709      20646F75 
 3709      626C6500 
 3710              	.LASF65:
 3711 010e 43524375 		.ascii	"CRCused\000"
 3711      73656400 
 3712              	.LASF108:
 3713 0116 4261636B 		.ascii	"BackoffISR_StartEx\000"
 3713      6F666649 
 3713      53525F53 
 3713      74617274 
 3713      457800
 3714              	.LASF80:
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 78


 3715 0129 54696D65 		.ascii	"Timer_WriteCounter\000"
 3715      725F5772 
 3715      69746543 
 3715      6F756E74 
 3715      657200
 3716              	.LASF110:
 3717 013c 55534255 		.ascii	"USBUART_Start\000"
 3717      4152545F 
 3717      53746172 
 3717      7400
 3718              	.LASF19:
 3719 014a 636F6C6C 		.ascii	"collisionState\000"
 3719      6973696F 
 3719      6E537461 
 3719      746500
 3720              	.LASF31:
 3721 0159 63686563 		.ascii	"checkState\000"
 3721      6B537461 
 3721      746500
 3722              	.LASF58:
 3723 0164 54585F41 		.ascii	"TX_Addr\000"
 3723      64647200 
 3724              	.LASF100:
 3725 016c 46616C6C 		.ascii	"FallingEdgeISR_StartEx\000"
 3725      696E6745 
 3725      64676549 
 3725      53525F53 
 3725      74617274 
 3726              	.LASF64:
 3727 0183 64617461 		.ascii	"dataLength\000"
 3727      4C656E67 
 3727      746800
 3728              	.LASF46:
 3729 018e 75617274 		.ascii	"uartConnected\000"
 3729      436F6E6E 
 3729      65637465 
 3729      6400
 3730              	.LASF22:
 3731 019c 62697443 		.ascii	"bitConCatCount\000"
 3731      6F6E4361 
 3731      74436F75 
 3731      6E7400
 3732              	.LASF34:
 3733 01ab 696E436F 		.ascii	"inCount\000"
 3733      756E7400 
 3734              	.LASF50:
 3735 01b3 64617461 		.ascii	"dataSize\000"
 3735      53697A65 
 3735      00
 3736              	.LASF90:
 3737 01bc 55534255 		.ascii	"USBUART_PutString\000"
 3737      4152545F 
 3737      50757453 
 3737      7472696E 
 3737      6700
 3738              	.LASF67:
 3739 01ce 61646472 		.ascii	"addrDataPrinted\000"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 79


 3739      44617461 
 3739      5072696E 
 3739      74656400 
 3740              	.LASF12:
 3741 01de 666C6F61 		.ascii	"float\000"
 3741      7400
 3742              	.LASF96:
 3743 01e4 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3743      4152545F 
 3743      47657443 
 3743      6F6E6669 
 3743      67757261 
 3744              	.LASF6:
 3745 01fd 6C6F6E67 		.ascii	"long long int\000"
 3745      206C6F6E 
 3745      6720696E 
 3745      7400
 3746              	.LASF7:
 3747 020b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3747      206C6F6E 
 3747      6720756E 
 3747      7369676E 
 3747      65642069 
 3748              	.LASF21:
 3749 0222 53746174 		.ascii	"State\000"
 3749      6500
 3750              	.LASF81:
 3751 0228 54696D65 		.ascii	"Timer_Start\000"
 3751      725F5374 
 3751      61727400 
 3752              	.LASF4:
 3753 0234 6C6F6E67 		.ascii	"long int\000"
 3753      20696E74 
 3753      00
 3754              	.LASF36:
 3755 023d 55534255 		.ascii	"USBUART_device\000"
 3755      4152545F 
 3755      64657669 
 3755      636500
 3756              	.LASF47:
 3757 024c 434F4E56 		.ascii	"CONVERTED_DATA\000"
 3757      45525445 
 3757      445F4441 
 3757      544100
 3758              	.LASF103:
 3759 025b 54696D65 		.ascii	"TimerTX_WritePeriod\000"
 3759      7254585F 
 3759      57726974 
 3759      65506572 
 3759      696F6400 
 3760              	.LASF55:
 3761 026f 52585F43 		.ascii	"RX_Char\000"
 3761      68617200 
 3762              	.LASF30:
 3763 0277 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 3763      696E6745 
 3763      64676549 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 80


 3763      6E746572 
 3763      72757074 
 3764              	.LASF84:
 3765 0293 42555359 		.ascii	"BUSY_Write\000"
 3765      5F577269 
 3765      746500
 3766              	.LASF28:
 3767 029e 6261636B 		.ascii	"backoff\000"
 3767      6F666600 
 3768              	.LASF56:
 3769 02a6 52585F4C 		.ascii	"RX_Lock\000"
 3769      6F636B00 
 3770              	.LASF89:
 3771 02ae 55534255 		.ascii	"USBUART_PutCRLF\000"
 3771      4152545F 
 3771      50757443 
 3771      524C4600 
 3772              	.LASF77:
 3773 02be 4261636B 		.ascii	"Backoff_WriteCounter\000"
 3773      6F66665F 
 3773      57726974 
 3773      65436F75 
 3773      6E746572 
 3774              	.LASF33:
 3775 02d3 7072696E 		.ascii	"printPrompt\000"
 3775      7450726F 
 3775      6D707400 
 3776              	.LASF76:
 3777 02df 4261636B 		.ascii	"Backoff_WritePeriod\000"
 3777      6F66665F 
 3777      57726974 
 3777      65506572 
 3777      696F6400 
 3778              	.LASF18:
 3779 02f3 69646C65 		.ascii	"idleState\000"
 3779      53746174 
 3779      6500
 3780              	.LASF45:
 3781 02fd 55534255 		.ascii	"USBUART_RX_DATA_READ_OUT\000"
 3781      4152545F 
 3781      52585F44 
 3781      4154415F 
 3781      52454144 
 3782              	.LASF1:
 3783 0316 756E7369 		.ascii	"unsigned char\000"
 3783      676E6564 
 3783      20636861 
 3783      7200
 3784              	.LASF38:
 3785 0324 73797374 		.ascii	"systemState\000"
 3785      656D5374 
 3785      61746500 
 3786              	.LASF53:
 3787 0330 52585F44 		.ascii	"RX_DATA\000"
 3787      41544100 
 3788              	.LASF48:
 3789 0338 64617461 		.ascii	"dataConvertedReadOutCount\000"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 81


 3789      436F6E76 
 3789      65727465 
 3789      64526561 
 3789      644F7574 
 3790              	.LASF61:
 3791 0352 7665724E 		.ascii	"verNumMatch\000"
 3791      756D4D61 
 3791      74636800 
 3792              	.LASF57:
 3793 035e 54585F4C 		.ascii	"TX_Lock\000"
 3793      6F636B00 
 3794              	.LASF0:
 3795 0366 7369676E 		.ascii	"signed char\000"
 3795      65642063 
 3795      68617200 
 3796              	.LASF26:
 3797 0372 4261636B 		.ascii	"BackoffInterruptHandler\000"
 3797      6F666649 
 3797      6E746572 
 3797      72757074 
 3797      48616E64 
 3798              	.LASF73:
 3799 038a 43794465 		.ascii	"CyDelayUs\000"
 3799      6C617955 
 3799      7300
 3800              	.LASF8:
 3801 0394 756E7369 		.ascii	"unsigned int\000"
 3801      676E6564 
 3801      20696E74 
 3801      00
 3802              	.LASF78:
 3803 03a1 4261636B 		.ascii	"Backoff_Start\000"
 3803      6F66665F 
 3803      53746172 
 3803      7400
 3804              	.LASF98:
 3805 03af 54696D65 		.ascii	"TimerISR_StartEx\000"
 3805      72495352 
 3805      5F537461 
 3805      72744578 
 3805      00
 3806              	.LASF5:
 3807 03c0 6C6F6E67 		.ascii	"long unsigned int\000"
 3807      20756E73 
 3807      69676E65 
 3807      6420696E 
 3807      7400
 3808              	.LASF102:
 3809 03d2 54696D65 		.ascii	"TimerTX_Start\000"
 3809      7254585F 
 3809      53746172 
 3809      7400
 3810              	.LASF42:
 3811 03e0 53455249 		.ascii	"SERIAL_RX_BUFFER\000"
 3811      414C5F52 
 3811      585F4255 
 3811      46464552 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 82


 3811      00
 3812              	.LASF101:
 3813 03f1 52656365 		.ascii	"ReceiveISR_StartEx\000"
 3813      69766549 
 3813      53525F53 
 3813      74617274 
 3813      457800
 3814              	.LASF66:
 3815 0404 48656164 		.ascii	"HeaderCRC\000"
 3815      65724352 
 3815      4300
 3816              	.LASF105:
 3817 040e 5472616E 		.ascii	"TransmitISR_StartEx\000"
 3817      736D6974 
 3817      4953525F 
 3817      53746172 
 3817      74457800 
 3818              	.LASF62:
 3819 0422 736F7572 		.ascii	"sourceAddr\000"
 3819      63654164 
 3819      647200
 3820              	.LASF14:
 3821 042d 63686172 		.ascii	"char\000"
 3821      00
 3822              	.LASF40:
 3823 0432 5F426F6F 		.ascii	"_Bool\000"
 3823      6C00
 3824              	.LASF116:
 3825 0438 6D61696E 		.ascii	"main\000"
 3825      00
 3826              	.LASF10:
 3827 043d 696E7433 		.ascii	"int32_t\000"
 3827      325F7400 
 3828              	.LASF63:
 3829 0445 64657374 		.ascii	"destAddr\000"
 3829      41646472 
 3829      00
 3830              	.LASF51:
 3831 044e 54585F42 		.ascii	"TX_Bit_Counter\000"
 3831      69745F43 
 3831      6F756E74 
 3831      657200
 3832              	.LASF3:
 3833 045d 73686F72 		.ascii	"short unsigned int\000"
 3833      7420756E 
 3833      7369676E 
 3833      65642069 
 3833      6E7400
 3834              	.LASF82:
 3835 0470 49444C45 		.ascii	"IDLE_Write\000"
 3835      5F577269 
 3835      746500
 3836              	.LASF74:
 3837 047b 4261636B 		.ascii	"Backoff_Stop\000"
 3837      6F66665F 
 3837      53746F70 
 3837      00
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 83


 3838              	.LASF107:
 3839 0488 54696D65 		.ascii	"TimerRX_WritePeriod\000"
 3839      7252585F 
 3839      57726974 
 3839      65506572 
 3839      696F6400 
 3840              	.LASF91:
 3841 049c 55534255 		.ascii	"USBUART_PutChar\000"
 3841      4152545F 
 3841      50757443 
 3841      68617200 
 3842              	.LASF52:
 3843 04ac 636F756E 		.ascii	"count\000"
 3843      7400
 3844              	.LASF41:
 3845 04b2 53455249 		.ascii	"SERIAL_BUFFER\000"
 3845      414C5F42 
 3845      55464645 
 3845      5200
 3846              	.LASF32:
 3847 04c0 63686563 		.ascii	"checkNewBytes\000"
 3847      6B4E6577 
 3847      42797465 
 3847      7300
 3848              	.LASF20:
 3849 04ce 62757379 		.ascii	"busyState\000"
 3849      53746174 
 3849      6500
 3850              	.LASF104:
 3851 04d8 54696D65 		.ascii	"TimerTX_WriteCounter\000"
 3851      7254585F 
 3851      57726974 
 3851      65436F75 
 3851      6E746572 
 3852              	.LASF95:
 3853 04ed 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3853      4152545F 
 3853      4973436F 
 3853      6E666967 
 3853      75726174 
 3854              	.LASF85:
 3855 050c 434F4C4C 		.ascii	"COLLISION_Write\000"
 3855      4953494F 
 3855      4E5F5772 
 3855      69746500 
 3856              	.LASF112:
 3857 051c 6D61696E 		.ascii	"main.c\000"
 3857      2E6300
 3858              	.LASF15:
 3859 0523 72656738 		.ascii	"reg8\000"
 3859      00
 3860              	.LASF49:
 3861 0528 63757272 		.ascii	"currentChar\000"
 3861      656E7443 
 3861      68617200 
 3862              	.LASF75:
 3863 0534 5052535F 		.ascii	"PRS_Read\000"
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 84


 3863      52656164 
 3863      00
 3864              	.LASF13:
 3865 053d 646F7562 		.ascii	"double\000"
 3865      6C6500
 3866              	.LASF70:
 3867 0544 52454345 		.ascii	"RECEIVE_Read\000"
 3867      4956455F 
 3867      52656164 
 3867      00
 3868              	.LASF86:
 3869 0551 42555359 		.ascii	"BUSY_Read\000"
 3869      5F526561 
 3869      6400
 3870              	.LASF113:
 3871 055b 433A5C32 		.ascii	"C:\\2018 Winter\\CE4950\\GroupProject\\ce4950lab1\\"
 3871      30313820 
 3871      57696E74 
 3871      65725C43 
 3871      45343935 
 3872 0589 4E657477 		.ascii	"NetworkingProject.cydsn\000"
 3872      6F726B69 
 3872      6E675072 
 3872      6F6A6563 
 3872      742E6379 
 3873              	.LASF9:
 3874 05a1 5F5F696E 		.ascii	"__int32_t\000"
 3874      7433325F 
 3874      7400
 3875              	.LASF43:
 3876 05ab 53455249 		.ascii	"SERIAL_POS\000"
 3876      414C5F50 
 3876      4F5300
 3877              	.LASF72:
 3878 05b6 5452414E 		.ascii	"TRANSMIT_Write\000"
 3878      534D4954 
 3878      5F577269 
 3878      746500
 3879              	.LASF94:
 3880 05c5 55534255 		.ascii	"USBUART_GetDTERate\000"
 3880      4152545F 
 3880      47657444 
 3880      54455261 
 3880      746500
 3881              	.LASF109:
 3882 05d8 5052535F 		.ascii	"PRS_Start\000"
 3882      53746172 
 3882      7400
 3883              	.LASF23:
 3884 05e2 63686172 		.ascii	"characterRX\000"
 3884      61637465 
 3884      72525800 
 3885              	.LASF69:
 3886 05ee 54696D65 		.ascii	"TimerRX_Start\000"
 3886      7252585F 
 3886      53746172 
 3886      7400
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 85


 3887              	.LASF11:
 3888 05fc 75696E74 		.ascii	"uint8\000"
 3888      3800
 3889              	.LASF93:
 3890 0602 55534255 		.ascii	"USBUART_GetChar\000"
 3890      4152545F 
 3890      47657443 
 3890      68617200 
 3891              	.LASF97:
 3892 0612 55534255 		.ascii	"USBUART_CDC_Init\000"
 3892      4152545F 
 3892      4344435F 
 3892      496E6974 
 3892      00
 3893              	.LASF106:
 3894 0623 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 3894      7252585F 
 3894      57726974 
 3894      65436F75 
 3894      6E746572 
 3895              	.LASF37:
 3896 0638 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3896      52784275 
 3896      66666572 
 3896      00
 3897              	.LASF111:
 3898 0645 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3898      43313120 
 3898      352E342E 
 3898      31203230 
 3898      31363036 
 3899 0678 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3899      20726576 
 3899      6973696F 
 3899      6E203233 
 3899      37373135 
 3900 06ab 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3900      66756E63 
 3900      74696F6E 
 3900      2D736563 
 3900      74696F6E 
 3901              	.LASF60:
 3902 06d3 73746172 		.ascii	"startHeaderReceieved\000"
 3902      74486561 
 3902      64657252 
 3902      65636569 
 3902      65766564 
 3903              	.LASF29:
 3904 06e8 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 3904      6E674564 
 3904      6765496E 
 3904      74657272 
 3904      75707448 
 3905              	.LASF92:
 3906 0703 55534255 		.ascii	"USBUART_DataIsReady\000"
 3906      4152545F 
 3906      44617461 
ARM GAS  C:\Users\wellst\AppData\Local\Temp\ccHRpOFy.s 			page 86


 3906      49735265 
 3906      61647900 
 3907              	.LASF71:
 3908 0717 54696D65 		.ascii	"TimerRX_Stop\000"
 3908      7252585F 
 3908      53746F70 
 3908      00
 3909              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
