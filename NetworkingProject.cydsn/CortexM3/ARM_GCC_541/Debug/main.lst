ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	systemState,1,1
  20              		.global	lowFlag
  21              		.bss
  22              		.type	lowFlag, %object
  23              		.size	lowFlag, 1
  24              	lowFlag:
  25 0000 00       		.space	1
  26              		.comm	transmitData,8000,4
  27              		.comm	buffer,500,4
  28              		.comm	receiveBuffer,500,4
  29              		.comm	receiveData,16,4
  30              		.global	position
  31 0001 000000   		.align	2
  32              		.type	position, %object
  33              		.size	position, 4
  34              	position:
  35 0004 00000000 		.space	4
  36              		.global	receivePosition
  37              		.align	2
  38              		.type	receivePosition, %object
  39              		.size	receivePosition, 4
  40              	receivePosition:
  41 0008 00000000 		.space	4
  42              		.global	dataBitsRead
  43              		.align	2
  44              		.type	dataBitsRead, %object
  45              		.size	dataBitsRead, 4
  46              	dataBitsRead:
  47 000c 00000000 		.space	4
  48              		.global	idx
  49              		.align	2
  50              		.type	idx, %object
  51              		.size	idx, 4
  52              	idx:
  53 0010 00000000 		.space	4
  54              		.comm	dataPtr,4,4
  55              		.global	transmitLock
  56              		.align	2
  57              		.type	transmitLock, %object
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 2


  58              		.size	transmitLock, 4
  59              	transmitLock:
  60 0014 00000000 		.space	4
  61              		.global	receiveLock
  62              		.align	2
  63              		.type	receiveLock, %object
  64              		.size	receiveLock, 4
  65              	receiveLock:
  66 0018 00000000 		.space	4
  67              		.global	collisionLock
  68              		.type	collisionLock, %object
  69              		.size	collisionLock, 1
  70              	collisionLock:
  71 001c 00       		.space	1
  72              		.global	sourceAddress
  73              		.type	sourceAddress, %object
  74              		.size	sourceAddress, 1
  75              	sourceAddress:
  76 001d 00       		.space	1
  77              		.global	destinationAddress
  78              		.type	destinationAddress, %object
  79              		.size	destinationAddress, 1
  80              	destinationAddress:
  81 001e 00       		.space	1
  82              		.global	messageLength
  83 001f 00       		.align	2
  84              		.type	messageLength, %object
  85              		.size	messageLength, 4
  86              	messageLength:
  87 0020 00000000 		.space	4
  88              		.global	crcUsage
  89              		.type	crcUsage, %object
  90              		.size	crcUsage, 1
  91              	crcUsage:
  92 0024 00       		.space	1
  93              		.global	headerCRC
  94              		.type	headerCRC, %object
  95              		.size	headerCRC, 1
  96              	headerCRC:
  97 0025 00       		.space	1
  98              		.global	addressZeroReceive
  99 0026 0000     		.align	2
 100              		.type	addressZeroReceive, %object
 101              		.size	addressZeroReceive, 4
 102              	addressZeroReceive:
 103 0028 00000000 		.space	4
 104              		.comm	currentChar,1,1
 105              		.comm	dataSize,4,4
 106              		.global	transmitBitCount
 107              		.align	2
 108              		.type	transmitBitCount, %object
 109              		.size	transmitBitCount, 4
 110              	transmitBitCount:
 111 002c 00000000 		.space	4
 112              		.global	receiveBitCount
 113              		.align	2
 114              		.type	receiveBitCount, %object
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 3


 115              		.size	receiveBitCount, 4
 116              	receiveBitCount:
 117 0030 00000000 		.space	4
 118              		.global	concatCount
 119              		.align	2
 120              		.type	concatCount, %object
 121              		.size	concatCount, 4
 122              	concatCount:
 123 0034 00000000 		.space	4
 124              		.global	transmitAddress
 125              		.type	transmitAddress, %object
 126              		.size	transmitAddress, 1
 127              	transmitAddress:
 128 0038 00       		.space	1
 129              		.global	transmitMode
 130              		.data
 131              		.type	transmitMode, %object
 132              		.size	transmitMode, 1
 133              	transmitMode:
 134 0000 01       		.byte	1
 135              		.section	.text.nothing,"ax",%progbits
 136              		.align	2
 137              		.global	nothing
 138              		.thumb
 139              		.thumb_func
 140              		.type	nothing, %function
 141              	nothing:
 142              	.LFB64:
 143              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - systemState machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdio.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <stdbool.h>
  26:main.c        **** 
  27:main.c        **** #define BROADCAST_ADDRESS 0
  28:main.c        **** #define VERSION_NUMBER 0x01
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 4


  29:main.c        **** #define CRC 128 //CRCs are not being used
  30:main.c        **** #define HEADER 0b1110111 //header CRC not being used 
  31:main.c        **** #define BLANK_MESSAGE_CRC 0x77
  32:main.c        **** #define COLLISION_PERIOD     52
  33:main.c        **** #define COLLISION_COUNTER    51
  34:main.c        **** #define IDLE_PERIOD     830
  35:main.c        **** #define IDLE_COUNTER    829
  36:main.c        **** #define RECEIVE_PERIOD   52
  37:main.c        **** #define RECEIVE_COUNTER  51
  38:main.c        **** #define TRANSMIT_PERIOD     47
  39:main.c        **** #define TRANSMIT_COUNTER    46 
  40:main.c        **** #define BUFFER_SIZE 500
  41:main.c        **** //student assigned addressses
  42:main.c        **** #define ADDR1Start 46
  43:main.c        **** #define ADDR2Start 55
  44:main.c        **** #define ADDR3Start 124 //Kamith didn't have one listed so gave him 124
  45:main.c        **** #define ADDRLength 2
  46:main.c        **** 
  47:main.c        **** #define MESSAGE_POS 7
  48:main.c        **** #define HEADER_SIZE
  49:main.c        **** 
  50:main.c        **** 
  51:main.c        **** //States include: 
  52:main.c        **** //Busy - signals that the channel monitor is busy
  53:main.c        **** //       and in either line high or line low 
  54:main.c        **** //Collision - collision detected, line high
  55:main.c        **** //Idle - initialized state looking for rising
  56:main.c        **** //       edge to occur
  57:main.c        **** volatile enum state {IDLE, COLLISION, BUSY} systemState;
  58:main.c        **** 
  59:main.c        **** //flag to help determine if signal level is low or high
  60:main.c        **** volatile _Bool lowFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile unsigned char transmitData[BUFFER_SIZE][16];
  63:main.c        **** volatile unsigned char buffer[BUFFER_SIZE];
  64:main.c        **** volatile unsigned char receiveBuffer[BUFFER_SIZE];
  65:main.c        **** volatile unsigned char receiveData[16]; 
  66:main.c        **** volatile int position = 0;
  67:main.c        **** volatile int receivePosition = 0;
  68:main.c        **** volatile int dataBitsRead = 0;
  69:main.c        **** volatile int idx = 0;
  70:main.c        **** volatile char* dataPtr;
  71:main.c        **** volatile int transmitLock = 0; // High when transmitting
  72:main.c        **** volatile int receiveLock = 0;
  73:main.c        **** volatile bool collisionLock = false; // High when collision should not.
  74:main.c        **** 
  75:main.c        **** volatile char sourceAddress = 0x00;
  76:main.c        **** volatile char destinationAddress = 0x00;
  77:main.c        **** volatile int  messageLength = 0;
  78:main.c        **** volatile char crcUsage = 0x00;
  79:main.c        **** volatile char headerCRC = 0x00;
  80:main.c        **** volatile int addressZeroReceive = 0;
  81:main.c        **** volatile char currentChar;
  82:main.c        **** volatile int dataSize;
  83:main.c        **** volatile int transmitBitCount = 0;
  84:main.c        **** volatile int receiveBitCount = 0;
  85:main.c        **** volatile int concatCount = 0;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 5


  86:main.c        **** volatile unsigned char transmitAddress = 0; 
  87:main.c        **** 
  88:main.c        **** bool transmitMode = true; // Whether currently transmitting or receiving
  89:main.c        **** 
  90:main.c        **** void checkForNewData(); 
  91:main.c        **** void stateDiagram(); 
  92:main.c        **** void nothing() {
 144              		.loc 1 92 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              		.cfi_def_cfa_offset 16
 154 0004 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
  93:main.c        ****     int junk = 1;
 156              		.loc 1 93 0
 157 0006 0123     		movs	r3, #1
 158 0008 7B60     		str	r3, [r7, #4]
  94:main.c        ****     return;
 159              		.loc 1 94 0
 160 000a 00BF     		nop
  95:main.c        **** }
 161              		.loc 1 95 0
 162 000c 0C37     		adds	r7, r7, #12
 163              		.cfi_def_cfa_offset 4
 164 000e BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0010 80BC     		pop	{r7}
 168              		.cfi_restore 7
 169              		.cfi_def_cfa_offset 0
 170 0012 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE64:
 173              		.size	nothing, .-nothing
 174              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
 175              		.align	2
 176              		.global	ReceiveInterruptHandler
 177              		.thumb
 178              		.thumb_func
 179              		.type	ReceiveInterruptHandler, %function
 180              	ReceiveInterruptHandler:
 181              	.LFB65:
  96:main.c        **** 
  97:main.c        **** /*******************************************************************************
  98:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
  99:main.c        **** ********************************************************************************/
 100:main.c        **** 
 101:main.c        ****  /**********************************************************
 102:main.c        ****  * function name: ReceiveInterruptHandler
 103:main.c        ****  * operation: Handles interrupt timer if the timer expires
 104:main.c        ****  *            indicates an idle condition or colllision
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 6


 105:main.c        ****  *            reads the logic levon the input pin/signal
 106:main.c        ****  *            high -> collision set
 107:main.c        ****  *            low -> idle set
 108:main.c        ****  * inputs: none
 109:main.c        ****  * returns: none
 110:main.c        ****  * implemented: 14 Dec 2017
 111:main.c        ****  * edited:
 112:main.c        ****  *********************************************************/ 
 113:main.c        **** 
 114:main.c        **** // TODO Code needs to be added to accept signals at
 115:main.c        **** // various speeds. The documentation states that the signal
 116:main.c        **** // MUST be tolerated at speeds of ±1.32%, and MUST NOT be
 117:main.c        **** // tolerated at speeds of ±8% or so. See standard specification
 118:main.c        **** // for more details.
 119:main.c        **** 
 120:main.c        **** // TODO Move characterRX logic into RX_Bit_Counter
 121:main.c        **** // incrementation section of code. This will make
 122:main.c        **** // this ISR more efficient.
 123:main.c        **** CY_ISR(ReceiveInterruptHandler){
 182              		.loc 1 123 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 90B5     		push	{r4, r7, lr}
 187              		.cfi_def_cfa_offset 12
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 85B0     		sub	sp, sp, #20
 192              		.cfi_def_cfa_offset 32
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 124:main.c        ****     int concatCount = 0;
 195              		.loc 1 124 0
 196 0006 0023     		movs	r3, #0
 197 0008 FB60     		str	r3, [r7, #12]
 125:main.c        ****     char characterRX = 0;
 198              		.loc 1 125 0
 199 000a 0023     		movs	r3, #0
 200 000c FB72     		strb	r3, [r7, #11]
 126:main.c        ****     
 127:main.c        ****     TimerRX_STATUS; 
 201              		.loc 1 127 0
 202 000e 364B     		ldr	r3, .L13
 203 0010 1B78     		ldrb	r3, [r3]
 128:main.c        ****     
 129:main.c        ****     if(systemState != COLLISION){
 204              		.loc 1 129 0
 205 0012 364B     		ldr	r3, .L13+4
 206 0014 1B78     		ldrb	r3, [r3]
 207 0016 DBB2     		uxtb	r3, r3
 208 0018 012B     		cmp	r3, #1
 209 001a 17D0     		beq	.L4
 130:main.c        ****         TimerRX_Start();
 210              		.loc 1 130 0
 211 001c FFF7FEFF 		bl	TimerRX_Start
 131:main.c        ****         if (receiveBitCount % 2) {
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 7


 212              		.loc 1 131 0
 213 0020 334B     		ldr	r3, .L13+8
 214 0022 1B68     		ldr	r3, [r3]
 215 0024 03F00103 		and	r3, r3, #1
 216 0028 002B     		cmp	r3, #0
 217 002a 01D1     		bne	.L5
 132:main.c        ****             
 133:main.c        ****         } 
 134:main.c        ****         else {
 135:main.c        ****             nothing();
 218              		.loc 1 135 0
 219 002c FFF7FEFF 		bl	nothing
 220              	.L5:
 136:main.c        ****         }
 137:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
 221              		.loc 1 137 0
 222 0030 2F4B     		ldr	r3, .L13+8
 223 0032 1C68     		ldr	r4, [r3]
 224 0034 FFF7FEFF 		bl	RECEIVE_Read
 225 0038 0346     		mov	r3, r0
 226 003a 1A46     		mov	r2, r3
 227 003c 2D4B     		ldr	r3, .L13+12
 228 003e 1A55     		strb	r2, [r3, r4]
 138:main.c        ****         ++receiveBitCount;
 229              		.loc 1 138 0
 230 0040 2B4B     		ldr	r3, .L13+8
 231 0042 1B68     		ldr	r3, [r3]
 232 0044 0133     		adds	r3, r3, #1
 233 0046 2A4A     		ldr	r2, .L13+8
 234 0048 1360     		str	r3, [r2]
 235 004a 0DE0     		b	.L6
 236              	.L4:
 139:main.c        ****         
 140:main.c        ****     }else{
 141:main.c        ****         
 142:main.c        ****         receiveBitCount = 0;   
 237              		.loc 1 142 0
 238 004c 284B     		ldr	r3, .L13+8
 239 004e 0022     		movs	r2, #0
 240 0050 1A60     		str	r2, [r3]
 143:main.c        ****         receivePosition = 0;
 241              		.loc 1 143 0
 242 0052 294B     		ldr	r3, .L13+16
 243 0054 0022     		movs	r2, #0
 244 0056 1A60     		str	r2, [r3]
 144:main.c        ****         dataBitsRead = 0;
 245              		.loc 1 144 0
 246 0058 284B     		ldr	r3, .L13+20
 247 005a 0022     		movs	r2, #0
 248 005c 1A60     		str	r2, [r3]
 145:main.c        ****         TimerRX_Stop();
 249              		.loc 1 145 0
 250 005e FFF7FEFF 		bl	TimerRX_Stop
 146:main.c        ****         receiveLock = 0;
 251              		.loc 1 146 0
 252 0062 274B     		ldr	r3, .L13+24
 253 0064 0022     		movs	r2, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 8


 254 0066 1A60     		str	r2, [r3]
 255              	.L6:
 147:main.c        ****     }
 148:main.c        ****     
 149:main.c        ****     if(receiveBitCount >= 15 ){
 256              		.loc 1 149 0
 257 0068 214B     		ldr	r3, .L13+8
 258 006a 1B68     		ldr	r3, [r3]
 259 006c 0E2B     		cmp	r3, #14
 260 006e 37DD     		ble	.L12
 150:main.c        ****         receiveBitCount = 0;
 261              		.loc 1 150 0
 262 0070 1F4B     		ldr	r3, .L13+8
 263 0072 0022     		movs	r2, #0
 264 0074 1A60     		str	r2, [r3]
 151:main.c        ****         TimerRX_Stop();
 265              		.loc 1 151 0
 266 0076 FFF7FEFF 		bl	TimerRX_Stop
 152:main.c        ****         receiveLock = 0;
 267              		.loc 1 152 0
 268 007a 214B     		ldr	r3, .L13+24
 269 007c 0022     		movs	r2, #0
 270 007e 1A60     		str	r2, [r3]
 271              	.LBB2:
 153:main.c        ****         
 154:main.c        ****         
 155:main.c        ****         for(int x = 15; x >= 0; x--){
 272              		.loc 1 155 0
 273 0080 0F23     		movs	r3, #15
 274 0082 7B60     		str	r3, [r7, #4]
 275 0084 1FE0     		b	.L8
 276              	.L11:
 156:main.c        ****             if(x == 15){
 277              		.loc 1 156 0
 278 0086 7B68     		ldr	r3, [r7, #4]
 279 0088 0F2B     		cmp	r3, #15
 280 008a 01D1     		bne	.L9
 157:main.c        ****              characterRX = 0x00;    
 281              		.loc 1 157 0
 282 008c 0023     		movs	r3, #0
 283 008e FB72     		strb	r3, [r7, #11]
 284              	.L9:
 158:main.c        ****             }
 159:main.c        ****             if(x % 2 != 0){
 285              		.loc 1 159 0
 286 0090 7B68     		ldr	r3, [r7, #4]
 287 0092 03F00103 		and	r3, r3, #1
 288 0096 002B     		cmp	r3, #0
 289 0098 12D0     		beq	.L10
 160:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 290              		.loc 1 160 0
 291 009a 164A     		ldr	r2, .L13+12
 292 009c 7B68     		ldr	r3, [r7, #4]
 293 009e 1344     		add	r3, r3, r2
 294 00a0 1B78     		ldrb	r3, [r3]
 295 00a2 DBB2     		uxtb	r3, r3
 296 00a4 1A46     		mov	r2, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 9


 297 00a6 FB68     		ldr	r3, [r7, #12]
 298 00a8 013B     		subs	r3, r3, #1
 299 00aa 02FA03F3 		lsl	r3, r2, r3
 300 00ae 5AB2     		sxtb	r2, r3
 301 00b0 97F90B30 		ldrsb	r3, [r7, #11]
 302 00b4 1343     		orrs	r3, r3, r2
 303 00b6 5BB2     		sxtb	r3, r3
 304 00b8 FB72     		strb	r3, [r7, #11]
 161:main.c        ****                 ++concatCount;
 305              		.loc 1 161 0
 306 00ba FB68     		ldr	r3, [r7, #12]
 307 00bc 0133     		adds	r3, r3, #1
 308 00be FB60     		str	r3, [r7, #12]
 309              	.L10:
 155:main.c        ****             if(x == 15){
 310              		.loc 1 155 0 discriminator 2
 311 00c0 7B68     		ldr	r3, [r7, #4]
 312 00c2 013B     		subs	r3, r3, #1
 313 00c4 7B60     		str	r3, [r7, #4]
 314              	.L8:
 155:main.c        ****             if(x == 15){
 315              		.loc 1 155 0 is_stmt 0 discriminator 1
 316 00c6 7B68     		ldr	r3, [r7, #4]
 317 00c8 002B     		cmp	r3, #0
 318 00ca DCDA     		bge	.L11
 319              	.LBE2:
 162:main.c        ****             }
 163:main.c        ****         }
 164:main.c        ****         receiveBuffer[receivePosition] = characterRX;
 320              		.loc 1 164 0 is_stmt 1
 321 00cc 0A4B     		ldr	r3, .L13+16
 322 00ce 1B68     		ldr	r3, [r3]
 323 00d0 0C49     		ldr	r1, .L13+28
 324 00d2 FA7A     		ldrb	r2, [r7, #11]
 325 00d4 CA54     		strb	r2, [r1, r3]
 165:main.c        ****         ++receivePosition;
 326              		.loc 1 165 0
 327 00d6 084B     		ldr	r3, .L13+16
 328 00d8 1B68     		ldr	r3, [r3]
 329 00da 0133     		adds	r3, r3, #1
 330 00dc 064A     		ldr	r2, .L13+16
 331 00de 1360     		str	r3, [r2]
 332              	.L12:
 166:main.c        ****        
 167:main.c        ****     }
 168:main.c        **** }
 333              		.loc 1 168 0
 334 00e0 00BF     		nop
 335 00e2 1437     		adds	r7, r7, #20
 336              		.cfi_def_cfa_offset 12
 337 00e4 BD46     		mov	sp, r7
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 00e6 90BD     		pop	{r4, r7, pc}
 341              	.L14:
 342              		.align	2
 343              	.L13:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 10


 344 00e8 63640040 		.word	1073767523
 345 00ec 00000000 		.word	systemState
 346 00f0 00000000 		.word	receiveBitCount
 347 00f4 00000000 		.word	receiveData
 348 00f8 00000000 		.word	receivePosition
 349 00fc 00000000 		.word	dataBitsRead
 350 0100 00000000 		.word	receiveLock
 351 0104 00000000 		.word	receiveBuffer
 352              		.cfi_endproc
 353              	.LFE65:
 354              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 355              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 356              		.align	2
 357              		.global	TransmitInterruptHandler
 358              		.thumb
 359              		.thumb_func
 360              		.type	TransmitInterruptHandler, %function
 361              	TransmitInterruptHandler:
 362              	.LFB66:
 169:main.c        **** 
 170:main.c        ****  /**********************************************************
 171:main.c        ****  * function name: ReceiveInterruptHandler
 172:main.c        ****  * operation: Handles the transmit interrupt.
 173:main.c        **** Fires each time we need to transmit.
 174:main.c        ****  * inputs: none
 175:main.c        ****  * returns: none
 176:main.c        ****  * implemented: 14 Dec 2017
 177:main.c        ****  * edited:
 178:main.c        ****  *********************************************************/ 
 179:main.c        **** CY_ISR(TransmitInterruptHandler)
 180:main.c        **** {
 363              		.loc 1 180 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 181:main.c        **** 	TimerTX_STATUS; 
 373              		.loc 1 181 0
 374 0004 524B     		ldr	r3, .L28
 375 0006 1B78     		ldrb	r3, [r3]
 182:main.c        ****     if (position >= dataSize) {
 376              		.loc 1 182 0
 377 0008 524B     		ldr	r3, .L28+4
 378 000a 1A68     		ldr	r2, [r3]
 379 000c 524B     		ldr	r3, .L28+8
 380 000e 1B68     		ldr	r3, [r3]
 381 0010 9A42     		cmp	r2, r3
 382 0012 80F29A80 		bge	.L27
 183:main.c        ****         return;
 184:main.c        ****     }
 185:main.c        **** 	currentChar = buffer[position];
 383              		.loc 1 185 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 11


 384 0016 4F4B     		ldr	r3, .L28+4
 385 0018 1B68     		ldr	r3, [r3]
 386 001a 504A     		ldr	r2, .L28+12
 387 001c D35C     		ldrb	r3, [r2, r3]
 388 001e DAB2     		uxtb	r2, r3
 389 0020 4F4B     		ldr	r3, .L28+16
 390 0022 1A70     		strb	r2, [r3]
 186:main.c        **** 
 187:main.c        ****     if (!collisionLock) {
 391              		.loc 1 187 0
 392 0024 4F4B     		ldr	r3, .L28+20
 393 0026 1B78     		ldrb	r3, [r3]
 394 0028 DBB2     		uxtb	r3, r3
 395 002a 83F00103 		eor	r3, r3, #1
 396 002e DBB2     		uxtb	r3, r3
 397 0030 002B     		cmp	r3, #0
 398 0032 00F08380 		beq	.L18
 188:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 399              		.loc 1 188 0
 400 0036 474B     		ldr	r3, .L28+4
 401 0038 1A68     		ldr	r2, [r3]
 402 003a 474B     		ldr	r3, .L28+8
 403 003c 1B68     		ldr	r3, [r3]
 404 003e 9A42     		cmp	r2, r3
 405 0040 04DA     		bge	.L19
 406              		.loc 1 188 0 is_stmt 0 discriminator 1
 407 0042 494B     		ldr	r3, .L28+24
 408 0044 1B78     		ldrb	r3, [r3]
 409 0046 DBB2     		uxtb	r3, r3
 410 0048 002B     		cmp	r3, #0
 411 004a 08D0     		beq	.L20
 412              	.L19:
 413              		.loc 1 188 0 discriminator 3
 414 004c 474B     		ldr	r3, .L28+28
 415 004e 1B68     		ldr	r3, [r3]
 416 0050 002B     		cmp	r3, #0
 417 0052 58D0     		beq	.L21
 418              		.loc 1 188 0 discriminator 4
 419 0054 444B     		ldr	r3, .L28+24
 420 0056 1B78     		ldrb	r3, [r3]
 421 0058 DBB2     		uxtb	r3, r3
 422 005a 022B     		cmp	r3, #2
 423 005c 53D1     		bne	.L21
 424              	.L20:
 189:main.c        ****     		if(transmitBitCount == 0){
 425              		.loc 1 189 0 is_stmt 1
 426 005e 444B     		ldr	r3, .L28+32
 427 0060 1B68     		ldr	r3, [r3]
 428 0062 002B     		cmp	r3, #0
 429 0064 0DD1     		bne	.L22
 190:main.c        ****     			TRANSMIT_Write(1);
 430              		.loc 1 190 0
 431 0066 0120     		movs	r0, #1
 432 0068 FFF7FEFF 		bl	TRANSMIT_Write
 191:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 433              		.loc 1 191 0
 434 006c 394B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 12


 435 006e 1A68     		ldr	r2, [r3]
 436 0070 3F4B     		ldr	r3, .L28+32
 437 0072 1B68     		ldr	r3, [r3]
 438 0074 3F49     		ldr	r1, .L28+36
 439 0076 1201     		lsls	r2, r2, #4
 440 0078 0A44     		add	r2, r2, r1
 441 007a 1344     		add	r3, r3, r2
 442 007c 3122     		movs	r2, #49
 443 007e 1A70     		strb	r2, [r3]
 444 0080 41E0     		b	.L21
 445              	.L22:
 192:main.c        ****     		}else if(transmitBitCount%2 != 0){
 446              		.loc 1 192 0
 447 0082 3B4B     		ldr	r3, .L28+32
 448 0084 1B68     		ldr	r3, [r3]
 449 0086 03F00103 		and	r3, r3, #1
 450 008a 002B     		cmp	r3, #0
 451 008c 0DD0     		beq	.L23
 193:main.c        ****     			TRANSMIT_Write(0);
 452              		.loc 1 193 0
 453 008e 0020     		movs	r0, #0
 454 0090 FFF7FEFF 		bl	TRANSMIT_Write
 194:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 455              		.loc 1 194 0
 456 0094 2F4B     		ldr	r3, .L28+4
 457 0096 1A68     		ldr	r2, [r3]
 458 0098 354B     		ldr	r3, .L28+32
 459 009a 1B68     		ldr	r3, [r3]
 460 009c 3549     		ldr	r1, .L28+36
 461 009e 1201     		lsls	r2, r2, #4
 462 00a0 0A44     		add	r2, r2, r1
 463 00a2 1344     		add	r3, r3, r2
 464 00a4 3022     		movs	r2, #48
 465 00a6 1A70     		strb	r2, [r3]
 466 00a8 2DE0     		b	.L21
 467              	.L23:
 195:main.c        ****     		}else{
 196:main.c        ****     			if(currentChar & (1<<(6-idx))){
 468              		.loc 1 196 0
 469 00aa 2D4B     		ldr	r3, .L28+16
 470 00ac 1B78     		ldrb	r3, [r3]
 471 00ae DBB2     		uxtb	r3, r3
 472 00b0 1A46     		mov	r2, r3
 473 00b2 314B     		ldr	r3, .L28+40
 474 00b4 1B68     		ldr	r3, [r3]
 475 00b6 C3F10603 		rsb	r3, r3, #6
 476 00ba 42FA03F3 		asr	r3, r2, r3
 477 00be 03F00103 		and	r3, r3, #1
 478 00c2 002B     		cmp	r3, #0
 479 00c4 0DD0     		beq	.L24
 197:main.c        ****     				TRANSMIT_Write(1);
 480              		.loc 1 197 0
 481 00c6 0120     		movs	r0, #1
 482 00c8 FFF7FEFF 		bl	TRANSMIT_Write
 198:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 483              		.loc 1 198 0
 484 00cc 214B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 13


 485 00ce 1A68     		ldr	r2, [r3]
 486 00d0 274B     		ldr	r3, .L28+32
 487 00d2 1B68     		ldr	r3, [r3]
 488 00d4 2749     		ldr	r1, .L28+36
 489 00d6 1201     		lsls	r2, r2, #4
 490 00d8 0A44     		add	r2, r2, r1
 491 00da 1344     		add	r3, r3, r2
 492 00dc 3122     		movs	r2, #49
 493 00de 1A70     		strb	r2, [r3]
 494 00e0 0CE0     		b	.L25
 495              	.L24:
 199:main.c        ****     			}else{
 200:main.c        ****     				TRANSMIT_Write(0);
 496              		.loc 1 200 0
 497 00e2 0020     		movs	r0, #0
 498 00e4 FFF7FEFF 		bl	TRANSMIT_Write
 201:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 499              		.loc 1 201 0
 500 00e8 1A4B     		ldr	r3, .L28+4
 501 00ea 1A68     		ldr	r2, [r3]
 502 00ec 204B     		ldr	r3, .L28+32
 503 00ee 1B68     		ldr	r3, [r3]
 504 00f0 2049     		ldr	r1, .L28+36
 505 00f2 1201     		lsls	r2, r2, #4
 506 00f4 0A44     		add	r2, r2, r1
 507 00f6 1344     		add	r3, r3, r2
 508 00f8 3022     		movs	r2, #48
 509 00fa 1A70     		strb	r2, [r3]
 510              	.L25:
 202:main.c        ****     			}
 203:main.c        ****     				++idx;
 511              		.loc 1 203 0
 512 00fc 1E4B     		ldr	r3, .L28+40
 513 00fe 1B68     		ldr	r3, [r3]
 514 0100 0133     		adds	r3, r3, #1
 515 0102 1D4A     		ldr	r2, .L28+40
 516 0104 1360     		str	r3, [r2]
 517              	.L21:
 204:main.c        ****     		}
 205:main.c        ****         }
 206:main.c        ****         // CyDelayUs(495);
 207:main.c        ****         ++transmitBitCount;
 518              		.loc 1 207 0
 519 0106 1A4B     		ldr	r3, .L28+32
 520 0108 1B68     		ldr	r3, [r3]
 521 010a 0133     		adds	r3, r3, #1
 522 010c 184A     		ldr	r2, .L28+32
 523 010e 1360     		str	r3, [r2]
 208:main.c        ****         if(transmitBitCount >= 16){
 524              		.loc 1 208 0
 525 0110 174B     		ldr	r3, .L28+32
 526 0112 1B68     		ldr	r3, [r3]
 527 0114 0F2B     		cmp	r3, #15
 528 0116 19DD     		ble	.L15
 209:main.c        **** 		    ++position;
 529              		.loc 1 209 0
 530 0118 0E4B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 14


 531 011a 1B68     		ldr	r3, [r3]
 532 011c 0133     		adds	r3, r3, #1
 533 011e 0D4A     		ldr	r2, .L28+4
 534 0120 1360     		str	r3, [r2]
 210:main.c        **** 		    idx = 0;
 535              		.loc 1 210 0
 536 0122 154B     		ldr	r3, .L28+40
 537 0124 0022     		movs	r2, #0
 538 0126 1A60     		str	r2, [r3]
 211:main.c        **** 		    transmitBitCount = 0;
 539              		.loc 1 211 0
 540 0128 114B     		ldr	r3, .L28+32
 541 012a 0022     		movs	r2, #0
 542 012c 1A60     		str	r2, [r3]
 212:main.c        ****             transmitLock = 0;
 543              		.loc 1 212 0
 544 012e 0F4B     		ldr	r3, .L28+28
 545 0130 0022     		movs	r2, #0
 546 0132 1A60     		str	r2, [r3]
 213:main.c        ****             TRANSMIT_Write(0);
 547              		.loc 1 213 0
 548 0134 0020     		movs	r0, #0
 549 0136 FFF7FEFF 		bl	TRANSMIT_Write
 550 013a 07E0     		b	.L15
 551              	.L18:
 214:main.c        **** 
 215:main.c        ****         }
 216:main.c        ****     } else {
 217:main.c        ****         position = 0;
 552              		.loc 1 217 0
 553 013c 054B     		ldr	r3, .L28+4
 554 013e 0022     		movs	r2, #0
 555 0140 1A60     		str	r2, [r3]
 218:main.c        ****         transmitBitCount = 0;
 556              		.loc 1 218 0
 557 0142 0B4B     		ldr	r3, .L28+32
 558 0144 0022     		movs	r2, #0
 559 0146 1A60     		str	r2, [r3]
 560 0148 00E0     		b	.L15
 561              	.L27:
 183:main.c        ****     }
 562              		.loc 1 183 0
 563 014a 00BF     		nop
 564              	.L15:
 219:main.c        ****     }
 220:main.c        **** }
 565              		.loc 1 220 0
 566 014c 80BD     		pop	{r7, pc}
 567              	.L29:
 568 014e 00BF     		.align	2
 569              	.L28:
 570 0150 034F0040 		.word	1073762051
 571 0154 00000000 		.word	position
 572 0158 00000000 		.word	dataSize
 573 015c 00000000 		.word	buffer
 574 0160 00000000 		.word	currentChar
 575 0164 00000000 		.word	collisionLock
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 15


 576 0168 00000000 		.word	systemState
 577 016c 00000000 		.word	transmitLock
 578 0170 00000000 		.word	transmitBitCount
 579 0174 00000000 		.word	transmitData
 580 0178 00000000 		.word	idx
 581              		.cfi_endproc
 582              	.LFE66:
 583              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 584              		.global	__aeabi_i2f
 585              		.global	__aeabi_fdiv
 586              		.global	__aeabi_fmul
 587              		.global	__aeabi_f2uiz
 588              		.section	.text.TimerInterruptHandler,"ax",%progbits
 589              		.align	2
 590              		.global	TimerInterruptHandler
 591              		.thumb
 592              		.thumb_func
 593              		.type	TimerInterruptHandler, %function
 594              	TimerInterruptHandler:
 595              	.LFB67:
 221:main.c        **** 
 222:main.c        **** 
 223:main.c        ****  /**********************************************************
 224:main.c        ****  * function name: TimerInterruptHandler
 225:main.c        ****  * operation: When a node that is transmitting and detects 
 226:main.c        ****  *            a collision, the node shall stop transmitting
 227:main.c        ****  *            and wait a random amount of time between 0
 228:main.c        ****  *            and 1.000 second (s), and then determine if
 229:main.c        ****  *            the bus is idle and if so begin a retrans.
 230:main.c        ****  * inputs: none
 231:main.c        ****  * returns: none
 232:main.c        ****  * implemented: 14 Dec 2017
 233:main.c        ****  * edited:
 234:main.c        ****  *********************************************************/
 235:main.c        **** 
 236:main.c        **** //TODO: WORK ON THE TRYING REATTEMPT UP TO 10 TIMES
 237:main.c        **** CY_ISR(TimerInterruptHandler)
 238:main.c        **** {     
 596              		.loc 1 238 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 82B0     		sub	sp, sp, #8
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 239:main.c        ****    	Timer_STATUS; 
 608              		.loc 1 239 0
 609 0006 244B     		ldr	r3, .L34
 610 0008 1B78     		ldrb	r3, [r3]
 240:main.c        ****     
 241:main.c        ****     if (!RECEIVE_Read() ){
 611              		.loc 1 241 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 16


 612 000a FFF7FEFF 		bl	RECEIVE_Read
 613 000e 0346     		mov	r3, r0
 614 0010 002B     		cmp	r3, #0
 615 0012 06D1     		bne	.L31
 242:main.c        ****         systemState = IDLE;
 616              		.loc 1 242 0
 617 0014 214B     		ldr	r3, .L34+4
 618 0016 0022     		movs	r2, #0
 619 0018 1A70     		strb	r2, [r3]
 243:main.c        ****          transmitLock = 1;
 620              		.loc 1 243 0
 621 001a 214B     		ldr	r3, .L34+8
 622 001c 0122     		movs	r2, #1
 623 001e 1A60     		str	r2, [r3]
 244:main.c        ****     } else {
 245:main.c        ****         int period = Timer_ReadPeriod();
 246:main.c        ****         systemState = COLLISION;
 247:main.c        ****         TRANSMIT_Write(0); 
 248:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 249:main.c        ****         // collisionLock = 1; // Collision
 250:main.c        ****         position = 0; // Start over entire packet.
 251:main.c        ****         receivePosition = 0;
 252:main.c        ****         
 253:main.c        ****         uint16_t randNum = (uint16_t)((float)rand() / RAND_MAX * 1000);
 254:main.c        ****         CollisionDelay_WritePeriod(randNum);
 255:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 256:main.c        ****         CollisionDelay_Start();
 257:main.c        ****     }
 258:main.c        **** }
 624              		.loc 1 258 0
 625 0020 35E0     		b	.L33
 626              	.L31:
 627              	.LBB3:
 245:main.c        ****         systemState = COLLISION;
 628              		.loc 1 245 0
 629 0022 FFF7FEFF 		bl	Timer_ReadPeriod
 630 0026 0346     		mov	r3, r0
 631 0028 7B60     		str	r3, [r7, #4]
 246:main.c        ****         TRANSMIT_Write(0); 
 632              		.loc 1 246 0
 633 002a 1C4B     		ldr	r3, .L34+4
 634 002c 0122     		movs	r2, #1
 635 002e 1A70     		strb	r2, [r3]
 247:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 636              		.loc 1 247 0
 637 0030 0020     		movs	r0, #0
 638 0032 FFF7FEFF 		bl	TRANSMIT_Write
 248:main.c        ****         // collisionLock = 1; // Collision
 639              		.loc 1 248 0
 640 0036 1A4B     		ldr	r3, .L34+8
 641 0038 0022     		movs	r2, #0
 642 003a 1A60     		str	r2, [r3]
 250:main.c        ****         receivePosition = 0;
 643              		.loc 1 250 0
 644 003c 194B     		ldr	r3, .L34+12
 645 003e 0022     		movs	r2, #0
 646 0040 1A60     		str	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 17


 251:main.c        ****         
 647              		.loc 1 251 0
 648 0042 194B     		ldr	r3, .L34+16
 649 0044 0022     		movs	r2, #0
 650 0046 1A60     		str	r2, [r3]
 253:main.c        ****         CollisionDelay_WritePeriod(randNum);
 651              		.loc 1 253 0
 652 0048 FFF7FEFF 		bl	rand
 653 004c 0346     		mov	r3, r0
 654 004e 1846     		mov	r0, r3
 655 0050 FFF7FEFF 		bl	__aeabi_i2f
 656 0054 0346     		mov	r3, r0
 657 0056 4FF09E41 		mov	r1, #1325400064
 658 005a 1846     		mov	r0, r3
 659 005c FFF7FEFF 		bl	__aeabi_fdiv
 660 0060 0346     		mov	r3, r0
 661 0062 1249     		ldr	r1, .L34+20
 662 0064 1846     		mov	r0, r3
 663 0066 FFF7FEFF 		bl	__aeabi_fmul
 664 006a 0346     		mov	r3, r0
 665 006c 1846     		mov	r0, r3
 666 006e FFF7FEFF 		bl	__aeabi_f2uiz
 667 0072 0346     		mov	r3, r0
 668 0074 7B80     		strh	r3, [r7, #2]	@ movhi
 254:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 669              		.loc 1 254 0
 670 0076 7B88     		ldrh	r3, [r7, #2]
 671 0078 1846     		mov	r0, r3
 672 007a FFF7FEFF 		bl	CollisionDelay_WritePeriod
 255:main.c        ****         CollisionDelay_Start();
 673              		.loc 1 255 0
 674 007e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 675 0080 013B     		subs	r3, r3, #1
 676 0082 9BB2     		uxth	r3, r3
 677 0084 1846     		mov	r0, r3
 678 0086 FFF7FEFF 		bl	CollisionDelay_WriteCounter
 256:main.c        ****     }
 679              		.loc 1 256 0
 680 008a FFF7FEFF 		bl	CollisionDelay_Start
 681              	.L33:
 682              	.LBE3:
 683              		.loc 1 258 0
 684 008e 00BF     		nop
 685 0090 0837     		adds	r7, r7, #8
 686              		.cfi_def_cfa_offset 8
 687 0092 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0094 80BD     		pop	{r7, pc}
 691              	.L35:
 692 0096 00BF     		.align	2
 693              	.L34:
 694 0098 67640040 		.word	1073767527
 695 009c 00000000 		.word	systemState
 696 00a0 00000000 		.word	transmitLock
 697 00a4 00000000 		.word	position
 698 00a8 00000000 		.word	receivePosition
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 18


 699 00ac 00007A44 		.word	1148846080
 700              		.cfi_endproc
 701              	.LFE67:
 702              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 703              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 704              		.align	2
 705              		.global	RisingEdgeInterruptHandler
 706              		.thumb
 707              		.thumb_func
 708              		.type	RisingEdgeInterruptHandler, %function
 709              	RisingEdgeInterruptHandler:
 710              	.LFB68:
 259:main.c        **** 
 260:main.c        **** 
 261:main.c        ****  /**********************************************************
 262:main.c        ****  * function name: RisingEdgeInterruptHandler
 263:main.c        ****  * operation: Handles interrupt for when a rising edge on 
 264:main.c        ****  *            the timer occurs. Triggers system to look for
 265:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 266:main.c        ****  *            interupt to occur in .6ms and sets state to 
 267:main.c        ****  *            busy
 268:main.c        ****  * inputs: none
 269:main.c        ****  * returns: none
 270:main.c        ****  * implemented: 14 Dec 2017
 271:main.c        ****  * edited:
 272:main.c        ****  *********************************************************/ 
 273:main.c        **** 
 274:main.c        **** // TODO Fix "race against time" between ReceiveInterruptHandler ant his.
 275:main.c        **** // If this wins the race, then RX_Bit_Counter doesn't increment properly.
 276:main.c        **** // This is the reason why code didn't work well at higher speeds.
 277:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 278:main.c        **** {
 711              		.loc 1 278 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 279:main.c        ****     if (RECEIVE_Read()){
 721              		.loc 1 279 0
 722 0004 FFF7FEFF 		bl	RECEIVE_Read
 723 0008 0346     		mov	r3, r0
 724 000a 002B     		cmp	r3, #0
 725 000c 0FD0     		beq	.L37
 280:main.c        ****         Timer_Stop();
 726              		.loc 1 280 0
 727 000e FFF7FEFF 		bl	Timer_Stop
 281:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 728              		.loc 1 281 0
 729 0012 3420     		movs	r0, #52
 730 0014 FFF7FEFF 		bl	Timer_WritePeriod
 282:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 731              		.loc 1 282 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 19


 732 0018 3320     		movs	r0, #51
 733 001a FFF7FEFF 		bl	Timer_WriteCounter
 283:main.c        ****         Timer_Start();
 734              		.loc 1 283 0
 735 001e FFF7FEFF 		bl	Timer_Start
 284:main.c        ****         lowFlag = 1;
 736              		.loc 1 284 0
 737 0022 0A4B     		ldr	r3, .L41
 738 0024 0122     		movs	r2, #1
 739 0026 1A70     		strb	r2, [r3]
 285:main.c        ****         systemState = BUSY;
 740              		.loc 1 285 0
 741 0028 094B     		ldr	r3, .L41+4
 742 002a 0222     		movs	r2, #2
 743 002c 1A70     		strb	r2, [r3]
 744              	.L37:
 286:main.c        ****     }
 287:main.c        ****     if(receiveLock == 0){
 745              		.loc 1 287 0
 746 002e 094B     		ldr	r3, .L41+8
 747 0030 1B68     		ldr	r3, [r3]
 748 0032 002B     		cmp	r3, #0
 749 0034 05D1     		bne	.L38
 288:main.c        ****         TimerRX_Start();
 750              		.loc 1 288 0
 751 0036 FFF7FEFF 		bl	TimerRX_Start
 289:main.c        ****         receiveLock = 1;
 752              		.loc 1 289 0
 753 003a 064B     		ldr	r3, .L41+8
 754 003c 0122     		movs	r2, #1
 755 003e 1A60     		str	r2, [r3]
 290:main.c        ****         
 291:main.c        ****     } else {
 292:main.c        ****         nothing();
 293:main.c        ****     }
 294:main.c        **** }
 756              		.loc 1 294 0
 757 0040 01E0     		b	.L40
 758              	.L38:
 292:main.c        ****     }
 759              		.loc 1 292 0
 760 0042 FFF7FEFF 		bl	nothing
 761              	.L40:
 762              		.loc 1 294 0
 763 0046 00BF     		nop
 764 0048 80BD     		pop	{r7, pc}
 765              	.L42:
 766 004a 00BF     		.align	2
 767              	.L41:
 768 004c 00000000 		.word	lowFlag
 769 0050 00000000 		.word	systemState
 770 0054 00000000 		.word	receiveLock
 771              		.cfi_endproc
 772              	.LFE68:
 773              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 774              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 775              		.align	2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 20


 776              		.global	FallingEdgeInterruptHandler
 777              		.thumb
 778              		.thumb_func
 779              		.type	FallingEdgeInterruptHandler, %function
 780              	FallingEdgeInterruptHandler:
 781              	.LFB69:
 295:main.c        ****  
 296:main.c        ****  /**********************************************************
 297:main.c        ****  * function name: FallingEdgeInterruptHandler
 298:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 299:main.c        ****  *            the timer occurs. Triggers system to look for
 300:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 301:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 302:main.c        ****  *            busy
 303:main.c        ****  * inputs: none
 304:main.c        ****  * returns: none
 305:main.c        ****  * implemented: 14 Dec 2017
 306:main.c        ****  * edited:
 307:main.c        ****  *********************************************************/ 
 308:main.c        **** // TODO This could also contribute to the "race against time" issue.
 309:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 310:main.c        **** {
 782              		.loc 1 310 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 8
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              		.cfi_def_cfa_offset 16
 792 0004 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 311:main.c        ****     int value = Timer_ReadPeriod();
 794              		.loc 1 311 0
 795 0006 FFF7FEFF 		bl	Timer_ReadPeriod
 796 000a 0346     		mov	r3, r0
 797 000c 7B60     		str	r3, [r7, #4]
 312:main.c        ****     if (!RECEIVE_Read()){
 798              		.loc 1 312 0
 799 000e FFF7FEFF 		bl	RECEIVE_Read
 800 0012 0346     		mov	r3, r0
 801 0014 002B     		cmp	r3, #0
 802 0016 11D1     		bne	.L45
 313:main.c        ****         Timer_Stop();
 803              		.loc 1 313 0
 804 0018 FFF7FEFF 		bl	Timer_Stop
 314:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 805              		.loc 1 314 0
 806 001c 40F23E30 		movw	r0, #830
 807 0020 FFF7FEFF 		bl	Timer_WritePeriod
 315:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 808              		.loc 1 315 0
 809 0024 40F23D30 		movw	r0, #829
 810 0028 FFF7FEFF 		bl	Timer_WriteCounter
 316:main.c        ****         Timer_Start();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 21


 811              		.loc 1 316 0
 812 002c FFF7FEFF 		bl	Timer_Start
 317:main.c        ****         lowFlag = 0;
 813              		.loc 1 317 0
 814 0030 044B     		ldr	r3, .L46
 815 0032 0022     		movs	r2, #0
 816 0034 1A70     		strb	r2, [r3]
 318:main.c        ****         systemState = BUSY;
 817              		.loc 1 318 0
 818 0036 044B     		ldr	r3, .L46+4
 819 0038 0222     		movs	r2, #2
 820 003a 1A70     		strb	r2, [r3]
 821              	.L45:
 319:main.c        ****     }
 320:main.c        **** }
 822              		.loc 1 320 0
 823 003c 00BF     		nop
 824 003e 0837     		adds	r7, r7, #8
 825              		.cfi_def_cfa_offset 8
 826 0040 BD46     		mov	sp, r7
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 0042 80BD     		pop	{r7, pc}
 830              	.L47:
 831              		.align	2
 832              	.L46:
 833 0044 00000000 		.word	lowFlag
 834 0048 00000000 		.word	systemState
 835              		.cfi_endproc
 836              	.LFE69:
 837              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 838              		.section	.text.CollisionDelayInterruptHandler,"ax",%progbits
 839              		.align	2
 840              		.global	CollisionDelayInterruptHandler
 841              		.thumb
 842              		.thumb_func
 843              		.type	CollisionDelayInterruptHandler, %function
 844              	CollisionDelayInterruptHandler:
 845              	.LFB70:
 321:main.c        **** 
 322:main.c        **** /**
 323:main.c        **** This interrupt should fire after the random delay period of the timer after
 324:main.c        **** a collision has expired. All this does is tells the transmitter that it has
 325:main.c        **** the green light to transmit.
 326:main.c        **** */
 327:main.c        **** CY_ISR(CollisionDelayInterruptHandler)
 328:main.c        **** {
 846              		.loc 1 328 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851 0000 80B4     		push	{r7}
 852              		.cfi_def_cfa_offset 4
 853              		.cfi_offset 7, -4
 854 0002 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 22


 329:main.c        ****     collisionLock = false;
 856              		.loc 1 329 0
 857 0004 034B     		ldr	r3, .L49
 858 0006 0022     		movs	r2, #0
 859 0008 1A70     		strb	r2, [r3]
 330:main.c        **** }
 860              		.loc 1 330 0
 861 000a 00BF     		nop
 862 000c BD46     		mov	sp, r7
 863              		.cfi_def_cfa_register 13
 864              		@ sp needed
 865 000e 80BC     		pop	{r7}
 866              		.cfi_restore 7
 867              		.cfi_def_cfa_offset 0
 868 0010 7047     		bx	lr
 869              	.L50:
 870 0012 00BF     		.align	2
 871              	.L49:
 872 0014 00000000 		.word	collisionLock
 873              		.cfi_endproc
 874              	.LFE70:
 875              		.size	CollisionDelayInterruptHandler, .-CollisionDelayInterruptHandler
 876              		.section	.rodata
 877              		.align	2
 878              	.LC0:
 879 0000 456E7465 		.ascii	"Enter Address or press 'R' to switch to receive mod"
 879      72204164 
 879      64726573 
 879      73206F72 
 879      20707265 
 880 0033 653A2000 		.ascii	"e: \000"
 881 0037 00       		.align	2
 882              	.LC1:
 883 0038 50726573 		.ascii	"Press 'T' to switch to transmit mode.\015\012\000"
 883      73202754 
 883      2720746F 
 883      20737769 
 883      74636820 
 884              		.align	2
 885              	.LC2:
 886 0060 456E7465 		.ascii	"Enter message: \000"
 886      72206D65 
 886      73736167 
 886      653A2000 
 887              		.align	2
 888              	.LC3:
 889 0070 0D0A4D65 		.ascii	"\015\012Message must be no more than 44 bytes.\015\012"
 889      73736167 
 889      65206D75 
 889      73742062 
 889      65206E6F 
 890 009a 00       		.ascii	"\000"
 891              		.section	.text.main,"ax",%progbits
 892              		.align	2
 893              		.global	main
 894              		.thumb
 895              		.thumb_func
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 23


 896              		.type	main, %function
 897              	main:
 898              	.LFB71:
 331:main.c        **** 
 332:main.c        **** /**********************************************************
 333:main.c        ****  * function name: main
 334:main.c        ****  * operation: Handles the main state machine diagram for the
 335:main.c        ****  *            system. Changes  states when needed and calls
 336:main.c        ****  *            appropriate interrupt routines when triggered.                
 337:main.c        ****  * inputs: none
 338:main.c        ****  * returns: none
 339:main.c        ****  * implemented: 14 Dec 2017
 340:main.c        ****  * edited:
 341:main.c        ****  *********************************************************/ 
 342:main.c        **** int main(void)
 343:main.c        **** {
 899              		.loc 1 343 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 80B5     		push	{r7, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 82B0     		sub	sp, sp, #8
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 344:main.c        **** 
 345:main.c        ****     //enable global interrupts
 346:main.c        ****     //start the interrupt handlers for the timers and other components
 347:main.c        ****     CyGlobalIntEnable; 
 911              		.loc 1 347 0
 912              		.syntax unified
 913              	@ 347 "main.c" 1
 914 0006 62B6     		CPSIE   i
 915              	@ 0 "" 2
 348:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 916              		.loc 1 348 0
 917              		.thumb
 918              		.syntax unified
 919 0008 B948     		ldr	r0, .L85
 920 000a FFF7FEFF 		bl	TimerISR_StartEx
 349:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 921              		.loc 1 349 0
 922 000e B948     		ldr	r0, .L85+4
 923 0010 FFF7FEFF 		bl	RisingEdgeISR_StartEx
 350:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 924              		.loc 1 350 0
 925 0014 B848     		ldr	r0, .L85+8
 926 0016 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 351:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 927              		.loc 1 351 0
 928 001a B848     		ldr	r0, .L85+12
 929 001c FFF7FEFF 		bl	ReceiveISR_StartEx
 352:main.c        **** 
 353:main.c        ****     // TimerTX_Start();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 24


 354:main.c        ****     TimerTX_WritePeriod(TRANSMIT_PERIOD);
 930              		.loc 1 354 0
 931 0020 2F20     		movs	r0, #47
 932 0022 FFF7FEFF 		bl	TimerTX_WritePeriod
 355:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 933              		.loc 1 355 0
 934 0026 2E20     		movs	r0, #46
 935 0028 FFF7FEFF 		bl	TimerTX_WriteCounter
 356:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 936              		.loc 1 356 0
 937 002c B448     		ldr	r0, .L85+16
 938 002e FFF7FEFF 		bl	TransmitISR_StartEx
 357:main.c        ****     
 358:main.c        ****     TimerRX_WriteCounter(RECEIVE_COUNTER);
 939              		.loc 1 358 0
 940 0032 3320     		movs	r0, #51
 941 0034 FFF7FEFF 		bl	TimerRX_WriteCounter
 359:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 942              		.loc 1 359 0
 943 0038 3420     		movs	r0, #52
 944 003a FFF7FEFF 		bl	TimerRX_WritePeriod
 360:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 945              		.loc 1 360 0
 946 003e AF48     		ldr	r0, .L85+12
 947 0040 FFF7FEFF 		bl	ReceiveISR_StartEx
 361:main.c        ****     
 362:main.c        ****     CollisionDelayISR_StartEx(CollisionDelayInterruptHandler);
 948              		.loc 1 362 0
 949 0044 AF48     		ldr	r0, .L85+20
 950 0046 FFF7FEFF 		bl	CollisionDelayISR_StartEx
 363:main.c        ****         
 364:main.c        ****     //configure usb to start
 365:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 951              		.loc 1 365 0
 952 004a AF4B     		ldr	r3, .L85+24
 953 004c 1B78     		ldrb	r3, [r3]
 954 004e DBB2     		uxtb	r3, r3
 955 0050 0121     		movs	r1, #1
 956 0052 1846     		mov	r0, r3
 957 0054 FFF7FEFF 		bl	USBUART_Start
 366:main.c        ****     
 367:main.c        ****     while (!USBUART_GetConfiguration());
 958              		.loc 1 367 0
 959 0058 00BF     		nop
 960              	.L52:
 961              		.loc 1 367 0 is_stmt 0 discriminator 1
 962 005a FFF7FEFF 		bl	USBUART_GetConfiguration
 963 005e 0346     		mov	r3, r0
 964 0060 002B     		cmp	r3, #0
 965 0062 FAD0     		beq	.L52
 368:main.c        ****     USBUART_CDC_Init();
 966              		.loc 1 368 0 is_stmt 1
 967 0064 FFF7FEFF 		bl	USBUART_CDC_Init
 369:main.c        ****     
 370:main.c        ****     //starting system in idle state
 371:main.c        ****     systemState = IDLE;
 968              		.loc 1 371 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 25


 969 0068 A84B     		ldr	r3, .L85+28
 970 006a 0022     		movs	r2, #0
 971 006c 1A70     		strb	r2, [r3]
 972              	.L83:
 372:main.c        **** 
 373:main.c        ****     while(1) {
 374:main.c        ****                 
 375:main.c        **** 		/** if (0 != USBUART_IsConfigurationChanged())
 376:main.c        **** 		{
 377:main.c        **** 			
 378:main.c        **** 			if (0 != USBUART_GetConfiguration())
 379:main.c        **** 			{				
 380:main.c        **** 				USBUART_CDC_Init();
 381:main.c        **** 			}
 382:main.c        **** 		} */
 383:main.c        ****         
 384:main.c        ****         
 385:main.c        ****         if(transmitMode){
 973              		.loc 1 385 0
 974 006e A84B     		ldr	r3, .L85+32
 975 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 976 0072 002B     		cmp	r3, #0
 977 0074 00F06081 		beq	.L53
 978              	.LBB4:
 386:main.c        ****             int inCount = 0;
 979              		.loc 1 386 0
 980 0078 0023     		movs	r3, #0
 981 007a 7B60     		str	r3, [r7, #4]
 387:main.c        ****             transmitAddress = 0;
 982              		.loc 1 387 0
 983 007c A54B     		ldr	r3, .L85+36
 984 007e 0022     		movs	r2, #0
 985 0080 1A70     		strb	r2, [r3]
 388:main.c        ****             char input = 0;
 986              		.loc 1 388 0
 987 0082 0023     		movs	r3, #0
 988 0084 FB70     		strb	r3, [r7, #3]
 389:main.c        ****             while(!USBUART_CDCIsReady());
 989              		.loc 1 389 0
 990 0086 00BF     		nop
 991              	.L54:
 992              		.loc 1 389 0 is_stmt 0 discriminator 1
 993 0088 FFF7FEFF 		bl	USBUART_CDCIsReady
 994 008c 0346     		mov	r3, r0
 995 008e 002B     		cmp	r3, #0
 996 0090 FAD0     		beq	.L54
 390:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 997              		.loc 1 390 0 is_stmt 1
 998 0092 A148     		ldr	r0, .L85+40
 999 0094 FFF7FEFF 		bl	USBUART_PutString
 391:main.c        ****             while(inCount < 3){
 1000              		.loc 1 391 0
 1001 0098 92E0     		b	.L55
 1002              	.L57:
 392:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 393:main.c        ****                     stateDiagram();
 1003              		.loc 1 393 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 26


 1004 009a FFF7FEFF 		bl	stateDiagram
 1005              	.L56:
 392:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1006              		.loc 1 392 0
 1007 009e FFF7FEFF 		bl	USBUART_DataIsReady
 1008 00a2 0346     		mov	r3, r0
 1009 00a4 002B     		cmp	r3, #0
 1010 00a6 F8D0     		beq	.L57
 394:main.c        ****                 }
 395:main.c        ****                 
 396:main.c        ****                 input = USBUART_GetChar();
 1011              		.loc 1 396 0
 1012 00a8 FFF7FEFF 		bl	USBUART_GetChar
 1013 00ac 0346     		mov	r3, r0
 1014 00ae FB70     		strb	r3, [r7, #3]
 397:main.c        ****                 
 398:main.c        ****                 //get the transmitAddress entered in
 399:main.c        ****                 if(inCount == 0){
 1015              		.loc 1 399 0
 1016 00b0 7B68     		ldr	r3, [r7, #4]
 1017 00b2 002B     		cmp	r3, #0
 1018 00b4 56D1     		bne	.L58
 1019              	.LBB5:
 400:main.c        ****                     if (toupper(input) == 'R') {
 1020              		.loc 1 400 0
 1021 00b6 FB78     		ldrb	r3, [r7, #3]
 1022 00b8 3B70     		strb	r3, [r7]
 1023 00ba 984B     		ldr	r3, .L85+44
 1024 00bc 1A68     		ldr	r2, [r3]
 1025 00be 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1026 00c0 0133     		adds	r3, r3, #1
 1027 00c2 1344     		add	r3, r3, r2
 1028 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1029 00c6 03F00303 		and	r3, r3, #3
 1030 00ca 022B     		cmp	r3, #2
 1031 00cc 02D1     		bne	.L59
 1032              		.loc 1 400 0 is_stmt 0 discriminator 1
 1033 00ce 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1034 00d0 203B     		subs	r3, r3, #32
 1035 00d2 00E0     		b	.L60
 1036              	.L59:
 1037              		.loc 1 400 0 discriminator 2
 1038 00d4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1039              	.L60:
 1040              	.LBE5:
 1041              		.loc 1 400 0 discriminator 4
 1042 00d6 522B     		cmp	r3, #82
 1043 00d8 28D1     		bne	.L61
 401:main.c        ****                         transmitMode = false;
 1044              		.loc 1 401 0 is_stmt 1
 1045 00da 8D4B     		ldr	r3, .L85+32
 1046 00dc 0022     		movs	r2, #0
 1047 00de 1A70     		strb	r2, [r3]
 402:main.c        ****                         // TimerRX_Start();
 403:main.c        ****                         while(!USBUART_CDCIsReady());
 1048              		.loc 1 403 0
 1049 00e0 00BF     		nop
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 27


 1050              	.L62:
 1051              		.loc 1 403 0 is_stmt 0 discriminator 1
 1052 00e2 FFF7FEFF 		bl	USBUART_CDCIsReady
 1053 00e6 0346     		mov	r3, r0
 1054 00e8 002B     		cmp	r3, #0
 1055 00ea FAD0     		beq	.L62
 404:main.c        ****                         USBUART_PutChar(input);
 1056              		.loc 1 404 0 is_stmt 1
 1057 00ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1058 00ee 1846     		mov	r0, r3
 1059 00f0 FFF7FEFF 		bl	USBUART_PutChar
 405:main.c        ****                         while(!USBUART_CDCIsReady());
 1060              		.loc 1 405 0
 1061 00f4 00BF     		nop
 1062              	.L63:
 1063              		.loc 1 405 0 is_stmt 0 discriminator 1
 1064 00f6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1065 00fa 0346     		mov	r3, r0
 1066 00fc 002B     		cmp	r3, #0
 1067 00fe FAD0     		beq	.L63
 406:main.c        ****                         USBUART_PutCRLF();
 1068              		.loc 1 406 0 is_stmt 1
 1069 0100 FFF7FEFF 		bl	USBUART_PutCRLF
 407:main.c        ****                         while(!USBUART_CDCIsReady());
 1070              		.loc 1 407 0
 1071 0104 00BF     		nop
 1072              	.L64:
 1073              		.loc 1 407 0 is_stmt 0 discriminator 1
 1074 0106 FFF7FEFF 		bl	USBUART_CDCIsReady
 1075 010a 0346     		mov	r3, r0
 1076 010c 002B     		cmp	r3, #0
 1077 010e FAD0     		beq	.L64
 408:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 1078              		.loc 1 408 0 is_stmt 1
 1079 0110 8348     		ldr	r0, .L85+48
 1080 0112 FFF7FEFF 		bl	USBUART_PutString
 409:main.c        ****                         while(!USBUART_CDCIsReady());
 1081              		.loc 1 409 0
 1082 0116 00BF     		nop
 1083              	.L65:
 1084              		.loc 1 409 0 is_stmt 0 discriminator 1
 1085 0118 FFF7FEFF 		bl	USBUART_CDCIsReady
 1086 011c 0346     		mov	r3, r0
 1087 011e 002B     		cmp	r3, #0
 1088 0120 FAD0     		beq	.L65
 410:main.c        ****                         USBUART_PutCRLF();
 1089              		.loc 1 410 0 is_stmt 1
 1090 0122 FFF7FEFF 		bl	USBUART_PutCRLF
 411:main.c        ****                         inCount = 0;
 1091              		.loc 1 411 0
 1092 0126 0023     		movs	r3, #0
 1093 0128 7B60     		str	r3, [r7, #4]
 412:main.c        ****                         break;
 1094              		.loc 1 412 0
 1095 012a 4DE0     		b	.L66
 1096              	.L61:
 413:main.c        ****                     } else {
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 28


 414:main.c        ****                         transmitAddress  += 100*(input - (0x30));
 1097              		.loc 1 414 0
 1098 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1099 012e 303B     		subs	r3, r3, #48
 1100 0130 DBB2     		uxtb	r3, r3
 1101 0132 1A46     		mov	r2, r3
 1102 0134 9200     		lsls	r2, r2, #2
 1103 0136 1344     		add	r3, r3, r2
 1104 0138 1A46     		mov	r2, r3
 1105 013a 9100     		lsls	r1, r2, #2
 1106 013c 1A46     		mov	r2, r3
 1107 013e 0B46     		mov	r3, r1
 1108 0140 1344     		add	r3, r3, r2
 1109 0142 9B00     		lsls	r3, r3, #2
 1110 0144 DAB2     		uxtb	r2, r3
 1111 0146 734B     		ldr	r3, .L85+36
 1112 0148 1B78     		ldrb	r3, [r3]
 1113 014a DBB2     		uxtb	r3, r3
 1114 014c 1344     		add	r3, r3, r2
 1115 014e DAB2     		uxtb	r2, r3
 1116 0150 704B     		ldr	r3, .L85+36
 1117 0152 1A70     		strb	r2, [r3]
 415:main.c        ****                         USBUART_PutChar(input);
 1118              		.loc 1 415 0
 1119 0154 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1120 0156 1846     		mov	r0, r3
 1121 0158 FFF7FEFF 		bl	USBUART_PutChar
 416:main.c        ****                         ++inCount;
 1122              		.loc 1 416 0
 1123 015c 7B68     		ldr	r3, [r7, #4]
 1124 015e 0133     		adds	r3, r3, #1
 1125 0160 7B60     		str	r3, [r7, #4]
 1126 0162 2DE0     		b	.L55
 1127              	.L58:
 417:main.c        ****                     }
 418:main.c        ****                 }else if(inCount == 1){
 1128              		.loc 1 418 0
 1129 0164 7B68     		ldr	r3, [r7, #4]
 1130 0166 012B     		cmp	r3, #1
 1131 0168 16D1     		bne	.L67
 419:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 1132              		.loc 1 419 0
 1133 016a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1134 016c 303B     		subs	r3, r3, #48
 1135 016e DBB2     		uxtb	r3, r3
 1136 0170 1A46     		mov	r2, r3
 1137 0172 9200     		lsls	r2, r2, #2
 1138 0174 1344     		add	r3, r3, r2
 1139 0176 5B00     		lsls	r3, r3, #1
 1140 0178 DAB2     		uxtb	r2, r3
 1141 017a 664B     		ldr	r3, .L85+36
 1142 017c 1B78     		ldrb	r3, [r3]
 1143 017e DBB2     		uxtb	r3, r3
 1144 0180 1344     		add	r3, r3, r2
 1145 0182 DAB2     		uxtb	r2, r3
 1146 0184 634B     		ldr	r3, .L85+36
 1147 0186 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 29


 420:main.c        ****                     USBUART_PutChar(input);
 1148              		.loc 1 420 0
 1149 0188 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1150 018a 1846     		mov	r0, r3
 1151 018c FFF7FEFF 		bl	USBUART_PutChar
 421:main.c        ****                     ++inCount;
 1152              		.loc 1 421 0
 1153 0190 7B68     		ldr	r3, [r7, #4]
 1154 0192 0133     		adds	r3, r3, #1
 1155 0194 7B60     		str	r3, [r7, #4]
 1156 0196 13E0     		b	.L55
 1157              	.L67:
 422:main.c        ****                 }else if (inCount == 2){
 1158              		.loc 1 422 0
 1159 0198 7B68     		ldr	r3, [r7, #4]
 1160 019a 022B     		cmp	r3, #2
 1161 019c 10D1     		bne	.L55
 423:main.c        ****                     transmitAddress  += input - (0x30);   
 1162              		.loc 1 423 0
 1163 019e 5D4B     		ldr	r3, .L85+36
 1164 01a0 1B78     		ldrb	r3, [r3]
 1165 01a2 DAB2     		uxtb	r2, r3
 1166 01a4 FB78     		ldrb	r3, [r7, #3]
 1167 01a6 1344     		add	r3, r3, r2
 1168 01a8 DBB2     		uxtb	r3, r3
 1169 01aa 303B     		subs	r3, r3, #48
 1170 01ac DAB2     		uxtb	r2, r3
 1171 01ae 594B     		ldr	r3, .L85+36
 1172 01b0 1A70     		strb	r2, [r3]
 424:main.c        ****                     USBUART_PutChar(input);
 1173              		.loc 1 424 0
 1174 01b2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1175 01b4 1846     		mov	r0, r3
 1176 01b6 FFF7FEFF 		bl	USBUART_PutChar
 425:main.c        ****                     ++inCount;
 1177              		.loc 1 425 0
 1178 01ba 7B68     		ldr	r3, [r7, #4]
 1179 01bc 0133     		adds	r3, r3, #1
 1180 01be 7B60     		str	r3, [r7, #4]
 1181              	.L55:
 391:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1182              		.loc 1 391 0
 1183 01c0 7B68     		ldr	r3, [r7, #4]
 1184 01c2 022B     		cmp	r3, #2
 1185 01c4 7FF76BAF 		ble	.L56
 1186              	.L66:
 426:main.c        ****                 }
 427:main.c        ****                 
 428:main.c        ****             }
 429:main.c        ****             if (!transmitMode) {
 1187              		.loc 1 429 0
 1188 01c8 514B     		ldr	r3, .L85+32
 1189 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 01cc 83F00103 		eor	r3, r3, #1
 1191 01d0 DBB2     		uxtb	r3, r3
 1192 01d2 002B     		cmp	r3, #0
 1193 01d4 40F0D580 		bne	.L84
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 30


 430:main.c        ****                 continue;
 431:main.c        ****             }
 432:main.c        **** 
 433:main.c        ****             while(!USBUART_CDCIsReady());
 1194              		.loc 1 433 0
 1195 01d8 00BF     		nop
 1196              	.L71:
 1197              		.loc 1 433 0 is_stmt 0 discriminator 1
 1198 01da FFF7FEFF 		bl	USBUART_CDCIsReady
 1199 01de 0346     		mov	r3, r0
 1200 01e0 002B     		cmp	r3, #0
 1201 01e2 FAD0     		beq	.L71
 434:main.c        ****             USBUART_PutCRLF();
 1202              		.loc 1 434 0 is_stmt 1
 1203 01e4 FFF7FEFF 		bl	USBUART_PutCRLF
 435:main.c        ****             while(!USBUART_CDCIsReady());
 1204              		.loc 1 435 0
 1205 01e8 00BF     		nop
 1206              	.L72:
 1207              		.loc 1 435 0 is_stmt 0 discriminator 1
 1208 01ea FFF7FEFF 		bl	USBUART_CDCIsReady
 1209 01ee 0346     		mov	r3, r0
 1210 01f0 002B     		cmp	r3, #0
 1211 01f2 FAD0     		beq	.L72
 436:main.c        ****             USBUART_PutString("Enter message: ");
 1212              		.loc 1 436 0 is_stmt 1
 1213 01f4 4B48     		ldr	r0, .L85+52
 1214 01f6 FFF7FEFF 		bl	USBUART_PutString
 437:main.c        ****             inCount = 7; 
 1215              		.loc 1 437 0
 1216 01fa 0723     		movs	r3, #7
 1217 01fc 7B60     		str	r3, [r7, #4]
 438:main.c        ****             input = 0; 
 1218              		.loc 1 438 0
 1219 01fe 0023     		movs	r3, #0
 1220 0200 FB70     		strb	r3, [r7, #3]
 439:main.c        **** 
 440:main.c        ****             
 441:main.c        ****             buffer[0] = 0x00; // Start of header
 1221              		.loc 1 441 0
 1222 0202 494B     		ldr	r3, .L85+56
 1223 0204 0022     		movs	r2, #0
 1224 0206 1A70     		strb	r2, [r3]
 442:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 1225              		.loc 1 442 0
 1226 0208 474B     		ldr	r3, .L85+56
 1227 020a 0122     		movs	r2, #1
 1228 020c 5A70     		strb	r2, [r3, #1]
 443:main.c        ****             buffer[2] = ADDR1Start; // Source address
 1229              		.loc 1 443 0
 1230 020e 464B     		ldr	r3, .L85+56
 1231 0210 2E22     		movs	r2, #46
 1232 0212 9A70     		strb	r2, [r3, #2]
 444:main.c        ****             buffer[3] = transmitAddress; // Destination address
 1233              		.loc 1 444 0
 1234 0214 3F4B     		ldr	r3, .L85+36
 1235 0216 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 31


 1236 0218 DAB2     		uxtb	r2, r3
 1237 021a 434B     		ldr	r3, .L85+56
 1238 021c DA70     		strb	r2, [r3, #3]
 445:main.c        ****             buffer[4] = 0x00; // CRC disabled
 1239              		.loc 1 445 0
 1240 021e 424B     		ldr	r3, .L85+56
 1241 0220 0022     		movs	r2, #0
 1242 0222 1A71     		strb	r2, [r3, #4]
 446:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 1243              		.loc 1 446 0
 1244 0224 404B     		ldr	r3, .L85+56
 1245 0226 8022     		movs	r2, #128
 1246 0228 5A71     		strb	r2, [r3, #5]
 447:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 1247              		.loc 1 447 0
 1248 022a 3F4B     		ldr	r3, .L85+56
 1249 022c 7722     		movs	r2, #119
 1250 022e 9A71     		strb	r2, [r3, #6]
 448:main.c        ****             
 449:main.c        ****             //Enter = 0x0D (carriage return or \r)
 450:main.c        ****             while(input != 0x0D){
 1251              		.loc 1 450 0
 1252 0230 22E0     		b	.L73
 1253              	.L76:
 451:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1254              		.loc 1 451 0
 1255 0232 00BF     		nop
 1256              	.L74:
 1257              		.loc 1 451 0 is_stmt 0 discriminator 1
 1258 0234 FFF7FEFF 		bl	USBUART_DataIsReady
 1259 0238 0346     		mov	r3, r0
 1260 023a 002B     		cmp	r3, #0
 1261 023c FAD0     		beq	.L74
 452:main.c        ****                 input = USBUART_GetChar();
 1262              		.loc 1 452 0 is_stmt 1
 1263 023e FFF7FEFF 		bl	USBUART_GetChar
 1264 0242 0346     		mov	r3, r0
 1265 0244 FB70     		strb	r3, [r7, #3]
 453:main.c        ****                 if(input != 0x0D){
 1266              		.loc 1 453 0
 1267 0246 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1268 0248 0D2B     		cmp	r3, #13
 1269 024a 15D0     		beq	.L73
 454:main.c        ****                     buffer[inCount] = input;
 1270              		.loc 1 454 0
 1271 024c 364A     		ldr	r2, .L85+56
 1272 024e 7B68     		ldr	r3, [r7, #4]
 1273 0250 1344     		add	r3, r3, r2
 1274 0252 FA78     		ldrb	r2, [r7, #3]
 1275 0254 1A70     		strb	r2, [r3]
 455:main.c        ****                     while(!USBUART_CDCIsReady());
 1276              		.loc 1 455 0
 1277 0256 00BF     		nop
 1278              	.L75:
 1279              		.loc 1 455 0 is_stmt 0 discriminator 1
 1280 0258 FFF7FEFF 		bl	USBUART_CDCIsReady
 1281 025c 0346     		mov	r3, r0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 32


 1282 025e 002B     		cmp	r3, #0
 1283 0260 FAD0     		beq	.L75
 456:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 1284              		.loc 1 456 0 is_stmt 1
 1285 0262 314A     		ldr	r2, .L85+56
 1286 0264 7B68     		ldr	r3, [r7, #4]
 1287 0266 1344     		add	r3, r3, r2
 1288 0268 1B78     		ldrb	r3, [r3]
 1289 026a DBB2     		uxtb	r3, r3
 1290 026c 1846     		mov	r0, r3
 1291 026e FFF7FEFF 		bl	USBUART_PutChar
 457:main.c        ****                     ++inCount;
 1292              		.loc 1 457 0
 1293 0272 7B68     		ldr	r3, [r7, #4]
 1294 0274 0133     		adds	r3, r3, #1
 1295 0276 7B60     		str	r3, [r7, #4]
 1296              	.L73:
 450:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1297              		.loc 1 450 0
 1298 0278 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1299 027a 0D2B     		cmp	r3, #13
 1300 027c D9D1     		bne	.L76
 458:main.c        ****                 }
 459:main.c        ****             }
 460:main.c        ****             buffer[4] = inCount - 7; // Removes CR character.
 1301              		.loc 1 460 0
 1302 027e 7B68     		ldr	r3, [r7, #4]
 1303 0280 DBB2     		uxtb	r3, r3
 1304 0282 073B     		subs	r3, r3, #7
 1305 0284 DAB2     		uxtb	r2, r3
 1306 0286 284B     		ldr	r3, .L85+56
 1307 0288 1A71     		strb	r2, [r3, #4]
 461:main.c        ****             if (buffer[4] > 44) {
 1308              		.loc 1 461 0
 1309 028a 274B     		ldr	r3, .L85+56
 1310 028c 1B79     		ldrb	r3, [r3, #4]
 1311 028e DBB2     		uxtb	r3, r3
 1312 0290 2C2B     		cmp	r3, #44
 1313 0292 09D9     		bls	.L77
 462:main.c        ****                 while(!USBUART_CDCIsReady());
 1314              		.loc 1 462 0
 1315 0294 00BF     		nop
 1316              	.L78:
 1317              		.loc 1 462 0 is_stmt 0 discriminator 1
 1318 0296 FFF7FEFF 		bl	USBUART_CDCIsReady
 1319 029a 0346     		mov	r3, r0
 1320 029c 002B     		cmp	r3, #0
 1321 029e FAD0     		beq	.L78
 463:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 1322              		.loc 1 463 0 is_stmt 1
 1323 02a0 2248     		ldr	r0, .L85+60
 1324 02a2 FFF7FEFF 		bl	USBUART_PutString
 464:main.c        ****                 continue;
 1325              		.loc 1 464 0
 1326 02a6 6DE0     		b	.L70
 1327              	.L77:
 465:main.c        ****             }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 33


 466:main.c        **** 
 467:main.c        ****             dataSize = inCount;
 1328              		.loc 1 467 0
 1329 02a8 214A     		ldr	r2, .L85+64
 1330 02aa 7B68     		ldr	r3, [r7, #4]
 1331 02ac 1360     		str	r3, [r2]
 468:main.c        ****             position = 0; // Reset position in transmit interrupt
 1332              		.loc 1 468 0
 1333 02ae 214B     		ldr	r3, .L85+68
 1334 02b0 0022     		movs	r2, #0
 1335 02b2 1A60     		str	r2, [r3]
 469:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 1336              		.loc 1 469 0
 1337 02b4 1C4A     		ldr	r2, .L85+56
 1338 02b6 7B68     		ldr	r3, [r7, #4]
 1339 02b8 1344     		add	r3, r3, r2
 1340 02ba 7722     		movs	r2, #119
 1341 02bc 1A70     		strb	r2, [r3]
 470:main.c        ****             dataSize++;
 1342              		.loc 1 470 0
 1343 02be 1C4B     		ldr	r3, .L85+64
 1344 02c0 1B68     		ldr	r3, [r3]
 1345 02c2 0133     		adds	r3, r3, #1
 1346 02c4 1A4A     		ldr	r2, .L85+64
 1347 02c6 1360     		str	r3, [r2]
 471:main.c        ****             TimerTX_Start();
 1348              		.loc 1 471 0
 1349 02c8 FFF7FEFF 		bl	TimerTX_Start
 472:main.c        ****             while (position < dataSize);
 1350              		.loc 1 472 0
 1351 02cc 00BF     		nop
 1352              	.L79:
 1353              		.loc 1 472 0 is_stmt 0 discriminator 1
 1354 02ce 194B     		ldr	r3, .L85+68
 1355 02d0 1A68     		ldr	r2, [r3]
 1356 02d2 174B     		ldr	r3, .L85+64
 1357 02d4 1B68     		ldr	r3, [r3]
 1358 02d6 9A42     		cmp	r2, r3
 1359 02d8 F9DB     		blt	.L79
 473:main.c        ****             TimerTX_Stop();
 1360              		.loc 1 473 0 is_stmt 1
 1361 02da FFF7FEFF 		bl	TimerTX_Stop
 474:main.c        ****             while(!USBUART_CDCIsReady());
 1362              		.loc 1 474 0
 1363 02de 00BF     		nop
 1364              	.L80:
 1365              		.loc 1 474 0 is_stmt 0 discriminator 1
 1366 02e0 FFF7FEFF 		bl	USBUART_CDCIsReady
 1367 02e4 0346     		mov	r3, r0
 1368 02e6 002B     		cmp	r3, #0
 1369 02e8 FAD0     		beq	.L80
 475:main.c        ****             USBUART_PutCRLF(); 
 1370              		.loc 1 475 0 is_stmt 1
 1371 02ea FFF7FEFF 		bl	USBUART_PutCRLF
 1372              	.LBE4:
 1373 02ee BEE6     		b	.L83
 1374              	.L86:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 34


 1375              		.align	2
 1376              	.L85:
 1377 02f0 00000000 		.word	TimerInterruptHandler
 1378 02f4 00000000 		.word	RisingEdgeInterruptHandler
 1379 02f8 00000000 		.word	FallingEdgeInterruptHandler
 1380 02fc 00000000 		.word	ReceiveInterruptHandler
 1381 0300 00000000 		.word	TransmitInterruptHandler
 1382 0304 00000000 		.word	CollisionDelayInterruptHandler
 1383 0308 00000000 		.word	USBUART_device
 1384 030c 00000000 		.word	systemState
 1385 0310 00000000 		.word	transmitMode
 1386 0314 00000000 		.word	transmitAddress
 1387 0318 00000000 		.word	.LC0
 1388 031c 00000000 		.word	__ctype_ptr__
 1389 0320 38000000 		.word	.LC1
 1390 0324 60000000 		.word	.LC2
 1391 0328 00000000 		.word	buffer
 1392 032c 70000000 		.word	.LC3
 1393 0330 00000000 		.word	dataSize
 1394 0334 00000000 		.word	position
 1395              	.L53:
 476:main.c        ****             
 477:main.c        ****         } else { // Receive mode
 478:main.c        ****             checkForNewData();
 1396              		.loc 1 478 0
 1397 0338 FFF7FEFF 		bl	checkForNewData
 479:main.c        ****             stateDiagram();
 1398              		.loc 1 479 0
 1399 033c FFF7FEFF 		bl	stateDiagram
 480:main.c        ****             if (USBUART_DataIsReady()) { 
 1400              		.loc 1 480 0
 1401 0340 FFF7FEFF 		bl	USBUART_DataIsReady
 1402 0344 0346     		mov	r3, r0
 1403 0346 002B     		cmp	r3, #0
 1404 0348 3FF491AE 		beq	.L83
 1405              	.LBB6:
 481:main.c        ****                 char input;
 482:main.c        ****                 input = USBUART_GetChar();
 1406              		.loc 1 482 0
 1407 034c FFF7FEFF 		bl	USBUART_GetChar
 1408 0350 0346     		mov	r3, r0
 1409 0352 BB70     		strb	r3, [r7, #2]
 1410              	.LBB7:
 483:main.c        ****                 if (toupper(input) == 'T') {
 1411              		.loc 1 483 0
 1412 0354 BB78     		ldrb	r3, [r7, #2]
 1413 0356 7B70     		strb	r3, [r7, #1]
 1414 0358 0B4B     		ldr	r3, .L87
 1415 035a 1A68     		ldr	r2, [r3]
 1416 035c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1417 035e 0133     		adds	r3, r3, #1
 1418 0360 1344     		add	r3, r3, r2
 1419 0362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1420 0364 03F00303 		and	r3, r3, #3
 1421 0368 022B     		cmp	r3, #2
 1422 036a 02D1     		bne	.L81
 1423              		.loc 1 483 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 35


 1424 036c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1425 036e 203B     		subs	r3, r3, #32
 1426 0370 00E0     		b	.L82
 1427              	.L81:
 1428              		.loc 1 483 0 discriminator 2
 1429 0372 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1430              	.L82:
 1431              	.LBE7:
 1432              		.loc 1 483 0 discriminator 4
 1433 0374 542B     		cmp	r3, #84
 1434 0376 7FF47AAE 		bne	.L83
 484:main.c        ****                     transmitMode = true;
 1435              		.loc 1 484 0 is_stmt 1
 1436 037a 044B     		ldr	r3, .L87+4
 1437 037c 0122     		movs	r2, #1
 1438 037e 1A70     		strb	r2, [r3]
 1439 0380 75E6     		b	.L83
 1440              	.L84:
 1441              	.LBE6:
 1442              	.LBB8:
 430:main.c        ****             }
 1443              		.loc 1 430 0
 1444 0382 00BF     		nop
 1445              	.L70:
 1446              	.LBE8:
 485:main.c        ****                 }
 486:main.c        ****             }
 487:main.c        ****         }
 488:main.c        ****     }
 1447              		.loc 1 488 0
 1448 0384 73E6     		b	.L83
 1449              	.L88:
 1450 0386 00BF     		.align	2
 1451              	.L87:
 1452 0388 00000000 		.word	__ctype_ptr__
 1453 038c 00000000 		.word	transmitMode
 1454              		.cfi_endproc
 1455              	.LFE71:
 1456              		.size	main, .-main
 1457              		.section	.text.stateDiagram,"ax",%progbits
 1458              		.align	2
 1459              		.global	stateDiagram
 1460              		.thumb
 1461              		.thumb_func
 1462              		.type	stateDiagram, %function
 1463              	stateDiagram:
 1464              	.LFB72:
 489:main.c        **** }
 490:main.c        **** 
 491:main.c        **** void stateDiagram(){
 1465              		.loc 1 491 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 1, uses_anonymous_args = 0
 1469 0000 80B5     		push	{r7, lr}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 7, -8
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 36


 1472              		.cfi_offset 14, -4
 1473 0002 00AF     		add	r7, sp, #0
 1474              		.cfi_def_cfa_register 7
 492:main.c        ****     switch(systemState){      
 1475              		.loc 1 492 0
 1476 0004 314B     		ldr	r3, .L95
 1477 0006 1B78     		ldrb	r3, [r3]
 1478 0008 DBB2     		uxtb	r3, r3
 1479 000a 012B     		cmp	r3, #1
 1480 000c 41D0     		beq	.L91
 1481 000e 022B     		cmp	r3, #2
 1482 0010 25D0     		beq	.L92
 1483 0012 002B     		cmp	r3, #0
 1484 0014 00D0     		beq	.L93
 493:main.c        ****         case IDLE :;
 494:main.c        ****             IDLE_Write(1);
 495:main.c        ****             BUSY_Write(!IDLE_Read());
 496:main.c        ****             COLLISION_Write(!IDLE_Read());
 497:main.c        ****             
 498:main.c        ****             dataBitsRead = 0;
 499:main.c        ****             receivePosition = 0;
 500:main.c        ****             addressZeroReceive = 0;
 501:main.c        ****         break;
 502:main.c        **** 
 503:main.c        ****         case BUSY:
 504:main.c        ****             BUSY_Write(1);
 505:main.c        ****             IDLE_Write(!BUSY_Read());
 506:main.c        ****             COLLISION_Write(!BUSY_Read());
 507:main.c        ****         break;
 508:main.c        **** 
 509:main.c        ****         case COLLISION:;
 510:main.c        ****             COLLISION_Write(1);
 511:main.c        ****             IDLE_Write(!COLLISION_Read());
 512:main.c        ****             BUSY_Write(!COLLISION_Read());
 513:main.c        ****         break;
 514:main.c        ****     }   
 515:main.c        **** }
 1485              		.loc 1 515 0
 1486 0016 56E0     		b	.L94
 1487              	.L93:
 494:main.c        ****             BUSY_Write(!IDLE_Read());
 1488              		.loc 1 494 0
 1489 0018 0120     		movs	r0, #1
 1490 001a FFF7FEFF 		bl	IDLE_Write
 495:main.c        ****             COLLISION_Write(!IDLE_Read());
 1491              		.loc 1 495 0
 1492 001e FFF7FEFF 		bl	IDLE_Read
 1493 0022 0346     		mov	r3, r0
 1494 0024 002B     		cmp	r3, #0
 1495 0026 0CBF     		ite	eq
 1496 0028 0123     		moveq	r3, #1
 1497 002a 0023     		movne	r3, #0
 1498 002c DBB2     		uxtb	r3, r3
 1499 002e 1846     		mov	r0, r3
 1500 0030 FFF7FEFF 		bl	BUSY_Write
 496:main.c        ****             
 1501              		.loc 1 496 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 37


 1502 0034 FFF7FEFF 		bl	IDLE_Read
 1503 0038 0346     		mov	r3, r0
 1504 003a 002B     		cmp	r3, #0
 1505 003c 0CBF     		ite	eq
 1506 003e 0123     		moveq	r3, #1
 1507 0040 0023     		movne	r3, #0
 1508 0042 DBB2     		uxtb	r3, r3
 1509 0044 1846     		mov	r0, r3
 1510 0046 FFF7FEFF 		bl	COLLISION_Write
 498:main.c        ****             receivePosition = 0;
 1511              		.loc 1 498 0
 1512 004a 214B     		ldr	r3, .L95+4
 1513 004c 0022     		movs	r2, #0
 1514 004e 1A60     		str	r2, [r3]
 499:main.c        ****             addressZeroReceive = 0;
 1515              		.loc 1 499 0
 1516 0050 204B     		ldr	r3, .L95+8
 1517 0052 0022     		movs	r2, #0
 1518 0054 1A60     		str	r2, [r3]
 500:main.c        ****         break;
 1519              		.loc 1 500 0
 1520 0056 204B     		ldr	r3, .L95+12
 1521 0058 0022     		movs	r2, #0
 1522 005a 1A60     		str	r2, [r3]
 501:main.c        **** 
 1523              		.loc 1 501 0
 1524 005c 33E0     		b	.L90
 1525              	.L92:
 504:main.c        ****             IDLE_Write(!BUSY_Read());
 1526              		.loc 1 504 0
 1527 005e 0120     		movs	r0, #1
 1528 0060 FFF7FEFF 		bl	BUSY_Write
 505:main.c        ****             COLLISION_Write(!BUSY_Read());
 1529              		.loc 1 505 0
 1530 0064 FFF7FEFF 		bl	BUSY_Read
 1531 0068 0346     		mov	r3, r0
 1532 006a 002B     		cmp	r3, #0
 1533 006c 0CBF     		ite	eq
 1534 006e 0123     		moveq	r3, #1
 1535 0070 0023     		movne	r3, #0
 1536 0072 DBB2     		uxtb	r3, r3
 1537 0074 1846     		mov	r0, r3
 1538 0076 FFF7FEFF 		bl	IDLE_Write
 506:main.c        ****         break;
 1539              		.loc 1 506 0
 1540 007a FFF7FEFF 		bl	BUSY_Read
 1541 007e 0346     		mov	r3, r0
 1542 0080 002B     		cmp	r3, #0
 1543 0082 0CBF     		ite	eq
 1544 0084 0123     		moveq	r3, #1
 1545 0086 0023     		movne	r3, #0
 1546 0088 DBB2     		uxtb	r3, r3
 1547 008a 1846     		mov	r0, r3
 1548 008c FFF7FEFF 		bl	COLLISION_Write
 507:main.c        **** 
 1549              		.loc 1 507 0
 1550 0090 19E0     		b	.L90
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 38


 1551              	.L91:
 510:main.c        ****             IDLE_Write(!COLLISION_Read());
 1552              		.loc 1 510 0
 1553 0092 0120     		movs	r0, #1
 1554 0094 FFF7FEFF 		bl	COLLISION_Write
 511:main.c        ****             BUSY_Write(!COLLISION_Read());
 1555              		.loc 1 511 0
 1556 0098 FFF7FEFF 		bl	COLLISION_Read
 1557 009c 0346     		mov	r3, r0
 1558 009e 002B     		cmp	r3, #0
 1559 00a0 0CBF     		ite	eq
 1560 00a2 0123     		moveq	r3, #1
 1561 00a4 0023     		movne	r3, #0
 1562 00a6 DBB2     		uxtb	r3, r3
 1563 00a8 1846     		mov	r0, r3
 1564 00aa FFF7FEFF 		bl	IDLE_Write
 512:main.c        ****         break;
 1565              		.loc 1 512 0
 1566 00ae FFF7FEFF 		bl	COLLISION_Read
 1567 00b2 0346     		mov	r3, r0
 1568 00b4 002B     		cmp	r3, #0
 1569 00b6 0CBF     		ite	eq
 1570 00b8 0123     		moveq	r3, #1
 1571 00ba 0023     		movne	r3, #0
 1572 00bc DBB2     		uxtb	r3, r3
 1573 00be 1846     		mov	r0, r3
 1574 00c0 FFF7FEFF 		bl	BUSY_Write
 513:main.c        ****     }   
 1575              		.loc 1 513 0
 1576 00c4 00BF     		nop
 1577              	.L90:
 1578              	.L94:
 1579              		.loc 1 515 0
 1580 00c6 00BF     		nop
 1581 00c8 80BD     		pop	{r7, pc}
 1582              	.L96:
 1583 00ca 00BF     		.align	2
 1584              	.L95:
 1585 00cc 00000000 		.word	systemState
 1586 00d0 00000000 		.word	dataBitsRead
 1587 00d4 00000000 		.word	receivePosition
 1588 00d8 00000000 		.word	addressZeroReceive
 1589              		.cfi_endproc
 1590              	.LFE72:
 1591              		.size	stateDiagram, .-stateDiagram
 1592              		.section	.rodata
 1593 009b 00       		.align	2
 1594              	.LC4:
 1595 009c 4D657373 		.ascii	"Message From: \000"
 1595      61676520 
 1595      46726F6D 
 1595      3A2000
 1596 00ab 00       		.align	2
 1597              	.LC5:
 1598 00ac 53656E74 		.ascii	"Sent To: \000"
 1598      20546F3A 
 1598      2000
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 39


 1599 00b6 0000     		.align	2
 1600              	.LC6:
 1601 00b8 42435354 		.ascii	"BCST \000"
 1601      2000
 1602 00be 0000     		.align	2
 1603              	.LC7:
 1604 00c0 53697A65 		.ascii	"Size: \000"
 1604      3A2000
 1605 00c7 00       		.align	2
 1606              	.LC8:
 1607 00c8 4D657373 		.ascii	"Message: \000"
 1607      6167653A 
 1607      2000
 1608              		.section	.text.checkForNewData,"ax",%progbits
 1609              		.align	2
 1610              		.global	checkForNewData
 1611              		.thumb
 1612              		.thumb_func
 1613              		.type	checkForNewData, %function
 1614              	checkForNewData:
 1615              	.LFB73:
 516:main.c        **** 
 517:main.c        **** /**
 518:main.c        **** */
 519:main.c        **** void checkForNewData(){
 1616              		.loc 1 519 0
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 1, uses_anonymous_args = 0
 1620 0000 80B5     		push	{r7, lr}
 1621              		.cfi_def_cfa_offset 8
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
 1624 0002 00AF     		add	r7, sp, #0
 1625              		.cfi_def_cfa_register 7
 520:main.c        ****     if(USBUART_CDCIsReady() != 0){
 1626              		.loc 1 520 0
 1627 0004 FFF7FEFF 		bl	USBUART_CDCIsReady
 1628 0008 0346     		mov	r3, r0
 1629 000a 002B     		cmp	r3, #0
 1630 000c 00F0F081 		beq	.L131
 521:main.c        ****         while(dataBitsRead < receivePosition){
 1631              		.loc 1 521 0
 1632 0010 E7E1     		b	.L99
 1633              	.L130:
 522:main.c        ****             if(dataBitsRead <= 6){
 1634              		.loc 1 522 0
 1635 0012 724B     		ldr	r3, .L134
 1636 0014 1B68     		ldr	r3, [r3]
 1637 0016 062B     		cmp	r3, #6
 1638 0018 1ADC     		bgt	.L100
 523:main.c        ****     //            if(receiveBuffer[0] == 0x00){
 524:main.c        ****     //                startHeaderReceieved = 1;
 525:main.c        ****     //            }
 526:main.c        ****     //            if(receiveBuffer[1] == 0x01){
 527:main.c        ****     //                    verNumMatch = 1;
 528:main.c        ****     //           }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 40


 529:main.c        ****                 sourceAddress = receiveBuffer[2];
 1639              		.loc 1 529 0
 1640 001a 714B     		ldr	r3, .L134+4
 1641 001c 9B78     		ldrb	r3, [r3, #2]
 1642 001e DAB2     		uxtb	r2, r3
 1643 0020 704B     		ldr	r3, .L134+8
 1644 0022 1A70     		strb	r2, [r3]
 530:main.c        ****                 destinationAddress = receiveBuffer[3];
 1645              		.loc 1 530 0
 1646 0024 6E4B     		ldr	r3, .L134+4
 1647 0026 DB78     		ldrb	r3, [r3, #3]
 1648 0028 DAB2     		uxtb	r2, r3
 1649 002a 6F4B     		ldr	r3, .L134+12
 1650 002c 1A70     		strb	r2, [r3]
 531:main.c        ****                 messageLength = receiveBuffer[4];
 1651              		.loc 1 531 0
 1652 002e 6C4B     		ldr	r3, .L134+4
 1653 0030 1B79     		ldrb	r3, [r3, #4]
 1654 0032 DBB2     		uxtb	r3, r3
 1655 0034 1A46     		mov	r2, r3
 1656 0036 6D4B     		ldr	r3, .L134+16
 1657 0038 1A60     		str	r2, [r3]
 532:main.c        ****                 crcUsage = receiveBuffer[5];
 1658              		.loc 1 532 0
 1659 003a 694B     		ldr	r3, .L134+4
 1660 003c 5B79     		ldrb	r3, [r3, #5]
 1661 003e DAB2     		uxtb	r2, r3
 1662 0040 6B4B     		ldr	r3, .L134+20
 1663 0042 1A70     		strb	r2, [r3]
 533:main.c        ****                 headerCRC = receiveBuffer[6];            
 1664              		.loc 1 533 0
 1665 0044 664B     		ldr	r3, .L134+4
 1666 0046 9B79     		ldrb	r3, [r3, #6]
 1667 0048 DAB2     		uxtb	r2, r3
 1668 004a 6A4B     		ldr	r3, .L134+24
 1669 004c 1A70     		strb	r2, [r3]
 1670 004e C3E1     		b	.L101
 1671              	.L100:
 534:main.c        ****             } else {
 535:main.c        **** //                if (true) {
 536:main.c        ****                 if(destinationAddress == BROADCAST_ADDRESS || 
 1672              		.loc 1 536 0
 1673 0050 654B     		ldr	r3, .L134+12
 1674 0052 1B78     		ldrb	r3, [r3]
 1675 0054 DBB2     		uxtb	r3, r3
 1676 0056 002B     		cmp	r3, #0
 1677 0058 1FD0     		beq	.L102
 537:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1678              		.loc 1 537 0 discriminator 1
 1679 005a 634B     		ldr	r3, .L134+12
 1680 005c 1B78     		ldrb	r3, [r3]
 1681 005e DBB2     		uxtb	r3, r3
 536:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1682              		.loc 1 536 0 discriminator 1
 1683 0060 2D2B     		cmp	r3, #45
 1684 0062 04D9     		bls	.L103
 1685              		.loc 1 537 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 41


 1686 0064 604B     		ldr	r3, .L134+12
 1687 0066 1B78     		ldrb	r3, [r3]
 1688 0068 DBB2     		uxtb	r3, r3
 1689 006a 302B     		cmp	r3, #48
 1690 006c 15D9     		bls	.L102
 1691              	.L103:
 538:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 1692              		.loc 1 538 0 discriminator 1
 1693 006e 5E4B     		ldr	r3, .L134+12
 1694 0070 1B78     		ldrb	r3, [r3]
 1695 0072 DBB2     		uxtb	r3, r3
 537:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1696              		.loc 1 537 0 discriminator 1
 1697 0074 362B     		cmp	r3, #54
 1698 0076 04D9     		bls	.L104
 1699              		.loc 1 538 0
 1700 0078 5B4B     		ldr	r3, .L134+12
 1701 007a 1B78     		ldrb	r3, [r3]
 1702 007c DBB2     		uxtb	r3, r3
 1703 007e 392B     		cmp	r3, #57
 1704 0080 0BD9     		bls	.L102
 1705              	.L104:
 539:main.c        ****                 ((destinationAddress >= ADDR3Start) && (destinationAddress <= ADDR3Start+ADDRLength
 1706              		.loc 1 539 0 discriminator 1
 1707 0082 594B     		ldr	r3, .L134+12
 1708 0084 1B78     		ldrb	r3, [r3]
 1709 0086 DBB2     		uxtb	r3, r3
 538:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 1710              		.loc 1 538 0 discriminator 1
 1711 0088 7B2B     		cmp	r3, #123
 1712 008a 40F2A581 		bls	.L101
 1713              		.loc 1 539 0
 1714 008e 564B     		ldr	r3, .L134+12
 1715 0090 1B78     		ldrb	r3, [r3]
 1716 0092 DBB2     		uxtb	r3, r3
 1717 0094 7E2B     		cmp	r3, #126
 1718 0096 00F29F81 		bhi	.L101
 1719              	.L102:
 540:main.c        ****                    if(addressZeroReceive == 0){
 1720              		.loc 1 540 0
 1721 009a 574B     		ldr	r3, .L134+28
 1722 009c 1B68     		ldr	r3, [r3]
 1723 009e 002B     		cmp	r3, #0
 1724 00a0 40F08A81 		bne	.L105
 541:main.c        ****                         while(!USBUART_CDCIsReady());
 1725              		.loc 1 541 0
 1726 00a4 00BF     		nop
 1727              	.L106:
 1728              		.loc 1 541 0 is_stmt 0 discriminator 1
 1729 00a6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1730 00aa 0346     		mov	r3, r0
 1731 00ac 002B     		cmp	r3, #0
 1732 00ae FAD0     		beq	.L106
 542:main.c        ****                         USBUART_PutCRLF();
 1733              		.loc 1 542 0 is_stmt 1
 1734 00b0 FFF7FEFF 		bl	USBUART_PutCRLF
 543:main.c        ****                         while(!USBUART_CDCIsReady());
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 42


 1735              		.loc 1 543 0
 1736 00b4 00BF     		nop
 1737              	.L107:
 1738              		.loc 1 543 0 is_stmt 0 discriminator 1
 1739 00b6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1740 00ba 0346     		mov	r3, r0
 1741 00bc 002B     		cmp	r3, #0
 1742 00be FAD0     		beq	.L107
 544:main.c        ****                         USBUART_PutCRLF();
 1743              		.loc 1 544 0 is_stmt 1
 1744 00c0 FFF7FEFF 		bl	USBUART_PutCRLF
 545:main.c        ****                         while(!USBUART_CDCIsReady());
 1745              		.loc 1 545 0
 1746 00c4 00BF     		nop
 1747              	.L108:
 1748              		.loc 1 545 0 is_stmt 0 discriminator 1
 1749 00c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1750 00ca 0346     		mov	r3, r0
 1751 00cc 002B     		cmp	r3, #0
 1752 00ce FAD0     		beq	.L108
 546:main.c        ****                         USBUART_PutCRLF(); 
 1753              		.loc 1 546 0 is_stmt 1
 1754 00d0 FFF7FEFF 		bl	USBUART_PutCRLF
 547:main.c        ****                         while(!USBUART_CDCIsReady());
 1755              		.loc 1 547 0
 1756 00d4 00BF     		nop
 1757              	.L109:
 1758              		.loc 1 547 0 is_stmt 0 discriminator 1
 1759 00d6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1760 00da 0346     		mov	r3, r0
 1761 00dc 002B     		cmp	r3, #0
 1762 00de FAD0     		beq	.L109
 548:main.c        ****                         USBUART_PutString("Message From: ");
 1763              		.loc 1 548 0 is_stmt 1
 1764 00e0 4648     		ldr	r0, .L134+32
 1765 00e2 FFF7FEFF 		bl	USBUART_PutString
 549:main.c        ****                         while(!USBUART_CDCIsReady());
 1766              		.loc 1 549 0
 1767 00e6 00BF     		nop
 1768              	.L110:
 1769              		.loc 1 549 0 is_stmt 0 discriminator 1
 1770 00e8 FFF7FEFF 		bl	USBUART_CDCIsReady
 1771 00ec 0346     		mov	r3, r0
 1772 00ee 002B     		cmp	r3, #0
 1773 00f0 FAD0     		beq	.L110
 550:main.c        **** 
 551:main.c        ****                         USBUART_PutChar(((sourceAddress)/100)+0x30);
 1774              		.loc 1 551 0 is_stmt 1
 1775 00f2 3C4B     		ldr	r3, .L134+8
 1776 00f4 1B78     		ldrb	r3, [r3]
 1777 00f6 DBB2     		uxtb	r3, r3
 1778 00f8 414A     		ldr	r2, .L134+36
 1779 00fa A2FB0323 		umull	r2, r3, r2, r3
 1780 00fe 5B09     		lsrs	r3, r3, #5
 1781 0100 DBB2     		uxtb	r3, r3
 1782 0102 3033     		adds	r3, r3, #48
 1783 0104 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 43


 1784 0106 1846     		mov	r0, r3
 1785 0108 FFF7FEFF 		bl	USBUART_PutChar
 552:main.c        **** 
 553:main.c        ****                         while(!USBUART_CDCIsReady());
 1786              		.loc 1 553 0
 1787 010c 00BF     		nop
 1788              	.L111:
 1789              		.loc 1 553 0 is_stmt 0 discriminator 1
 1790 010e FFF7FEFF 		bl	USBUART_CDCIsReady
 1791 0112 0346     		mov	r3, r0
 1792 0114 002B     		cmp	r3, #0
 1793 0116 FAD0     		beq	.L111
 554:main.c        ****                         USBUART_PutChar(((sourceAddress/10)%10)+0x30);
 1794              		.loc 1 554 0 is_stmt 1
 1795 0118 324B     		ldr	r3, .L134+8
 1796 011a 1B78     		ldrb	r3, [r3]
 1797 011c DBB2     		uxtb	r3, r3
 1798 011e 394A     		ldr	r2, .L134+40
 1799 0120 A2FB0323 		umull	r2, r3, r2, r3
 1800 0124 DB08     		lsrs	r3, r3, #3
 1801 0126 DAB2     		uxtb	r2, r3
 1802 0128 364B     		ldr	r3, .L134+40
 1803 012a A3FB0213 		umull	r1, r3, r3, r2
 1804 012e D908     		lsrs	r1, r3, #3
 1805 0130 0B46     		mov	r3, r1
 1806 0132 9B00     		lsls	r3, r3, #2
 1807 0134 0B44     		add	r3, r3, r1
 1808 0136 5B00     		lsls	r3, r3, #1
 1809 0138 D31A     		subs	r3, r2, r3
 1810 013a DBB2     		uxtb	r3, r3
 1811 013c 3033     		adds	r3, r3, #48
 1812 013e DBB2     		uxtb	r3, r3
 1813 0140 1846     		mov	r0, r3
 1814 0142 FFF7FEFF 		bl	USBUART_PutChar
 555:main.c        ****                         while(!USBUART_CDCIsReady());
 1815              		.loc 1 555 0
 1816 0146 00BF     		nop
 1817              	.L112:
 1818              		.loc 1 555 0 is_stmt 0 discriminator 1
 1819 0148 FFF7FEFF 		bl	USBUART_CDCIsReady
 1820 014c 0346     		mov	r3, r0
 1821 014e 002B     		cmp	r3, #0
 1822 0150 FAD0     		beq	.L112
 556:main.c        ****              
 557:main.c        ****                         USBUART_PutChar(((sourceAddress%10)%10)+0x30);
 1823              		.loc 1 557 0 is_stmt 1
 1824 0152 244B     		ldr	r3, .L134+8
 1825 0154 1B78     		ldrb	r3, [r3]
 1826 0156 DAB2     		uxtb	r2, r3
 1827 0158 2A4B     		ldr	r3, .L134+40
 1828 015a A3FB0213 		umull	r1, r3, r3, r2
 1829 015e D908     		lsrs	r1, r3, #3
 1830 0160 0B46     		mov	r3, r1
 1831 0162 9B00     		lsls	r3, r3, #2
 1832 0164 0B44     		add	r3, r3, r1
 1833 0166 5B00     		lsls	r3, r3, #1
 1834 0168 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 44


 1835 016a DAB2     		uxtb	r2, r3
 1836 016c 254B     		ldr	r3, .L134+40
 1837 016e A3FB0213 		umull	r1, r3, r3, r2
 1838 0172 D908     		lsrs	r1, r3, #3
 1839 0174 0B46     		mov	r3, r1
 1840 0176 9B00     		lsls	r3, r3, #2
 1841 0178 0B44     		add	r3, r3, r1
 1842 017a 5B00     		lsls	r3, r3, #1
 1843 017c D31A     		subs	r3, r2, r3
 1844 017e DBB2     		uxtb	r3, r3
 1845 0180 3033     		adds	r3, r3, #48
 1846 0182 DBB2     		uxtb	r3, r3
 1847 0184 1846     		mov	r0, r3
 1848 0186 FFF7FEFF 		bl	USBUART_PutChar
 558:main.c        ****                         while(!USBUART_CDCIsReady());
 1849              		.loc 1 558 0
 1850 018a 00BF     		nop
 1851              	.L113:
 1852              		.loc 1 558 0 is_stmt 0 discriminator 1
 1853 018c FFF7FEFF 		bl	USBUART_CDCIsReady
 1854 0190 0346     		mov	r3, r0
 1855 0192 002B     		cmp	r3, #0
 1856 0194 FAD0     		beq	.L113
 559:main.c        ****                         USBUART_PutCRLF();
 1857              		.loc 1 559 0 is_stmt 1
 1858 0196 FFF7FEFF 		bl	USBUART_PutCRLF
 560:main.c        ****                         while(!USBUART_CDCIsReady());
 1859              		.loc 1 560 0
 1860 019a 00BF     		nop
 1861              	.L114:
 1862              		.loc 1 560 0 is_stmt 0 discriminator 1
 1863 019c FFF7FEFF 		bl	USBUART_CDCIsReady
 1864 01a0 0346     		mov	r3, r0
 1865 01a2 002B     		cmp	r3, #0
 1866 01a4 FAD0     		beq	.L114
 561:main.c        ****                         USBUART_PutString("Sent To: ");
 1867              		.loc 1 561 0 is_stmt 1
 1868 01a6 1848     		ldr	r0, .L134+44
 1869 01a8 FFF7FEFF 		bl	USBUART_PutString
 562:main.c        ****                         if(destinationAddress == BROADCAST_ADDRESS){
 1870              		.loc 1 562 0
 1871 01ac 0E4B     		ldr	r3, .L134+12
 1872 01ae 1B78     		ldrb	r3, [r3]
 1873 01b0 DBB2     		uxtb	r3, r3
 1874 01b2 002B     		cmp	r3, #0
 1875 01b4 2CD1     		bne	.L132
 563:main.c        ****                             while(!USBUART_CDCIsReady());
 1876              		.loc 1 563 0
 1877 01b6 00BF     		nop
 1878              	.L116:
 1879              		.loc 1 563 0 is_stmt 0 discriminator 1
 1880 01b8 FFF7FEFF 		bl	USBUART_CDCIsReady
 1881 01bc 0346     		mov	r3, r0
 1882 01be 002B     		cmp	r3, #0
 1883 01c0 FAD0     		beq	.L116
 564:main.c        ****                             USBUART_PutString("BCST ");
 1884              		.loc 1 564 0 is_stmt 1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 45


 1885 01c2 1248     		ldr	r0, .L134+48
 1886 01c4 FFF7FEFF 		bl	USBUART_PutString
 565:main.c        ****                             while(!USBUART_CDCIsReady());
 1887              		.loc 1 565 0
 1888 01c8 00BF     		nop
 1889              	.L117:
 1890              		.loc 1 565 0 is_stmt 0 discriminator 1
 1891 01ca FFF7FEFF 		bl	USBUART_CDCIsReady
 1892 01ce 0346     		mov	r3, r0
 1893 01d0 002B     		cmp	r3, #0
 1894 01d2 FAD0     		beq	.L117
 566:main.c        ****                             USBUART_PutCRLF();
 1895              		.loc 1 566 0 is_stmt 1
 1896 01d4 FFF7FEFF 		bl	USBUART_PutCRLF
 1897 01d8 74E0     		b	.L133
 1898              	.L135:
 1899 01da 00BF     		.align	2
 1900              	.L134:
 1901 01dc 00000000 		.word	dataBitsRead
 1902 01e0 00000000 		.word	receiveBuffer
 1903 01e4 00000000 		.word	sourceAddress
 1904 01e8 00000000 		.word	destinationAddress
 1905 01ec 00000000 		.word	messageLength
 1906 01f0 00000000 		.word	crcUsage
 1907 01f4 00000000 		.word	headerCRC
 1908 01f8 00000000 		.word	addressZeroReceive
 1909 01fc 9C000000 		.word	.LC4
 1910 0200 1F85EB51 		.word	1374389535
 1911 0204 CDCCCCCC 		.word	-858993459
 1912 0208 AC000000 		.word	.LC5
 1913 020c B8000000 		.word	.LC6
 1914              	.L132:
 567:main.c        ****                         }else{
 568:main.c        ****                             while(!USBUART_CDCIsReady());
 1915              		.loc 1 568 0
 1916 0210 00BF     		nop
 1917              	.L119:
 1918              		.loc 1 568 0 is_stmt 0 discriminator 1
 1919 0212 FFF7FEFF 		bl	USBUART_CDCIsReady
 1920 0216 0346     		mov	r3, r0
 1921 0218 002B     		cmp	r3, #0
 1922 021a FAD0     		beq	.L119
 569:main.c        ****              
 570:main.c        ****                             USBUART_PutChar(((destinationAddress)/100)+0x30);
 1923              		.loc 1 570 0 is_stmt 1
 1924 021c 754B     		ldr	r3, .L136
 1925 021e 1B78     		ldrb	r3, [r3]
 1926 0220 DBB2     		uxtb	r3, r3
 1927 0222 754A     		ldr	r2, .L136+4
 1928 0224 A2FB0323 		umull	r2, r3, r2, r3
 1929 0228 5B09     		lsrs	r3, r3, #5
 1930 022a DBB2     		uxtb	r3, r3
 1931 022c 3033     		adds	r3, r3, #48
 1932 022e DBB2     		uxtb	r3, r3
 1933 0230 1846     		mov	r0, r3
 1934 0232 FFF7FEFF 		bl	USBUART_PutChar
 571:main.c        **** 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 46


 572:main.c        ****                             while(!USBUART_CDCIsReady());
 1935              		.loc 1 572 0
 1936 0236 00BF     		nop
 1937              	.L120:
 1938              		.loc 1 572 0 is_stmt 0 discriminator 1
 1939 0238 FFF7FEFF 		bl	USBUART_CDCIsReady
 1940 023c 0346     		mov	r3, r0
 1941 023e 002B     		cmp	r3, #0
 1942 0240 FAD0     		beq	.L120
 573:main.c        ****                             USBUART_PutChar(((destinationAddress/10)%10)+0x30);
 1943              		.loc 1 573 0 is_stmt 1
 1944 0242 6C4B     		ldr	r3, .L136
 1945 0244 1B78     		ldrb	r3, [r3]
 1946 0246 DBB2     		uxtb	r3, r3
 1947 0248 6C4A     		ldr	r2, .L136+8
 1948 024a A2FB0323 		umull	r2, r3, r2, r3
 1949 024e DB08     		lsrs	r3, r3, #3
 1950 0250 DAB2     		uxtb	r2, r3
 1951 0252 6A4B     		ldr	r3, .L136+8
 1952 0254 A3FB0213 		umull	r1, r3, r3, r2
 1953 0258 D908     		lsrs	r1, r3, #3
 1954 025a 0B46     		mov	r3, r1
 1955 025c 9B00     		lsls	r3, r3, #2
 1956 025e 0B44     		add	r3, r3, r1
 1957 0260 5B00     		lsls	r3, r3, #1
 1958 0262 D31A     		subs	r3, r2, r3
 1959 0264 DBB2     		uxtb	r3, r3
 1960 0266 3033     		adds	r3, r3, #48
 1961 0268 DBB2     		uxtb	r3, r3
 1962 026a 1846     		mov	r0, r3
 1963 026c FFF7FEFF 		bl	USBUART_PutChar
 574:main.c        ****                             while(!USBUART_CDCIsReady());
 1964              		.loc 1 574 0
 1965 0270 00BF     		nop
 1966              	.L121:
 1967              		.loc 1 574 0 is_stmt 0 discriminator 1
 1968 0272 FFF7FEFF 		bl	USBUART_CDCIsReady
 1969 0276 0346     		mov	r3, r0
 1970 0278 002B     		cmp	r3, #0
 1971 027a FAD0     		beq	.L121
 575:main.c        ****                
 576:main.c        ****                             USBUART_PutChar(((destinationAddress%10)%10)+0x30);
 1972              		.loc 1 576 0 is_stmt 1
 1973 027c 5D4B     		ldr	r3, .L136
 1974 027e 1B78     		ldrb	r3, [r3]
 1975 0280 DAB2     		uxtb	r2, r3
 1976 0282 5E4B     		ldr	r3, .L136+8
 1977 0284 A3FB0213 		umull	r1, r3, r3, r2
 1978 0288 D908     		lsrs	r1, r3, #3
 1979 028a 0B46     		mov	r3, r1
 1980 028c 9B00     		lsls	r3, r3, #2
 1981 028e 0B44     		add	r3, r3, r1
 1982 0290 5B00     		lsls	r3, r3, #1
 1983 0292 D31A     		subs	r3, r2, r3
 1984 0294 DAB2     		uxtb	r2, r3
 1985 0296 594B     		ldr	r3, .L136+8
 1986 0298 A3FB0213 		umull	r1, r3, r3, r2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 47


 1987 029c D908     		lsrs	r1, r3, #3
 1988 029e 0B46     		mov	r3, r1
 1989 02a0 9B00     		lsls	r3, r3, #2
 1990 02a2 0B44     		add	r3, r3, r1
 1991 02a4 5B00     		lsls	r3, r3, #1
 1992 02a6 D31A     		subs	r3, r2, r3
 1993 02a8 DBB2     		uxtb	r3, r3
 1994 02aa 3033     		adds	r3, r3, #48
 1995 02ac DBB2     		uxtb	r3, r3
 1996 02ae 1846     		mov	r0, r3
 1997 02b0 FFF7FEFF 		bl	USBUART_PutChar
 577:main.c        ****                             USBUART_PutCRLF();
 1998              		.loc 1 577 0
 1999 02b4 FFF7FEFF 		bl	USBUART_PutCRLF
 578:main.c        ****                             while(!USBUART_CDCIsReady());
 2000              		.loc 1 578 0
 2001 02b8 00BF     		nop
 2002              	.L122:
 2003              		.loc 1 578 0 is_stmt 0 discriminator 1
 2004 02ba FFF7FEFF 		bl	USBUART_CDCIsReady
 2005 02be 0346     		mov	r3, r0
 2006 02c0 002B     		cmp	r3, #0
 2007 02c2 FAD0     		beq	.L122
 2008              	.L133:
 579:main.c        ****                         }
 580:main.c        ****                         while(!USBUART_CDCIsReady());
 2009              		.loc 1 580 0 is_stmt 1
 2010 02c4 00BF     		nop
 2011              	.L123:
 2012              		.loc 1 580 0 is_stmt 0 discriminator 1
 2013 02c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 2014 02ca 0346     		mov	r3, r0
 2015 02cc 002B     		cmp	r3, #0
 2016 02ce FAD0     		beq	.L123
 581:main.c        ****                         USBUART_PutString("Size: ");
 2017              		.loc 1 581 0 is_stmt 1
 2018 02d0 4B48     		ldr	r0, .L136+12
 2019 02d2 FFF7FEFF 		bl	USBUART_PutString
 582:main.c        ****                         while(!USBUART_CDCIsReady());
 2020              		.loc 1 582 0
 2021 02d6 00BF     		nop
 2022              	.L124:
 2023              		.loc 1 582 0 is_stmt 0 discriminator 1
 2024 02d8 FFF7FEFF 		bl	USBUART_CDCIsReady
 2025 02dc 0346     		mov	r3, r0
 2026 02de 002B     		cmp	r3, #0
 2027 02e0 FAD0     		beq	.L124
 583:main.c        ****                         USBUART_PutChar(((messageLength)/100)+0x30);
 2028              		.loc 1 583 0 is_stmt 1
 2029 02e2 484B     		ldr	r3, .L136+16
 2030 02e4 1B68     		ldr	r3, [r3]
 2031 02e6 444A     		ldr	r2, .L136+4
 2032 02e8 82FB0312 		smull	r1, r2, r2, r3
 2033 02ec 5211     		asrs	r2, r2, #5
 2034 02ee DB17     		asrs	r3, r3, #31
 2035 02f0 D31A     		subs	r3, r2, r3
 2036 02f2 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 48


 2037 02f4 3033     		adds	r3, r3, #48
 2038 02f6 DBB2     		uxtb	r3, r3
 2039 02f8 1846     		mov	r0, r3
 2040 02fa FFF7FEFF 		bl	USBUART_PutChar
 584:main.c        ****                         while(!USBUART_CDCIsReady());
 2041              		.loc 1 584 0
 2042 02fe 00BF     		nop
 2043              	.L125:
 2044              		.loc 1 584 0 is_stmt 0 discriminator 1
 2045 0300 FFF7FEFF 		bl	USBUART_CDCIsReady
 2046 0304 0346     		mov	r3, r0
 2047 0306 002B     		cmp	r3, #0
 2048 0308 FAD0     		beq	.L125
 585:main.c        ****                         USBUART_PutChar(((messageLength/10)%10)+0x30);
 2049              		.loc 1 585 0 is_stmt 1
 2050 030a 3E4B     		ldr	r3, .L136+16
 2051 030c 1B68     		ldr	r3, [r3]
 2052 030e 3E4A     		ldr	r2, .L136+20
 2053 0310 82FB0312 		smull	r1, r2, r2, r3
 2054 0314 9210     		asrs	r2, r2, #2
 2055 0316 DB17     		asrs	r3, r3, #31
 2056 0318 D21A     		subs	r2, r2, r3
 2057 031a 3B4B     		ldr	r3, .L136+20
 2058 031c 83FB0213 		smull	r1, r3, r3, r2
 2059 0320 9910     		asrs	r1, r3, #2
 2060 0322 D317     		asrs	r3, r2, #31
 2061 0324 C91A     		subs	r1, r1, r3
 2062 0326 0B46     		mov	r3, r1
 2063 0328 9B00     		lsls	r3, r3, #2
 2064 032a 0B44     		add	r3, r3, r1
 2065 032c 5B00     		lsls	r3, r3, #1
 2066 032e D11A     		subs	r1, r2, r3
 2067 0330 CBB2     		uxtb	r3, r1
 2068 0332 3033     		adds	r3, r3, #48
 2069 0334 DBB2     		uxtb	r3, r3
 2070 0336 1846     		mov	r0, r3
 2071 0338 FFF7FEFF 		bl	USBUART_PutChar
 586:main.c        ****                         while(!USBUART_CDCIsReady());
 2072              		.loc 1 586 0
 2073 033c 00BF     		nop
 2074              	.L126:
 2075              		.loc 1 586 0 is_stmt 0 discriminator 1
 2076 033e FFF7FEFF 		bl	USBUART_CDCIsReady
 2077 0342 0346     		mov	r3, r0
 2078 0344 002B     		cmp	r3, #0
 2079 0346 FAD0     		beq	.L126
 587:main.c        ****                         USBUART_PutChar(((messageLength%10)%10)+0x30);
 2080              		.loc 1 587 0 is_stmt 1
 2081 0348 2E4B     		ldr	r3, .L136+16
 2082 034a 1968     		ldr	r1, [r3]
 2083 034c 2E4B     		ldr	r3, .L136+20
 2084 034e 83FB0123 		smull	r2, r3, r3, r1
 2085 0352 9A10     		asrs	r2, r3, #2
 2086 0354 CB17     		asrs	r3, r1, #31
 2087 0356 D21A     		subs	r2, r2, r3
 2088 0358 1346     		mov	r3, r2
 2089 035a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 49


 2090 035c 1344     		add	r3, r3, r2
 2091 035e 5B00     		lsls	r3, r3, #1
 2092 0360 CA1A     		subs	r2, r1, r3
 2093 0362 294B     		ldr	r3, .L136+20
 2094 0364 83FB0213 		smull	r1, r3, r3, r2
 2095 0368 9910     		asrs	r1, r3, #2
 2096 036a D317     		asrs	r3, r2, #31
 2097 036c C91A     		subs	r1, r1, r3
 2098 036e 0B46     		mov	r3, r1
 2099 0370 9B00     		lsls	r3, r3, #2
 2100 0372 0B44     		add	r3, r3, r1
 2101 0374 5B00     		lsls	r3, r3, #1
 2102 0376 D11A     		subs	r1, r2, r3
 2103 0378 CBB2     		uxtb	r3, r1
 2104 037a 3033     		adds	r3, r3, #48
 2105 037c DBB2     		uxtb	r3, r3
 2106 037e 1846     		mov	r0, r3
 2107 0380 FFF7FEFF 		bl	USBUART_PutChar
 588:main.c        ****                         while(!USBUART_CDCIsReady());
 2108              		.loc 1 588 0
 2109 0384 00BF     		nop
 2110              	.L127:
 2111              		.loc 1 588 0 is_stmt 0 discriminator 1
 2112 0386 FFF7FEFF 		bl	USBUART_CDCIsReady
 2113 038a 0346     		mov	r3, r0
 2114 038c 002B     		cmp	r3, #0
 2115 038e FAD0     		beq	.L127
 589:main.c        ****                         USBUART_PutCRLF();
 2116              		.loc 1 589 0 is_stmt 1
 2117 0390 FFF7FEFF 		bl	USBUART_PutCRLF
 590:main.c        ****                         while(!USBUART_CDCIsReady());
 2118              		.loc 1 590 0
 2119 0394 00BF     		nop
 2120              	.L128:
 2121              		.loc 1 590 0 is_stmt 0 discriminator 1
 2122 0396 FFF7FEFF 		bl	USBUART_CDCIsReady
 2123 039a 0346     		mov	r3, r0
 2124 039c 002B     		cmp	r3, #0
 2125 039e FAD0     		beq	.L128
 591:main.c        ****                         USBUART_PutString("Message: ");
 2126              		.loc 1 591 0 is_stmt 1
 2127 03a0 1A48     		ldr	r0, .L136+24
 2128 03a2 FFF7FEFF 		bl	USBUART_PutString
 592:main.c        ****                         while(!USBUART_CDCIsReady());
 2129              		.loc 1 592 0
 2130 03a6 00BF     		nop
 2131              	.L129:
 2132              		.loc 1 592 0 is_stmt 0 discriminator 1
 2133 03a8 FFF7FEFF 		bl	USBUART_CDCIsReady
 2134 03ac 0346     		mov	r3, r0
 2135 03ae 002B     		cmp	r3, #0
 2136 03b0 FAD0     		beq	.L129
 593:main.c        ****                         addressZeroReceive = 1;
 2137              		.loc 1 593 0 is_stmt 1
 2138 03b2 174B     		ldr	r3, .L136+28
 2139 03b4 0122     		movs	r2, #1
 2140 03b6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 50


 2141              	.L105:
 594:main.c        ****                     }
 595:main.c        ****                     if(
 596:main.c        ****                         6 && dataBitsRead < receiveBuffer[4] + 7){
 2142              		.loc 1 596 0
 2143 03b8 164B     		ldr	r3, .L136+32
 2144 03ba 1B79     		ldrb	r3, [r3, #4]
 2145 03bc DBB2     		uxtb	r3, r3
 2146 03be DA1D     		adds	r2, r3, #7
 2147 03c0 154B     		ldr	r3, .L136+36
 2148 03c2 1B68     		ldr	r3, [r3]
 595:main.c        ****                         6 && dataBitsRead < receiveBuffer[4] + 7){
 2149              		.loc 1 595 0
 2150 03c4 9A42     		cmp	r2, r3
 2151 03c6 07DD     		ble	.L101
 597:main.c        ****                         USBUART_PutChar(receiveBuffer[dataBitsRead]);
 2152              		.loc 1 597 0
 2153 03c8 134B     		ldr	r3, .L136+36
 2154 03ca 1B68     		ldr	r3, [r3]
 2155 03cc 114A     		ldr	r2, .L136+32
 2156 03ce D35C     		ldrb	r3, [r2, r3]
 2157 03d0 DBB2     		uxtb	r3, r3
 2158 03d2 1846     		mov	r0, r3
 2159 03d4 FFF7FEFF 		bl	USBUART_PutChar
 2160              	.L101:
 598:main.c        ****                     }
 599:main.c        ****                     
 600:main.c        ****                 }
 601:main.c        ****             }
 602:main.c        ****             ++dataBitsRead;
 2161              		.loc 1 602 0
 2162 03d8 0F4B     		ldr	r3, .L136+36
 2163 03da 1B68     		ldr	r3, [r3]
 2164 03dc 0133     		adds	r3, r3, #1
 2165 03de 0E4A     		ldr	r2, .L136+36
 2166 03e0 1360     		str	r3, [r2]
 2167              	.L99:
 521:main.c        ****             if(dataBitsRead <= 6){
 2168              		.loc 1 521 0
 2169 03e2 0D4B     		ldr	r3, .L136+36
 2170 03e4 1A68     		ldr	r2, [r3]
 2171 03e6 0D4B     		ldr	r3, .L136+40
 2172 03e8 1B68     		ldr	r3, [r3]
 2173 03ea 9A42     		cmp	r2, r3
 2174 03ec FFF611AE 		blt	.L130
 2175              	.L131:
 603:main.c        ****         }
 604:main.c        ****     }
 605:main.c        **** }
 2176              		.loc 1 605 0
 2177 03f0 00BF     		nop
 2178 03f2 80BD     		pop	{r7, pc}
 2179              	.L137:
 2180              		.align	2
 2181              	.L136:
 2182 03f4 00000000 		.word	destinationAddress
 2183 03f8 1F85EB51 		.word	1374389535
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 51


 2184 03fc CDCCCCCC 		.word	-858993459
 2185 0400 C0000000 		.word	.LC7
 2186 0404 00000000 		.word	messageLength
 2187 0408 67666666 		.word	1717986919
 2188 040c C8000000 		.word	.LC8
 2189 0410 00000000 		.word	addressZeroReceive
 2190 0414 00000000 		.word	receiveBuffer
 2191 0418 00000000 		.word	dataBitsRead
 2192 041c 00000000 		.word	receivePosition
 2193              		.cfi_endproc
 2194              	.LFE73:
 2195              		.size	checkForNewData, .-checkForNewData
 2196              		.text
 2197              	.Letext0:
 2198              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2199              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2200              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2201              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2202              		.file 6 "Generated_Source\\PSoC5/USBUART.h"
 2203              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2204              		.section	.debug_info,"",%progbits
 2205              	.Ldebug_info0:
 2206 0000 1C050000 		.4byte	0x51c
 2207 0004 0400     		.2byte	0x4
 2208 0006 00000000 		.4byte	.Ldebug_abbrev0
 2209 000a 04       		.byte	0x4
 2210 000b 01       		.uleb128 0x1
 2211 000c 73000000 		.4byte	.LASF68
 2212 0010 0C       		.byte	0xc
 2213 0011 61030000 		.4byte	.LASF69
 2214 0015 8A020000 		.4byte	.LASF70
 2215 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2216 001d 00000000 		.4byte	0
 2217 0021 00000000 		.4byte	.Ldebug_line0
 2218 0025 02       		.uleb128 0x2
 2219 0026 01       		.byte	0x1
 2220 0027 06       		.byte	0x6
 2221 0028 59020000 		.4byte	.LASF0
 2222 002c 02       		.uleb128 0x2
 2223 002d 01       		.byte	0x1
 2224 002e 08       		.byte	0x8
 2225 002f 3F020000 		.4byte	.LASF1
 2226 0033 02       		.uleb128 0x2
 2227 0034 02       		.byte	0x2
 2228 0035 05       		.byte	0x5
 2229 0036 4C000000 		.4byte	.LASF2
 2230 003a 03       		.uleb128 0x3
 2231 003b 0F010000 		.4byte	.LASF4
 2232 003f 02       		.byte	0x2
 2233 0040 2B       		.byte	0x2b
 2234 0041 45000000 		.4byte	0x45
 2235 0045 02       		.uleb128 0x2
 2236 0046 02       		.byte	0x2
 2237 0047 07       		.byte	0x7
 2238 0048 39030000 		.4byte	.LASF3
 2239 004c 03       		.uleb128 0x3
 2240 004d AC030000 		.4byte	.LASF5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 52


 2241 0051 02       		.byte	0x2
 2242 0052 3F       		.byte	0x3f
 2243 0053 57000000 		.4byte	0x57
 2244 0057 02       		.uleb128 0x2
 2245 0058 04       		.byte	0x4
 2246 0059 05       		.byte	0x5
 2247 005a 8C010000 		.4byte	.LASF6
 2248 005e 02       		.uleb128 0x2
 2249 005f 04       		.byte	0x4
 2250 0060 07       		.byte	0x7
 2251 0061 FD020000 		.4byte	.LASF7
 2252 0065 02       		.uleb128 0x2
 2253 0066 08       		.byte	0x8
 2254 0067 05       		.byte	0x5
 2255 0068 65010000 		.4byte	.LASF8
 2256 006c 02       		.uleb128 0x2
 2257 006d 08       		.byte	0x8
 2258 006e 07       		.byte	0x7
 2259 006f 73020000 		.4byte	.LASF9
 2260 0073 04       		.uleb128 0x4
 2261 0074 04       		.byte	0x4
 2262 0075 05       		.byte	0x5
 2263 0076 696E7400 		.ascii	"int\000"
 2264 007a 02       		.uleb128 0x2
 2265 007b 04       		.byte	0x4
 2266 007c 07       		.byte	0x7
 2267 007d E7020000 		.4byte	.LASF10
 2268 0081 03       		.uleb128 0x3
 2269 0082 F4020000 		.4byte	.LASF11
 2270 0086 03       		.byte	0x3
 2271 0087 24       		.byte	0x24
 2272 0088 3A000000 		.4byte	0x3a
 2273 008c 03       		.uleb128 0x3
 2274 008d 31030000 		.4byte	.LASF12
 2275 0091 03       		.byte	0x3
 2276 0092 2C       		.byte	0x2c
 2277 0093 4C000000 		.4byte	0x4c
 2278 0097 05       		.uleb128 0x5
 2279 0098 29010000 		.4byte	.LASF13
 2280 009c 04       		.byte	0x4
 2281 009d 9201     		.2byte	0x192
 2282 009f 2C000000 		.4byte	0x2c
 2283 00a3 02       		.uleb128 0x2
 2284 00a4 04       		.byte	0x4
 2285 00a5 04       		.byte	0x4
 2286 00a6 5F010000 		.4byte	.LASF14
 2287 00aa 02       		.uleb128 0x2
 2288 00ab 08       		.byte	0x8
 2289 00ac 04       		.byte	0x4
 2290 00ad 87030000 		.4byte	.LASF15
 2291 00b1 02       		.uleb128 0x2
 2292 00b2 01       		.byte	0x1
 2293 00b3 08       		.byte	0x8
 2294 00b4 2C030000 		.4byte	.LASF16
 2295 00b8 05       		.uleb128 0x5
 2296 00b9 68030000 		.4byte	.LASF17
 2297 00bd 04       		.byte	0x4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 53


 2298 00be 3C02     		.2byte	0x23c
 2299 00c0 C4000000 		.4byte	0xc4
 2300 00c4 06       		.uleb128 0x6
 2301 00c5 97000000 		.4byte	0x97
 2302 00c9 02       		.uleb128 0x2
 2303 00ca 08       		.byte	0x8
 2304 00cb 04       		.byte	0x4
 2305 00cc 15020000 		.4byte	.LASF18
 2306 00d0 02       		.uleb128 0x2
 2307 00d1 04       		.byte	0x4
 2308 00d2 07       		.byte	0x7
 2309 00d3 5C000000 		.4byte	.LASF19
 2310 00d7 07       		.uleb128 0x7
 2311 00d8 04       		.byte	0x4
 2312 00d9 DD000000 		.4byte	0xdd
 2313 00dd 08       		.uleb128 0x8
 2314 00de B1000000 		.4byte	0xb1
 2315 00e2 09       		.uleb128 0x9
 2316 00e3 F8010000 		.4byte	.LASF71
 2317 00e7 01       		.byte	0x1
 2318 00e8 2C000000 		.4byte	0x2c
 2319 00ec 01       		.byte	0x1
 2320 00ed 39       		.byte	0x39
 2321 00ee 05010000 		.4byte	0x105
 2322 00f2 0A       		.uleb128 0xa
 2323 00f3 21000000 		.4byte	.LASF20
 2324 00f7 00       		.byte	0
 2325 00f8 0A       		.uleb128 0xa
 2326 00f9 FE010000 		.4byte	.LASF21
 2327 00fd 01       		.byte	0x1
 2328 00fe 0A       		.uleb128 0xa
 2329 00ff 27030000 		.4byte	.LASF22
 2330 0103 02       		.byte	0x2
 2331 0104 00       		.byte	0
 2332 0105 0B       		.uleb128 0xb
 2333 0106 52030000 		.4byte	.LASF72
 2334 010a 01       		.byte	0x1
 2335 010b 5C       		.byte	0x5c
 2336 010c 00000000 		.4byte	.LFB64
 2337 0110 14000000 		.4byte	.LFE64-.LFB64
 2338 0114 01       		.uleb128 0x1
 2339 0115 9C       		.byte	0x9c
 2340 0116 29010000 		.4byte	0x129
 2341 011a 0C       		.uleb128 0xc
 2342 011b C1010000 		.4byte	.LASF23
 2343 011f 01       		.byte	0x1
 2344 0120 5D       		.byte	0x5d
 2345 0121 73000000 		.4byte	0x73
 2346 0125 02       		.uleb128 0x2
 2347 0126 91       		.byte	0x91
 2348 0127 74       		.sleb128 -12
 2349 0128 00       		.byte	0
 2350 0129 0D       		.uleb128 0xd
 2351 012a 34000000 		.4byte	.LASF26
 2352 012e 01       		.byte	0x1
 2353 012f 7B       		.byte	0x7b
 2354 0130 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 54


 2355 0134 08010000 		.4byte	.LFE65-.LFB65
 2356 0138 01       		.uleb128 0x1
 2357 0139 9C       		.byte	0x9c
 2358 013a 71010000 		.4byte	0x171
 2359 013e 0C       		.uleb128 0xc
 2360 013f 00000000 		.4byte	.LASF24
 2361 0143 01       		.byte	0x1
 2362 0144 7C       		.byte	0x7c
 2363 0145 73000000 		.4byte	0x73
 2364 0149 02       		.uleb128 0x2
 2365 014a 91       		.byte	0x91
 2366 014b 6C       		.sleb128 -20
 2367 014c 0C       		.uleb128 0xc
 2368 014d DB030000 		.4byte	.LASF25
 2369 0151 01       		.byte	0x1
 2370 0152 7D       		.byte	0x7d
 2371 0153 B1000000 		.4byte	0xb1
 2372 0157 02       		.uleb128 0x2
 2373 0158 91       		.byte	0x91
 2374 0159 6B       		.sleb128 -21
 2375 015a 0E       		.uleb128 0xe
 2376 015b 80000000 		.4byte	.LBB2
 2377 015f 4C000000 		.4byte	.LBE2-.LBB2
 2378 0163 0F       		.uleb128 0xf
 2379 0164 7800     		.ascii	"x\000"
 2380 0166 01       		.byte	0x1
 2381 0167 9B       		.byte	0x9b
 2382 0168 73000000 		.4byte	0x73
 2383 016c 02       		.uleb128 0x2
 2384 016d 91       		.byte	0x91
 2385 016e 64       		.sleb128 -28
 2386 016f 00       		.byte	0
 2387 0170 00       		.byte	0
 2388 0171 10       		.uleb128 0x10
 2389 0172 73010000 		.4byte	.LASF30
 2390 0176 01       		.byte	0x1
 2391 0177 B3       		.byte	0xb3
 2392 0178 00000000 		.4byte	.LFB66
 2393 017c 7C010000 		.4byte	.LFE66-.LFB66
 2394 0180 01       		.uleb128 0x1
 2395 0181 9C       		.byte	0x9c
 2396 0182 0D       		.uleb128 0xd
 2397 0183 E2010000 		.4byte	.LASF27
 2398 0187 01       		.byte	0x1
 2399 0188 ED       		.byte	0xed
 2400 0189 00000000 		.4byte	.LFB67
 2401 018d B0000000 		.4byte	.LFE67-.LFB67
 2402 0191 01       		.uleb128 0x1
 2403 0192 9C       		.byte	0x9c
 2404 0193 BE010000 		.4byte	0x1be
 2405 0197 0E       		.uleb128 0xe
 2406 0198 22000000 		.4byte	.LBB3
 2407 019c 6C000000 		.4byte	.LBE3-.LBB3
 2408 01a0 0C       		.uleb128 0xc
 2409 01a1 E7030000 		.4byte	.LASF28
 2410 01a5 01       		.byte	0x1
 2411 01a6 F5       		.byte	0xf5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 55


 2412 01a7 73000000 		.4byte	0x73
 2413 01ab 02       		.uleb128 0x2
 2414 01ac 91       		.byte	0x91
 2415 01ad 74       		.sleb128 -12
 2416 01ae 0C       		.uleb128 0xc
 2417 01af B6030000 		.4byte	.LASF29
 2418 01b3 01       		.byte	0x1
 2419 01b4 FD       		.byte	0xfd
 2420 01b5 81000000 		.4byte	0x81
 2421 01b9 02       		.uleb128 0x2
 2422 01ba 91       		.byte	0x91
 2423 01bb 72       		.sleb128 -14
 2424 01bc 00       		.byte	0
 2425 01bd 00       		.byte	0
 2426 01be 11       		.uleb128 0x11
 2427 01bf 04040000 		.4byte	.LASF31
 2428 01c3 01       		.byte	0x1
 2429 01c4 1501     		.2byte	0x115
 2430 01c6 00000000 		.4byte	.LFB68
 2431 01ca 58000000 		.4byte	.LFE68-.LFB68
 2432 01ce 01       		.uleb128 0x1
 2433 01cf 9C       		.byte	0x9c
 2434 01d0 12       		.uleb128 0x12
 2435 01d1 C6010000 		.4byte	.LASF32
 2436 01d5 01       		.byte	0x1
 2437 01d6 3501     		.2byte	0x135
 2438 01d8 00000000 		.4byte	.LFB69
 2439 01dc 4C000000 		.4byte	.LFE69-.LFB69
 2440 01e0 01       		.uleb128 0x1
 2441 01e1 9C       		.byte	0x9c
 2442 01e2 F6010000 		.4byte	0x1f6
 2443 01e6 13       		.uleb128 0x13
 2444 01e7 1A010000 		.4byte	.LASF33
 2445 01eb 01       		.byte	0x1
 2446 01ec 3701     		.2byte	0x137
 2447 01ee 73000000 		.4byte	0x73
 2448 01f2 02       		.uleb128 0x2
 2449 01f3 91       		.byte	0x91
 2450 01f4 74       		.sleb128 -12
 2451 01f5 00       		.byte	0
 2452 01f6 14       		.uleb128 0x14
 2453 01f7 3F040000 		.4byte	.LASF34
 2454 01fb 01       		.byte	0x1
 2455 01fc 4701     		.2byte	0x147
 2456 01fe 00000000 		.4byte	.LFB70
 2457 0202 18000000 		.4byte	.LFE70-.LFB70
 2458 0206 01       		.uleb128 0x1
 2459 0207 9C       		.byte	0x9c
 2460 0208 15       		.uleb128 0x15
 2461 0209 0A010000 		.4byte	.LASF73
 2462 020d 01       		.byte	0x1
 2463 020e 5601     		.2byte	0x156
 2464 0210 73000000 		.4byte	0x73
 2465 0214 00000000 		.4byte	.LFB71
 2466 0218 90030000 		.4byte	.LFE71-.LFB71
 2467 021c 01       		.uleb128 0x1
 2468 021d 9C       		.byte	0x9c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 56


 2469 021e 96020000 		.4byte	0x296
 2470 0222 16       		.uleb128 0x16
 2471 0223 00000000 		.4byte	.Ldebug_ranges0+0
 2472 0227 63020000 		.4byte	0x263
 2473 022b 13       		.uleb128 0x13
 2474 022c 3B010000 		.4byte	.LASF35
 2475 0230 01       		.byte	0x1
 2476 0231 8201     		.2byte	0x182
 2477 0233 73000000 		.4byte	0x73
 2478 0237 02       		.uleb128 0x2
 2479 0238 91       		.byte	0x91
 2480 0239 74       		.sleb128 -12
 2481 023a 13       		.uleb128 0x13
 2482 023b 56000000 		.4byte	.LASF36
 2483 023f 01       		.byte	0x1
 2484 0240 8401     		.2byte	0x184
 2485 0242 B1000000 		.4byte	0xb1
 2486 0246 02       		.uleb128 0x2
 2487 0247 91       		.byte	0x91
 2488 0248 73       		.sleb128 -13
 2489 0249 0E       		.uleb128 0xe
 2490 024a B6000000 		.4byte	.LBB5
 2491 024e 20000000 		.4byte	.LBE5-.LBB5
 2492 0252 17       		.uleb128 0x17
 2493 0253 5F5F7800 		.ascii	"__x\000"
 2494 0257 01       		.byte	0x1
 2495 0258 9001     		.2byte	0x190
 2496 025a B1000000 		.4byte	0xb1
 2497 025e 02       		.uleb128 0x2
 2498 025f 91       		.byte	0x91
 2499 0260 70       		.sleb128 -16
 2500 0261 00       		.byte	0
 2501 0262 00       		.byte	0
 2502 0263 0E       		.uleb128 0xe
 2503 0264 4C030000 		.4byte	.LBB6
 2504 0268 36000000 		.4byte	.LBE6-.LBB6
 2505 026c 13       		.uleb128 0x13
 2506 026d 56000000 		.4byte	.LASF36
 2507 0271 01       		.byte	0x1
 2508 0272 E101     		.2byte	0x1e1
 2509 0274 B1000000 		.4byte	0xb1
 2510 0278 02       		.uleb128 0x2
 2511 0279 91       		.byte	0x91
 2512 027a 72       		.sleb128 -14
 2513 027b 0E       		.uleb128 0xe
 2514 027c 54030000 		.4byte	.LBB7
 2515 0280 20000000 		.4byte	.LBE7-.LBB7
 2516 0284 17       		.uleb128 0x17
 2517 0285 5F5F7800 		.ascii	"__x\000"
 2518 0289 01       		.byte	0x1
 2519 028a E301     		.2byte	0x1e3
 2520 028c B1000000 		.4byte	0xb1
 2521 0290 02       		.uleb128 0x2
 2522 0291 91       		.byte	0x91
 2523 0292 71       		.sleb128 -15
 2524 0293 00       		.byte	0
 2525 0294 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 57


 2526 0295 00       		.byte	0
 2527 0296 18       		.uleb128 0x18
 2528 0297 95010000 		.4byte	.LASF37
 2529 029b 01       		.byte	0x1
 2530 029c EB01     		.2byte	0x1eb
 2531 029e 00000000 		.4byte	.LFB72
 2532 02a2 DC000000 		.4byte	.LFE72-.LFB72
 2533 02a6 01       		.uleb128 0x1
 2534 02a7 9C       		.byte	0x9c
 2535 02a8 18       		.uleb128 0x18
 2536 02a9 8E030000 		.4byte	.LASF38
 2537 02ad 01       		.byte	0x1
 2538 02ae 0702     		.2byte	0x207
 2539 02b0 00000000 		.4byte	.LFB73
 2540 02b4 20040000 		.4byte	.LFE73-.LFB73
 2541 02b8 01       		.uleb128 0x1
 2542 02b9 9C       		.byte	0x9c
 2543 02ba 19       		.uleb128 0x19
 2544 02bb 65000000 		.4byte	.LASF39
 2545 02bf 05       		.byte	0x5
 2546 02c0 2E       		.byte	0x2e
 2547 02c1 D7000000 		.4byte	0xd7
 2548 02c5 1A       		.uleb128 0x1a
 2549 02c6 B2010000 		.4byte	.LASF40
 2550 02ca 06       		.byte	0x6
 2551 02cb D602     		.2byte	0x2d6
 2552 02cd C4000000 		.4byte	0xc4
 2553 02d1 1A       		.uleb128 0x1a
 2554 02d2 F7030000 		.4byte	.LASF41
 2555 02d6 07       		.byte	0x7
 2556 02d7 1207     		.2byte	0x712
 2557 02d9 DD020000 		.4byte	0x2dd
 2558 02dd 06       		.uleb128 0x6
 2559 02de 8C000000 		.4byte	0x8c
 2560 02e2 1B       		.uleb128 0x1b
 2561 02e3 4D020000 		.4byte	.LASF42
 2562 02e7 01       		.byte	0x1
 2563 02e8 39       		.byte	0x39
 2564 02e9 F3020000 		.4byte	0x2f3
 2565 02ed 05       		.uleb128 0x5
 2566 02ee 03       		.byte	0x3
 2567 02ef 00000000 		.4byte	systemState
 2568 02f3 06       		.uleb128 0x6
 2569 02f4 E2000000 		.4byte	0xe2
 2570 02f8 1B       		.uleb128 0x1b
 2571 02f9 19000000 		.4byte	.LASF43
 2572 02fd 01       		.byte	0x1
 2573 02fe 3C       		.byte	0x3c
 2574 02ff 10030000 		.4byte	0x310
 2575 0303 05       		.uleb128 0x5
 2576 0304 03       		.byte	0x3
 2577 0305 00000000 		.4byte	lowFlag
 2578 0309 02       		.uleb128 0x2
 2579 030a 01       		.byte	0x1
 2580 030b 02       		.byte	0x2
 2581 030c 4C030000 		.4byte	.LASF44
 2582 0310 06       		.uleb128 0x6
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 58


 2583 0311 09030000 		.4byte	0x309
 2584 0315 1C       		.uleb128 0x1c
 2585 0316 2C030000 		.4byte	0x32c
 2586 031a 2C030000 		.4byte	0x32c
 2587 031e 1D       		.uleb128 0x1d
 2588 031f D0000000 		.4byte	0xd0
 2589 0323 F301     		.2byte	0x1f3
 2590 0325 1E       		.uleb128 0x1e
 2591 0326 D0000000 		.4byte	0xd0
 2592 032a 0F       		.byte	0xf
 2593 032b 00       		.byte	0
 2594 032c 06       		.uleb128 0x6
 2595 032d 2C000000 		.4byte	0x2c
 2596 0331 1B       		.uleb128 0x1b
 2597 0332 0C000000 		.4byte	.LASF45
 2598 0336 01       		.byte	0x1
 2599 0337 3E       		.byte	0x3e
 2600 0338 42030000 		.4byte	0x342
 2601 033c 05       		.uleb128 0x5
 2602 033d 03       		.byte	0x3
 2603 033e 00000000 		.4byte	transmitData
 2604 0342 06       		.uleb128 0x6
 2605 0343 15030000 		.4byte	0x315
 2606 0347 1C       		.uleb128 0x1c
 2607 0348 2C030000 		.4byte	0x32c
 2608 034c 58030000 		.4byte	0x358
 2609 0350 1D       		.uleb128 0x1d
 2610 0351 D0000000 		.4byte	0xd0
 2611 0355 F301     		.2byte	0x1f3
 2612 0357 00       		.byte	0
 2613 0358 1B       		.uleb128 0x1b
 2614 0359 5A030000 		.4byte	.LASF46
 2615 035d 01       		.byte	0x1
 2616 035e 3F       		.byte	0x3f
 2617 035f 69030000 		.4byte	0x369
 2618 0363 05       		.uleb128 0x5
 2619 0364 03       		.byte	0x3
 2620 0365 00000000 		.4byte	buffer
 2621 0369 06       		.uleb128 0x6
 2622 036a 47030000 		.4byte	0x347
 2623 036e 1B       		.uleb128 0x1b
 2624 036f 79030000 		.4byte	.LASF47
 2625 0373 01       		.byte	0x1
 2626 0374 40       		.byte	0x40
 2627 0375 7F030000 		.4byte	0x37f
 2628 0379 05       		.uleb128 0x5
 2629 037a 03       		.byte	0x3
 2630 037b 00000000 		.4byte	receiveBuffer
 2631 037f 06       		.uleb128 0x6
 2632 0380 47030000 		.4byte	0x347
 2633 0384 1C       		.uleb128 0x1c
 2634 0385 2C030000 		.4byte	0x32c
 2635 0389 94030000 		.4byte	0x394
 2636 038d 1E       		.uleb128 0x1e
 2637 038e D0000000 		.4byte	0xd0
 2638 0392 0F       		.byte	0xf
 2639 0393 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 59


 2640 0394 1B       		.uleb128 0x1b
 2641 0395 53010000 		.4byte	.LASF48
 2642 0399 01       		.byte	0x1
 2643 039a 41       		.byte	0x41
 2644 039b A5030000 		.4byte	0x3a5
 2645 039f 05       		.uleb128 0x5
 2646 03a0 03       		.byte	0x3
 2647 03a1 00000000 		.4byte	receiveData
 2648 03a5 06       		.uleb128 0x6
 2649 03a6 84030000 		.4byte	0x384
 2650 03aa 1B       		.uleb128 0x1b
 2651 03ab EE030000 		.4byte	.LASF49
 2652 03af 01       		.byte	0x1
 2653 03b0 42       		.byte	0x42
 2654 03b1 BB030000 		.4byte	0x3bb
 2655 03b5 05       		.uleb128 0x5
 2656 03b6 03       		.byte	0x3
 2657 03b7 00000000 		.4byte	position
 2658 03bb 06       		.uleb128 0x6
 2659 03bc 73000000 		.4byte	0x73
 2660 03c0 1B       		.uleb128 0x1b
 2661 03c1 17030000 		.4byte	.LASF50
 2662 03c5 01       		.byte	0x1
 2663 03c6 43       		.byte	0x43
 2664 03c7 BB030000 		.4byte	0x3bb
 2665 03cb 05       		.uleb128 0x5
 2666 03cc 03       		.byte	0x3
 2667 03cd 00000000 		.4byte	receivePosition
 2668 03d1 1B       		.uleb128 0x1b
 2669 03d2 08020000 		.4byte	.LASF51
 2670 03d6 01       		.byte	0x1
 2671 03d7 44       		.byte	0x44
 2672 03d8 BB030000 		.4byte	0x3bb
 2673 03dc 05       		.uleb128 0x5
 2674 03dd 03       		.byte	0x3
 2675 03de 00000000 		.4byte	dataBitsRead
 2676 03e2 1F       		.uleb128 0x1f
 2677 03e3 69647800 		.ascii	"idx\000"
 2678 03e7 01       		.byte	0x1
 2679 03e8 45       		.byte	0x45
 2680 03e9 BB030000 		.4byte	0x3bb
 2681 03ed 05       		.uleb128 0x5
 2682 03ee 03       		.byte	0x3
 2683 03ef 00000000 		.4byte	idx
 2684 03f3 1B       		.uleb128 0x1b
 2685 03f4 0F030000 		.4byte	.LASF52
 2686 03f8 01       		.byte	0x1
 2687 03f9 46       		.byte	0x46
 2688 03fa 04040000 		.4byte	0x404
 2689 03fe 05       		.uleb128 0x5
 2690 03ff 03       		.byte	0x3
 2691 0400 00000000 		.4byte	dataPtr
 2692 0404 07       		.uleb128 0x7
 2693 0405 04       		.byte	0x4
 2694 0406 0A040000 		.4byte	0x40a
 2695 040a 06       		.uleb128 0x6
 2696 040b B1000000 		.4byte	0xb1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 60


 2697 040f 1B       		.uleb128 0x1b
 2698 0410 32040000 		.4byte	.LASF53
 2699 0414 01       		.byte	0x1
 2700 0415 47       		.byte	0x47
 2701 0416 BB030000 		.4byte	0x3bb
 2702 041a 05       		.uleb128 0x5
 2703 041b 03       		.byte	0x3
 2704 041c 00000000 		.4byte	transmitLock
 2705 0420 1B       		.uleb128 0x1b
 2706 0421 2F010000 		.4byte	.LASF54
 2707 0425 01       		.byte	0x1
 2708 0426 48       		.byte	0x48
 2709 0427 BB030000 		.4byte	0x3bb
 2710 042b 05       		.uleb128 0x5
 2711 042c 03       		.byte	0x3
 2712 042d 00000000 		.4byte	receiveLock
 2713 0431 1B       		.uleb128 0x1b
 2714 0432 26000000 		.4byte	.LASF55
 2715 0436 01       		.byte	0x1
 2716 0437 49       		.byte	0x49
 2717 0438 10030000 		.4byte	0x310
 2718 043c 05       		.uleb128 0x5
 2719 043d 03       		.byte	0x3
 2720 043e 00000000 		.4byte	collisionLock
 2721 0442 1B       		.uleb128 0x1b
 2722 0443 65020000 		.4byte	.LASF56
 2723 0447 01       		.byte	0x1
 2724 0448 4B       		.byte	0x4b
 2725 0449 0A040000 		.4byte	0x40a
 2726 044d 05       		.uleb128 0x5
 2727 044e 03       		.byte	0x3
 2728 044f 00000000 		.4byte	sourceAddress
 2729 0453 1B       		.uleb128 0x1b
 2730 0454 1F040000 		.4byte	.LASF57
 2731 0458 01       		.byte	0x1
 2732 0459 4C       		.byte	0x4c
 2733 045a 0A040000 		.4byte	0x40a
 2734 045e 05       		.uleb128 0x5
 2735 045f 03       		.byte	0x3
 2736 0460 00000000 		.4byte	destinationAddress
 2737 0464 1B       		.uleb128 0x1b
 2738 0465 9E030000 		.4byte	.LASF58
 2739 0469 01       		.byte	0x1
 2740 046a 4D       		.byte	0x4d
 2741 046b BB030000 		.4byte	0x3bb
 2742 046f 05       		.uleb128 0x5
 2743 0470 03       		.byte	0x3
 2744 0471 00000000 		.4byte	messageLength
 2745 0475 1B       		.uleb128 0x1b
 2746 0476 01010000 		.4byte	.LASF59
 2747 047a 01       		.byte	0x1
 2748 047b 4E       		.byte	0x4e
 2749 047c 0A040000 		.4byte	0x40a
 2750 0480 05       		.uleb128 0x5
 2751 0481 03       		.byte	0x3
 2752 0482 00000000 		.4byte	crcUsage
 2753 0486 1B       		.uleb128 0x1b
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 61


 2754 0487 BE030000 		.4byte	.LASF60
 2755 048b 01       		.byte	0x1
 2756 048c 4F       		.byte	0x4f
 2757 048d 0A040000 		.4byte	0x40a
 2758 0491 05       		.uleb128 0x5
 2759 0492 03       		.byte	0x3
 2760 0493 00000000 		.4byte	headerCRC
 2761 0497 1B       		.uleb128 0x1b
 2762 0498 C8030000 		.4byte	.LASF61
 2763 049c 01       		.byte	0x1
 2764 049d 50       		.byte	0x50
 2765 049e BB030000 		.4byte	0x3bb
 2766 04a2 05       		.uleb128 0x5
 2767 04a3 03       		.byte	0x3
 2768 04a4 00000000 		.4byte	addressZeroReceive
 2769 04a8 1B       		.uleb128 0x1b
 2770 04a9 6D030000 		.4byte	.LASF62
 2771 04ad 01       		.byte	0x1
 2772 04ae 51       		.byte	0x51
 2773 04af 0A040000 		.4byte	0x40a
 2774 04b3 05       		.uleb128 0x5
 2775 04b4 03       		.byte	0x3
 2776 04b5 00000000 		.4byte	currentChar
 2777 04b9 1B       		.uleb128 0x1b
 2778 04ba 20010000 		.4byte	.LASF63
 2779 04be 01       		.byte	0x1
 2780 04bf 52       		.byte	0x52
 2781 04c0 BB030000 		.4byte	0x3bb
 2782 04c4 05       		.uleb128 0x5
 2783 04c5 03       		.byte	0x3
 2784 04c6 00000000 		.4byte	dataSize
 2785 04ca 1B       		.uleb128 0x1b
 2786 04cb 21020000 		.4byte	.LASF64
 2787 04cf 01       		.byte	0x1
 2788 04d0 53       		.byte	0x53
 2789 04d1 BB030000 		.4byte	0x3bb
 2790 04d5 05       		.uleb128 0x5
 2791 04d6 03       		.byte	0x3
 2792 04d7 00000000 		.4byte	transmitBitCount
 2793 04db 1B       		.uleb128 0x1b
 2794 04dc 43010000 		.4byte	.LASF65
 2795 04e0 01       		.byte	0x1
 2796 04e1 54       		.byte	0x54
 2797 04e2 BB030000 		.4byte	0x3bb
 2798 04e6 05       		.uleb128 0x5
 2799 04e7 03       		.byte	0x3
 2800 04e8 00000000 		.4byte	receiveBitCount
 2801 04ec 1B       		.uleb128 0x1b
 2802 04ed 00000000 		.4byte	.LASF24
 2803 04f1 01       		.byte	0x1
 2804 04f2 55       		.byte	0x55
 2805 04f3 BB030000 		.4byte	0x3bb
 2806 04f7 05       		.uleb128 0x5
 2807 04f8 03       		.byte	0x3
 2808 04f9 00000000 		.4byte	concatCount
 2809 04fd 1B       		.uleb128 0x1b
 2810 04fe A2010000 		.4byte	.LASF66
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 62


 2811 0502 01       		.byte	0x1
 2812 0503 56       		.byte	0x56
 2813 0504 2C030000 		.4byte	0x32c
 2814 0508 05       		.uleb128 0x5
 2815 0509 03       		.byte	0x3
 2816 050a 00000000 		.4byte	transmitAddress
 2817 050e 1B       		.uleb128 0x1b
 2818 050f 32020000 		.4byte	.LASF67
 2819 0513 01       		.byte	0x1
 2820 0514 58       		.byte	0x58
 2821 0515 09030000 		.4byte	0x309
 2822 0519 05       		.uleb128 0x5
 2823 051a 03       		.byte	0x3
 2824 051b 00000000 		.4byte	transmitMode
 2825 051f 00       		.byte	0
 2826              		.section	.debug_abbrev,"",%progbits
 2827              	.Ldebug_abbrev0:
 2828 0000 01       		.uleb128 0x1
 2829 0001 11       		.uleb128 0x11
 2830 0002 01       		.byte	0x1
 2831 0003 25       		.uleb128 0x25
 2832 0004 0E       		.uleb128 0xe
 2833 0005 13       		.uleb128 0x13
 2834 0006 0B       		.uleb128 0xb
 2835 0007 03       		.uleb128 0x3
 2836 0008 0E       		.uleb128 0xe
 2837 0009 1B       		.uleb128 0x1b
 2838 000a 0E       		.uleb128 0xe
 2839 000b 55       		.uleb128 0x55
 2840 000c 17       		.uleb128 0x17
 2841 000d 11       		.uleb128 0x11
 2842 000e 01       		.uleb128 0x1
 2843 000f 10       		.uleb128 0x10
 2844 0010 17       		.uleb128 0x17
 2845 0011 00       		.byte	0
 2846 0012 00       		.byte	0
 2847 0013 02       		.uleb128 0x2
 2848 0014 24       		.uleb128 0x24
 2849 0015 00       		.byte	0
 2850 0016 0B       		.uleb128 0xb
 2851 0017 0B       		.uleb128 0xb
 2852 0018 3E       		.uleb128 0x3e
 2853 0019 0B       		.uleb128 0xb
 2854 001a 03       		.uleb128 0x3
 2855 001b 0E       		.uleb128 0xe
 2856 001c 00       		.byte	0
 2857 001d 00       		.byte	0
 2858 001e 03       		.uleb128 0x3
 2859 001f 16       		.uleb128 0x16
 2860 0020 00       		.byte	0
 2861 0021 03       		.uleb128 0x3
 2862 0022 0E       		.uleb128 0xe
 2863 0023 3A       		.uleb128 0x3a
 2864 0024 0B       		.uleb128 0xb
 2865 0025 3B       		.uleb128 0x3b
 2866 0026 0B       		.uleb128 0xb
 2867 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 63


 2868 0028 13       		.uleb128 0x13
 2869 0029 00       		.byte	0
 2870 002a 00       		.byte	0
 2871 002b 04       		.uleb128 0x4
 2872 002c 24       		.uleb128 0x24
 2873 002d 00       		.byte	0
 2874 002e 0B       		.uleb128 0xb
 2875 002f 0B       		.uleb128 0xb
 2876 0030 3E       		.uleb128 0x3e
 2877 0031 0B       		.uleb128 0xb
 2878 0032 03       		.uleb128 0x3
 2879 0033 08       		.uleb128 0x8
 2880 0034 00       		.byte	0
 2881 0035 00       		.byte	0
 2882 0036 05       		.uleb128 0x5
 2883 0037 16       		.uleb128 0x16
 2884 0038 00       		.byte	0
 2885 0039 03       		.uleb128 0x3
 2886 003a 0E       		.uleb128 0xe
 2887 003b 3A       		.uleb128 0x3a
 2888 003c 0B       		.uleb128 0xb
 2889 003d 3B       		.uleb128 0x3b
 2890 003e 05       		.uleb128 0x5
 2891 003f 49       		.uleb128 0x49
 2892 0040 13       		.uleb128 0x13
 2893 0041 00       		.byte	0
 2894 0042 00       		.byte	0
 2895 0043 06       		.uleb128 0x6
 2896 0044 35       		.uleb128 0x35
 2897 0045 00       		.byte	0
 2898 0046 49       		.uleb128 0x49
 2899 0047 13       		.uleb128 0x13
 2900 0048 00       		.byte	0
 2901 0049 00       		.byte	0
 2902 004a 07       		.uleb128 0x7
 2903 004b 0F       		.uleb128 0xf
 2904 004c 00       		.byte	0
 2905 004d 0B       		.uleb128 0xb
 2906 004e 0B       		.uleb128 0xb
 2907 004f 49       		.uleb128 0x49
 2908 0050 13       		.uleb128 0x13
 2909 0051 00       		.byte	0
 2910 0052 00       		.byte	0
 2911 0053 08       		.uleb128 0x8
 2912 0054 26       		.uleb128 0x26
 2913 0055 00       		.byte	0
 2914 0056 49       		.uleb128 0x49
 2915 0057 13       		.uleb128 0x13
 2916 0058 00       		.byte	0
 2917 0059 00       		.byte	0
 2918 005a 09       		.uleb128 0x9
 2919 005b 04       		.uleb128 0x4
 2920 005c 01       		.byte	0x1
 2921 005d 03       		.uleb128 0x3
 2922 005e 0E       		.uleb128 0xe
 2923 005f 0B       		.uleb128 0xb
 2924 0060 0B       		.uleb128 0xb
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 64


 2925 0061 49       		.uleb128 0x49
 2926 0062 13       		.uleb128 0x13
 2927 0063 3A       		.uleb128 0x3a
 2928 0064 0B       		.uleb128 0xb
 2929 0065 3B       		.uleb128 0x3b
 2930 0066 0B       		.uleb128 0xb
 2931 0067 01       		.uleb128 0x1
 2932 0068 13       		.uleb128 0x13
 2933 0069 00       		.byte	0
 2934 006a 00       		.byte	0
 2935 006b 0A       		.uleb128 0xa
 2936 006c 28       		.uleb128 0x28
 2937 006d 00       		.byte	0
 2938 006e 03       		.uleb128 0x3
 2939 006f 0E       		.uleb128 0xe
 2940 0070 1C       		.uleb128 0x1c
 2941 0071 0B       		.uleb128 0xb
 2942 0072 00       		.byte	0
 2943 0073 00       		.byte	0
 2944 0074 0B       		.uleb128 0xb
 2945 0075 2E       		.uleb128 0x2e
 2946 0076 01       		.byte	0x1
 2947 0077 3F       		.uleb128 0x3f
 2948 0078 19       		.uleb128 0x19
 2949 0079 03       		.uleb128 0x3
 2950 007a 0E       		.uleb128 0xe
 2951 007b 3A       		.uleb128 0x3a
 2952 007c 0B       		.uleb128 0xb
 2953 007d 3B       		.uleb128 0x3b
 2954 007e 0B       		.uleb128 0xb
 2955 007f 11       		.uleb128 0x11
 2956 0080 01       		.uleb128 0x1
 2957 0081 12       		.uleb128 0x12
 2958 0082 06       		.uleb128 0x6
 2959 0083 40       		.uleb128 0x40
 2960 0084 18       		.uleb128 0x18
 2961 0085 9742     		.uleb128 0x2117
 2962 0087 19       		.uleb128 0x19
 2963 0088 01       		.uleb128 0x1
 2964 0089 13       		.uleb128 0x13
 2965 008a 00       		.byte	0
 2966 008b 00       		.byte	0
 2967 008c 0C       		.uleb128 0xc
 2968 008d 34       		.uleb128 0x34
 2969 008e 00       		.byte	0
 2970 008f 03       		.uleb128 0x3
 2971 0090 0E       		.uleb128 0xe
 2972 0091 3A       		.uleb128 0x3a
 2973 0092 0B       		.uleb128 0xb
 2974 0093 3B       		.uleb128 0x3b
 2975 0094 0B       		.uleb128 0xb
 2976 0095 49       		.uleb128 0x49
 2977 0096 13       		.uleb128 0x13
 2978 0097 02       		.uleb128 0x2
 2979 0098 18       		.uleb128 0x18
 2980 0099 00       		.byte	0
 2981 009a 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 65


 2982 009b 0D       		.uleb128 0xd
 2983 009c 2E       		.uleb128 0x2e
 2984 009d 01       		.byte	0x1
 2985 009e 3F       		.uleb128 0x3f
 2986 009f 19       		.uleb128 0x19
 2987 00a0 03       		.uleb128 0x3
 2988 00a1 0E       		.uleb128 0xe
 2989 00a2 3A       		.uleb128 0x3a
 2990 00a3 0B       		.uleb128 0xb
 2991 00a4 3B       		.uleb128 0x3b
 2992 00a5 0B       		.uleb128 0xb
 2993 00a6 27       		.uleb128 0x27
 2994 00a7 19       		.uleb128 0x19
 2995 00a8 11       		.uleb128 0x11
 2996 00a9 01       		.uleb128 0x1
 2997 00aa 12       		.uleb128 0x12
 2998 00ab 06       		.uleb128 0x6
 2999 00ac 40       		.uleb128 0x40
 3000 00ad 18       		.uleb128 0x18
 3001 00ae 9642     		.uleb128 0x2116
 3002 00b0 19       		.uleb128 0x19
 3003 00b1 01       		.uleb128 0x1
 3004 00b2 13       		.uleb128 0x13
 3005 00b3 00       		.byte	0
 3006 00b4 00       		.byte	0
 3007 00b5 0E       		.uleb128 0xe
 3008 00b6 0B       		.uleb128 0xb
 3009 00b7 01       		.byte	0x1
 3010 00b8 11       		.uleb128 0x11
 3011 00b9 01       		.uleb128 0x1
 3012 00ba 12       		.uleb128 0x12
 3013 00bb 06       		.uleb128 0x6
 3014 00bc 00       		.byte	0
 3015 00bd 00       		.byte	0
 3016 00be 0F       		.uleb128 0xf
 3017 00bf 34       		.uleb128 0x34
 3018 00c0 00       		.byte	0
 3019 00c1 03       		.uleb128 0x3
 3020 00c2 08       		.uleb128 0x8
 3021 00c3 3A       		.uleb128 0x3a
 3022 00c4 0B       		.uleb128 0xb
 3023 00c5 3B       		.uleb128 0x3b
 3024 00c6 0B       		.uleb128 0xb
 3025 00c7 49       		.uleb128 0x49
 3026 00c8 13       		.uleb128 0x13
 3027 00c9 02       		.uleb128 0x2
 3028 00ca 18       		.uleb128 0x18
 3029 00cb 00       		.byte	0
 3030 00cc 00       		.byte	0
 3031 00cd 10       		.uleb128 0x10
 3032 00ce 2E       		.uleb128 0x2e
 3033 00cf 00       		.byte	0
 3034 00d0 3F       		.uleb128 0x3f
 3035 00d1 19       		.uleb128 0x19
 3036 00d2 03       		.uleb128 0x3
 3037 00d3 0E       		.uleb128 0xe
 3038 00d4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 66


 3039 00d5 0B       		.uleb128 0xb
 3040 00d6 3B       		.uleb128 0x3b
 3041 00d7 0B       		.uleb128 0xb
 3042 00d8 27       		.uleb128 0x27
 3043 00d9 19       		.uleb128 0x19
 3044 00da 11       		.uleb128 0x11
 3045 00db 01       		.uleb128 0x1
 3046 00dc 12       		.uleb128 0x12
 3047 00dd 06       		.uleb128 0x6
 3048 00de 40       		.uleb128 0x40
 3049 00df 18       		.uleb128 0x18
 3050 00e0 9642     		.uleb128 0x2116
 3051 00e2 19       		.uleb128 0x19
 3052 00e3 00       		.byte	0
 3053 00e4 00       		.byte	0
 3054 00e5 11       		.uleb128 0x11
 3055 00e6 2E       		.uleb128 0x2e
 3056 00e7 00       		.byte	0
 3057 00e8 3F       		.uleb128 0x3f
 3058 00e9 19       		.uleb128 0x19
 3059 00ea 03       		.uleb128 0x3
 3060 00eb 0E       		.uleb128 0xe
 3061 00ec 3A       		.uleb128 0x3a
 3062 00ed 0B       		.uleb128 0xb
 3063 00ee 3B       		.uleb128 0x3b
 3064 00ef 05       		.uleb128 0x5
 3065 00f0 27       		.uleb128 0x27
 3066 00f1 19       		.uleb128 0x19
 3067 00f2 11       		.uleb128 0x11
 3068 00f3 01       		.uleb128 0x1
 3069 00f4 12       		.uleb128 0x12
 3070 00f5 06       		.uleb128 0x6
 3071 00f6 40       		.uleb128 0x40
 3072 00f7 18       		.uleb128 0x18
 3073 00f8 9642     		.uleb128 0x2116
 3074 00fa 19       		.uleb128 0x19
 3075 00fb 00       		.byte	0
 3076 00fc 00       		.byte	0
 3077 00fd 12       		.uleb128 0x12
 3078 00fe 2E       		.uleb128 0x2e
 3079 00ff 01       		.byte	0x1
 3080 0100 3F       		.uleb128 0x3f
 3081 0101 19       		.uleb128 0x19
 3082 0102 03       		.uleb128 0x3
 3083 0103 0E       		.uleb128 0xe
 3084 0104 3A       		.uleb128 0x3a
 3085 0105 0B       		.uleb128 0xb
 3086 0106 3B       		.uleb128 0x3b
 3087 0107 05       		.uleb128 0x5
 3088 0108 27       		.uleb128 0x27
 3089 0109 19       		.uleb128 0x19
 3090 010a 11       		.uleb128 0x11
 3091 010b 01       		.uleb128 0x1
 3092 010c 12       		.uleb128 0x12
 3093 010d 06       		.uleb128 0x6
 3094 010e 40       		.uleb128 0x40
 3095 010f 18       		.uleb128 0x18
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 67


 3096 0110 9642     		.uleb128 0x2116
 3097 0112 19       		.uleb128 0x19
 3098 0113 01       		.uleb128 0x1
 3099 0114 13       		.uleb128 0x13
 3100 0115 00       		.byte	0
 3101 0116 00       		.byte	0
 3102 0117 13       		.uleb128 0x13
 3103 0118 34       		.uleb128 0x34
 3104 0119 00       		.byte	0
 3105 011a 03       		.uleb128 0x3
 3106 011b 0E       		.uleb128 0xe
 3107 011c 3A       		.uleb128 0x3a
 3108 011d 0B       		.uleb128 0xb
 3109 011e 3B       		.uleb128 0x3b
 3110 011f 05       		.uleb128 0x5
 3111 0120 49       		.uleb128 0x49
 3112 0121 13       		.uleb128 0x13
 3113 0122 02       		.uleb128 0x2
 3114 0123 18       		.uleb128 0x18
 3115 0124 00       		.byte	0
 3116 0125 00       		.byte	0
 3117 0126 14       		.uleb128 0x14
 3118 0127 2E       		.uleb128 0x2e
 3119 0128 00       		.byte	0
 3120 0129 3F       		.uleb128 0x3f
 3121 012a 19       		.uleb128 0x19
 3122 012b 03       		.uleb128 0x3
 3123 012c 0E       		.uleb128 0xe
 3124 012d 3A       		.uleb128 0x3a
 3125 012e 0B       		.uleb128 0xb
 3126 012f 3B       		.uleb128 0x3b
 3127 0130 05       		.uleb128 0x5
 3128 0131 27       		.uleb128 0x27
 3129 0132 19       		.uleb128 0x19
 3130 0133 11       		.uleb128 0x11
 3131 0134 01       		.uleb128 0x1
 3132 0135 12       		.uleb128 0x12
 3133 0136 06       		.uleb128 0x6
 3134 0137 40       		.uleb128 0x40
 3135 0138 18       		.uleb128 0x18
 3136 0139 9742     		.uleb128 0x2117
 3137 013b 19       		.uleb128 0x19
 3138 013c 00       		.byte	0
 3139 013d 00       		.byte	0
 3140 013e 15       		.uleb128 0x15
 3141 013f 2E       		.uleb128 0x2e
 3142 0140 01       		.byte	0x1
 3143 0141 3F       		.uleb128 0x3f
 3144 0142 19       		.uleb128 0x19
 3145 0143 03       		.uleb128 0x3
 3146 0144 0E       		.uleb128 0xe
 3147 0145 3A       		.uleb128 0x3a
 3148 0146 0B       		.uleb128 0xb
 3149 0147 3B       		.uleb128 0x3b
 3150 0148 05       		.uleb128 0x5
 3151 0149 27       		.uleb128 0x27
 3152 014a 19       		.uleb128 0x19
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 68


 3153 014b 49       		.uleb128 0x49
 3154 014c 13       		.uleb128 0x13
 3155 014d 11       		.uleb128 0x11
 3156 014e 01       		.uleb128 0x1
 3157 014f 12       		.uleb128 0x12
 3158 0150 06       		.uleb128 0x6
 3159 0151 40       		.uleb128 0x40
 3160 0152 18       		.uleb128 0x18
 3161 0153 9642     		.uleb128 0x2116
 3162 0155 19       		.uleb128 0x19
 3163 0156 01       		.uleb128 0x1
 3164 0157 13       		.uleb128 0x13
 3165 0158 00       		.byte	0
 3166 0159 00       		.byte	0
 3167 015a 16       		.uleb128 0x16
 3168 015b 0B       		.uleb128 0xb
 3169 015c 01       		.byte	0x1
 3170 015d 55       		.uleb128 0x55
 3171 015e 17       		.uleb128 0x17
 3172 015f 01       		.uleb128 0x1
 3173 0160 13       		.uleb128 0x13
 3174 0161 00       		.byte	0
 3175 0162 00       		.byte	0
 3176 0163 17       		.uleb128 0x17
 3177 0164 34       		.uleb128 0x34
 3178 0165 00       		.byte	0
 3179 0166 03       		.uleb128 0x3
 3180 0167 08       		.uleb128 0x8
 3181 0168 3A       		.uleb128 0x3a
 3182 0169 0B       		.uleb128 0xb
 3183 016a 3B       		.uleb128 0x3b
 3184 016b 05       		.uleb128 0x5
 3185 016c 49       		.uleb128 0x49
 3186 016d 13       		.uleb128 0x13
 3187 016e 02       		.uleb128 0x2
 3188 016f 18       		.uleb128 0x18
 3189 0170 00       		.byte	0
 3190 0171 00       		.byte	0
 3191 0172 18       		.uleb128 0x18
 3192 0173 2E       		.uleb128 0x2e
 3193 0174 00       		.byte	0
 3194 0175 3F       		.uleb128 0x3f
 3195 0176 19       		.uleb128 0x19
 3196 0177 03       		.uleb128 0x3
 3197 0178 0E       		.uleb128 0xe
 3198 0179 3A       		.uleb128 0x3a
 3199 017a 0B       		.uleb128 0xb
 3200 017b 3B       		.uleb128 0x3b
 3201 017c 05       		.uleb128 0x5
 3202 017d 11       		.uleb128 0x11
 3203 017e 01       		.uleb128 0x1
 3204 017f 12       		.uleb128 0x12
 3205 0180 06       		.uleb128 0x6
 3206 0181 40       		.uleb128 0x40
 3207 0182 18       		.uleb128 0x18
 3208 0183 9642     		.uleb128 0x2116
 3209 0185 19       		.uleb128 0x19
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 69


 3210 0186 00       		.byte	0
 3211 0187 00       		.byte	0
 3212 0188 19       		.uleb128 0x19
 3213 0189 34       		.uleb128 0x34
 3214 018a 00       		.byte	0
 3215 018b 03       		.uleb128 0x3
 3216 018c 0E       		.uleb128 0xe
 3217 018d 3A       		.uleb128 0x3a
 3218 018e 0B       		.uleb128 0xb
 3219 018f 3B       		.uleb128 0x3b
 3220 0190 0B       		.uleb128 0xb
 3221 0191 49       		.uleb128 0x49
 3222 0192 13       		.uleb128 0x13
 3223 0193 3F       		.uleb128 0x3f
 3224 0194 19       		.uleb128 0x19
 3225 0195 3C       		.uleb128 0x3c
 3226 0196 19       		.uleb128 0x19
 3227 0197 00       		.byte	0
 3228 0198 00       		.byte	0
 3229 0199 1A       		.uleb128 0x1a
 3230 019a 34       		.uleb128 0x34
 3231 019b 00       		.byte	0
 3232 019c 03       		.uleb128 0x3
 3233 019d 0E       		.uleb128 0xe
 3234 019e 3A       		.uleb128 0x3a
 3235 019f 0B       		.uleb128 0xb
 3236 01a0 3B       		.uleb128 0x3b
 3237 01a1 05       		.uleb128 0x5
 3238 01a2 49       		.uleb128 0x49
 3239 01a3 13       		.uleb128 0x13
 3240 01a4 3F       		.uleb128 0x3f
 3241 01a5 19       		.uleb128 0x19
 3242 01a6 3C       		.uleb128 0x3c
 3243 01a7 19       		.uleb128 0x19
 3244 01a8 00       		.byte	0
 3245 01a9 00       		.byte	0
 3246 01aa 1B       		.uleb128 0x1b
 3247 01ab 34       		.uleb128 0x34
 3248 01ac 00       		.byte	0
 3249 01ad 03       		.uleb128 0x3
 3250 01ae 0E       		.uleb128 0xe
 3251 01af 3A       		.uleb128 0x3a
 3252 01b0 0B       		.uleb128 0xb
 3253 01b1 3B       		.uleb128 0x3b
 3254 01b2 0B       		.uleb128 0xb
 3255 01b3 49       		.uleb128 0x49
 3256 01b4 13       		.uleb128 0x13
 3257 01b5 3F       		.uleb128 0x3f
 3258 01b6 19       		.uleb128 0x19
 3259 01b7 02       		.uleb128 0x2
 3260 01b8 18       		.uleb128 0x18
 3261 01b9 00       		.byte	0
 3262 01ba 00       		.byte	0
 3263 01bb 1C       		.uleb128 0x1c
 3264 01bc 01       		.uleb128 0x1
 3265 01bd 01       		.byte	0x1
 3266 01be 49       		.uleb128 0x49
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 70


 3267 01bf 13       		.uleb128 0x13
 3268 01c0 01       		.uleb128 0x1
 3269 01c1 13       		.uleb128 0x13
 3270 01c2 00       		.byte	0
 3271 01c3 00       		.byte	0
 3272 01c4 1D       		.uleb128 0x1d
 3273 01c5 21       		.uleb128 0x21
 3274 01c6 00       		.byte	0
 3275 01c7 49       		.uleb128 0x49
 3276 01c8 13       		.uleb128 0x13
 3277 01c9 2F       		.uleb128 0x2f
 3278 01ca 05       		.uleb128 0x5
 3279 01cb 00       		.byte	0
 3280 01cc 00       		.byte	0
 3281 01cd 1E       		.uleb128 0x1e
 3282 01ce 21       		.uleb128 0x21
 3283 01cf 00       		.byte	0
 3284 01d0 49       		.uleb128 0x49
 3285 01d1 13       		.uleb128 0x13
 3286 01d2 2F       		.uleb128 0x2f
 3287 01d3 0B       		.uleb128 0xb
 3288 01d4 00       		.byte	0
 3289 01d5 00       		.byte	0
 3290 01d6 1F       		.uleb128 0x1f
 3291 01d7 34       		.uleb128 0x34
 3292 01d8 00       		.byte	0
 3293 01d9 03       		.uleb128 0x3
 3294 01da 08       		.uleb128 0x8
 3295 01db 3A       		.uleb128 0x3a
 3296 01dc 0B       		.uleb128 0xb
 3297 01dd 3B       		.uleb128 0x3b
 3298 01de 0B       		.uleb128 0xb
 3299 01df 49       		.uleb128 0x49
 3300 01e0 13       		.uleb128 0x13
 3301 01e1 3F       		.uleb128 0x3f
 3302 01e2 19       		.uleb128 0x19
 3303 01e3 02       		.uleb128 0x2
 3304 01e4 18       		.uleb128 0x18
 3305 01e5 00       		.byte	0
 3306 01e6 00       		.byte	0
 3307 01e7 00       		.byte	0
 3308              		.section	.debug_aranges,"",%progbits
 3309 0000 64000000 		.4byte	0x64
 3310 0004 0200     		.2byte	0x2
 3311 0006 00000000 		.4byte	.Ldebug_info0
 3312 000a 04       		.byte	0x4
 3313 000b 00       		.byte	0
 3314 000c 0000     		.2byte	0
 3315 000e 0000     		.2byte	0
 3316 0010 00000000 		.4byte	.LFB64
 3317 0014 14000000 		.4byte	.LFE64-.LFB64
 3318 0018 00000000 		.4byte	.LFB65
 3319 001c 08010000 		.4byte	.LFE65-.LFB65
 3320 0020 00000000 		.4byte	.LFB66
 3321 0024 7C010000 		.4byte	.LFE66-.LFB66
 3322 0028 00000000 		.4byte	.LFB67
 3323 002c B0000000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 71


 3324 0030 00000000 		.4byte	.LFB68
 3325 0034 58000000 		.4byte	.LFE68-.LFB68
 3326 0038 00000000 		.4byte	.LFB69
 3327 003c 4C000000 		.4byte	.LFE69-.LFB69
 3328 0040 00000000 		.4byte	.LFB70
 3329 0044 18000000 		.4byte	.LFE70-.LFB70
 3330 0048 00000000 		.4byte	.LFB71
 3331 004c 90030000 		.4byte	.LFE71-.LFB71
 3332 0050 00000000 		.4byte	.LFB72
 3333 0054 DC000000 		.4byte	.LFE72-.LFB72
 3334 0058 00000000 		.4byte	.LFB73
 3335 005c 20040000 		.4byte	.LFE73-.LFB73
 3336 0060 00000000 		.4byte	0
 3337 0064 00000000 		.4byte	0
 3338              		.section	.debug_ranges,"",%progbits
 3339              	.Ldebug_ranges0:
 3340 0000 78000000 		.4byte	.LBB4
 3341 0004 EE020000 		.4byte	.LBE4
 3342 0008 82030000 		.4byte	.LBB8
 3343 000c 84030000 		.4byte	.LBE8
 3344 0010 00000000 		.4byte	0
 3345 0014 00000000 		.4byte	0
 3346 0018 00000000 		.4byte	.LFB64
 3347 001c 14000000 		.4byte	.LFE64
 3348 0020 00000000 		.4byte	.LFB65
 3349 0024 08010000 		.4byte	.LFE65
 3350 0028 00000000 		.4byte	.LFB66
 3351 002c 7C010000 		.4byte	.LFE66
 3352 0030 00000000 		.4byte	.LFB67
 3353 0034 B0000000 		.4byte	.LFE67
 3354 0038 00000000 		.4byte	.LFB68
 3355 003c 58000000 		.4byte	.LFE68
 3356 0040 00000000 		.4byte	.LFB69
 3357 0044 4C000000 		.4byte	.LFE69
 3358 0048 00000000 		.4byte	.LFB70
 3359 004c 18000000 		.4byte	.LFE70
 3360 0050 00000000 		.4byte	.LFB71
 3361 0054 90030000 		.4byte	.LFE71
 3362 0058 00000000 		.4byte	.LFB72
 3363 005c DC000000 		.4byte	.LFE72
 3364 0060 00000000 		.4byte	.LFB73
 3365 0064 20040000 		.4byte	.LFE73
 3366 0068 00000000 		.4byte	0
 3367 006c 00000000 		.4byte	0
 3368              		.section	.debug_line,"",%progbits
 3369              	.Ldebug_line0:
 3370 0000 06050000 		.section	.debug_str,"MS",%progbits,1
 3370      0200CC01 
 3370      00000201 
 3370      FB0E0D00 
 3370      01010101 
 3371              	.LASF24:
 3372 0000 636F6E63 		.ascii	"concatCount\000"
 3372      6174436F 
 3372      756E7400 
 3373              	.LASF45:
 3374 000c 7472616E 		.ascii	"transmitData\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 72


 3374      736D6974 
 3374      44617461 
 3374      00
 3375              	.LASF43:
 3376 0019 6C6F7746 		.ascii	"lowFlag\000"
 3376      6C616700 
 3377              	.LASF20:
 3378 0021 49444C45 		.ascii	"IDLE\000"
 3378      00
 3379              	.LASF55:
 3380 0026 636F6C6C 		.ascii	"collisionLock\000"
 3380      6973696F 
 3380      6E4C6F63 
 3380      6B00
 3381              	.LASF26:
 3382 0034 52656365 		.ascii	"ReceiveInterruptHandler\000"
 3382      69766549 
 3382      6E746572 
 3382      72757074 
 3382      48616E64 
 3383              	.LASF2:
 3384 004c 73686F72 		.ascii	"short int\000"
 3384      7420696E 
 3384      7400
 3385              	.LASF36:
 3386 0056 696E7075 		.ascii	"input\000"
 3386      7400
 3387              	.LASF19:
 3388 005c 73697A65 		.ascii	"sizetype\000"
 3388      74797065 
 3388      00
 3389              	.LASF39:
 3390 0065 5F5F6374 		.ascii	"__ctype_ptr__\000"
 3390      7970655F 
 3390      7074725F 
 3390      5F00
 3391              	.LASF68:
 3392 0073 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3392      43313120 
 3392      352E342E 
 3392      31203230 
 3392      31363036 
 3393 00a6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3393      20726576 
 3393      6973696F 
 3393      6E203233 
 3393      37373135 
 3394 00d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3394      66756E63 
 3394      74696F6E 
 3394      2D736563 
 3394      74696F6E 
 3395              	.LASF59:
 3396 0101 63726355 		.ascii	"crcUsage\000"
 3396      73616765 
 3396      00
 3397              	.LASF73:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 73


 3398 010a 6D61696E 		.ascii	"main\000"
 3398      00
 3399              	.LASF4:
 3400 010f 5F5F7569 		.ascii	"__uint16_t\000"
 3400      6E743136 
 3400      5F7400
 3401              	.LASF33:
 3402 011a 76616C75 		.ascii	"value\000"
 3402      6500
 3403              	.LASF63:
 3404 0120 64617461 		.ascii	"dataSize\000"
 3404      53697A65 
 3404      00
 3405              	.LASF13:
 3406 0129 75696E74 		.ascii	"uint8\000"
 3406      3800
 3407              	.LASF54:
 3408 012f 72656365 		.ascii	"receiveLock\000"
 3408      6976654C 
 3408      6F636B00 
 3409              	.LASF35:
 3410 013b 696E436F 		.ascii	"inCount\000"
 3410      756E7400 
 3411              	.LASF65:
 3412 0143 72656365 		.ascii	"receiveBitCount\000"
 3412      69766542 
 3412      6974436F 
 3412      756E7400 
 3413              	.LASF48:
 3414 0153 72656365 		.ascii	"receiveData\000"
 3414      69766544 
 3414      61746100 
 3415              	.LASF14:
 3416 015f 666C6F61 		.ascii	"float\000"
 3416      7400
 3417              	.LASF8:
 3418 0165 6C6F6E67 		.ascii	"long long int\000"
 3418      206C6F6E 
 3418      6720696E 
 3418      7400
 3419              	.LASF30:
 3420 0173 5472616E 		.ascii	"TransmitInterruptHandler\000"
 3420      736D6974 
 3420      496E7465 
 3420      72727570 
 3420      7448616E 
 3421              	.LASF6:
 3422 018c 6C6F6E67 		.ascii	"long int\000"
 3422      20696E74 
 3422      00
 3423              	.LASF37:
 3424 0195 73746174 		.ascii	"stateDiagram\000"
 3424      65446961 
 3424      6772616D 
 3424      00
 3425              	.LASF66:
 3426 01a2 7472616E 		.ascii	"transmitAddress\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 74


 3426      736D6974 
 3426      41646472 
 3426      65737300 
 3427              	.LASF40:
 3428 01b2 55534255 		.ascii	"USBUART_device\000"
 3428      4152545F 
 3428      64657669 
 3428      636500
 3429              	.LASF23:
 3430 01c1 6A756E6B 		.ascii	"junk\000"
 3430      00
 3431              	.LASF32:
 3432 01c6 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 3432      696E6745 
 3432      64676549 
 3432      6E746572 
 3432      72757074 
 3433              	.LASF27:
 3434 01e2 54696D65 		.ascii	"TimerInterruptHandler\000"
 3434      72496E74 
 3434      65727275 
 3434      70744861 
 3434      6E646C65 
 3435              	.LASF71:
 3436 01f8 73746174 		.ascii	"state\000"
 3436      6500
 3437              	.LASF21:
 3438 01fe 434F4C4C 		.ascii	"COLLISION\000"
 3438      4953494F 
 3438      4E00
 3439              	.LASF51:
 3440 0208 64617461 		.ascii	"dataBitsRead\000"
 3440      42697473 
 3440      52656164 
 3440      00
 3441              	.LASF18:
 3442 0215 6C6F6E67 		.ascii	"long double\000"
 3442      20646F75 
 3442      626C6500 
 3443              	.LASF64:
 3444 0221 7472616E 		.ascii	"transmitBitCount\000"
 3444      736D6974 
 3444      42697443 
 3444      6F756E74 
 3444      00
 3445              	.LASF67:
 3446 0232 7472616E 		.ascii	"transmitMode\000"
 3446      736D6974 
 3446      4D6F6465 
 3446      00
 3447              	.LASF1:
 3448 023f 756E7369 		.ascii	"unsigned char\000"
 3448      676E6564 
 3448      20636861 
 3448      7200
 3449              	.LASF42:
 3450 024d 73797374 		.ascii	"systemState\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 75


 3450      656D5374 
 3450      61746500 
 3451              	.LASF0:
 3452 0259 7369676E 		.ascii	"signed char\000"
 3452      65642063 
 3452      68617200 
 3453              	.LASF56:
 3454 0265 736F7572 		.ascii	"sourceAddress\000"
 3454      63654164 
 3454      64726573 
 3454      7300
 3455              	.LASF9:
 3456 0273 6C6F6E67 		.ascii	"long long unsigned int\000"
 3456      206C6F6E 
 3456      6720756E 
 3456      7369676E 
 3456      65642069 
 3457              	.LASF70:
 3458 028a 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 3458      73657273 
 3458      5C77696E 
 3458      73746F6E 
 3458      615C446F 
 3459 02b8 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 3459      726B696E 
 3459      6720495C 
 3459      63653439 
 3459      35306C61 
 3460              	.LASF10:
 3461 02e7 756E7369 		.ascii	"unsigned int\000"
 3461      676E6564 
 3461      20696E74 
 3461      00
 3462              	.LASF11:
 3463 02f4 75696E74 		.ascii	"uint16_t\000"
 3463      31365F74 
 3463      00
 3464              	.LASF7:
 3465 02fd 6C6F6E67 		.ascii	"long unsigned int\000"
 3465      20756E73 
 3465      69676E65 
 3465      6420696E 
 3465      7400
 3466              	.LASF52:
 3467 030f 64617461 		.ascii	"dataPtr\000"
 3467      50747200 
 3468              	.LASF50:
 3469 0317 72656365 		.ascii	"receivePosition\000"
 3469      69766550 
 3469      6F736974 
 3469      696F6E00 
 3470              	.LASF22:
 3471 0327 42555359 		.ascii	"BUSY\000"
 3471      00
 3472              	.LASF16:
 3473 032c 63686172 		.ascii	"char\000"
 3473      00
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 76


 3474              	.LASF12:
 3475 0331 696E7433 		.ascii	"int32_t\000"
 3475      325F7400 
 3476              	.LASF3:
 3477 0339 73686F72 		.ascii	"short unsigned int\000"
 3477      7420756E 
 3477      7369676E 
 3477      65642069 
 3477      6E7400
 3478              	.LASF44:
 3479 034c 5F426F6F 		.ascii	"_Bool\000"
 3479      6C00
 3480              	.LASF72:
 3481 0352 6E6F7468 		.ascii	"nothing\000"
 3481      696E6700 
 3482              	.LASF46:
 3483 035a 62756666 		.ascii	"buffer\000"
 3483      657200
 3484              	.LASF69:
 3485 0361 6D61696E 		.ascii	"main.c\000"
 3485      2E6300
 3486              	.LASF17:
 3487 0368 72656738 		.ascii	"reg8\000"
 3487      00
 3488              	.LASF62:
 3489 036d 63757272 		.ascii	"currentChar\000"
 3489      656E7443 
 3489      68617200 
 3490              	.LASF47:
 3491 0379 72656365 		.ascii	"receiveBuffer\000"
 3491      69766542 
 3491      75666665 
 3491      7200
 3492              	.LASF15:
 3493 0387 646F7562 		.ascii	"double\000"
 3493      6C6500
 3494              	.LASF38:
 3495 038e 63686563 		.ascii	"checkForNewData\000"
 3495      6B466F72 
 3495      4E657744 
 3495      61746100 
 3496              	.LASF58:
 3497 039e 6D657373 		.ascii	"messageLength\000"
 3497      6167654C 
 3497      656E6774 
 3497      6800
 3498              	.LASF5:
 3499 03ac 5F5F696E 		.ascii	"__int32_t\000"
 3499      7433325F 
 3499      7400
 3500              	.LASF29:
 3501 03b6 72616E64 		.ascii	"randNum\000"
 3501      4E756D00 
 3502              	.LASF60:
 3503 03be 68656164 		.ascii	"headerCRC\000"
 3503      65724352 
 3503      4300
ARM GAS  C:\Users\winstona\AppData\Local\Temp\cc5d2VBv.s 			page 77


 3504              	.LASF61:
 3505 03c8 61646472 		.ascii	"addressZeroReceive\000"
 3505      6573735A 
 3505      65726F52 
 3505      65636569 
 3505      766500
 3506              	.LASF25:
 3507 03db 63686172 		.ascii	"characterRX\000"
 3507      61637465 
 3507      72525800 
 3508              	.LASF28:
 3509 03e7 70657269 		.ascii	"period\000"
 3509      6F6400
 3510              	.LASF49:
 3511 03ee 706F7369 		.ascii	"position\000"
 3511      74696F6E 
 3511      00
 3512              	.LASF41:
 3513 03f7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3513      52784275 
 3513      66666572 
 3513      00
 3514              	.LASF31:
 3515 0404 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 3515      6E674564 
 3515      6765496E 
 3515      74657272 
 3515      75707448 
 3516              	.LASF57:
 3517 041f 64657374 		.ascii	"destinationAddress\000"
 3517      696E6174 
 3517      696F6E41 
 3517      64647265 
 3517      737300
 3518              	.LASF53:
 3519 0432 7472616E 		.ascii	"transmitLock\000"
 3519      736D6974 
 3519      4C6F636B 
 3519      00
 3520              	.LASF34:
 3521 043f 436F6C6C 		.ascii	"CollisionDelayInterruptHandler\000"
 3521      6973696F 
 3521      6E44656C 
 3521      6179496E 
 3521      74657272 
 3522              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
