ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CollisionDelayInterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	CollisionDelayInterruptHandler
  22              		.thumb
  23              		.thumb_func
  24              		.type	CollisionDelayInterruptHandler, %function
  25              	CollisionDelayInterruptHandler:
  26              	.LFB69:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - systemState machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdio.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <stdbool.h>
  26:main.c        **** 
  27:main.c        **** #define BROADCAST_ADDRESS 0
  28:main.c        **** #define VERSION_NUMBER 0x01
  29:main.c        **** #define CRC 128 //CRCs are not being used
  30:main.c        **** #define HEADER 0b1110111 //header CRC not being used 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 2


  31:main.c        **** #define BLANK_MESSAGE_CRC 0x77
  32:main.c        **** #define COLLISION_PERIOD     52
  33:main.c        **** #define COLLISION_COUNTER    51
  34:main.c        **** #define IDLE_PERIOD     830
  35:main.c        **** #define IDLE_COUNTER    829
  36:main.c        **** #define RECEIVE_PERIOD   52
  37:main.c        **** #define RECEIVE_COUNTER  51
  38:main.c        **** #define TRANSMIT_PERIOD     47
  39:main.c        **** #define TRANSMIT_COUNTER    46 
  40:main.c        **** #define BUFFER_SIZE 500
  41:main.c        **** //student assigned addressses
  42:main.c        **** #define ADDR1Start 0x60 //46
  43:main.c        **** #define ADDR2Start 55
  44:main.c        **** #define ADDR3Start 124 //Kamith didn't have one listed so gave him 124
  45:main.c        **** #define ADDRLength 2
  46:main.c        **** 
  47:main.c        **** #define MESSAGE_POS 7
  48:main.c        **** #define HEADER_SIZE
  49:main.c        **** 
  50:main.c        **** 
  51:main.c        **** //States include: 
  52:main.c        **** //Busy - signals that the channel monitor is busy
  53:main.c        **** //       and in either line high or line low 
  54:main.c        **** //Collision - collision detected, line high
  55:main.c        **** //Idle - initialized state looking for rising
  56:main.c        **** //       edge to occur
  57:main.c        **** volatile enum state {IDLE, COLLISION, BUSY} systemState;
  58:main.c        **** 
  59:main.c        **** //flag to help determine if signal level is low or high
  60:main.c        **** volatile _Bool lowFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile unsigned char transmitData[BUFFER_SIZE][16];
  63:main.c        **** volatile unsigned char buffer[BUFFER_SIZE];
  64:main.c        **** volatile unsigned char receiveBuffer[BUFFER_SIZE];
  65:main.c        **** volatile unsigned char receiveData[16]; 
  66:main.c        **** volatile int position = 0;
  67:main.c        **** volatile int receivePosition = 0;
  68:main.c        **** volatile int dataBitsRead = 0;
  69:main.c        **** volatile int idx = 0;
  70:main.c        **** volatile char* dataPtr;
  71:main.c        **** volatile int transmitLock = 0; // High when transmitting
  72:main.c        **** volatile int receiveLock = 0;
  73:main.c        **** volatile bool collisionLock = false; // High when collision should not.
  74:main.c        **** 
  75:main.c        **** volatile char sourceAddress = 0x00;
  76:main.c        **** volatile char destinationAddress = 0x00;
  77:main.c        **** volatile int  messageLength = 0;
  78:main.c        **** volatile char crcUsage = 0x00;
  79:main.c        **** volatile char headerCRC = 0x00;
  80:main.c        **** volatile int addressZeroReceive = 0;
  81:main.c        **** volatile char currentChar;
  82:main.c        **** volatile int dataSize;
  83:main.c        **** volatile int transmitBitCount = 0;
  84:main.c        **** volatile int receiveBitCount = 0;
  85:main.c        **** volatile int concatCount = 0;
  86:main.c        **** volatile unsigned char transmitAddress = 0; 
  87:main.c        **** 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 3


  88:main.c        **** bool transmitMode = true; // Whether currently transmitting or receiving
  89:main.c        **** 
  90:main.c        **** void checkForNewData(); 
  91:main.c        **** void stateDiagram(); 
  92:main.c        **** 
  93:main.c        **** /*******************************************************************************
  94:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
  95:main.c        **** ********************************************************************************/
  96:main.c        **** 
  97:main.c        ****  /**********************************************************
  98:main.c        ****  * function name: ReceiveInterruptHandler
  99:main.c        ****  * operation: Handles interrupt timer if the timer expires
 100:main.c        ****  *            indicates an idle condition or colllision
 101:main.c        ****  *            reads the logic levon the input pin/signal
 102:main.c        ****  *            high -> collision set
 103:main.c        ****  *            low -> idle set
 104:main.c        ****  * inputs: none
 105:main.c        ****  * returns: none
 106:main.c        ****  * implemented: 14 Dec 2017
 107:main.c        ****  * edited:
 108:main.c        ****  *********************************************************/ 
 109:main.c        **** 
 110:main.c        **** // TODO Code needs to be added to accept signals at
 111:main.c        **** // various speeds. The documentation states that the signal
 112:main.c        **** // MUST be tolerated at speeds of ±1.32%, and MUST NOT be
 113:main.c        **** // tolerated at speeds of ±8% or so. See standard specification
 114:main.c        **** // for more details.
 115:main.c        **** 
 116:main.c        **** // TODO Move characterRX logic into RX_Bit_Counter
 117:main.c        **** // incrementation section of code. This will make
 118:main.c        **** // this ISR more efficient.
 119:main.c        **** CY_ISR(ReceiveInterruptHandler){
 120:main.c        ****     int concatCount = 0;
 121:main.c        ****     char characterRX = 0;
 122:main.c        ****     
 123:main.c        ****     TimerRX_STATUS; 
 124:main.c        ****     
 125:main.c        ****     if(systemState != COLLISION){
 126:main.c        ****         TimerRX_Start();
 127:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
 128:main.c        ****         ++receiveBitCount;
 129:main.c        ****         
 130:main.c        ****     }else{
 131:main.c        ****         
 132:main.c        ****         receiveBitCount = 0;   
 133:main.c        ****         receivePosition = 0;
 134:main.c        ****         dataBitsRead = 0;
 135:main.c        ****         TimerRX_Stop();
 136:main.c        ****         receiveLock = 0;
 137:main.c        ****     }
 138:main.c        ****     
 139:main.c        ****     if(receiveBitCount >= 15 ){
 140:main.c        ****         receiveBitCount = 0;
 141:main.c        ****         TimerRX_Stop();
 142:main.c        ****         receiveLock = 0;
 143:main.c        ****         
 144:main.c        ****         
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 4


 145:main.c        ****         for(int x = 15; x >= 0; x--){
 146:main.c        ****             if(x == 15){
 147:main.c        ****              characterRX = 0x00;    
 148:main.c        ****             }
 149:main.c        ****             if(x % 2 != 0){
 150:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 151:main.c        ****                 ++concatCount;
 152:main.c        ****             }
 153:main.c        ****         }
 154:main.c        ****         receiveBuffer[receivePosition] = characterRX;
 155:main.c        ****         ++receivePosition;
 156:main.c        ****        
 157:main.c        ****     }
 158:main.c        **** }
 159:main.c        **** 
 160:main.c        ****  /**********************************************************
 161:main.c        ****  * function name: ReceiveInterruptHandler
 162:main.c        ****  * operation: Handles the transmit interrupt.
 163:main.c        **** Fires each time we need to transmit.
 164:main.c        ****  * inputs: none
 165:main.c        ****  * returns: none
 166:main.c        ****  * implemented: 14 Dec 2017
 167:main.c        ****  * edited:
 168:main.c        ****  *********************************************************/ 
 169:main.c        **** CY_ISR(TransmitInterruptHandler)
 170:main.c        **** {
 171:main.c        **** 	TimerTX_STATUS; 
 172:main.c        ****     if (position >= dataSize) {
 173:main.c        ****         return;
 174:main.c        ****     }
 175:main.c        **** 	currentChar = buffer[position];
 176:main.c        **** 
 177:main.c        ****     if (!collisionLock) {
 178:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 179:main.c        ****     		if(transmitBitCount == 0){
 180:main.c        ****     			TRANSMIT_Write(1);
 181:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 182:main.c        ****     		}else if(transmitBitCount%2 != 0){
 183:main.c        ****     			TRANSMIT_Write(0);
 184:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 185:main.c        ****     		}else{
 186:main.c        ****     			if(currentChar & (1<<(6-idx))){
 187:main.c        ****     				TRANSMIT_Write(1);
 188:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 189:main.c        ****     			}else{
 190:main.c        ****     				TRANSMIT_Write(0);
 191:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 192:main.c        ****     			}
 193:main.c        ****     				++idx;
 194:main.c        ****     		}
 195:main.c        ****         }
 196:main.c        ****         // CyDelayUs(495);
 197:main.c        ****         ++transmitBitCount;
 198:main.c        ****         if(transmitBitCount >= 16){
 199:main.c        **** 		    ++position;
 200:main.c        **** 		    idx = 0;
 201:main.c        **** 		    transmitBitCount = 0;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 5


 202:main.c        ****             transmitLock = 0;
 203:main.c        ****             TRANSMIT_Write(0);
 204:main.c        **** 
 205:main.c        ****         }
 206:main.c        ****     } else {
 207:main.c        ****         position = 0;
 208:main.c        ****         transmitBitCount = 0;
 209:main.c        ****     }
 210:main.c        **** }
 211:main.c        **** 
 212:main.c        **** 
 213:main.c        ****  /**********************************************************
 214:main.c        ****  * function name: TimerInterruptHandler
 215:main.c        ****  * operation: When a node that is transmitting and detects 
 216:main.c        ****  *            a collision, the node shall stop transmitting
 217:main.c        ****  *            and wait a random amount of time between 0
 218:main.c        ****  *            and 1.000 second (s), and then determine if
 219:main.c        ****  *            the bus is idle and if so begin a retrans.
 220:main.c        ****  * inputs: none
 221:main.c        ****  * returns: none
 222:main.c        ****  * implemented: 14 Dec 2017
 223:main.c        ****  * edited:
 224:main.c        ****  *********************************************************/
 225:main.c        **** 
 226:main.c        **** //TODO: WORK ON THE TRYING REATTEMPT UP TO 10 TIMES
 227:main.c        **** CY_ISR(TimerInterruptHandler)
 228:main.c        **** {     
 229:main.c        ****    	Timer_STATUS; 
 230:main.c        ****     
 231:main.c        ****     if (!(lowFlag) ){
 232:main.c        ****         systemState = IDLE;
 233:main.c        ****          transmitLock = 1;
 234:main.c        ****     } else {
 235:main.c        ****         systemState = COLLISION;
 236:main.c        ****         TRANSMIT_Write(0); 
 237:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 238:main.c        ****         collisionLock = 1; // Collision
 239:main.c        ****         position = 0; // Start over entire packet.
 240:main.c        ****         receivePosition = 0;
 241:main.c        ****         
 242:main.c        ****         uint16_t randNum = (uint16_t)((float)rand() / RAND_MAX * 1000);
 243:main.c        ****         CollisionDelay_WritePeriod(randNum);
 244:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 245:main.c        ****         CollisionDelay_Start();
 246:main.c        ****     }
 247:main.c        **** }
 248:main.c        **** 
 249:main.c        **** 
 250:main.c        ****  /**********************************************************
 251:main.c        ****  * function name: RisingEdgeInterruptHandler
 252:main.c        ****  * operation: Handles interrupt for when a rising edge on 
 253:main.c        ****  *            the timer occurs. Triggers system to look for
 254:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 255:main.c        ****  *            interupt to occur in .6ms and sets state to 
 256:main.c        ****  *            busy
 257:main.c        ****  * inputs: none
 258:main.c        ****  * returns: none
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 6


 259:main.c        ****  * implemented: 14 Dec 2017
 260:main.c        ****  * edited:
 261:main.c        ****  *********************************************************/ 
 262:main.c        **** 
 263:main.c        **** // TODO Fix "race against time" between ReceiveInterruptHandler ant his.
 264:main.c        **** // If this wins the race, then RX_Bit_Counter doesn't increment properly.
 265:main.c        **** // This is the reason why code didn't work well at higher speeds.
 266:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 267:main.c        **** {
 268:main.c        ****     if ((!lowFlag)){
 269:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 270:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 271:main.c        ****         Timer_Start();
 272:main.c        ****         lowFlag = 1;
 273:main.c        ****         systemState = BUSY;
 274:main.c        ****     }
 275:main.c        ****     if(receiveLock == 0){
 276:main.c        ****         TimerRX_Start();
 277:main.c        ****         receiveLock = 1;
 278:main.c        ****         
 279:main.c        ****     }
 280:main.c        **** }
 281:main.c        ****  
 282:main.c        ****  /**********************************************************
 283:main.c        ****  * function name: FallingEdgeInterruptHandler
 284:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 285:main.c        ****  *            the timer occurs. Triggers system to look for
 286:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 287:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 288:main.c        ****  *            busy
 289:main.c        ****  * inputs: none
 290:main.c        ****  * returns: none
 291:main.c        ****  * implemented: 14 Dec 2017
 292:main.c        ****  * edited:
 293:main.c        ****  *********************************************************/ 
 294:main.c        **** // TODO This could also contribute to the "race against time" issue.
 295:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 296:main.c        **** {
 297:main.c        ****     if (lowFlag){
 298:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 299:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 300:main.c        ****         Timer_Start();
 301:main.c        ****         lowFlag = 0;
 302:main.c        ****         systemState = BUSY;
 303:main.c        ****     }
 304:main.c        **** }
 305:main.c        **** 
 306:main.c        **** /**
 307:main.c        **** This interrupt should fire after the random delay period of the timer after
 308:main.c        **** a collision has expired. All this does is tells the transmitter that it has
 309:main.c        **** the green light to transmit.
 310:main.c        **** */
 311:main.c        **** CY_ISR(CollisionDelayInterruptHandler)
 312:main.c        **** {
  28              		.loc 1 312 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 7


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 313:main.c        ****     collisionLock = false;
  33              		.loc 1 313 0
  34 0000 0022     		movs	r2, #0
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE69:
  44              		.size	CollisionDelayInterruptHandler, .-CollisionDelayInterruptHandler
  45              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
  46              		.align	2
  47              		.global	ReceiveInterruptHandler
  48              		.thumb
  49              		.thumb_func
  50              		.type	ReceiveInterruptHandler, %function
  51              	ReceiveInterruptHandler:
  52              	.LFB64:
 119:main.c        ****     int concatCount = 0;
  53              		.loc 1 119 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 38B5     		push	{r3, r4, r5, lr}
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 3, -16
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 5, -8
  62              		.cfi_offset 14, -4
  63              	.LVL0:
 123:main.c        ****     
  64              		.loc 1 123 0
  65 0002 214B     		ldr	r3, .L14
  66 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 125:main.c        ****         TimerRX_Start();
  67              		.loc 1 125 0
  68 0006 214B     		ldr	r3, .L14+4
  69 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 000a DBB2     		uxtb	r3, r3
  71 000c 012B     		cmp	r3, #1
  72 000e 0BD0     		beq	.L5
 126:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
  73              		.loc 1 126 0
  74 0010 FFF7FEFF 		bl	TimerRX_Start
  75              	.LVL1:
 127:main.c        ****         ++receiveBitCount;
  76              		.loc 1 127 0
  77 0014 1E4C     		ldr	r4, .L14+8
  78 0016 6568     		ldr	r5, [r4, #4]
  79 0018 FFF7FEFF 		bl	RECEIVE_Read
  80              	.LVL2:
  81 001c 1D4B     		ldr	r3, .L14+12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 8


  82 001e 5855     		strb	r0, [r3, r5]
 128:main.c        ****         
  83              		.loc 1 128 0
  84 0020 6368     		ldr	r3, [r4, #4]
  85 0022 0133     		adds	r3, r3, #1
  86 0024 6360     		str	r3, [r4, #4]
  87 0026 07E0     		b	.L6
  88              	.L5:
 132:main.c        ****         receivePosition = 0;
  89              		.loc 1 132 0
  90 0028 194C     		ldr	r4, .L14+8
  91 002a 0025     		movs	r5, #0
  92 002c 6560     		str	r5, [r4, #4]
 133:main.c        ****         dataBitsRead = 0;
  93              		.loc 1 133 0
  94 002e A560     		str	r5, [r4, #8]
 134:main.c        ****         TimerRX_Stop();
  95              		.loc 1 134 0
  96 0030 E560     		str	r5, [r4, #12]
 135:main.c        ****         receiveLock = 0;
  97              		.loc 1 135 0
  98 0032 FFF7FEFF 		bl	TimerRX_Stop
  99              	.LVL3:
 136:main.c        ****     }
 100              		.loc 1 136 0
 101 0036 2561     		str	r5, [r4, #16]
 102              	.L6:
 139:main.c        ****         receiveBitCount = 0;
 103              		.loc 1 139 0
 104 0038 154B     		ldr	r3, .L14+8
 105 003a 5B68     		ldr	r3, [r3, #4]
 106 003c 0E2B     		cmp	r3, #14
 107 003e 21DD     		ble	.L4
 140:main.c        ****         TimerRX_Stop();
 108              		.loc 1 140 0
 109 0040 134D     		ldr	r5, .L14+8
 110 0042 0024     		movs	r4, #0
 111 0044 6C60     		str	r4, [r5, #4]
 141:main.c        ****         receiveLock = 0;
 112              		.loc 1 141 0
 113 0046 FFF7FEFF 		bl	TimerRX_Stop
 114              	.LVL4:
 142:main.c        ****         
 115              		.loc 1 142 0
 116 004a 2C61     		str	r4, [r5, #16]
 117              	.LVL5:
 118              	.LBB2:
 145:main.c        ****             if(x == 15){
 119              		.loc 1 145 0
 120 004c 0F23     		movs	r3, #15
 121              	.LBE2:
 121:main.c        ****     
 122              		.loc 1 121 0
 123 004e 2046     		mov	r0, r4
 124              	.LBB3:
 145:main.c        ****             if(x == 15){
 125              		.loc 1 145 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 9


 126 0050 0FE0     		b	.L8
 127              	.LVL6:
 128              	.L11:
 146:main.c        ****              characterRX = 0x00;    
 129              		.loc 1 146 0
 130 0052 0F2B     		cmp	r3, #15
 131 0054 00D1     		bne	.L9
 147:main.c        ****             }
 132              		.loc 1 147 0
 133 0056 0020     		movs	r0, #0
 134              	.LVL7:
 135              	.L9:
 149:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 136              		.loc 1 149 0
 137 0058 13F0010F 		tst	r3, #1
 138 005c 08D0     		beq	.L10
 150:main.c        ****                 ++concatCount;
 139              		.loc 1 150 0
 140 005e 0D4A     		ldr	r2, .L14+12
 141 0060 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 142 0062 C9B2     		uxtb	r1, r1
 143 0064 621E     		subs	r2, r4, #1
 144 0066 01FA02F2 		lsl	r2, r1, r2
 145 006a 1043     		orrs	r0, r0, r2
 146              	.LVL8:
 147 006c C0B2     		uxtb	r0, r0
 148              	.LVL9:
 151:main.c        ****             }
 149              		.loc 1 151 0
 150 006e 0134     		adds	r4, r4, #1
 151              	.LVL10:
 152              	.L10:
 145:main.c        ****             if(x == 15){
 153              		.loc 1 145 0 discriminator 2
 154 0070 013B     		subs	r3, r3, #1
 155              	.LVL11:
 156              	.L8:
 145:main.c        ****             if(x == 15){
 157              		.loc 1 145 0 is_stmt 0 discriminator 1
 158 0072 002B     		cmp	r3, #0
 159 0074 EDDA     		bge	.L11
 160              	.LBE3:
 154:main.c        ****         ++receivePosition;
 161              		.loc 1 154 0 is_stmt 1
 162 0076 064B     		ldr	r3, .L14+8
 163              	.LVL12:
 164 0078 9A68     		ldr	r2, [r3, #8]
 165 007a 0749     		ldr	r1, .L14+16
 166 007c 8854     		strb	r0, [r1, r2]
 155:main.c        ****        
 167              		.loc 1 155 0
 168 007e 9A68     		ldr	r2, [r3, #8]
 169 0080 0132     		adds	r2, r2, #1
 170 0082 9A60     		str	r2, [r3, #8]
 171              	.LVL13:
 172              	.L4:
 173 0084 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 10


 174              	.L15:
 175 0086 00BF     		.align	2
 176              	.L14:
 177 0088 67650040 		.word	1073767783
 178 008c 00000000 		.word	systemState
 179 0090 00000000 		.word	.LANCHOR0
 180 0094 00000000 		.word	receiveData
 181 0098 00000000 		.word	receiveBuffer
 182              		.cfi_endproc
 183              	.LFE64:
 184              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 185              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 186              		.align	2
 187              		.global	TransmitInterruptHandler
 188              		.thumb
 189              		.thumb_func
 190              		.type	TransmitInterruptHandler, %function
 191              	TransmitInterruptHandler:
 192              	.LFB65:
 170:main.c        **** 	TimerTX_STATUS; 
 193              		.loc 1 170 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 171:main.c        ****     if (position >= dataSize) {
 201              		.loc 1 171 0
 202 0002 424B     		ldr	r3, .L27
 203 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 172:main.c        ****         return;
 204              		.loc 1 172 0
 205 0006 424B     		ldr	r3, .L27+4
 206 0008 5A69     		ldr	r2, [r3, #20]
 207 000a 424B     		ldr	r3, .L27+8
 208 000c 1B68     		ldr	r3, [r3]
 209 000e 9A42     		cmp	r2, r3
 210 0010 7ADA     		bge	.L16
 175:main.c        **** 
 211              		.loc 1 175 0
 212 0012 3F4A     		ldr	r2, .L27+4
 213 0014 5369     		ldr	r3, [r2, #20]
 214 0016 4049     		ldr	r1, .L27+12
 215 0018 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 216 001a DBB2     		uxtb	r3, r3
 217 001c 3F49     		ldr	r1, .L27+16
 218 001e 0B70     		strb	r3, [r1]
 177:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 219              		.loc 1 177 0
 220 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 221 0022 13F0FF0F 		tst	r3, #255
 222 0026 6BD1     		bne	.L18
 178:main.c        ****     		if(transmitBitCount == 0){
 223              		.loc 1 178 0
 224 0028 5269     		ldr	r2, [r2, #20]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 11


 225 002a 3A4B     		ldr	r3, .L27+8
 226 002c 1B68     		ldr	r3, [r3]
 227 002e 9A42     		cmp	r2, r3
 228 0030 04DA     		bge	.L19
 178:main.c        ****     		if(transmitBitCount == 0){
 229              		.loc 1 178 0 is_stmt 0 discriminator 1
 230 0032 3B4B     		ldr	r3, .L27+20
 231 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232 0036 13F0FF0F 		tst	r3, #255
 233 003a 08D0     		beq	.L20
 234              	.L19:
 178:main.c        ****     		if(transmitBitCount == 0){
 235              		.loc 1 178 0 discriminator 3
 236 003c 344B     		ldr	r3, .L27+4
 237 003e 9B69     		ldr	r3, [r3, #24]
 238 0040 002B     		cmp	r3, #0
 239 0042 4BD0     		beq	.L21
 178:main.c        ****     		if(transmitBitCount == 0){
 240              		.loc 1 178 0 discriminator 4
 241 0044 364B     		ldr	r3, .L27+20
 242 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 243 0048 DBB2     		uxtb	r3, r3
 244 004a 022B     		cmp	r3, #2
 245 004c 46D1     		bne	.L21
 246              	.L20:
 179:main.c        ****     			TRANSMIT_Write(1);
 247              		.loc 1 179 0 is_stmt 1
 248 004e 304B     		ldr	r3, .L27+4
 249 0050 DB69     		ldr	r3, [r3, #28]
 250 0052 5BB9     		cbnz	r3, .L22
 180:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 251              		.loc 1 180 0
 252 0054 0120     		movs	r0, #1
 253 0056 FFF7FEFF 		bl	TRANSMIT_Write
 254              	.LVL14:
 181:main.c        ****     		}else if(transmitBitCount%2 != 0){
 255              		.loc 1 181 0
 256 005a 2D4A     		ldr	r2, .L27+4
 257 005c 5169     		ldr	r1, [r2, #20]
 258 005e D269     		ldr	r2, [r2, #28]
 259 0060 304B     		ldr	r3, .L27+24
 260 0062 03EB0113 		add	r3, r3, r1, lsl #4
 261 0066 3121     		movs	r1, #49
 262 0068 9954     		strb	r1, [r3, r2]
 263 006a 37E0     		b	.L21
 264              	.L22:
 182:main.c        ****     			TRANSMIT_Write(0);
 265              		.loc 1 182 0
 266 006c 284B     		ldr	r3, .L27+4
 267 006e DB69     		ldr	r3, [r3, #28]
 268 0070 13F0010F 		tst	r3, #1
 269 0074 0BD0     		beq	.L23
 183:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 270              		.loc 1 183 0
 271 0076 0020     		movs	r0, #0
 272 0078 FFF7FEFF 		bl	TRANSMIT_Write
 273              	.LVL15:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 12


 184:main.c        ****     		}else{
 274              		.loc 1 184 0
 275 007c 244A     		ldr	r2, .L27+4
 276 007e 5169     		ldr	r1, [r2, #20]
 277 0080 D269     		ldr	r2, [r2, #28]
 278 0082 284B     		ldr	r3, .L27+24
 279 0084 03EB0113 		add	r3, r3, r1, lsl #4
 280 0088 3021     		movs	r1, #48
 281 008a 9954     		strb	r1, [r3, r2]
 282 008c 26E0     		b	.L21
 283              	.L23:
 186:main.c        ****     				TRANSMIT_Write(1);
 284              		.loc 1 186 0
 285 008e 234B     		ldr	r3, .L27+16
 286 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 0092 DAB2     		uxtb	r2, r3
 288 0094 1E4B     		ldr	r3, .L27+4
 289 0096 1B6A     		ldr	r3, [r3, #32]
 290 0098 C3F10603 		rsb	r3, r3, #6
 291 009c 42FA03F3 		asr	r3, r2, r3
 292 00a0 13F0010F 		tst	r3, #1
 293 00a4 0BD0     		beq	.L24
 187:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 294              		.loc 1 187 0
 295 00a6 0120     		movs	r0, #1
 296 00a8 FFF7FEFF 		bl	TRANSMIT_Write
 297              	.LVL16:
 188:main.c        ****     			}else{
 298              		.loc 1 188 0
 299 00ac 184A     		ldr	r2, .L27+4
 300 00ae 5169     		ldr	r1, [r2, #20]
 301 00b0 D269     		ldr	r2, [r2, #28]
 302 00b2 1C4B     		ldr	r3, .L27+24
 303 00b4 03EB0113 		add	r3, r3, r1, lsl #4
 304 00b8 3121     		movs	r1, #49
 305 00ba 9954     		strb	r1, [r3, r2]
 306 00bc 0AE0     		b	.L25
 307              	.L24:
 190:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 308              		.loc 1 190 0
 309 00be 0020     		movs	r0, #0
 310 00c0 FFF7FEFF 		bl	TRANSMIT_Write
 311              	.LVL17:
 191:main.c        ****     			}
 312              		.loc 1 191 0
 313 00c4 124A     		ldr	r2, .L27+4
 314 00c6 5169     		ldr	r1, [r2, #20]
 315 00c8 D269     		ldr	r2, [r2, #28]
 316 00ca 164B     		ldr	r3, .L27+24
 317 00cc 03EB0113 		add	r3, r3, r1, lsl #4
 318 00d0 3021     		movs	r1, #48
 319 00d2 9954     		strb	r1, [r3, r2]
 320              	.L25:
 193:main.c        ****     		}
 321              		.loc 1 193 0
 322 00d4 0E4A     		ldr	r2, .L27+4
 323 00d6 136A     		ldr	r3, [r2, #32]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 13


 324 00d8 0133     		adds	r3, r3, #1
 325 00da 1362     		str	r3, [r2, #32]
 326              	.L21:
 197:main.c        ****         if(transmitBitCount >= 16){
 327              		.loc 1 197 0
 328 00dc 0C4B     		ldr	r3, .L27+4
 329 00de DA69     		ldr	r2, [r3, #28]
 330 00e0 0132     		adds	r2, r2, #1
 331 00e2 DA61     		str	r2, [r3, #28]
 198:main.c        **** 		    ++position;
 332              		.loc 1 198 0
 333 00e4 DB69     		ldr	r3, [r3, #28]
 334 00e6 0F2B     		cmp	r3, #15
 335 00e8 0EDD     		ble	.L16
 199:main.c        **** 		    idx = 0;
 336              		.loc 1 199 0
 337 00ea 094B     		ldr	r3, .L27+4
 338 00ec 5A69     		ldr	r2, [r3, #20]
 339 00ee 0132     		adds	r2, r2, #1
 340 00f0 5A61     		str	r2, [r3, #20]
 200:main.c        **** 		    transmitBitCount = 0;
 341              		.loc 1 200 0
 342 00f2 0020     		movs	r0, #0
 343 00f4 1862     		str	r0, [r3, #32]
 201:main.c        ****             transmitLock = 0;
 344              		.loc 1 201 0
 345 00f6 D861     		str	r0, [r3, #28]
 202:main.c        ****             TRANSMIT_Write(0);
 346              		.loc 1 202 0
 347 00f8 9861     		str	r0, [r3, #24]
 203:main.c        **** 
 348              		.loc 1 203 0
 349 00fa FFF7FEFF 		bl	TRANSMIT_Write
 350              	.LVL18:
 351 00fe 08BD     		pop	{r3, pc}
 352              	.L18:
 207:main.c        ****         transmitBitCount = 0;
 353              		.loc 1 207 0
 354 0100 034B     		ldr	r3, .L27+4
 355 0102 0022     		movs	r2, #0
 356 0104 5A61     		str	r2, [r3, #20]
 208:main.c        ****     }
 357              		.loc 1 208 0
 358 0106 DA61     		str	r2, [r3, #28]
 359              	.L16:
 360 0108 08BD     		pop	{r3, pc}
 361              	.L28:
 362 010a 00BF     		.align	2
 363              	.L27:
 364 010c 034F0040 		.word	1073762051
 365 0110 00000000 		.word	.LANCHOR0
 366 0114 00000000 		.word	dataSize
 367 0118 00000000 		.word	buffer
 368 011c 00000000 		.word	currentChar
 369 0120 00000000 		.word	systemState
 370 0124 00000000 		.word	transmitData
 371              		.cfi_endproc
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 14


 372              	.LFE65:
 373              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 374              		.global	__aeabi_i2f
 375              		.global	__aeabi_fmul
 376              		.global	__aeabi_f2uiz
 377              		.section	.text.TimerInterruptHandler,"ax",%progbits
 378              		.align	2
 379              		.global	TimerInterruptHandler
 380              		.thumb
 381              		.thumb_func
 382              		.type	TimerInterruptHandler, %function
 383              	TimerInterruptHandler:
 384              	.LFB66:
 228:main.c        ****    	Timer_STATUS; 
 385              		.loc 1 228 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 229:main.c        ****     
 389              		.loc 1 229 0
 390 0000 194B     		ldr	r3, .L33
 391 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 231:main.c        ****         systemState = IDLE;
 392              		.loc 1 231 0
 393 0004 194B     		ldr	r3, .L33+4
 394 0006 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 395 000a 13F0FF0F 		tst	r3, #255
 396 000e 06D1     		bne	.L30
 232:main.c        ****          transmitLock = 1;
 397              		.loc 1 232 0
 398 0010 0022     		movs	r2, #0
 399 0012 174B     		ldr	r3, .L33+8
 400 0014 1A70     		strb	r2, [r3]
 233:main.c        ****     } else {
 401              		.loc 1 233 0
 402 0016 0122     		movs	r2, #1
 403 0018 144B     		ldr	r3, .L33+4
 404 001a 9A61     		str	r2, [r3, #24]
 405 001c 7047     		bx	lr
 406              	.L30:
 228:main.c        ****    	Timer_STATUS; 
 407              		.loc 1 228 0
 408 001e 10B5     		push	{r4, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 412              	.LBB4:
 235:main.c        ****         TRANSMIT_Write(0); 
 413              		.loc 1 235 0
 414 0020 0124     		movs	r4, #1
 415 0022 134B     		ldr	r3, .L33+8
 416 0024 1C70     		strb	r4, [r3]
 236:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 417              		.loc 1 236 0
 418 0026 0020     		movs	r0, #0
 419 0028 FFF7FEFF 		bl	TRANSMIT_Write
 420              	.LVL19:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 15


 237:main.c        ****         collisionLock = 1; // Collision
 421              		.loc 1 237 0
 422 002c 0F4B     		ldr	r3, .L33+4
 423 002e 0022     		movs	r2, #0
 424 0030 9A61     		str	r2, [r3, #24]
 238:main.c        ****         position = 0; // Start over entire packet.
 425              		.loc 1 238 0
 426 0032 1C70     		strb	r4, [r3]
 239:main.c        ****         receivePosition = 0;
 427              		.loc 1 239 0
 428 0034 5A61     		str	r2, [r3, #20]
 240:main.c        ****         
 429              		.loc 1 240 0
 430 0036 9A60     		str	r2, [r3, #8]
 242:main.c        ****         CollisionDelay_WritePeriod(randNum);
 431              		.loc 1 242 0
 432 0038 FFF7FEFF 		bl	rand
 433              	.LVL20:
 434 003c FFF7FEFF 		bl	__aeabi_i2f
 435              	.LVL21:
 436 0040 4FF04051 		mov	r1, #805306368
 437 0044 FFF7FEFF 		bl	__aeabi_fmul
 438              	.LVL22:
 439 0048 0A49     		ldr	r1, .L33+12
 440 004a FFF7FEFF 		bl	__aeabi_fmul
 441              	.LVL23:
 442 004e FFF7FEFF 		bl	__aeabi_f2uiz
 443              	.LVL24:
 444 0052 84B2     		uxth	r4, r0
 445              	.LVL25:
 243:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 446              		.loc 1 243 0
 447 0054 2046     		mov	r0, r4
 448 0056 FFF7FEFF 		bl	CollisionDelay_WritePeriod
 449              	.LVL26:
 244:main.c        ****         CollisionDelay_Start();
 450              		.loc 1 244 0
 451 005a 601E     		subs	r0, r4, #1
 452 005c 80B2     		uxth	r0, r0
 453 005e FFF7FEFF 		bl	CollisionDelay_WriteCounter
 454              	.LVL27:
 245:main.c        ****     }
 455              		.loc 1 245 0
 456 0062 FFF7FEFF 		bl	CollisionDelay_Start
 457              	.LVL28:
 458 0066 10BD     		pop	{r4, pc}
 459              	.LVL29:
 460              	.L34:
 461              		.align	2
 462              	.L33:
 463 0068 65650040 		.word	1073767781
 464 006c 00000000 		.word	.LANCHOR0
 465 0070 00000000 		.word	systemState
 466 0074 00007A44 		.word	1148846080
 467              	.LBE4:
 468              		.cfi_endproc
 469              	.LFE66:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 16


 470              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 471              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 472              		.align	2
 473              		.global	RisingEdgeInterruptHandler
 474              		.thumb
 475              		.thumb_func
 476              		.type	RisingEdgeInterruptHandler, %function
 477              	RisingEdgeInterruptHandler:
 478              	.LFB67:
 267:main.c        ****     if ((!lowFlag)){
 479              		.loc 1 267 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 08B5     		push	{r3, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 3, -8
 486              		.cfi_offset 14, -4
 268:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 487              		.loc 1 268 0
 488 0002 0F4B     		ldr	r3, .L39
 489 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 490 0008 13F0FF0F 		tst	r3, #255
 491 000c 0ED1     		bne	.L36
 269:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 492              		.loc 1 269 0
 493 000e 3420     		movs	r0, #52
 494 0010 FFF7FEFF 		bl	Timer_WritePeriod
 495              	.LVL30:
 270:main.c        ****         Timer_Start();
 496              		.loc 1 270 0
 497 0014 3320     		movs	r0, #51
 498 0016 FFF7FEFF 		bl	Timer_WriteCounter
 499              	.LVL31:
 271:main.c        ****         lowFlag = 1;
 500              		.loc 1 271 0
 501 001a FFF7FEFF 		bl	Timer_Start
 502              	.LVL32:
 272:main.c        ****         systemState = BUSY;
 503              		.loc 1 272 0
 504 001e 0122     		movs	r2, #1
 505 0020 074B     		ldr	r3, .L39
 506 0022 83F82420 		strb	r2, [r3, #36]
 273:main.c        ****     }
 507              		.loc 1 273 0
 508 0026 0222     		movs	r2, #2
 509 0028 064B     		ldr	r3, .L39+4
 510 002a 1A70     		strb	r2, [r3]
 511              	.L36:
 275:main.c        ****         TimerRX_Start();
 512              		.loc 1 275 0
 513 002c 044B     		ldr	r3, .L39
 514 002e 1B69     		ldr	r3, [r3, #16]
 515 0030 23B9     		cbnz	r3, .L35
 276:main.c        ****         receiveLock = 1;
 516              		.loc 1 276 0
 517 0032 FFF7FEFF 		bl	TimerRX_Start
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 17


 518              	.LVL33:
 277:main.c        ****         
 519              		.loc 1 277 0
 520 0036 0122     		movs	r2, #1
 521 0038 014B     		ldr	r3, .L39
 522 003a 1A61     		str	r2, [r3, #16]
 523              	.L35:
 524 003c 08BD     		pop	{r3, pc}
 525              	.L40:
 526 003e 00BF     		.align	2
 527              	.L39:
 528 0040 00000000 		.word	.LANCHOR0
 529 0044 00000000 		.word	systemState
 530              		.cfi_endproc
 531              	.LFE67:
 532              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 533              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 534              		.align	2
 535              		.global	FallingEdgeInterruptHandler
 536              		.thumb
 537              		.thumb_func
 538              		.type	FallingEdgeInterruptHandler, %function
 539              	FallingEdgeInterruptHandler:
 540              	.LFB68:
 296:main.c        ****     if (lowFlag){
 541              		.loc 1 296 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545 0000 08B5     		push	{r3, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 3, -8
 548              		.cfi_offset 14, -4
 297:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 549              		.loc 1 297 0
 550 0002 0C4B     		ldr	r3, .L44
 551 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 552 0008 13F0FF0F 		tst	r3, #255
 553 000c 10D0     		beq	.L41
 298:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 554              		.loc 1 298 0
 555 000e 40F23E30 		movw	r0, #830
 556 0012 FFF7FEFF 		bl	Timer_WritePeriod
 557              	.LVL34:
 299:main.c        ****         Timer_Start();
 558              		.loc 1 299 0
 559 0016 40F23D30 		movw	r0, #829
 560 001a FFF7FEFF 		bl	Timer_WriteCounter
 561              	.LVL35:
 300:main.c        ****         lowFlag = 0;
 562              		.loc 1 300 0
 563 001e FFF7FEFF 		bl	Timer_Start
 564              	.LVL36:
 301:main.c        ****         systemState = BUSY;
 565              		.loc 1 301 0
 566 0022 0022     		movs	r2, #0
 567 0024 034B     		ldr	r3, .L44
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 18


 568 0026 83F82420 		strb	r2, [r3, #36]
 302:main.c        ****     }
 569              		.loc 1 302 0
 570 002a 0222     		movs	r2, #2
 571 002c 024B     		ldr	r3, .L44+4
 572 002e 1A70     		strb	r2, [r3]
 573              	.L41:
 574 0030 08BD     		pop	{r3, pc}
 575              	.L45:
 576 0032 00BF     		.align	2
 577              	.L44:
 578 0034 00000000 		.word	.LANCHOR0
 579 0038 00000000 		.word	systemState
 580              		.cfi_endproc
 581              	.LFE68:
 582              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 583              		.section	.text.stateDiagram,"ax",%progbits
 584              		.align	2
 585              		.global	stateDiagram
 586              		.thumb
 587              		.thumb_func
 588              		.type	stateDiagram, %function
 589              	stateDiagram:
 590              	.LFB71:
 314:main.c        **** }
 315:main.c        **** 
 316:main.c        **** /**********************************************************
 317:main.c        ****  * function name: main
 318:main.c        ****  * operation: Handles the main state machine diagram for the
 319:main.c        ****  *            system. Changes  states when needed and calls
 320:main.c        ****  *            appropriate interrupt routines when triggered.                
 321:main.c        ****  * inputs: none
 322:main.c        ****  * returns: none
 323:main.c        ****  * implemented: 14 Dec 2017
 324:main.c        ****  * edited:
 325:main.c        ****  *********************************************************/ 
 326:main.c        **** int main(void)
 327:main.c        **** {
 328:main.c        **** 
 329:main.c        ****     //enable global interrupts
 330:main.c        ****     //start the interrupt handlers for the timers and other components
 331:main.c        ****     CyGlobalIntEnable; 
 332:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 333:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 334:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 335:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 336:main.c        **** 
 337:main.c        ****     // TimerTX_Start();
 338:main.c        ****     TimerTX_WritePeriod(TRANSMIT_PERIOD);
 339:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 340:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 341:main.c        ****     
 342:main.c        ****     TimerRX_WriteCounter(RECEIVE_COUNTER);
 343:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 344:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 345:main.c        ****     
 346:main.c        ****     CollisionDelayISR_StartEx(CollisionDelayInterruptHandler);
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 19


 347:main.c        ****         
 348:main.c        ****     //configure usb to start
 349:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 350:main.c        ****     
 351:main.c        ****     while (!USBUART_GetConfiguration());
 352:main.c        ****     USBUART_CDC_Init();
 353:main.c        ****     
 354:main.c        ****     //starting system in idle state
 355:main.c        ****     systemState = IDLE;
 356:main.c        **** 
 357:main.c        ****     while(1) {
 358:main.c        ****                 
 359:main.c        **** 		/** if (0 != USBUART_IsConfigurationChanged())
 360:main.c        **** 		{
 361:main.c        **** 			
 362:main.c        **** 			if (0 != USBUART_GetConfiguration())
 363:main.c        **** 			{				
 364:main.c        **** 				USBUART_CDC_Init();
 365:main.c        **** 			}
 366:main.c        **** 		} */
 367:main.c        ****         
 368:main.c        ****         
 369:main.c        ****         if(transmitMode){
 370:main.c        ****             int inCount = 0;
 371:main.c        ****             transmitAddress = 0;
 372:main.c        ****             char input = 0;
 373:main.c        ****             while(!USBUART_CDCIsReady());
 374:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 375:main.c        ****             while(inCount < 3){
 376:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 377:main.c        ****                     stateDiagram();
 378:main.c        ****                 }
 379:main.c        ****                 
 380:main.c        ****                 input = USBUART_GetChar();
 381:main.c        ****                 
 382:main.c        ****                 //get the transmitAddress entered in
 383:main.c        ****                 if(inCount == 0){
 384:main.c        ****                     if (toupper(input) == 'R') {
 385:main.c        ****                         transmitMode = false;
 386:main.c        ****                         TimerRX_Start();
 387:main.c        ****                         while(!USBUART_CDCIsReady());
 388:main.c        ****                         USBUART_PutChar(input);
 389:main.c        ****                         while(!USBUART_CDCIsReady());
 390:main.c        ****                         USBUART_PutCRLF();
 391:main.c        ****                         while(!USBUART_CDCIsReady());
 392:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 393:main.c        ****                         while(!USBUART_CDCIsReady());
 394:main.c        ****                         USBUART_PutCRLF();
 395:main.c        ****                         inCount = 0;
 396:main.c        ****                         break;
 397:main.c        ****                     } else {
 398:main.c        ****                         transmitAddress  += 100*(input - (0x30));
 399:main.c        ****                         USBUART_PutChar(input);
 400:main.c        ****                         ++inCount;
 401:main.c        ****                     }
 402:main.c        ****                 }else if(inCount == 1){
 403:main.c        ****                     transmitAddress  += 10*(input - (0x30));
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 20


 404:main.c        ****                     USBUART_PutChar(input);
 405:main.c        ****                     ++inCount;
 406:main.c        ****                 }else if (inCount == 2){
 407:main.c        ****                     transmitAddress  += input - (0x30);   
 408:main.c        ****                     USBUART_PutChar(input);
 409:main.c        ****                     ++inCount;
 410:main.c        ****                 }
 411:main.c        ****                 
 412:main.c        ****             }
 413:main.c        ****             if (!transmitMode) {
 414:main.c        ****                 continue;
 415:main.c        ****             }
 416:main.c        **** 
 417:main.c        ****             while(!USBUART_CDCIsReady());
 418:main.c        ****             USBUART_PutCRLF();
 419:main.c        ****             while(!USBUART_CDCIsReady());
 420:main.c        ****             USBUART_PutString("Enter message: ");
 421:main.c        ****             inCount = 7; 
 422:main.c        ****             input = 0; 
 423:main.c        **** 
 424:main.c        ****             
 425:main.c        ****             buffer[0] = 0x00; // Start of header
 426:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 427:main.c        ****             buffer[2] = ADDR1Start; // Source address
 428:main.c        ****             buffer[3] = transmitAddress; // Destination address
 429:main.c        ****             buffer[4] = 0x00; // CRC disabled
 430:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 431:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 432:main.c        ****             
 433:main.c        ****             //Enter = 0x0D (carriage return or \r)
 434:main.c        ****             while(input != 0x0D){
 435:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 436:main.c        ****                 input = USBUART_GetChar();
 437:main.c        ****                 if(input != 0x0D){
 438:main.c        ****                     buffer[inCount] = input;
 439:main.c        ****                     while(!USBUART_CDCIsReady());
 440:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 441:main.c        ****                     ++inCount;
 442:main.c        ****                 }
 443:main.c        ****             }
 444:main.c        ****             buffer[4] = inCount - 7; // Removes CR character.
 445:main.c        ****             if (buffer[4] > 44) {
 446:main.c        ****                 while(!USBUART_CDCIsReady());
 447:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 448:main.c        ****                 continue;
 449:main.c        ****             }
 450:main.c        **** 
 451:main.c        ****             dataSize = inCount;
 452:main.c        ****             position = 0; // Reset position in transmit interrupt
 453:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 454:main.c        ****             dataSize++;
 455:main.c        ****             TimerTX_Start();
 456:main.c        ****             while (position < dataSize);
 457:main.c        ****             TimerTX_Stop();
 458:main.c        ****             while(!USBUART_CDCIsReady());
 459:main.c        ****             USBUART_PutCRLF(); 
 460:main.c        ****             
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 21


 461:main.c        ****         } else { // Receive mode
 462:main.c        ****             checkForNewData();
 463:main.c        ****             stateDiagram();
 464:main.c        ****             if (USBUART_DataIsReady()) { 
 465:main.c        ****                 char input;
 466:main.c        ****                 input = USBUART_GetChar();
 467:main.c        ****                 if (toupper(input) == 'T') {
 468:main.c        ****                     transmitMode = true;
 469:main.c        ****                 }
 470:main.c        ****             }
 471:main.c        ****         }
 472:main.c        ****     }
 473:main.c        **** }
 474:main.c        **** 
 475:main.c        **** void stateDiagram(){
 591              		.loc 1 475 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595 0000 08B5     		push	{r3, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 3, -8
 598              		.cfi_offset 14, -4
 476:main.c        ****     switch(systemState){      
 599              		.loc 1 476 0
 600 0002 224B     		ldr	r3, .L52
 601 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 602 0006 DBB2     		uxtb	r3, r3
 603 0008 012B     		cmp	r3, #1
 604 000a 2CD0     		beq	.L48
 605 000c 13B1     		cbz	r3, .L49
 606 000e 022B     		cmp	r3, #2
 607 0010 17D0     		beq	.L50
 608 0012 08BD     		pop	{r3, pc}
 609              	.L49:
 477:main.c        ****         case IDLE :;
 478:main.c        ****             IDLE_Write(1);
 610              		.loc 1 478 0
 611 0014 0120     		movs	r0, #1
 612 0016 FFF7FEFF 		bl	IDLE_Write
 613              	.LVL37:
 479:main.c        ****             BUSY_Write(!IDLE_Read());
 614              		.loc 1 479 0
 615 001a FFF7FEFF 		bl	IDLE_Read
 616              	.LVL38:
 617 001e B0FA80F0 		clz	r0, r0
 618 0022 4009     		lsrs	r0, r0, #5
 619 0024 FFF7FEFF 		bl	BUSY_Write
 620              	.LVL39:
 480:main.c        ****             COLLISION_Write(!IDLE_Read());
 621              		.loc 1 480 0
 622 0028 FFF7FEFF 		bl	IDLE_Read
 623              	.LVL40:
 624 002c B0FA80F0 		clz	r0, r0
 625 0030 4009     		lsrs	r0, r0, #5
 626 0032 FFF7FEFF 		bl	COLLISION_Write
 627              	.LVL41:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 22


 481:main.c        ****             
 482:main.c        ****             dataBitsRead = 0;
 628              		.loc 1 482 0
 629 0036 164B     		ldr	r3, .L52+4
 630 0038 0022     		movs	r2, #0
 631 003a DA60     		str	r2, [r3, #12]
 483:main.c        ****             receivePosition = 0;
 632              		.loc 1 483 0
 633 003c 9A60     		str	r2, [r3, #8]
 484:main.c        ****             addressZeroReceive = 0;
 634              		.loc 1 484 0
 635 003e 9A62     		str	r2, [r3, #40]
 485:main.c        ****         break;
 636              		.loc 1 485 0
 637 0040 08BD     		pop	{r3, pc}
 638              	.L50:
 486:main.c        **** 
 487:main.c        ****         case BUSY:
 488:main.c        ****             BUSY_Write(1);
 639              		.loc 1 488 0
 640 0042 0120     		movs	r0, #1
 641 0044 FFF7FEFF 		bl	BUSY_Write
 642              	.LVL42:
 489:main.c        ****             IDLE_Write(!BUSY_Read());
 643              		.loc 1 489 0
 644 0048 FFF7FEFF 		bl	BUSY_Read
 645              	.LVL43:
 646 004c B0FA80F0 		clz	r0, r0
 647 0050 4009     		lsrs	r0, r0, #5
 648 0052 FFF7FEFF 		bl	IDLE_Write
 649              	.LVL44:
 490:main.c        ****             COLLISION_Write(!BUSY_Read());
 650              		.loc 1 490 0
 651 0056 FFF7FEFF 		bl	BUSY_Read
 652              	.LVL45:
 653 005a B0FA80F0 		clz	r0, r0
 654 005e 4009     		lsrs	r0, r0, #5
 655 0060 FFF7FEFF 		bl	COLLISION_Write
 656              	.LVL46:
 491:main.c        ****         break;
 657              		.loc 1 491 0
 658 0064 08BD     		pop	{r3, pc}
 659              	.L48:
 492:main.c        **** 
 493:main.c        ****         case COLLISION:;
 494:main.c        ****             COLLISION_Write(1);
 660              		.loc 1 494 0
 661 0066 0120     		movs	r0, #1
 662 0068 FFF7FEFF 		bl	COLLISION_Write
 663              	.LVL47:
 495:main.c        ****             IDLE_Write(!COLLISION_Read());
 664              		.loc 1 495 0
 665 006c FFF7FEFF 		bl	COLLISION_Read
 666              	.LVL48:
 667 0070 B0FA80F0 		clz	r0, r0
 668 0074 4009     		lsrs	r0, r0, #5
 669 0076 FFF7FEFF 		bl	IDLE_Write
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 23


 670              	.LVL49:
 496:main.c        ****             BUSY_Write(!COLLISION_Read());
 671              		.loc 1 496 0
 672 007a FFF7FEFF 		bl	COLLISION_Read
 673              	.LVL50:
 674 007e B0FA80F0 		clz	r0, r0
 675 0082 4009     		lsrs	r0, r0, #5
 676 0084 FFF7FEFF 		bl	BUSY_Write
 677              	.LVL51:
 678 0088 08BD     		pop	{r3, pc}
 679              	.L53:
 680 008a 00BF     		.align	2
 681              	.L52:
 682 008c 00000000 		.word	systemState
 683 0090 00000000 		.word	.LANCHOR0
 684              		.cfi_endproc
 685              	.LFE71:
 686              		.size	stateDiagram, .-stateDiagram
 687              		.section	.text.checkForNewData,"ax",%progbits
 688              		.align	2
 689              		.global	checkForNewData
 690              		.thumb
 691              		.thumb_func
 692              		.type	checkForNewData, %function
 693              	checkForNewData:
 694              	.LFB72:
 497:main.c        ****         break;
 498:main.c        ****     }   
 499:main.c        **** }
 500:main.c        **** 
 501:main.c        **** /**
 502:main.c        **** */
 503:main.c        **** void checkForNewData(){
 695              		.loc 1 503 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 08B5     		push	{r3, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 3, -8
 702              		.cfi_offset 14, -4
 504:main.c        ****     if(USBUART_CDCIsReady() != 0){
 703              		.loc 1 504 0
 704 0002 FFF7FEFF 		bl	USBUART_CDCIsReady
 705              	.LVL52:
 706 0006 0028     		cmp	r0, #0
 707 0008 40F09681 		bne	.L55
 708 000c 08BD     		pop	{r3, pc}
 709              	.L86:
 505:main.c        ****         while(dataBitsRead != receivePosition){
 506:main.c        ****             if(dataBitsRead <= 6){
 710              		.loc 1 506 0
 711 000e 634B     		ldr	r3, .L88
 712 0010 DB68     		ldr	r3, [r3, #12]
 713 0012 062B     		cmp	r3, #6
 714 0014 15DC     		bgt	.L57
 507:main.c        ****     //            if(receiveBuffer[0] == 0x00){
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 24


 508:main.c        ****     //                startHeaderReceieved = 1;
 509:main.c        ****     //            }
 510:main.c        ****     //            if(receiveBuffer[1] == 0x01){
 511:main.c        ****     //                    verNumMatch = 1;
 512:main.c        ****     //           }
 513:main.c        ****                 sourceAddress = receiveBuffer[2];
 715              		.loc 1 513 0
 716 0016 624A     		ldr	r2, .L88+4
 717 0018 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 718 001a C9B2     		uxtb	r1, r1
 719 001c 5F4B     		ldr	r3, .L88
 720 001e 83F82C10 		strb	r1, [r3, #44]
 514:main.c        ****                 destinationAddress = receiveBuffer[3];
 721              		.loc 1 514 0
 722 0022 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 723 0024 C9B2     		uxtb	r1, r1
 724 0026 83F82D10 		strb	r1, [r3, #45]
 515:main.c        ****                 messageLength = receiveBuffer[4];
 725              		.loc 1 515 0
 726 002a 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 727 002c C9B2     		uxtb	r1, r1
 728 002e 1963     		str	r1, [r3, #48]
 516:main.c        ****                 crcUsage = receiveBuffer[5];
 729              		.loc 1 516 0
 730 0030 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 731 0032 C9B2     		uxtb	r1, r1
 732 0034 83F83410 		strb	r1, [r3, #52]
 517:main.c        ****                 headerCRC = receiveBuffer[6];            
 733              		.loc 1 517 0
 734 0038 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 735 003a D2B2     		uxtb	r2, r2
 736 003c 83F83520 		strb	r2, [r3, #53]
 737 0040 76E1     		b	.L58
 738              	.L57:
 518:main.c        ****             } else {
 519:main.c        ****                 if(destinationAddress == BROADCAST_ADDRESS || 
 739              		.loc 1 519 0
 740 0042 564B     		ldr	r3, .L88
 741 0044 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 742 0048 13F0FF0F 		tst	r3, #255
 743 004c 25D0     		beq	.L59
 520:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 744              		.loc 1 520 0 discriminator 1
 745 004e 534B     		ldr	r3, .L88
 746 0050 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 747 0054 DBB2     		uxtb	r3, r3
 519:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 748              		.loc 1 519 0 discriminator 1
 749 0056 5F2B     		cmp	r3, #95
 750 0058 05D9     		bls	.L60
 751              		.loc 1 520 0
 752 005a 504B     		ldr	r3, .L88
 753 005c 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 754 0060 DBB2     		uxtb	r3, r3
 755 0062 622B     		cmp	r3, #98
 756 0064 19D9     		bls	.L59
 757              	.L60:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 25


 521:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 758              		.loc 1 521 0 discriminator 1
 759 0066 4D4B     		ldr	r3, .L88
 760 0068 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 761 006c DBB2     		uxtb	r3, r3
 520:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 762              		.loc 1 520 0 discriminator 1
 763 006e 362B     		cmp	r3, #54
 764 0070 05D9     		bls	.L61
 765              		.loc 1 521 0
 766 0072 4A4B     		ldr	r3, .L88
 767 0074 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 768 0078 DBB2     		uxtb	r3, r3
 769 007a 392B     		cmp	r3, #57
 770 007c 0DD9     		bls	.L59
 771              	.L61:
 522:main.c        ****                 ((destinationAddress >= ADDR3Start) && (destinationAddress <= ADDR3Start+ADDRLength
 772              		.loc 1 522 0 discriminator 1
 773 007e 474B     		ldr	r3, .L88
 774 0080 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 775 0084 DBB2     		uxtb	r3, r3
 521:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 776              		.loc 1 521 0 discriminator 1
 777 0086 7B2B     		cmp	r3, #123
 778 0088 40F25281 		bls	.L58
 779              		.loc 1 522 0
 780 008c 434B     		ldr	r3, .L88
 781 008e 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 782 0092 DBB2     		uxtb	r3, r3
 783 0094 7E2B     		cmp	r3, #126
 784 0096 00F24B81 		bhi	.L58
 785              	.L59:
 523:main.c        ****                     if(addressZeroReceive == 0){
 786              		.loc 1 523 0
 787 009a 404B     		ldr	r3, .L88
 788 009c 9B6A     		ldr	r3, [r3, #40]
 789 009e 002B     		cmp	r3, #0
 790 00a0 40F03581 		bne	.L62
 791              	.L63:
 524:main.c        ****                         while(!USBUART_CDCIsReady());
 792              		.loc 1 524 0 discriminator 1
 793 00a4 FFF7FEFF 		bl	USBUART_CDCIsReady
 794              	.LVL53:
 795 00a8 0028     		cmp	r0, #0
 796 00aa FBD0     		beq	.L63
 525:main.c        ****                         USBUART_PutCRLF();
 797              		.loc 1 525 0
 798 00ac FFF7FEFF 		bl	USBUART_PutCRLF
 799              	.LVL54:
 800              	.L64:
 526:main.c        ****                         while(!USBUART_CDCIsReady());
 801              		.loc 1 526 0 discriminator 1
 802 00b0 FFF7FEFF 		bl	USBUART_CDCIsReady
 803              	.LVL55:
 804 00b4 0028     		cmp	r0, #0
 805 00b6 FBD0     		beq	.L64
 527:main.c        ****                         USBUART_PutCRLF();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 26


 806              		.loc 1 527 0
 807 00b8 FFF7FEFF 		bl	USBUART_PutCRLF
 808              	.LVL56:
 809              	.L65:
 528:main.c        ****                         while(!USBUART_CDCIsReady());
 810              		.loc 1 528 0 discriminator 1
 811 00bc FFF7FEFF 		bl	USBUART_CDCIsReady
 812              	.LVL57:
 813 00c0 0028     		cmp	r0, #0
 814 00c2 FBD0     		beq	.L65
 529:main.c        ****                         USBUART_PutCRLF(); 
 815              		.loc 1 529 0
 816 00c4 FFF7FEFF 		bl	USBUART_PutCRLF
 817              	.LVL58:
 818              	.L66:
 530:main.c        ****                         while(!USBUART_CDCIsReady());
 819              		.loc 1 530 0 discriminator 1
 820 00c8 FFF7FEFF 		bl	USBUART_CDCIsReady
 821              	.LVL59:
 822 00cc 0028     		cmp	r0, #0
 823 00ce FBD0     		beq	.L66
 531:main.c        ****                         USBUART_PutString("Message From: ");
 824              		.loc 1 531 0
 825 00d0 3448     		ldr	r0, .L88+8
 826 00d2 FFF7FEFF 		bl	USBUART_PutString
 827              	.LVL60:
 828              	.L67:
 532:main.c        ****                         while(!USBUART_CDCIsReady());
 829              		.loc 1 532 0 discriminator 1
 830 00d6 FFF7FEFF 		bl	USBUART_CDCIsReady
 831              	.LVL61:
 832 00da 0028     		cmp	r0, #0
 833 00dc FBD0     		beq	.L67
 533:main.c        **** 
 534:main.c        ****                         USBUART_PutChar(((sourceAddress)/100)+0x30);
 834              		.loc 1 534 0
 835 00de 2F4B     		ldr	r3, .L88
 836 00e0 93F82C00 		ldrb	r0, [r3, #44]	@ zero_extendqisi2
 837 00e4 C3B2     		uxtb	r3, r0
 838 00e6 3048     		ldr	r0, .L88+12
 839 00e8 A0FB0330 		umull	r3, r0, r0, r3
 840 00ec 4009     		lsrs	r0, r0, #5
 841 00ee 3030     		adds	r0, r0, #48
 842 00f0 FFF7FEFF 		bl	USBUART_PutChar
 843              	.LVL62:
 844              	.L68:
 535:main.c        **** 
 536:main.c        ****                         while(!USBUART_CDCIsReady());
 845              		.loc 1 536 0 discriminator 1
 846 00f4 FFF7FEFF 		bl	USBUART_CDCIsReady
 847              	.LVL63:
 848 00f8 0028     		cmp	r0, #0
 849 00fa FBD0     		beq	.L68
 537:main.c        ****                         USBUART_PutChar(((sourceAddress/10)%10)+0x30);
 850              		.loc 1 537 0
 851 00fc 274B     		ldr	r3, .L88
 852 00fe 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 27


 853 0102 DBB2     		uxtb	r3, r3
 854 0104 294A     		ldr	r2, .L88+16
 855 0106 A2FB0313 		umull	r1, r3, r2, r3
 856 010a DB08     		lsrs	r3, r3, #3
 857 010c A2FB0312 		umull	r1, r2, r2, r3
 858 0110 D208     		lsrs	r2, r2, #3
 859 0112 02EB8202 		add	r2, r2, r2, lsl #2
 860 0116 5000     		lsls	r0, r2, #1
 861 0118 181A     		subs	r0, r3, r0
 862 011a 3030     		adds	r0, r0, #48
 863 011c C0B2     		uxtb	r0, r0
 864 011e FFF7FEFF 		bl	USBUART_PutChar
 865              	.LVL64:
 866              	.L69:
 538:main.c        ****                         while(!USBUART_CDCIsReady());
 867              		.loc 1 538 0 discriminator 1
 868 0122 FFF7FEFF 		bl	USBUART_CDCIsReady
 869              	.LVL65:
 870 0126 0028     		cmp	r0, #0
 871 0128 FBD0     		beq	.L69
 539:main.c        ****              
 540:main.c        ****                         USBUART_PutChar(((sourceAddress%10)%10)+0x30);
 872              		.loc 1 540 0
 873 012a 1C4B     		ldr	r3, .L88
 874 012c 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 875 0130 DBB2     		uxtb	r3, r3
 876 0132 1E4A     		ldr	r2, .L88+16
 877 0134 A2FB0301 		umull	r0, r1, r2, r3
 878 0138 C908     		lsrs	r1, r1, #3
 879 013a 01EB8101 		add	r1, r1, r1, lsl #2
 880 013e 4800     		lsls	r0, r1, #1
 881 0140 1B1A     		subs	r3, r3, r0
 882 0142 DBB2     		uxtb	r3, r3
 883 0144 A2FB0312 		umull	r1, r2, r2, r3
 884 0148 D208     		lsrs	r2, r2, #3
 885 014a 02EB8202 		add	r2, r2, r2, lsl #2
 886 014e 5000     		lsls	r0, r2, #1
 887 0150 181A     		subs	r0, r3, r0
 888 0152 3030     		adds	r0, r0, #48
 889 0154 C0B2     		uxtb	r0, r0
 890 0156 FFF7FEFF 		bl	USBUART_PutChar
 891              	.LVL66:
 892              	.L70:
 541:main.c        ****                         while(!USBUART_CDCIsReady());
 893              		.loc 1 541 0 discriminator 1
 894 015a FFF7FEFF 		bl	USBUART_CDCIsReady
 895              	.LVL67:
 896 015e 0028     		cmp	r0, #0
 897 0160 FBD0     		beq	.L70
 542:main.c        ****                         USBUART_PutCRLF();
 898              		.loc 1 542 0
 899 0162 FFF7FEFF 		bl	USBUART_PutCRLF
 900              	.LVL68:
 901              	.L71:
 543:main.c        ****                         while(!USBUART_CDCIsReady());
 902              		.loc 1 543 0 discriminator 1
 903 0166 FFF7FEFF 		bl	USBUART_CDCIsReady
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 28


 904              	.LVL69:
 905 016a 0028     		cmp	r0, #0
 906 016c FBD0     		beq	.L71
 544:main.c        ****                         USBUART_PutString("Sent To: ");
 907              		.loc 1 544 0
 908 016e 1048     		ldr	r0, .L88+20
 909 0170 FFF7FEFF 		bl	USBUART_PutString
 910              	.LVL70:
 545:main.c        ****                         if(destinationAddress == BROADCAST_ADDRESS){
 911              		.loc 1 545 0
 912 0174 094B     		ldr	r3, .L88
 913 0176 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 914 017a 13F0FF0F 		tst	r3, #255
 915 017e 1BD1     		bne	.L72
 916              	.L73:
 546:main.c        ****                             while(!USBUART_CDCIsReady());
 917              		.loc 1 546 0 discriminator 1
 918 0180 FFF7FEFF 		bl	USBUART_CDCIsReady
 919              	.LVL71:
 920 0184 0028     		cmp	r0, #0
 921 0186 FBD0     		beq	.L73
 547:main.c        ****                             USBUART_PutString("BCST ");
 922              		.loc 1 547 0
 923 0188 0A48     		ldr	r0, .L88+24
 924 018a FFF7FEFF 		bl	USBUART_PutString
 925              	.LVL72:
 926              	.L74:
 548:main.c        ****                             while(!USBUART_CDCIsReady());
 927              		.loc 1 548 0 discriminator 1
 928 018e FFF7FEFF 		bl	USBUART_CDCIsReady
 929              	.LVL73:
 930 0192 0028     		cmp	r0, #0
 931 0194 FBD0     		beq	.L74
 549:main.c        ****                             USBUART_PutCRLF();
 932              		.loc 1 549 0
 933 0196 FFF7FEFF 		bl	USBUART_PutCRLF
 934              	.LVL74:
 935 019a 57E0     		b	.L79
 936              	.L89:
 937              		.align	2
 938              	.L88:
 939 019c 00000000 		.word	.LANCHOR0
 940 01a0 00000000 		.word	receiveBuffer
 941 01a4 00000000 		.word	.LC0
 942 01a8 1F85EB51 		.word	1374389535
 943 01ac CDCCCCCC 		.word	-858993459
 944 01b0 10000000 		.word	.LC1
 945 01b4 1C000000 		.word	.LC2
 946              	.L72:
 550:main.c        ****                         }else{
 551:main.c        ****                             while(!USBUART_CDCIsReady());
 947              		.loc 1 551 0 discriminator 1
 948 01b8 FFF7FEFF 		bl	USBUART_CDCIsReady
 949              	.LVL75:
 950 01bc 0028     		cmp	r0, #0
 951 01be FBD0     		beq	.L72
 552:main.c        ****              
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 29


 553:main.c        ****                             USBUART_PutChar(((destinationAddress)/100)+0x30);
 952              		.loc 1 553 0
 953 01c0 614B     		ldr	r3, .L90
 954 01c2 93F82D00 		ldrb	r0, [r3, #45]	@ zero_extendqisi2
 955 01c6 C3B2     		uxtb	r3, r0
 956 01c8 6048     		ldr	r0, .L90+4
 957 01ca A0FB0330 		umull	r3, r0, r0, r3
 958 01ce 4009     		lsrs	r0, r0, #5
 959 01d0 3030     		adds	r0, r0, #48
 960 01d2 FFF7FEFF 		bl	USBUART_PutChar
 961              	.LVL76:
 962              	.L76:
 554:main.c        **** 
 555:main.c        ****                             while(!USBUART_CDCIsReady());
 963              		.loc 1 555 0 discriminator 1
 964 01d6 FFF7FEFF 		bl	USBUART_CDCIsReady
 965              	.LVL77:
 966 01da 0028     		cmp	r0, #0
 967 01dc FBD0     		beq	.L76
 556:main.c        ****                             USBUART_PutChar(((destinationAddress/10)%10)+0x30);
 968              		.loc 1 556 0
 969 01de 5A4B     		ldr	r3, .L90
 970 01e0 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 971 01e4 DBB2     		uxtb	r3, r3
 972 01e6 5A4A     		ldr	r2, .L90+8
 973 01e8 A2FB0313 		umull	r1, r3, r2, r3
 974 01ec DB08     		lsrs	r3, r3, #3
 975 01ee A2FB0312 		umull	r1, r2, r2, r3
 976 01f2 D208     		lsrs	r2, r2, #3
 977 01f4 02EB8202 		add	r2, r2, r2, lsl #2
 978 01f8 5000     		lsls	r0, r2, #1
 979 01fa 1B1A     		subs	r3, r3, r0
 980 01fc 03F13000 		add	r0, r3, #48
 981 0200 C0B2     		uxtb	r0, r0
 982 0202 FFF7FEFF 		bl	USBUART_PutChar
 983              	.LVL78:
 984              	.L77:
 557:main.c        ****                             while(!USBUART_CDCIsReady());
 985              		.loc 1 557 0 discriminator 1
 986 0206 FFF7FEFF 		bl	USBUART_CDCIsReady
 987              	.LVL79:
 988 020a 0028     		cmp	r0, #0
 989 020c FBD0     		beq	.L77
 558:main.c        ****                
 559:main.c        ****                             USBUART_PutChar(((destinationAddress%10)%10)+0x30);
 990              		.loc 1 559 0
 991 020e 4E4B     		ldr	r3, .L90
 992 0210 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 993 0214 DBB2     		uxtb	r3, r3
 994 0216 4E4A     		ldr	r2, .L90+8
 995 0218 A2FB0301 		umull	r0, r1, r2, r3
 996 021c C908     		lsrs	r1, r1, #3
 997 021e 01EB8101 		add	r1, r1, r1, lsl #2
 998 0222 4800     		lsls	r0, r1, #1
 999 0224 1B1A     		subs	r3, r3, r0
 1000 0226 DBB2     		uxtb	r3, r3
 1001 0228 A2FB0312 		umull	r1, r2, r2, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 30


 1002 022c D208     		lsrs	r2, r2, #3
 1003 022e 02EB8202 		add	r2, r2, r2, lsl #2
 1004 0232 5000     		lsls	r0, r2, #1
 1005 0234 1B1A     		subs	r3, r3, r0
 1006 0236 03F13000 		add	r0, r3, #48
 1007 023a C0B2     		uxtb	r0, r0
 1008 023c FFF7FEFF 		bl	USBUART_PutChar
 1009              	.LVL80:
 560:main.c        ****                             USBUART_PutCRLF();
 1010              		.loc 1 560 0
 1011 0240 FFF7FEFF 		bl	USBUART_PutCRLF
 1012              	.LVL81:
 1013              	.L78:
 561:main.c        ****                             while(!USBUART_CDCIsReady());
 1014              		.loc 1 561 0 discriminator 1
 1015 0244 FFF7FEFF 		bl	USBUART_CDCIsReady
 1016              	.LVL82:
 1017 0248 0028     		cmp	r0, #0
 1018 024a FBD0     		beq	.L78
 1019              	.L79:
 562:main.c        ****                         }
 563:main.c        ****                         while(!USBUART_CDCIsReady());
 1020              		.loc 1 563 0 discriminator 1
 1021 024c FFF7FEFF 		bl	USBUART_CDCIsReady
 1022              	.LVL83:
 1023 0250 0028     		cmp	r0, #0
 1024 0252 FBD0     		beq	.L79
 564:main.c        ****                         USBUART_PutString("Size: ");
 1025              		.loc 1 564 0
 1026 0254 3F48     		ldr	r0, .L90+12
 1027 0256 FFF7FEFF 		bl	USBUART_PutString
 1028              	.LVL84:
 1029              	.L80:
 565:main.c        ****                         while(!USBUART_CDCIsReady());
 1030              		.loc 1 565 0 discriminator 1
 1031 025a FFF7FEFF 		bl	USBUART_CDCIsReady
 1032              	.LVL85:
 1033 025e 0028     		cmp	r0, #0
 1034 0260 FBD0     		beq	.L80
 566:main.c        ****                         USBUART_PutChar(((messageLength)/100)+0x30);
 1035              		.loc 1 566 0
 1036 0262 394B     		ldr	r3, .L90
 1037 0264 1B6B     		ldr	r3, [r3, #48]
 1038 0266 3948     		ldr	r0, .L90+4
 1039 0268 80FB0320 		smull	r2, r0, r0, r3
 1040 026c DB17     		asrs	r3, r3, #31
 1041 026e C3EB6010 		rsb	r0, r3, r0, asr #5
 1042 0272 3030     		adds	r0, r0, #48
 1043 0274 C0B2     		uxtb	r0, r0
 1044 0276 FFF7FEFF 		bl	USBUART_PutChar
 1045              	.LVL86:
 1046              	.L81:
 567:main.c        ****                         while(!USBUART_CDCIsReady());
 1047              		.loc 1 567 0 discriminator 1
 1048 027a FFF7FEFF 		bl	USBUART_CDCIsReady
 1049              	.LVL87:
 1050 027e 0028     		cmp	r0, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 31


 1051 0280 FBD0     		beq	.L81
 568:main.c        ****                         USBUART_PutChar(((messageLength/10)%10)+0x30);
 1052              		.loc 1 568 0
 1053 0282 314B     		ldr	r3, .L90
 1054 0284 1B6B     		ldr	r3, [r3, #48]
 1055 0286 3448     		ldr	r0, .L90+16
 1056 0288 80FB0312 		smull	r1, r2, r0, r3
 1057 028c DB17     		asrs	r3, r3, #31
 1058 028e C3EBA202 		rsb	r2, r3, r2, asr #2
 1059 0292 80FB0230 		smull	r3, r0, r0, r2
 1060 0296 D317     		asrs	r3, r2, #31
 1061 0298 C3EBA000 		rsb	r0, r3, r0, asr #2
 1062 029c 00EB8000 		add	r0, r0, r0, lsl #2
 1063 02a0 4300     		lsls	r3, r0, #1
 1064 02a2 D01A     		subs	r0, r2, r3
 1065 02a4 3030     		adds	r0, r0, #48
 1066 02a6 C0B2     		uxtb	r0, r0
 1067 02a8 FFF7FEFF 		bl	USBUART_PutChar
 1068              	.LVL88:
 1069              	.L82:
 569:main.c        ****                         while(!USBUART_CDCIsReady());
 1070              		.loc 1 569 0 discriminator 1
 1071 02ac FFF7FEFF 		bl	USBUART_CDCIsReady
 1072              	.LVL89:
 1073 02b0 0028     		cmp	r0, #0
 1074 02b2 FBD0     		beq	.L82
 570:main.c        ****                         USBUART_PutChar(((messageLength%10)%10)+0x30);
 1075              		.loc 1 570 0
 1076 02b4 244B     		ldr	r3, .L90
 1077 02b6 196B     		ldr	r1, [r3, #48]
 1078 02b8 2748     		ldr	r0, .L90+16
 1079 02ba 80FB0132 		smull	r3, r2, r0, r1
 1080 02be CB17     		asrs	r3, r1, #31
 1081 02c0 C3EBA202 		rsb	r2, r3, r2, asr #2
 1082 02c4 02EB8202 		add	r2, r2, r2, lsl #2
 1083 02c8 5300     		lsls	r3, r2, #1
 1084 02ca CA1A     		subs	r2, r1, r3
 1085 02cc 80FB0230 		smull	r3, r0, r0, r2
 1086 02d0 D317     		asrs	r3, r2, #31
 1087 02d2 C3EBA000 		rsb	r0, r3, r0, asr #2
 1088 02d6 00EB8000 		add	r0, r0, r0, lsl #2
 1089 02da 4300     		lsls	r3, r0, #1
 1090 02dc D01A     		subs	r0, r2, r3
 1091 02de 3030     		adds	r0, r0, #48
 1092 02e0 C0B2     		uxtb	r0, r0
 1093 02e2 FFF7FEFF 		bl	USBUART_PutChar
 1094              	.LVL90:
 1095              	.L83:
 571:main.c        ****                         while(!USBUART_CDCIsReady());
 1096              		.loc 1 571 0 discriminator 1
 1097 02e6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1098              	.LVL91:
 1099 02ea 0028     		cmp	r0, #0
 1100 02ec FBD0     		beq	.L83
 572:main.c        ****                         USBUART_PutCRLF();
 1101              		.loc 1 572 0
 1102 02ee FFF7FEFF 		bl	USBUART_PutCRLF
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 32


 1103              	.LVL92:
 1104              	.L84:
 573:main.c        ****                         while(!USBUART_CDCIsReady());
 1105              		.loc 1 573 0 discriminator 1
 1106 02f2 FFF7FEFF 		bl	USBUART_CDCIsReady
 1107              	.LVL93:
 1108 02f6 0028     		cmp	r0, #0
 1109 02f8 FBD0     		beq	.L84
 574:main.c        ****                         USBUART_PutString("Message: ");
 1110              		.loc 1 574 0
 1111 02fa 1848     		ldr	r0, .L90+20
 1112 02fc FFF7FEFF 		bl	USBUART_PutString
 1113              	.LVL94:
 1114              	.L85:
 575:main.c        ****                         while(!USBUART_CDCIsReady());
 1115              		.loc 1 575 0 discriminator 1
 1116 0300 FFF7FEFF 		bl	USBUART_CDCIsReady
 1117              	.LVL95:
 1118 0304 0028     		cmp	r0, #0
 1119 0306 FBD0     		beq	.L85
 576:main.c        ****                         addressZeroReceive = 1;
 1120              		.loc 1 576 0
 1121 0308 0122     		movs	r2, #1
 1122 030a 0F4B     		ldr	r3, .L90
 1123 030c 9A62     		str	r2, [r3, #40]
 1124              	.L62:
 577:main.c        ****                     }
 578:main.c        ****                     if(dataBitsRead > 6 && dataBitsRead < receiveBuffer[4] + 7){
 1125              		.loc 1 578 0
 1126 030e 0E4B     		ldr	r3, .L90
 1127 0310 DB68     		ldr	r3, [r3, #12]
 1128 0312 062B     		cmp	r3, #6
 1129 0314 0CDD     		ble	.L58
 1130              		.loc 1 578 0 is_stmt 0 discriminator 1
 1131 0316 124B     		ldr	r3, .L90+24
 1132 0318 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1133 031a 0733     		adds	r3, r3, #7
 1134 031c 0A4A     		ldr	r2, .L90
 1135 031e D268     		ldr	r2, [r2, #12]
 1136 0320 9342     		cmp	r3, r2
 1137 0322 05DD     		ble	.L58
 579:main.c        ****                         USBUART_PutChar(receiveBuffer[dataBitsRead]);
 1138              		.loc 1 579 0 is_stmt 1
 1139 0324 084B     		ldr	r3, .L90
 1140 0326 DB68     		ldr	r3, [r3, #12]
 1141 0328 0D4A     		ldr	r2, .L90+24
 1142 032a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1143 032c FFF7FEFF 		bl	USBUART_PutChar
 1144              	.LVL96:
 1145              	.L58:
 580:main.c        ****                     }
 581:main.c        ****                     
 582:main.c        ****                 }
 583:main.c        ****             }
 584:main.c        ****             ++dataBitsRead;
 1146              		.loc 1 584 0
 1147 0330 054A     		ldr	r2, .L90
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 33


 1148 0332 D368     		ldr	r3, [r2, #12]
 1149 0334 0133     		adds	r3, r3, #1
 1150 0336 D360     		str	r3, [r2, #12]
 1151              	.L55:
 505:main.c        ****             if(dataBitsRead <= 6){
 1152              		.loc 1 505 0
 1153 0338 034B     		ldr	r3, .L90
 1154 033a DA68     		ldr	r2, [r3, #12]
 1155 033c 9B68     		ldr	r3, [r3, #8]
 1156 033e 9A42     		cmp	r2, r3
 1157 0340 7FF465AE 		bne	.L86
 1158 0344 08BD     		pop	{r3, pc}
 1159              	.L91:
 1160 0346 00BF     		.align	2
 1161              	.L90:
 1162 0348 00000000 		.word	.LANCHOR0
 1163 034c 1F85EB51 		.word	1374389535
 1164 0350 CDCCCCCC 		.word	-858993459
 1165 0354 24000000 		.word	.LC3
 1166 0358 67666666 		.word	1717986919
 1167 035c 2C000000 		.word	.LC4
 1168 0360 00000000 		.word	receiveBuffer
 1169              		.cfi_endproc
 1170              	.LFE72:
 1171              		.size	checkForNewData, .-checkForNewData
 1172              		.section	.text.main,"ax",%progbits
 1173              		.align	2
 1174              		.global	main
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	main, %function
 1178              	main:
 1179              	.LFB70:
 327:main.c        **** 
 1180              		.loc 1 327 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 0
 1183              		@ frame_needed = 0, uses_anonymous_args = 0
 1184 0000 38B5     		push	{r3, r4, r5, lr}
 1185              		.cfi_def_cfa_offset 16
 1186              		.cfi_offset 3, -16
 1187              		.cfi_offset 4, -12
 1188              		.cfi_offset 5, -8
 1189              		.cfi_offset 14, -4
 331:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 1190              		.loc 1 331 0
 1191              		.syntax unified
 1192              	@ 331 "main.c" 1
 1193 0002 62B6     		CPSIE   i
 1194              	@ 0 "" 2
 332:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 1195              		.loc 1 332 0
 1196              		.thumb
 1197              		.syntax unified
 1198 0004 9848     		ldr	r0, .L125
 1199 0006 FFF7FEFF 		bl	TimerISR_StartEx
 1200              	.LVL97:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 34


 333:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 1201              		.loc 1 333 0
 1202 000a 9848     		ldr	r0, .L125+4
 1203 000c FFF7FEFF 		bl	RisingEdgeISR_StartEx
 1204              	.LVL98:
 334:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 1205              		.loc 1 334 0
 1206 0010 9748     		ldr	r0, .L125+8
 1207 0012 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 1208              	.LVL99:
 335:main.c        **** 
 1209              		.loc 1 335 0
 1210 0016 974C     		ldr	r4, .L125+12
 1211 0018 2046     		mov	r0, r4
 1212 001a FFF7FEFF 		bl	ReceiveISR_StartEx
 1213              	.LVL100:
 338:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 1214              		.loc 1 338 0
 1215 001e 2F20     		movs	r0, #47
 1216 0020 FFF7FEFF 		bl	TimerTX_WritePeriod
 1217              	.LVL101:
 339:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 1218              		.loc 1 339 0
 1219 0024 2E20     		movs	r0, #46
 1220 0026 FFF7FEFF 		bl	TimerTX_WriteCounter
 1221              	.LVL102:
 340:main.c        ****     
 1222              		.loc 1 340 0
 1223 002a 9348     		ldr	r0, .L125+16
 1224 002c FFF7FEFF 		bl	TransmitISR_StartEx
 1225              	.LVL103:
 342:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 1226              		.loc 1 342 0
 1227 0030 3320     		movs	r0, #51
 1228 0032 FFF7FEFF 		bl	TimerRX_WriteCounter
 1229              	.LVL104:
 343:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 1230              		.loc 1 343 0
 1231 0036 3420     		movs	r0, #52
 1232 0038 FFF7FEFF 		bl	TimerRX_WritePeriod
 1233              	.LVL105:
 344:main.c        ****     
 1234              		.loc 1 344 0
 1235 003c 2046     		mov	r0, r4
 1236 003e FFF7FEFF 		bl	ReceiveISR_StartEx
 1237              	.LVL106:
 346:main.c        ****         
 1238              		.loc 1 346 0
 1239 0042 8E48     		ldr	r0, .L125+20
 1240 0044 FFF7FEFF 		bl	CollisionDelayISR_StartEx
 1241              	.LVL107:
 349:main.c        ****     
 1242              		.loc 1 349 0
 1243 0048 8D4B     		ldr	r3, .L125+24
 1244 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1245 004c 0121     		movs	r1, #1
 1246 004e FFF7FEFF 		bl	USBUART_Start
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 35


 1247              	.LVL108:
 1248              	.L93:
 351:main.c        ****     USBUART_CDC_Init();
 1249              		.loc 1 351 0 discriminator 1
 1250 0052 FFF7FEFF 		bl	USBUART_GetConfiguration
 1251              	.LVL109:
 1252 0056 0028     		cmp	r0, #0
 1253 0058 FBD0     		beq	.L93
 352:main.c        ****     
 1254              		.loc 1 352 0
 1255 005a FFF7FEFF 		bl	USBUART_CDC_Init
 1256              	.LVL110:
 355:main.c        **** 
 1257              		.loc 1 355 0
 1258 005e 0022     		movs	r2, #0
 1259 0060 884B     		ldr	r3, .L125+28
 1260 0062 1A70     		strb	r2, [r3]
 1261              	.L94:
 369:main.c        ****             int inCount = 0;
 1262              		.loc 1 369 0
 1263 0064 884B     		ldr	r3, .L125+32
 1264 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 0068 002B     		cmp	r3, #0
 1266 006a 00F0E280 		beq	.L95
 1267              	.LVL111:
 1268              	.LBB5:
 371:main.c        ****             char input = 0;
 1269              		.loc 1 371 0
 1270 006e 0022     		movs	r2, #0
 1271 0070 864B     		ldr	r3, .L125+36
 1272 0072 83F83620 		strb	r2, [r3, #54]
 1273              	.LVL112:
 1274              	.L96:
 373:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 1275              		.loc 1 373 0 discriminator 1
 1276 0076 FFF7FEFF 		bl	USBUART_CDCIsReady
 1277              	.LVL113:
 1278 007a 0028     		cmp	r0, #0
 1279 007c FBD0     		beq	.L96
 374:main.c        ****             while(inCount < 3){
 1280              		.loc 1 374 0
 1281 007e 8448     		ldr	r0, .L125+40
 1282 0080 FFF7FEFF 		bl	USBUART_PutString
 1283              	.LVL114:
 370:main.c        ****             transmitAddress = 0;
 1284              		.loc 1 370 0
 1285 0084 0024     		movs	r4, #0
 375:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1286              		.loc 1 375 0
 1287 0086 6BE0     		b	.L97
 1288              	.LVL115:
 1289              	.L98:
 377:main.c        ****                 }
 1290              		.loc 1 377 0
 1291 0088 FFF7FEFF 		bl	stateDiagram
 1292              	.LVL116:
 1293              	.L110:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 36


 376:main.c        ****                     stateDiagram();
 1294              		.loc 1 376 0
 1295 008c FFF7FEFF 		bl	USBUART_DataIsReady
 1296              	.LVL117:
 1297 0090 0028     		cmp	r0, #0
 1298 0092 F9D0     		beq	.L98
 380:main.c        ****                 
 1299              		.loc 1 380 0
 1300 0094 FFF7FEFF 		bl	USBUART_GetChar
 1301              	.LVL118:
 1302 0098 0546     		mov	r5, r0
 1303              	.LVL119:
 383:main.c        ****                     if (toupper(input) == 'R') {
 1304              		.loc 1 383 0
 1305 009a 002C     		cmp	r4, #0
 1306 009c 40D1     		bne	.L99
 1307              	.LVL120:
 1308              	.LBB6:
 384:main.c        ****                         transmitMode = false;
 1309              		.loc 1 384 0
 1310 009e 7D4B     		ldr	r3, .L125+44
 1311 00a0 1B68     		ldr	r3, [r3]
 1312 00a2 0344     		add	r3, r3, r0
 1313 00a4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1314 00a6 03F00303 		and	r3, r3, #3
 1315 00aa 022B     		cmp	r3, #2
 1316 00ac 02D1     		bne	.L100
 384:main.c        ****                         transmitMode = false;
 1317              		.loc 1 384 0 is_stmt 0 discriminator 1
 1318 00ae A0F12003 		sub	r3, r0, #32
 1319 00b2 00E0     		b	.L101
 1320              	.L100:
 384:main.c        ****                         transmitMode = false;
 1321              		.loc 1 384 0 discriminator 2
 1322 00b4 0346     		mov	r3, r0
 1323              	.L101:
 1324              	.LBE6:
 384:main.c        ****                         transmitMode = false;
 1325              		.loc 1 384 0 discriminator 4
 1326 00b6 522B     		cmp	r3, #82
 1327 00b8 1FD1     		bne	.L102
 385:main.c        ****                         TimerRX_Start();
 1328              		.loc 1 385 0 is_stmt 1
 1329 00ba 0022     		movs	r2, #0
 1330 00bc 724B     		ldr	r3, .L125+32
 1331 00be 1A70     		strb	r2, [r3]
 386:main.c        ****                         while(!USBUART_CDCIsReady());
 1332              		.loc 1 386 0
 1333 00c0 FFF7FEFF 		bl	TimerRX_Start
 1334              	.LVL121:
 1335              	.L103:
 387:main.c        ****                         USBUART_PutChar(input);
 1336              		.loc 1 387 0 discriminator 1
 1337 00c4 FFF7FEFF 		bl	USBUART_CDCIsReady
 1338              	.LVL122:
 1339 00c8 0028     		cmp	r0, #0
 1340 00ca FBD0     		beq	.L103
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 37


 388:main.c        ****                         while(!USBUART_CDCIsReady());
 1341              		.loc 1 388 0
 1342 00cc 2846     		mov	r0, r5
 1343 00ce FFF7FEFF 		bl	USBUART_PutChar
 1344              	.LVL123:
 1345              	.L104:
 389:main.c        ****                         USBUART_PutCRLF();
 1346              		.loc 1 389 0 discriminator 1
 1347 00d2 FFF7FEFF 		bl	USBUART_CDCIsReady
 1348              	.LVL124:
 1349 00d6 0028     		cmp	r0, #0
 1350 00d8 FBD0     		beq	.L104
 390:main.c        ****                         while(!USBUART_CDCIsReady());
 1351              		.loc 1 390 0
 1352 00da FFF7FEFF 		bl	USBUART_PutCRLF
 1353              	.LVL125:
 1354              	.L105:
 391:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 1355              		.loc 1 391 0 discriminator 1
 1356 00de FFF7FEFF 		bl	USBUART_CDCIsReady
 1357              	.LVL126:
 1358 00e2 0028     		cmp	r0, #0
 1359 00e4 FBD0     		beq	.L105
 392:main.c        ****                         while(!USBUART_CDCIsReady());
 1360              		.loc 1 392 0
 1361 00e6 6C48     		ldr	r0, .L125+48
 1362 00e8 FFF7FEFF 		bl	USBUART_PutString
 1363              	.LVL127:
 1364              	.L106:
 393:main.c        ****                         USBUART_PutCRLF();
 1365              		.loc 1 393 0 discriminator 1
 1366 00ec FFF7FEFF 		bl	USBUART_CDCIsReady
 1367              	.LVL128:
 1368 00f0 0028     		cmp	r0, #0
 1369 00f2 FBD0     		beq	.L106
 394:main.c        ****                         inCount = 0;
 1370              		.loc 1 394 0
 1371 00f4 FFF7FEFF 		bl	USBUART_PutCRLF
 1372              	.LVL129:
 396:main.c        ****                     } else {
 1373              		.loc 1 396 0
 1374 00f8 34E0     		b	.L107
 1375              	.LVL130:
 1376              	.L102:
 398:main.c        ****                         USBUART_PutChar(input);
 1377              		.loc 1 398 0
 1378 00fa A5F13003 		sub	r3, r5, #48
 1379 00fe 6349     		ldr	r1, .L125+36
 1380 0100 91F83600 		ldrb	r0, [r1, #54]	@ zero_extendqisi2
 1381              	.LVL131:
 1382 0104 03EB8303 		add	r3, r3, r3, lsl #2
 1383 0108 03EB8303 		add	r3, r3, r3, lsl #2
 1384 010c 9A00     		lsls	r2, r3, #2
 1385 010e 0244     		add	r2, r2, r0
 1386 0110 D2B2     		uxtb	r2, r2
 1387 0112 81F83620 		strb	r2, [r1, #54]
 399:main.c        ****                         ++inCount;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 38


 1388              		.loc 1 399 0
 1389 0116 2846     		mov	r0, r5
 1390 0118 FFF7FEFF 		bl	USBUART_PutChar
 1391              	.LVL132:
 400:main.c        ****                     }
 1392              		.loc 1 400 0
 1393 011c 0134     		adds	r4, r4, #1
 1394              	.LVL133:
 1395 011e 1FE0     		b	.L97
 1396              	.LVL134:
 1397              	.L99:
 402:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 1398              		.loc 1 402 0
 1399 0120 012C     		cmp	r4, #1
 1400 0122 10D1     		bne	.L109
 403:main.c        ****                     USBUART_PutChar(input);
 1401              		.loc 1 403 0
 1402 0124 A0F13002 		sub	r2, r0, #48
 1403 0128 5849     		ldr	r1, .L125+36
 1404 012a 91F83600 		ldrb	r0, [r1, #54]	@ zero_extendqisi2
 1405              	.LVL135:
 1406 012e 02EB8202 		add	r2, r2, r2, lsl #2
 1407 0132 5300     		lsls	r3, r2, #1
 1408 0134 0344     		add	r3, r3, r0
 1409 0136 DBB2     		uxtb	r3, r3
 1410 0138 81F83630 		strb	r3, [r1, #54]
 404:main.c        ****                     ++inCount;
 1411              		.loc 1 404 0
 1412 013c 2846     		mov	r0, r5
 1413 013e FFF7FEFF 		bl	USBUART_PutChar
 1414              	.LVL136:
 405:main.c        ****                 }else if (inCount == 2){
 1415              		.loc 1 405 0
 1416 0142 0134     		adds	r4, r4, #1
 1417              	.LVL137:
 1418 0144 0CE0     		b	.L97
 1419              	.LVL138:
 1420              	.L109:
 406:main.c        ****                     transmitAddress  += input - (0x30);   
 1421              		.loc 1 406 0
 1422 0146 022C     		cmp	r4, #2
 1423 0148 0AD1     		bne	.L97
 407:main.c        ****                     USBUART_PutChar(input);
 1424              		.loc 1 407 0
 1425 014a 504A     		ldr	r2, .L125+36
 1426 014c 92F83630 		ldrb	r3, [r2, #54]	@ zero_extendqisi2
 1427 0150 0344     		add	r3, r3, r0
 1428 0152 303B     		subs	r3, r3, #48
 1429 0154 DBB2     		uxtb	r3, r3
 1430 0156 82F83630 		strb	r3, [r2, #54]
 408:main.c        ****                     ++inCount;
 1431              		.loc 1 408 0
 1432 015a FFF7FEFF 		bl	USBUART_PutChar
 1433              	.LVL139:
 409:main.c        ****                 }
 1434              		.loc 1 409 0
 1435 015e 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 39


 1436              	.LVL140:
 1437              	.L97:
 375:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1438              		.loc 1 375 0
 1439 0160 022C     		cmp	r4, #2
 1440 0162 93DD     		ble	.L110
 1441              	.LVL141:
 1442              	.L107:
 413:main.c        ****                 continue;
 1443              		.loc 1 413 0
 1444 0164 484B     		ldr	r3, .L125+32
 1445 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 0168 002B     		cmp	r3, #0
 1447 016a 3FF47BAF 		beq	.L94
 1448              	.L112:
 417:main.c        ****             USBUART_PutCRLF();
 1449              		.loc 1 417 0 discriminator 1
 1450 016e FFF7FEFF 		bl	USBUART_CDCIsReady
 1451              	.LVL142:
 1452 0172 0028     		cmp	r0, #0
 1453 0174 FBD0     		beq	.L112
 418:main.c        ****             while(!USBUART_CDCIsReady());
 1454              		.loc 1 418 0
 1455 0176 FFF7FEFF 		bl	USBUART_PutCRLF
 1456              	.LVL143:
 1457              	.L113:
 419:main.c        ****             USBUART_PutString("Enter message: ");
 1458              		.loc 1 419 0 discriminator 1
 1459 017a FFF7FEFF 		bl	USBUART_CDCIsReady
 1460              	.LVL144:
 1461 017e 0028     		cmp	r0, #0
 1462 0180 FBD0     		beq	.L113
 420:main.c        ****             inCount = 7; 
 1463              		.loc 1 420 0
 1464 0182 4648     		ldr	r0, .L125+52
 1465 0184 FFF7FEFF 		bl	USBUART_PutString
 1466              	.LVL145:
 425:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 1467              		.loc 1 425 0
 1468 0188 454B     		ldr	r3, .L125+56
 1469 018a 0024     		movs	r4, #0
 1470 018c 1C70     		strb	r4, [r3]
 426:main.c        ****             buffer[2] = ADDR1Start; // Source address
 1471              		.loc 1 426 0
 1472 018e 0122     		movs	r2, #1
 1473 0190 5A70     		strb	r2, [r3, #1]
 427:main.c        ****             buffer[3] = transmitAddress; // Destination address
 1474              		.loc 1 427 0
 1475 0192 6022     		movs	r2, #96
 1476 0194 9A70     		strb	r2, [r3, #2]
 428:main.c        ****             buffer[4] = 0x00; // CRC disabled
 1477              		.loc 1 428 0
 1478 0196 3D4A     		ldr	r2, .L125+36
 1479 0198 92F83620 		ldrb	r2, [r2, #54]	@ zero_extendqisi2
 1480 019c D2B2     		uxtb	r2, r2
 1481 019e DA70     		strb	r2, [r3, #3]
 429:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 40


 1482              		.loc 1 429 0
 1483 01a0 1C71     		strb	r4, [r3, #4]
 430:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 1484              		.loc 1 430 0
 1485 01a2 8022     		movs	r2, #128
 1486 01a4 5A71     		strb	r2, [r3, #5]
 431:main.c        ****             
 1487              		.loc 1 431 0
 1488 01a6 7722     		movs	r2, #119
 1489 01a8 9A71     		strb	r2, [r3, #6]
 421:main.c        ****             input = 0; 
 1490              		.loc 1 421 0
 1491 01aa 0725     		movs	r5, #7
 434:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1492              		.loc 1 434 0
 1493 01ac 13E0     		b	.L114
 1494              	.LVL146:
 1495              	.L115:
 435:main.c        ****                 input = USBUART_GetChar();
 1496              		.loc 1 435 0 discriminator 1
 1497 01ae FFF7FEFF 		bl	USBUART_DataIsReady
 1498              	.LVL147:
 1499 01b2 0028     		cmp	r0, #0
 1500 01b4 FBD0     		beq	.L115
 436:main.c        ****                 if(input != 0x0D){
 1501              		.loc 1 436 0
 1502 01b6 FFF7FEFF 		bl	USBUART_GetChar
 1503              	.LVL148:
 1504 01ba 0446     		mov	r4, r0
 1505              	.LVL149:
 437:main.c        ****                     buffer[inCount] = input;
 1506              		.loc 1 437 0
 1507 01bc 0D28     		cmp	r0, #13
 1508 01be 0AD0     		beq	.L114
 438:main.c        ****                     while(!USBUART_CDCIsReady());
 1509              		.loc 1 438 0
 1510 01c0 374B     		ldr	r3, .L125+56
 1511 01c2 5855     		strb	r0, [r3, r5]
 1512              	.LVL150:
 1513              	.L117:
 439:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 1514              		.loc 1 439 0 discriminator 1
 1515 01c4 FFF7FEFF 		bl	USBUART_CDCIsReady
 1516              	.LVL151:
 1517 01c8 0028     		cmp	r0, #0
 1518 01ca FBD0     		beq	.L117
 440:main.c        ****                     ++inCount;
 1519              		.loc 1 440 0
 1520 01cc 344B     		ldr	r3, .L125+56
 1521 01ce 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1522 01d0 FFF7FEFF 		bl	USBUART_PutChar
 1523              	.LVL152:
 441:main.c        ****                 }
 1524              		.loc 1 441 0
 1525 01d4 0135     		adds	r5, r5, #1
 1526              	.LVL153:
 1527              	.L114:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 41


 434:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1528              		.loc 1 434 0
 1529 01d6 0D2C     		cmp	r4, #13
 1530 01d8 E9D1     		bne	.L115
 444:main.c        ****             if (buffer[4] > 44) {
 1531              		.loc 1 444 0
 1532 01da EB1F     		subs	r3, r5, #7
 1533 01dc DBB2     		uxtb	r3, r3
 1534 01de 304A     		ldr	r2, .L125+56
 1535 01e0 1371     		strb	r3, [r2, #4]
 445:main.c        ****                 while(!USBUART_CDCIsReady());
 1536              		.loc 1 445 0
 1537 01e2 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 1538 01e4 DBB2     		uxtb	r3, r3
 1539 01e6 2C2B     		cmp	r3, #44
 1540 01e8 07D9     		bls	.L118
 1541              	.L119:
 446:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 1542              		.loc 1 446 0 discriminator 1
 1543 01ea FFF7FEFF 		bl	USBUART_CDCIsReady
 1544              	.LVL154:
 1545 01ee 0028     		cmp	r0, #0
 1546 01f0 FBD0     		beq	.L119
 447:main.c        ****                 continue;
 1547              		.loc 1 447 0
 1548 01f2 2C48     		ldr	r0, .L125+60
 1549 01f4 FFF7FEFF 		bl	USBUART_PutString
 1550              	.LVL155:
 448:main.c        ****             }
 1551              		.loc 1 448 0
 1552 01f8 34E7     		b	.L94
 1553              	.L118:
 451:main.c        ****             position = 0; // Reset position in transmit interrupt
 1554              		.loc 1 451 0
 1555 01fa 2B4B     		ldr	r3, .L125+64
 1556 01fc 1D60     		str	r5, [r3]
 452:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 1557              		.loc 1 452 0
 1558 01fe 0021     		movs	r1, #0
 1559 0200 224A     		ldr	r2, .L125+36
 1560 0202 5161     		str	r1, [r2, #20]
 453:main.c        ****             dataSize++;
 1561              		.loc 1 453 0
 1562 0204 7721     		movs	r1, #119
 1563 0206 264A     		ldr	r2, .L125+56
 1564 0208 5155     		strb	r1, [r2, r5]
 454:main.c        ****             TimerTX_Start();
 1565              		.loc 1 454 0
 1566 020a 1A68     		ldr	r2, [r3]
 1567 020c 0132     		adds	r2, r2, #1
 1568 020e 1A60     		str	r2, [r3]
 455:main.c        ****             while (position < dataSize);
 1569              		.loc 1 455 0
 1570 0210 FFF7FEFF 		bl	TimerTX_Start
 1571              	.LVL156:
 1572              	.L120:
 456:main.c        ****             TimerTX_Stop();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 42


 1573              		.loc 1 456 0 discriminator 1
 1574 0214 1D4B     		ldr	r3, .L125+36
 1575 0216 5A69     		ldr	r2, [r3, #20]
 1576 0218 234B     		ldr	r3, .L125+64
 1577 021a 1B68     		ldr	r3, [r3]
 1578 021c 9A42     		cmp	r2, r3
 1579 021e F9DB     		blt	.L120
 457:main.c        ****             while(!USBUART_CDCIsReady());
 1580              		.loc 1 457 0
 1581 0220 FFF7FEFF 		bl	TimerTX_Stop
 1582              	.LVL157:
 1583              	.L121:
 458:main.c        ****             USBUART_PutCRLF(); 
 1584              		.loc 1 458 0 discriminator 1
 1585 0224 FFF7FEFF 		bl	USBUART_CDCIsReady
 1586              	.LVL158:
 1587 0228 0028     		cmp	r0, #0
 1588 022a FBD0     		beq	.L121
 459:main.c        ****             
 1589              		.loc 1 459 0
 1590 022c FFF7FEFF 		bl	USBUART_PutCRLF
 1591              	.LVL159:
 1592              	.LBE5:
 1593 0230 18E7     		b	.L94
 1594              	.LVL160:
 1595              	.L95:
 462:main.c        ****             stateDiagram();
 1596              		.loc 1 462 0
 1597 0232 FFF7FEFF 		bl	checkForNewData
 1598              	.LVL161:
 463:main.c        ****             if (USBUART_DataIsReady()) { 
 1599              		.loc 1 463 0
 1600 0236 FFF7FEFF 		bl	stateDiagram
 1601              	.LVL162:
 464:main.c        ****                 char input;
 1602              		.loc 1 464 0
 1603 023a FFF7FEFF 		bl	USBUART_DataIsReady
 1604              	.LVL163:
 1605 023e 0028     		cmp	r0, #0
 1606 0240 3FF410AF 		beq	.L94
 1607              	.LBB7:
 466:main.c        ****                 if (toupper(input) == 'T') {
 1608              		.loc 1 466 0
 1609 0244 FFF7FEFF 		bl	USBUART_GetChar
 1610              	.LVL164:
 1611              	.LBB8:
 467:main.c        ****                     transmitMode = true;
 1612              		.loc 1 467 0
 1613 0248 124B     		ldr	r3, .L125+44
 1614 024a 1B68     		ldr	r3, [r3]
 1615 024c 0344     		add	r3, r3, r0
 1616 024e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1617 0250 03F00303 		and	r3, r3, #3
 1618 0254 022B     		cmp	r3, #2
 1619 0256 00D1     		bne	.L123
 467:main.c        ****                     transmitMode = true;
 1620              		.loc 1 467 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 43


 1621 0258 2038     		subs	r0, r0, #32
 1622              	.LVL165:
 1623              	.L123:
 1624              	.LBE8:
 467:main.c        ****                     transmitMode = true;
 1625              		.loc 1 467 0 discriminator 4
 1626 025a 5428     		cmp	r0, #84
 1627 025c 7FF402AF 		bne	.L94
 468:main.c        ****                 }
 1628              		.loc 1 468 0 is_stmt 1
 1629 0260 0122     		movs	r2, #1
 1630 0262 094B     		ldr	r3, .L125+32
 1631 0264 1A70     		strb	r2, [r3]
 1632 0266 FDE6     		b	.L94
 1633              	.L126:
 1634              		.align	2
 1635              	.L125:
 1636 0268 00000000 		.word	TimerInterruptHandler
 1637 026c 00000000 		.word	RisingEdgeInterruptHandler
 1638 0270 00000000 		.word	FallingEdgeInterruptHandler
 1639 0274 00000000 		.word	ReceiveInterruptHandler
 1640 0278 00000000 		.word	TransmitInterruptHandler
 1641 027c 00000000 		.word	CollisionDelayInterruptHandler
 1642 0280 00000000 		.word	USBUART_device
 1643 0284 00000000 		.word	systemState
 1644 0288 00000000 		.word	.LANCHOR1
 1645 028c 00000000 		.word	.LANCHOR0
 1646 0290 38000000 		.word	.LC5
 1647 0294 00000000 		.word	__ctype_ptr__
 1648 0298 70000000 		.word	.LC6
 1649 029c 98000000 		.word	.LC7
 1650 02a0 00000000 		.word	buffer
 1651 02a4 A8000000 		.word	.LC8
 1652 02a8 00000000 		.word	dataSize
 1653              	.LBE7:
 1654              		.cfi_endproc
 1655              	.LFE70:
 1656              		.size	main, .-main
 1657              		.global	transmitMode
 1658              		.global	transmitAddress
 1659              		.global	concatCount
 1660              		.global	receiveBitCount
 1661              		.global	transmitBitCount
 1662              		.comm	dataSize,4,4
 1663              		.comm	currentChar,1,1
 1664              		.global	addressZeroReceive
 1665              		.global	headerCRC
 1666              		.global	crcUsage
 1667              		.global	messageLength
 1668              		.global	destinationAddress
 1669              		.global	sourceAddress
 1670              		.global	collisionLock
 1671              		.global	receiveLock
 1672              		.global	transmitLock
 1673              		.comm	dataPtr,4,4
 1674              		.global	idx
 1675              		.global	dataBitsRead
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 44


 1676              		.global	receivePosition
 1677              		.global	position
 1678              		.comm	receiveData,16,4
 1679              		.comm	receiveBuffer,500,4
 1680              		.comm	buffer,500,4
 1681              		.comm	transmitData,8000,4
 1682              		.global	lowFlag
 1683              		.comm	systemState,1,1
 1684              		.data
 1685              		.set	.LANCHOR1,. + 0
 1686              		.type	transmitMode, %object
 1687              		.size	transmitMode, 1
 1688              	transmitMode:
 1689 0000 01       		.byte	1
 1690              		.section	.rodata.str1.4,"aMS",%progbits,1
 1691              		.align	2
 1692              	.LC0:
 1693 0000 4D657373 		.ascii	"Message From: \000"
 1693      61676520 
 1693      46726F6D 
 1693      3A2000
 1694 000f 00       		.space	1
 1695              	.LC1:
 1696 0010 53656E74 		.ascii	"Sent To: \000"
 1696      20546F3A 
 1696      2000
 1697 001a 0000     		.space	2
 1698              	.LC2:
 1699 001c 42435354 		.ascii	"BCST \000"
 1699      2000
 1700 0022 0000     		.space	2
 1701              	.LC3:
 1702 0024 53697A65 		.ascii	"Size: \000"
 1702      3A2000
 1703 002b 00       		.space	1
 1704              	.LC4:
 1705 002c 4D657373 		.ascii	"Message: \000"
 1705      6167653A 
 1705      2000
 1706 0036 0000     		.space	2
 1707              	.LC5:
 1708 0038 456E7465 		.ascii	"Enter Address or press 'R' to switch to receive mod"
 1708      72204164 
 1708      64726573 
 1708      73206F72 
 1708      20707265 
 1709 006b 653A2000 		.ascii	"e: \000"
 1710 006f 00       		.space	1
 1711              	.LC6:
 1712 0070 50726573 		.ascii	"Press 'T' to switch to transmit mode.\015\012\000"
 1712      73202754 
 1712      2720746F 
 1712      20737769 
 1712      74636820 
 1713              	.LC7:
 1714 0098 456E7465 		.ascii	"Enter message: \000"
 1714      72206D65 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 45


 1714      73736167 
 1714      653A2000 
 1715              	.LC8:
 1716 00a8 0D0A4D65 		.ascii	"\015\012Message must be no more than 44 bytes.\015\012"
 1716      73736167 
 1716      65206D75 
 1716      73742062 
 1716      65206E6F 
 1717 00d2 00       		.ascii	"\000"
 1718              		.bss
 1719              		.align	2
 1720              		.set	.LANCHOR0,. + 0
 1721              		.type	collisionLock, %object
 1722              		.size	collisionLock, 1
 1723              	collisionLock:
 1724 0000 00       		.space	1
 1725 0001 000000   		.space	3
 1726              		.type	receiveBitCount, %object
 1727              		.size	receiveBitCount, 4
 1728              	receiveBitCount:
 1729 0004 00000000 		.space	4
 1730              		.type	receivePosition, %object
 1731              		.size	receivePosition, 4
 1732              	receivePosition:
 1733 0008 00000000 		.space	4
 1734              		.type	dataBitsRead, %object
 1735              		.size	dataBitsRead, 4
 1736              	dataBitsRead:
 1737 000c 00000000 		.space	4
 1738              		.type	receiveLock, %object
 1739              		.size	receiveLock, 4
 1740              	receiveLock:
 1741 0010 00000000 		.space	4
 1742              		.type	position, %object
 1743              		.size	position, 4
 1744              	position:
 1745 0014 00000000 		.space	4
 1746              		.type	transmitLock, %object
 1747              		.size	transmitLock, 4
 1748              	transmitLock:
 1749 0018 00000000 		.space	4
 1750              		.type	transmitBitCount, %object
 1751              		.size	transmitBitCount, 4
 1752              	transmitBitCount:
 1753 001c 00000000 		.space	4
 1754              		.type	idx, %object
 1755              		.size	idx, 4
 1756              	idx:
 1757 0020 00000000 		.space	4
 1758              		.type	lowFlag, %object
 1759              		.size	lowFlag, 1
 1760              	lowFlag:
 1761 0024 00       		.space	1
 1762 0025 000000   		.space	3
 1763              		.type	addressZeroReceive, %object
 1764              		.size	addressZeroReceive, 4
 1765              	addressZeroReceive:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 46


 1766 0028 00000000 		.space	4
 1767              		.type	sourceAddress, %object
 1768              		.size	sourceAddress, 1
 1769              	sourceAddress:
 1770 002c 00       		.space	1
 1771              		.type	destinationAddress, %object
 1772              		.size	destinationAddress, 1
 1773              	destinationAddress:
 1774 002d 00       		.space	1
 1775 002e 0000     		.space	2
 1776              		.type	messageLength, %object
 1777              		.size	messageLength, 4
 1778              	messageLength:
 1779 0030 00000000 		.space	4
 1780              		.type	crcUsage, %object
 1781              		.size	crcUsage, 1
 1782              	crcUsage:
 1783 0034 00       		.space	1
 1784              		.type	headerCRC, %object
 1785              		.size	headerCRC, 1
 1786              	headerCRC:
 1787 0035 00       		.space	1
 1788              		.type	transmitAddress, %object
 1789              		.size	transmitAddress, 1
 1790              	transmitAddress:
 1791 0036 00       		.space	1
 1792 0037 00       		.space	1
 1793              		.type	concatCount, %object
 1794              		.size	concatCount, 4
 1795              	concatCount:
 1796 0038 00000000 		.space	4
 1797              		.text
 1798              	.Letext0:
 1799              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1800              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1801              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1802              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1803              		.file 6 "Generated_Source\\PSoC5/USBUART.h"
 1804              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1805              		.file 8 "Generated_Source\\PSoC5/TimerRX.h"
 1806              		.file 9 "Generated_Source\\PSoC5/RECEIVE.h"
 1807              		.file 10 "Generated_Source\\PSoC5/TRANSMIT.h"
 1808              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 1809              		.file 12 "Generated_Source\\PSoC5/CollisionDelay.h"
 1810              		.file 13 "Generated_Source\\PSoC5/Timer.h"
 1811              		.file 14 "Generated_Source\\PSoC5/IDLE.h"
 1812              		.file 15 "Generated_Source\\PSoC5/BUSY.h"
 1813              		.file 16 "Generated_Source\\PSoC5/COLLISION.h"
 1814              		.file 17 "Generated_Source\\PSoC5/USBUART_cdc.h"
 1815              		.file 18 "Generated_Source\\PSoC5/TimerTX.h"
 1816              		.file 19 "Generated_Source\\PSoC5/TimerISR.h"
 1817              		.file 20 "Generated_Source\\PSoC5/RisingEdgeISR.h"
 1818              		.file 21 "Generated_Source\\PSoC5/FallingEdgeISR.h"
 1819              		.file 22 "Generated_Source\\PSoC5/ReceiveISR.h"
 1820              		.file 23 "Generated_Source\\PSoC5/TransmitISR.h"
 1821              		.file 24 "Generated_Source\\PSoC5/CollisionDelayISR.h"
 1822              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 47


 1823              	.Ldebug_info0:
 1824 0000 140D0000 		.4byte	0xd14
 1825 0004 0400     		.2byte	0x4
 1826 0006 00000000 		.4byte	.Ldebug_abbrev0
 1827 000a 04       		.byte	0x4
 1828 000b 01       		.uleb128 0x1
 1829 000c C6050000 		.4byte	.LASF102
 1830 0010 0C       		.byte	0xc
 1831 0011 B3040000 		.4byte	.LASF103
 1832 0015 57030000 		.4byte	.LASF104
 1833 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1834 001d 00000000 		.4byte	0
 1835 0021 00000000 		.4byte	.Ldebug_line0
 1836 0025 02       		.uleb128 0x2
 1837 0026 01       		.byte	0x1
 1838 0027 06       		.byte	0x6
 1839 0028 26030000 		.4byte	.LASF0
 1840 002c 02       		.uleb128 0x2
 1841 002d 01       		.byte	0x1
 1842 002e 08       		.byte	0x8
 1843 002f F7020000 		.4byte	.LASF1
 1844 0033 02       		.uleb128 0x2
 1845 0034 02       		.byte	0x2
 1846 0035 05       		.byte	0x5
 1847 0036 9B000000 		.4byte	.LASF2
 1848 003a 03       		.uleb128 0x3
 1849 003b FD000000 		.4byte	.LASF4
 1850 003f 02       		.byte	0x2
 1851 0040 2B       		.byte	0x2b
 1852 0041 45000000 		.4byte	0x45
 1853 0045 02       		.uleb128 0x2
 1854 0046 02       		.byte	0x2
 1855 0047 07       		.byte	0x7
 1856 0048 41040000 		.4byte	.LASF3
 1857 004c 03       		.uleb128 0x3
 1858 004d 15050000 		.4byte	.LASF5
 1859 0051 02       		.byte	0x2
 1860 0052 3F       		.byte	0x3f
 1861 0053 57000000 		.4byte	0x57
 1862 0057 02       		.uleb128 0x2
 1863 0058 04       		.byte	0x4
 1864 0059 05       		.byte	0x5
 1865 005a 35020000 		.4byte	.LASF6
 1866 005e 02       		.uleb128 0x2
 1867 005f 04       		.byte	0x4
 1868 0060 07       		.byte	0x7
 1869 0061 CA030000 		.4byte	.LASF7
 1870 0065 02       		.uleb128 0x2
 1871 0066 08       		.byte	0x8
 1872 0067 05       		.byte	0x5
 1873 0068 1B020000 		.4byte	.LASF8
 1874 006c 02       		.uleb128 0x2
 1875 006d 08       		.byte	0x8
 1876 006e 07       		.byte	0x7
 1877 006f 40030000 		.4byte	.LASF9
 1878 0073 04       		.uleb128 0x4
 1879 0074 04       		.byte	0x4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 48


 1880 0075 05       		.byte	0x5
 1881 0076 696E7400 		.ascii	"int\000"
 1882 007a 02       		.uleb128 0x2
 1883 007b 04       		.byte	0x4
 1884 007c 07       		.byte	0x7
 1885 007d B4030000 		.4byte	.LASF10
 1886 0081 03       		.uleb128 0x3
 1887 0082 C1030000 		.4byte	.LASF11
 1888 0086 03       		.byte	0x3
 1889 0087 24       		.byte	0x24
 1890 0088 3A000000 		.4byte	0x3a
 1891 008c 03       		.uleb128 0x3
 1892 008d 39040000 		.4byte	.LASF12
 1893 0091 03       		.byte	0x3
 1894 0092 2C       		.byte	0x2c
 1895 0093 4C000000 		.4byte	0x4c
 1896 0097 05       		.uleb128 0x5
 1897 0098 68010000 		.4byte	.LASF13
 1898 009c 04       		.byte	0x4
 1899 009d 9201     		.2byte	0x192
 1900 009f 2C000000 		.4byte	0x2c
 1901 00a3 02       		.uleb128 0x2
 1902 00a4 04       		.byte	0x4
 1903 00a5 04       		.byte	0x4
 1904 00a6 E0010000 		.4byte	.LASF14
 1905 00aa 02       		.uleb128 0x2
 1906 00ab 08       		.byte	0x8
 1907 00ac 04       		.byte	0x4
 1908 00ad D9040000 		.4byte	.LASF15
 1909 00b1 02       		.uleb128 0x2
 1910 00b2 01       		.byte	0x1
 1911 00b3 08       		.byte	0x8
 1912 00b4 2E040000 		.4byte	.LASF16
 1913 00b8 05       		.uleb128 0x5
 1914 00b9 BA040000 		.4byte	.LASF17
 1915 00bd 04       		.byte	0x4
 1916 00be 3C02     		.2byte	0x23c
 1917 00c0 C4000000 		.4byte	0xc4
 1918 00c4 06       		.uleb128 0x6
 1919 00c5 97000000 		.4byte	0x97
 1920 00c9 02       		.uleb128 0x2
 1921 00ca 08       		.byte	0x8
 1922 00cb 04       		.byte	0x4
 1923 00cc CD020000 		.4byte	.LASF18
 1924 00d0 02       		.uleb128 0x2
 1925 00d1 04       		.byte	0x4
 1926 00d2 07       		.byte	0x7
 1927 00d3 AB000000 		.4byte	.LASF19
 1928 00d7 07       		.uleb128 0x7
 1929 00d8 04       		.byte	0x4
 1930 00d9 DD000000 		.4byte	0xdd
 1931 00dd 08       		.uleb128 0x8
 1932 00de B1000000 		.4byte	0xb1
 1933 00e2 09       		.uleb128 0x9
 1934 00e3 B0020000 		.4byte	.LASF105
 1935 00e7 01       		.byte	0x1
 1936 00e8 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 49


 1937 00ec 01       		.byte	0x1
 1938 00ed 39       		.byte	0x39
 1939 00ee 05010000 		.4byte	0x105
 1940 00f2 0A       		.uleb128 0xa
 1941 00f3 70000000 		.4byte	.LASF20
 1942 00f7 00       		.byte	0
 1943 00f8 0A       		.uleb128 0xa
 1944 00f9 B6020000 		.4byte	.LASF21
 1945 00fd 01       		.byte	0x1
 1946 00fe 0A       		.uleb128 0xa
 1947 00ff 15040000 		.4byte	.LASF22
 1948 0103 02       		.byte	0x2
 1949 0104 00       		.byte	0
 1950 0105 0B       		.uleb128 0xb
 1951 0106 B4060000 		.4byte	.LASF106
 1952 010a 01       		.byte	0x1
 1953 010b 3701     		.2byte	0x137
 1954 010d 00000000 		.4byte	.LFB69
 1955 0111 0C000000 		.4byte	.LFE69-.LFB69
 1956 0115 01       		.uleb128 0x1
 1957 0116 9C       		.byte	0x9c
 1958 0117 0C       		.uleb128 0xc
 1959 0118 83000000 		.4byte	.LASF25
 1960 011c 01       		.byte	0x1
 1961 011d 77       		.byte	0x77
 1962 011e 00000000 		.4byte	.LFB64
 1963 0122 9C000000 		.4byte	.LFE64-.LFB64
 1964 0126 01       		.uleb128 0x1
 1965 0127 9C       		.byte	0x9c
 1966 0128 86010000 		.4byte	0x186
 1967 012c 0D       		.uleb128 0xd
 1968 012d 13000000 		.4byte	.LASF23
 1969 0131 01       		.byte	0x1
 1970 0132 78       		.byte	0x78
 1971 0133 73000000 		.4byte	0x73
 1972 0137 00000000 		.4byte	.LLST0
 1973 013b 0D       		.uleb128 0xd
 1974 013c 50050000 		.4byte	.LASF24
 1975 0140 01       		.byte	0x1
 1976 0141 79       		.byte	0x79
 1977 0142 B1000000 		.4byte	0xb1
 1978 0146 1F000000 		.4byte	.LLST1
 1979 014a 0E       		.uleb128 0xe
 1980 014b 00000000 		.4byte	.Ldebug_ranges0+0
 1981 014f 61010000 		.4byte	0x161
 1982 0153 0F       		.uleb128 0xf
 1983 0154 7800     		.ascii	"x\000"
 1984 0156 01       		.byte	0x1
 1985 0157 91       		.byte	0x91
 1986 0158 73000000 		.4byte	0x73
 1987 015c 49000000 		.4byte	.LLST2
 1988 0160 00       		.byte	0
 1989 0161 10       		.uleb128 0x10
 1990 0162 14000000 		.4byte	.LVL1
 1991 0166 730B0000 		.4byte	0xb73
 1992 016a 10       		.uleb128 0x10
 1993 016b 1C000000 		.4byte	.LVL2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 50


 1994 016f 7E0B0000 		.4byte	0xb7e
 1995 0173 10       		.uleb128 0x10
 1996 0174 36000000 		.4byte	.LVL3
 1997 0178 890B0000 		.4byte	0xb89
 1998 017c 10       		.uleb128 0x10
 1999 017d 4A000000 		.4byte	.LVL4
 2000 0181 890B0000 		.4byte	0xb89
 2001 0185 00       		.byte	0
 2002 0186 0C       		.uleb128 0xc
 2003 0187 83040000 		.4byte	.LASF26
 2004 018b 01       		.byte	0x1
 2005 018c A9       		.byte	0xa9
 2006 018d 00000000 		.4byte	.LFB65
 2007 0191 28010000 		.4byte	.LFE65-.LFB65
 2008 0195 01       		.uleb128 0x1
 2009 0196 9C       		.byte	0x9c
 2010 0197 F7010000 		.4byte	0x1f7
 2011 019b 11       		.uleb128 0x11
 2012 019c 5A000000 		.4byte	.LVL14
 2013 01a0 940B0000 		.4byte	0xb94
 2014 01a4 AE010000 		.4byte	0x1ae
 2015 01a8 12       		.uleb128 0x12
 2016 01a9 01       		.uleb128 0x1
 2017 01aa 50       		.byte	0x50
 2018 01ab 01       		.uleb128 0x1
 2019 01ac 31       		.byte	0x31
 2020 01ad 00       		.byte	0
 2021 01ae 11       		.uleb128 0x11
 2022 01af 7C000000 		.4byte	.LVL15
 2023 01b3 940B0000 		.4byte	0xb94
 2024 01b7 C1010000 		.4byte	0x1c1
 2025 01bb 12       		.uleb128 0x12
 2026 01bc 01       		.uleb128 0x1
 2027 01bd 50       		.byte	0x50
 2028 01be 01       		.uleb128 0x1
 2029 01bf 30       		.byte	0x30
 2030 01c0 00       		.byte	0
 2031 01c1 11       		.uleb128 0x11
 2032 01c2 AC000000 		.4byte	.LVL16
 2033 01c6 940B0000 		.4byte	0xb94
 2034 01ca D4010000 		.4byte	0x1d4
 2035 01ce 12       		.uleb128 0x12
 2036 01cf 01       		.uleb128 0x1
 2037 01d0 50       		.byte	0x50
 2038 01d1 01       		.uleb128 0x1
 2039 01d2 31       		.byte	0x31
 2040 01d3 00       		.byte	0
 2041 01d4 11       		.uleb128 0x11
 2042 01d5 C4000000 		.4byte	.LVL17
 2043 01d9 940B0000 		.4byte	0xb94
 2044 01dd E7010000 		.4byte	0x1e7
 2045 01e1 12       		.uleb128 0x12
 2046 01e2 01       		.uleb128 0x1
 2047 01e3 50       		.byte	0x50
 2048 01e4 01       		.uleb128 0x1
 2049 01e5 30       		.byte	0x30
 2050 01e6 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 51


 2051 01e7 13       		.uleb128 0x13
 2052 01e8 FE000000 		.4byte	.LVL18
 2053 01ec 940B0000 		.4byte	0xb94
 2054 01f0 12       		.uleb128 0x12
 2055 01f1 01       		.uleb128 0x1
 2056 01f2 50       		.byte	0x50
 2057 01f3 01       		.uleb128 0x1
 2058 01f4 30       		.byte	0x30
 2059 01f5 00       		.byte	0
 2060 01f6 00       		.byte	0
 2061 01f7 14       		.uleb128 0x14
 2062 01f8 9A020000 		.4byte	.LASF27
 2063 01fc 01       		.byte	0x1
 2064 01fd E3       		.byte	0xe3
 2065 01fe 00000000 		.4byte	.LFB66
 2066 0202 78000000 		.4byte	.LFE66-.LFB66
 2067 0206 01       		.uleb128 0x1
 2068 0207 9C       		.byte	0x9c
 2069 0208 73020000 		.4byte	0x273
 2070 020c 15       		.uleb128 0x15
 2071 020d 20000000 		.4byte	.LBB4
 2072 0211 58000000 		.4byte	.LBE4-.LBB4
 2073 0215 0D       		.uleb128 0xd
 2074 0216 B4000000 		.4byte	.LASF28
 2075 021a 01       		.byte	0x1
 2076 021b F2       		.byte	0xf2
 2077 021c 81000000 		.4byte	0x81
 2078 0220 68000000 		.4byte	.LLST3
 2079 0224 11       		.uleb128 0x11
 2080 0225 2C000000 		.4byte	.LVL19
 2081 0229 940B0000 		.4byte	0xb94
 2082 022d 37020000 		.4byte	0x237
 2083 0231 12       		.uleb128 0x12
 2084 0232 01       		.uleb128 0x1
 2085 0233 50       		.byte	0x50
 2086 0234 01       		.uleb128 0x1
 2087 0235 30       		.byte	0x30
 2088 0236 00       		.byte	0
 2089 0237 10       		.uleb128 0x10
 2090 0238 3C000000 		.4byte	.LVL20
 2091 023c 9F0B0000 		.4byte	0xb9f
 2092 0240 11       		.uleb128 0x11
 2093 0241 5A000000 		.4byte	.LVL26
 2094 0245 AA0B0000 		.4byte	0xbaa
 2095 0249 54020000 		.4byte	0x254
 2096 024d 12       		.uleb128 0x12
 2097 024e 01       		.uleb128 0x1
 2098 024f 50       		.byte	0x50
 2099 0250 02       		.uleb128 0x2
 2100 0251 74       		.byte	0x74
 2101 0252 00       		.sleb128 0
 2102 0253 00       		.byte	0
 2103 0254 11       		.uleb128 0x11
 2104 0255 62000000 		.4byte	.LVL27
 2105 0259 B50B0000 		.4byte	0xbb5
 2106 025d 68020000 		.4byte	0x268
 2107 0261 12       		.uleb128 0x12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 52


 2108 0262 01       		.uleb128 0x1
 2109 0263 50       		.byte	0x50
 2110 0264 02       		.uleb128 0x2
 2111 0265 74       		.byte	0x74
 2112 0266 7F       		.sleb128 -1
 2113 0267 00       		.byte	0
 2114 0268 10       		.uleb128 0x10
 2115 0269 66000000 		.4byte	.LVL28
 2116 026d C00B0000 		.4byte	0xbc0
 2117 0271 00       		.byte	0
 2118 0272 00       		.byte	0
 2119 0273 16       		.uleb128 0x16
 2120 0274 65060000 		.4byte	.LASF29
 2121 0278 01       		.byte	0x1
 2122 0279 0A01     		.2byte	0x10a
 2123 027b 00000000 		.4byte	.LFB67
 2124 027f 48000000 		.4byte	.LFE67-.LFB67
 2125 0283 01       		.uleb128 0x1
 2126 0284 9C       		.byte	0x9c
 2127 0285 C4020000 		.4byte	0x2c4
 2128 0289 11       		.uleb128 0x11
 2129 028a 14000000 		.4byte	.LVL30
 2130 028e CB0B0000 		.4byte	0xbcb
 2131 0292 9D020000 		.4byte	0x29d
 2132 0296 12       		.uleb128 0x12
 2133 0297 01       		.uleb128 0x1
 2134 0298 50       		.byte	0x50
 2135 0299 02       		.uleb128 0x2
 2136 029a 08       		.byte	0x8
 2137 029b 34       		.byte	0x34
 2138 029c 00       		.byte	0
 2139 029d 11       		.uleb128 0x11
 2140 029e 1A000000 		.4byte	.LVL31
 2141 02a2 D60B0000 		.4byte	0xbd6
 2142 02a6 B1020000 		.4byte	0x2b1
 2143 02aa 12       		.uleb128 0x12
 2144 02ab 01       		.uleb128 0x1
 2145 02ac 50       		.byte	0x50
 2146 02ad 02       		.uleb128 0x2
 2147 02ae 08       		.byte	0x8
 2148 02af 33       		.byte	0x33
 2149 02b0 00       		.byte	0
 2150 02b1 10       		.uleb128 0x10
 2151 02b2 1E000000 		.4byte	.LVL32
 2152 02b6 E10B0000 		.4byte	0xbe1
 2153 02ba 10       		.uleb128 0x10
 2154 02bb 36000000 		.4byte	.LVL33
 2155 02bf 730B0000 		.4byte	0xb73
 2156 02c3 00       		.byte	0
 2157 02c4 16       		.uleb128 0x16
 2158 02c5 7E020000 		.4byte	.LASF30
 2159 02c9 01       		.byte	0x1
 2160 02ca 2701     		.2byte	0x127
 2161 02cc 00000000 		.4byte	.LFB68
 2162 02d0 3C000000 		.4byte	.LFE68-.LFB68
 2163 02d4 01       		.uleb128 0x1
 2164 02d5 9C       		.byte	0x9c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 53


 2165 02d6 0E030000 		.4byte	0x30e
 2166 02da 11       		.uleb128 0x11
 2167 02db 16000000 		.4byte	.LVL34
 2168 02df CB0B0000 		.4byte	0xbcb
 2169 02e3 EF020000 		.4byte	0x2ef
 2170 02e7 12       		.uleb128 0x12
 2171 02e8 01       		.uleb128 0x1
 2172 02e9 50       		.byte	0x50
 2173 02ea 03       		.uleb128 0x3
 2174 02eb 0A       		.byte	0xa
 2175 02ec 3E03     		.2byte	0x33e
 2176 02ee 00       		.byte	0
 2177 02ef 11       		.uleb128 0x11
 2178 02f0 1E000000 		.4byte	.LVL35
 2179 02f4 D60B0000 		.4byte	0xbd6
 2180 02f8 04030000 		.4byte	0x304
 2181 02fc 12       		.uleb128 0x12
 2182 02fd 01       		.uleb128 0x1
 2183 02fe 50       		.byte	0x50
 2184 02ff 03       		.uleb128 0x3
 2185 0300 0A       		.byte	0xa
 2186 0301 3D03     		.2byte	0x33d
 2187 0303 00       		.byte	0
 2188 0304 10       		.uleb128 0x10
 2189 0305 22000000 		.4byte	.LVL36
 2190 0309 E10B0000 		.4byte	0xbe1
 2191 030d 00       		.byte	0
 2192 030e 17       		.uleb128 0x17
 2193 030f 3E020000 		.4byte	.LASF31
 2194 0313 01       		.byte	0x1
 2195 0314 DB01     		.2byte	0x1db
 2196 0316 00000000 		.4byte	.LFB71
 2197 031a 94000000 		.4byte	.LFE71-.LFB71
 2198 031e 01       		.uleb128 0x1
 2199 031f 9C       		.byte	0x9c
 2200 0320 CA030000 		.4byte	0x3ca
 2201 0324 11       		.uleb128 0x11
 2202 0325 1A000000 		.4byte	.LVL37
 2203 0329 EC0B0000 		.4byte	0xbec
 2204 032d 37030000 		.4byte	0x337
 2205 0331 12       		.uleb128 0x12
 2206 0332 01       		.uleb128 0x1
 2207 0333 50       		.byte	0x50
 2208 0334 01       		.uleb128 0x1
 2209 0335 31       		.byte	0x31
 2210 0336 00       		.byte	0
 2211 0337 10       		.uleb128 0x10
 2212 0338 1E000000 		.4byte	.LVL38
 2213 033c F70B0000 		.4byte	0xbf7
 2214 0340 10       		.uleb128 0x10
 2215 0341 28000000 		.4byte	.LVL39
 2216 0345 020C0000 		.4byte	0xc02
 2217 0349 10       		.uleb128 0x10
 2218 034a 2C000000 		.4byte	.LVL40
 2219 034e F70B0000 		.4byte	0xbf7
 2220 0352 10       		.uleb128 0x10
 2221 0353 36000000 		.4byte	.LVL41
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 54


 2222 0357 0D0C0000 		.4byte	0xc0d
 2223 035b 11       		.uleb128 0x11
 2224 035c 48000000 		.4byte	.LVL42
 2225 0360 020C0000 		.4byte	0xc02
 2226 0364 6E030000 		.4byte	0x36e
 2227 0368 12       		.uleb128 0x12
 2228 0369 01       		.uleb128 0x1
 2229 036a 50       		.byte	0x50
 2230 036b 01       		.uleb128 0x1
 2231 036c 31       		.byte	0x31
 2232 036d 00       		.byte	0
 2233 036e 10       		.uleb128 0x10
 2234 036f 4C000000 		.4byte	.LVL43
 2235 0373 180C0000 		.4byte	0xc18
 2236 0377 10       		.uleb128 0x10
 2237 0378 56000000 		.4byte	.LVL44
 2238 037c EC0B0000 		.4byte	0xbec
 2239 0380 10       		.uleb128 0x10
 2240 0381 5A000000 		.4byte	.LVL45
 2241 0385 180C0000 		.4byte	0xc18
 2242 0389 10       		.uleb128 0x10
 2243 038a 64000000 		.4byte	.LVL46
 2244 038e 0D0C0000 		.4byte	0xc0d
 2245 0392 11       		.uleb128 0x11
 2246 0393 6C000000 		.4byte	.LVL47
 2247 0397 0D0C0000 		.4byte	0xc0d
 2248 039b A5030000 		.4byte	0x3a5
 2249 039f 12       		.uleb128 0x12
 2250 03a0 01       		.uleb128 0x1
 2251 03a1 50       		.byte	0x50
 2252 03a2 01       		.uleb128 0x1
 2253 03a3 31       		.byte	0x31
 2254 03a4 00       		.byte	0
 2255 03a5 10       		.uleb128 0x10
 2256 03a6 70000000 		.4byte	.LVL48
 2257 03aa 230C0000 		.4byte	0xc23
 2258 03ae 10       		.uleb128 0x10
 2259 03af 7A000000 		.4byte	.LVL49
 2260 03b3 EC0B0000 		.4byte	0xbec
 2261 03b7 10       		.uleb128 0x10
 2262 03b8 7E000000 		.4byte	.LVL50
 2263 03bc 230C0000 		.4byte	0xc23
 2264 03c0 10       		.uleb128 0x10
 2265 03c1 88000000 		.4byte	.LVL51
 2266 03c5 020C0000 		.4byte	0xc02
 2267 03c9 00       		.byte	0
 2268 03ca 17       		.uleb128 0x17
 2269 03cb ED040000 		.4byte	.LASF32
 2270 03cf 01       		.byte	0x1
 2271 03d0 F701     		.2byte	0x1f7
 2272 03d2 00000000 		.4byte	.LFB72
 2273 03d6 64030000 		.4byte	.LFE72-.LFB72
 2274 03da 01       		.uleb128 0x1
 2275 03db 9C       		.byte	0x9c
 2276 03dc BC050000 		.4byte	0x5bc
 2277 03e0 10       		.uleb128 0x10
 2278 03e1 06000000 		.4byte	.LVL52
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 55


 2279 03e5 2E0C0000 		.4byte	0xc2e
 2280 03e9 10       		.uleb128 0x10
 2281 03ea A8000000 		.4byte	.LVL53
 2282 03ee 2E0C0000 		.4byte	0xc2e
 2283 03f2 10       		.uleb128 0x10
 2284 03f3 B0000000 		.4byte	.LVL54
 2285 03f7 390C0000 		.4byte	0xc39
 2286 03fb 10       		.uleb128 0x10
 2287 03fc B4000000 		.4byte	.LVL55
 2288 0400 2E0C0000 		.4byte	0xc2e
 2289 0404 10       		.uleb128 0x10
 2290 0405 BC000000 		.4byte	.LVL56
 2291 0409 390C0000 		.4byte	0xc39
 2292 040d 10       		.uleb128 0x10
 2293 040e C0000000 		.4byte	.LVL57
 2294 0412 2E0C0000 		.4byte	0xc2e
 2295 0416 10       		.uleb128 0x10
 2296 0417 C8000000 		.4byte	.LVL58
 2297 041b 390C0000 		.4byte	0xc39
 2298 041f 10       		.uleb128 0x10
 2299 0420 CC000000 		.4byte	.LVL59
 2300 0424 2E0C0000 		.4byte	0xc2e
 2301 0428 11       		.uleb128 0x11
 2302 0429 D6000000 		.4byte	.LVL60
 2303 042d 440C0000 		.4byte	0xc44
 2304 0431 3F040000 		.4byte	0x43f
 2305 0435 12       		.uleb128 0x12
 2306 0436 01       		.uleb128 0x1
 2307 0437 50       		.byte	0x50
 2308 0438 05       		.uleb128 0x5
 2309 0439 03       		.byte	0x3
 2310 043a 00000000 		.4byte	.LC0
 2311 043e 00       		.byte	0
 2312 043f 10       		.uleb128 0x10
 2313 0440 DA000000 		.4byte	.LVL61
 2314 0444 2E0C0000 		.4byte	0xc2e
 2315 0448 10       		.uleb128 0x10
 2316 0449 F4000000 		.4byte	.LVL62
 2317 044d 4F0C0000 		.4byte	0xc4f
 2318 0451 10       		.uleb128 0x10
 2319 0452 F8000000 		.4byte	.LVL63
 2320 0456 2E0C0000 		.4byte	0xc2e
 2321 045a 10       		.uleb128 0x10
 2322 045b 22010000 		.4byte	.LVL64
 2323 045f 4F0C0000 		.4byte	0xc4f
 2324 0463 10       		.uleb128 0x10
 2325 0464 26010000 		.4byte	.LVL65
 2326 0468 2E0C0000 		.4byte	0xc2e
 2327 046c 10       		.uleb128 0x10
 2328 046d 5A010000 		.4byte	.LVL66
 2329 0471 4F0C0000 		.4byte	0xc4f
 2330 0475 10       		.uleb128 0x10
 2331 0476 5E010000 		.4byte	.LVL67
 2332 047a 2E0C0000 		.4byte	0xc2e
 2333 047e 10       		.uleb128 0x10
 2334 047f 66010000 		.4byte	.LVL68
 2335 0483 390C0000 		.4byte	0xc39
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 56


 2336 0487 10       		.uleb128 0x10
 2337 0488 6A010000 		.4byte	.LVL69
 2338 048c 2E0C0000 		.4byte	0xc2e
 2339 0490 11       		.uleb128 0x11
 2340 0491 74010000 		.4byte	.LVL70
 2341 0495 440C0000 		.4byte	0xc44
 2342 0499 A7040000 		.4byte	0x4a7
 2343 049d 12       		.uleb128 0x12
 2344 049e 01       		.uleb128 0x1
 2345 049f 50       		.byte	0x50
 2346 04a0 05       		.uleb128 0x5
 2347 04a1 03       		.byte	0x3
 2348 04a2 10000000 		.4byte	.LC1
 2349 04a6 00       		.byte	0
 2350 04a7 10       		.uleb128 0x10
 2351 04a8 84010000 		.4byte	.LVL71
 2352 04ac 2E0C0000 		.4byte	0xc2e
 2353 04b0 11       		.uleb128 0x11
 2354 04b1 8E010000 		.4byte	.LVL72
 2355 04b5 440C0000 		.4byte	0xc44
 2356 04b9 C7040000 		.4byte	0x4c7
 2357 04bd 12       		.uleb128 0x12
 2358 04be 01       		.uleb128 0x1
 2359 04bf 50       		.byte	0x50
 2360 04c0 05       		.uleb128 0x5
 2361 04c1 03       		.byte	0x3
 2362 04c2 1C000000 		.4byte	.LC2
 2363 04c6 00       		.byte	0
 2364 04c7 10       		.uleb128 0x10
 2365 04c8 92010000 		.4byte	.LVL73
 2366 04cc 2E0C0000 		.4byte	0xc2e
 2367 04d0 10       		.uleb128 0x10
 2368 04d1 9A010000 		.4byte	.LVL74
 2369 04d5 390C0000 		.4byte	0xc39
 2370 04d9 10       		.uleb128 0x10
 2371 04da BC010000 		.4byte	.LVL75
 2372 04de 2E0C0000 		.4byte	0xc2e
 2373 04e2 10       		.uleb128 0x10
 2374 04e3 D6010000 		.4byte	.LVL76
 2375 04e7 4F0C0000 		.4byte	0xc4f
 2376 04eb 10       		.uleb128 0x10
 2377 04ec DA010000 		.4byte	.LVL77
 2378 04f0 2E0C0000 		.4byte	0xc2e
 2379 04f4 10       		.uleb128 0x10
 2380 04f5 06020000 		.4byte	.LVL78
 2381 04f9 4F0C0000 		.4byte	0xc4f
 2382 04fd 10       		.uleb128 0x10
 2383 04fe 0A020000 		.4byte	.LVL79
 2384 0502 2E0C0000 		.4byte	0xc2e
 2385 0506 10       		.uleb128 0x10
 2386 0507 40020000 		.4byte	.LVL80
 2387 050b 4F0C0000 		.4byte	0xc4f
 2388 050f 10       		.uleb128 0x10
 2389 0510 44020000 		.4byte	.LVL81
 2390 0514 390C0000 		.4byte	0xc39
 2391 0518 10       		.uleb128 0x10
 2392 0519 48020000 		.4byte	.LVL82
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 57


 2393 051d 2E0C0000 		.4byte	0xc2e
 2394 0521 10       		.uleb128 0x10
 2395 0522 50020000 		.4byte	.LVL83
 2396 0526 2E0C0000 		.4byte	0xc2e
 2397 052a 11       		.uleb128 0x11
 2398 052b 5A020000 		.4byte	.LVL84
 2399 052f 440C0000 		.4byte	0xc44
 2400 0533 41050000 		.4byte	0x541
 2401 0537 12       		.uleb128 0x12
 2402 0538 01       		.uleb128 0x1
 2403 0539 50       		.byte	0x50
 2404 053a 05       		.uleb128 0x5
 2405 053b 03       		.byte	0x3
 2406 053c 24000000 		.4byte	.LC3
 2407 0540 00       		.byte	0
 2408 0541 10       		.uleb128 0x10
 2409 0542 5E020000 		.4byte	.LVL85
 2410 0546 2E0C0000 		.4byte	0xc2e
 2411 054a 10       		.uleb128 0x10
 2412 054b 7A020000 		.4byte	.LVL86
 2413 054f 4F0C0000 		.4byte	0xc4f
 2414 0553 10       		.uleb128 0x10
 2415 0554 7E020000 		.4byte	.LVL87
 2416 0558 2E0C0000 		.4byte	0xc2e
 2417 055c 10       		.uleb128 0x10
 2418 055d AC020000 		.4byte	.LVL88
 2419 0561 4F0C0000 		.4byte	0xc4f
 2420 0565 10       		.uleb128 0x10
 2421 0566 B0020000 		.4byte	.LVL89
 2422 056a 2E0C0000 		.4byte	0xc2e
 2423 056e 10       		.uleb128 0x10
 2424 056f E6020000 		.4byte	.LVL90
 2425 0573 4F0C0000 		.4byte	0xc4f
 2426 0577 10       		.uleb128 0x10
 2427 0578 EA020000 		.4byte	.LVL91
 2428 057c 2E0C0000 		.4byte	0xc2e
 2429 0580 10       		.uleb128 0x10
 2430 0581 F2020000 		.4byte	.LVL92
 2431 0585 390C0000 		.4byte	0xc39
 2432 0589 10       		.uleb128 0x10
 2433 058a F6020000 		.4byte	.LVL93
 2434 058e 2E0C0000 		.4byte	0xc2e
 2435 0592 11       		.uleb128 0x11
 2436 0593 00030000 		.4byte	.LVL94
 2437 0597 440C0000 		.4byte	0xc44
 2438 059b A9050000 		.4byte	0x5a9
 2439 059f 12       		.uleb128 0x12
 2440 05a0 01       		.uleb128 0x1
 2441 05a1 50       		.byte	0x50
 2442 05a2 05       		.uleb128 0x5
 2443 05a3 03       		.byte	0x3
 2444 05a4 2C000000 		.4byte	.LC4
 2445 05a8 00       		.byte	0
 2446 05a9 10       		.uleb128 0x10
 2447 05aa 04030000 		.4byte	.LVL95
 2448 05ae 2E0C0000 		.4byte	0xc2e
 2449 05b2 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 58


 2450 05b3 30030000 		.4byte	.LVL96
 2451 05b7 4F0C0000 		.4byte	0xc4f
 2452 05bb 00       		.byte	0
 2453 05bc 18       		.uleb128 0x18
 2454 05bd E5000000 		.4byte	.LASF107
 2455 05c1 01       		.byte	0x1
 2456 05c2 4601     		.2byte	0x146
 2457 05c4 73000000 		.4byte	0x73
 2458 05c8 00000000 		.4byte	.LFB70
 2459 05cc AC020000 		.4byte	.LFE70-.LFB70
 2460 05d0 01       		.uleb128 0x1
 2461 05d1 9C       		.byte	0x9c
 2462 05d2 0E090000 		.4byte	0x90e
 2463 05d6 19       		.uleb128 0x19
 2464 05d7 6E000000 		.4byte	.LBB5
 2465 05db C2010000 		.4byte	.LBE5-.LBB5
 2466 05df 9D070000 		.4byte	0x79d
 2467 05e3 1A       		.uleb128 0x1a
 2468 05e4 95010000 		.4byte	.LASF33
 2469 05e8 01       		.byte	0x1
 2470 05e9 7201     		.2byte	0x172
 2471 05eb 73000000 		.4byte	0x73
 2472 05ef 7B000000 		.4byte	.LLST4
 2473 05f3 1A       		.uleb128 0x1a
 2474 05f4 A5000000 		.4byte	.LASF34
 2475 05f8 01       		.byte	0x1
 2476 05f9 7401     		.2byte	0x174
 2477 05fb B1000000 		.4byte	0xb1
 2478 05ff C8000000 		.4byte	.LLST5
 2479 0603 19       		.uleb128 0x19
 2480 0604 9E000000 		.4byte	.LBB6
 2481 0608 18000000 		.4byte	.LBE6-.LBB6
 2482 060c 21060000 		.4byte	0x621
 2483 0610 1B       		.uleb128 0x1b
 2484 0611 5F5F7800 		.ascii	"__x\000"
 2485 0615 01       		.byte	0x1
 2486 0616 8001     		.2byte	0x180
 2487 0618 B1000000 		.4byte	0xb1
 2488 061c 35010000 		.4byte	.LLST6
 2489 0620 00       		.byte	0
 2490 0621 10       		.uleb128 0x10
 2491 0622 7A000000 		.4byte	.LVL113
 2492 0626 2E0C0000 		.4byte	0xc2e
 2493 062a 11       		.uleb128 0x11
 2494 062b 84000000 		.4byte	.LVL114
 2495 062f 440C0000 		.4byte	0xc44
 2496 0633 41060000 		.4byte	0x641
 2497 0637 12       		.uleb128 0x12
 2498 0638 01       		.uleb128 0x1
 2499 0639 50       		.byte	0x50
 2500 063a 05       		.uleb128 0x5
 2501 063b 03       		.byte	0x3
 2502 063c 38000000 		.4byte	.LC5
 2503 0640 00       		.byte	0
 2504 0641 10       		.uleb128 0x10
 2505 0642 8C000000 		.4byte	.LVL116
 2506 0646 0E030000 		.4byte	0x30e
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 59


 2507 064a 10       		.uleb128 0x10
 2508 064b 90000000 		.4byte	.LVL117
 2509 064f 5A0C0000 		.4byte	0xc5a
 2510 0653 10       		.uleb128 0x10
 2511 0654 98000000 		.4byte	.LVL118
 2512 0658 650C0000 		.4byte	0xc65
 2513 065c 10       		.uleb128 0x10
 2514 065d C4000000 		.4byte	.LVL121
 2515 0661 730B0000 		.4byte	0xb73
 2516 0665 10       		.uleb128 0x10
 2517 0666 C8000000 		.4byte	.LVL122
 2518 066a 2E0C0000 		.4byte	0xc2e
 2519 066e 11       		.uleb128 0x11
 2520 066f D2000000 		.4byte	.LVL123
 2521 0673 4F0C0000 		.4byte	0xc4f
 2522 0677 82060000 		.4byte	0x682
 2523 067b 12       		.uleb128 0x12
 2524 067c 01       		.uleb128 0x1
 2525 067d 50       		.byte	0x50
 2526 067e 02       		.uleb128 0x2
 2527 067f 75       		.byte	0x75
 2528 0680 00       		.sleb128 0
 2529 0681 00       		.byte	0
 2530 0682 10       		.uleb128 0x10
 2531 0683 D6000000 		.4byte	.LVL124
 2532 0687 2E0C0000 		.4byte	0xc2e
 2533 068b 10       		.uleb128 0x10
 2534 068c DE000000 		.4byte	.LVL125
 2535 0690 390C0000 		.4byte	0xc39
 2536 0694 10       		.uleb128 0x10
 2537 0695 E2000000 		.4byte	.LVL126
 2538 0699 2E0C0000 		.4byte	0xc2e
 2539 069d 11       		.uleb128 0x11
 2540 069e EC000000 		.4byte	.LVL127
 2541 06a2 440C0000 		.4byte	0xc44
 2542 06a6 B4060000 		.4byte	0x6b4
 2543 06aa 12       		.uleb128 0x12
 2544 06ab 01       		.uleb128 0x1
 2545 06ac 50       		.byte	0x50
 2546 06ad 05       		.uleb128 0x5
 2547 06ae 03       		.byte	0x3
 2548 06af 70000000 		.4byte	.LC6
 2549 06b3 00       		.byte	0
 2550 06b4 10       		.uleb128 0x10
 2551 06b5 F0000000 		.4byte	.LVL128
 2552 06b9 2E0C0000 		.4byte	0xc2e
 2553 06bd 10       		.uleb128 0x10
 2554 06be F8000000 		.4byte	.LVL129
 2555 06c2 390C0000 		.4byte	0xc39
 2556 06c6 11       		.uleb128 0x11
 2557 06c7 1C010000 		.4byte	.LVL132
 2558 06cb 4F0C0000 		.4byte	0xc4f
 2559 06cf DA060000 		.4byte	0x6da
 2560 06d3 12       		.uleb128 0x12
 2561 06d4 01       		.uleb128 0x1
 2562 06d5 50       		.byte	0x50
 2563 06d6 02       		.uleb128 0x2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 60


 2564 06d7 75       		.byte	0x75
 2565 06d8 00       		.sleb128 0
 2566 06d9 00       		.byte	0
 2567 06da 11       		.uleb128 0x11
 2568 06db 42010000 		.4byte	.LVL136
 2569 06df 4F0C0000 		.4byte	0xc4f
 2570 06e3 EE060000 		.4byte	0x6ee
 2571 06e7 12       		.uleb128 0x12
 2572 06e8 01       		.uleb128 0x1
 2573 06e9 50       		.byte	0x50
 2574 06ea 02       		.uleb128 0x2
 2575 06eb 75       		.byte	0x75
 2576 06ec 00       		.sleb128 0
 2577 06ed 00       		.byte	0
 2578 06ee 11       		.uleb128 0x11
 2579 06ef 5E010000 		.4byte	.LVL139
 2580 06f3 4F0C0000 		.4byte	0xc4f
 2581 06f7 02070000 		.4byte	0x702
 2582 06fb 12       		.uleb128 0x12
 2583 06fc 01       		.uleb128 0x1
 2584 06fd 50       		.byte	0x50
 2585 06fe 02       		.uleb128 0x2
 2586 06ff 75       		.byte	0x75
 2587 0700 00       		.sleb128 0
 2588 0701 00       		.byte	0
 2589 0702 10       		.uleb128 0x10
 2590 0703 72010000 		.4byte	.LVL142
 2591 0707 2E0C0000 		.4byte	0xc2e
 2592 070b 10       		.uleb128 0x10
 2593 070c 7A010000 		.4byte	.LVL143
 2594 0710 390C0000 		.4byte	0xc39
 2595 0714 10       		.uleb128 0x10
 2596 0715 7E010000 		.4byte	.LVL144
 2597 0719 2E0C0000 		.4byte	0xc2e
 2598 071d 11       		.uleb128 0x11
 2599 071e 88010000 		.4byte	.LVL145
 2600 0722 440C0000 		.4byte	0xc44
 2601 0726 34070000 		.4byte	0x734
 2602 072a 12       		.uleb128 0x12
 2603 072b 01       		.uleb128 0x1
 2604 072c 50       		.byte	0x50
 2605 072d 05       		.uleb128 0x5
 2606 072e 03       		.byte	0x3
 2607 072f 98000000 		.4byte	.LC7
 2608 0733 00       		.byte	0
 2609 0734 10       		.uleb128 0x10
 2610 0735 B2010000 		.4byte	.LVL147
 2611 0739 5A0C0000 		.4byte	0xc5a
 2612 073d 10       		.uleb128 0x10
 2613 073e BA010000 		.4byte	.LVL148
 2614 0742 650C0000 		.4byte	0xc65
 2615 0746 10       		.uleb128 0x10
 2616 0747 C8010000 		.4byte	.LVL151
 2617 074b 2E0C0000 		.4byte	0xc2e
 2618 074f 10       		.uleb128 0x10
 2619 0750 D4010000 		.4byte	.LVL152
 2620 0754 4F0C0000 		.4byte	0xc4f
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 61


 2621 0758 10       		.uleb128 0x10
 2622 0759 EE010000 		.4byte	.LVL154
 2623 075d 2E0C0000 		.4byte	0xc2e
 2624 0761 11       		.uleb128 0x11
 2625 0762 F8010000 		.4byte	.LVL155
 2626 0766 440C0000 		.4byte	0xc44
 2627 076a 78070000 		.4byte	0x778
 2628 076e 12       		.uleb128 0x12
 2629 076f 01       		.uleb128 0x1
 2630 0770 50       		.byte	0x50
 2631 0771 05       		.uleb128 0x5
 2632 0772 03       		.byte	0x3
 2633 0773 A8000000 		.4byte	.LC8
 2634 0777 00       		.byte	0
 2635 0778 10       		.uleb128 0x10
 2636 0779 14020000 		.4byte	.LVL156
 2637 077d 700C0000 		.4byte	0xc70
 2638 0781 10       		.uleb128 0x10
 2639 0782 24020000 		.4byte	.LVL157
 2640 0786 7B0C0000 		.4byte	0xc7b
 2641 078a 10       		.uleb128 0x10
 2642 078b 28020000 		.4byte	.LVL158
 2643 078f 2E0C0000 		.4byte	0xc2e
 2644 0793 10       		.uleb128 0x10
 2645 0794 30020000 		.4byte	.LVL159
 2646 0798 390C0000 		.4byte	0xc39
 2647 079c 00       		.byte	0
 2648 079d 19       		.uleb128 0x19
 2649 079e 44020000 		.4byte	.LBB7
 2650 07a2 68000000 		.4byte	.LBE7-.LBB7
 2651 07a6 E2070000 		.4byte	0x7e2
 2652 07aa 1A       		.uleb128 0x1a
 2653 07ab A5000000 		.4byte	.LASF34
 2654 07af 01       		.byte	0x1
 2655 07b0 D101     		.2byte	0x1d1
 2656 07b2 B1000000 		.4byte	0xb1
 2657 07b6 53010000 		.4byte	.LLST7
 2658 07ba 19       		.uleb128 0x19
 2659 07bb 48020000 		.4byte	.LBB8
 2660 07bf 12000000 		.4byte	.LBE8-.LBB8
 2661 07c3 D8070000 		.4byte	0x7d8
 2662 07c7 1B       		.uleb128 0x1b
 2663 07c8 5F5F7800 		.ascii	"__x\000"
 2664 07cc 01       		.byte	0x1
 2665 07cd D301     		.2byte	0x1d3
 2666 07cf B1000000 		.4byte	0xb1
 2667 07d3 53010000 		.4byte	.LLST7
 2668 07d7 00       		.byte	0
 2669 07d8 10       		.uleb128 0x10
 2670 07d9 48020000 		.4byte	.LVL164
 2671 07dd 650C0000 		.4byte	0xc65
 2672 07e1 00       		.byte	0
 2673 07e2 11       		.uleb128 0x11
 2674 07e3 0A000000 		.4byte	.LVL97
 2675 07e7 860C0000 		.4byte	0xc86
 2676 07eb F9070000 		.4byte	0x7f9
 2677 07ef 12       		.uleb128 0x12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 62


 2678 07f0 01       		.uleb128 0x1
 2679 07f1 50       		.byte	0x50
 2680 07f2 05       		.uleb128 0x5
 2681 07f3 03       		.byte	0x3
 2682 07f4 00000000 		.4byte	TimerInterruptHandler
 2683 07f8 00       		.byte	0
 2684 07f9 11       		.uleb128 0x11
 2685 07fa 10000000 		.4byte	.LVL98
 2686 07fe 910C0000 		.4byte	0xc91
 2687 0802 10080000 		.4byte	0x810
 2688 0806 12       		.uleb128 0x12
 2689 0807 01       		.uleb128 0x1
 2690 0808 50       		.byte	0x50
 2691 0809 05       		.uleb128 0x5
 2692 080a 03       		.byte	0x3
 2693 080b 00000000 		.4byte	RisingEdgeInterruptHandler
 2694 080f 00       		.byte	0
 2695 0810 11       		.uleb128 0x11
 2696 0811 16000000 		.4byte	.LVL99
 2697 0815 9C0C0000 		.4byte	0xc9c
 2698 0819 27080000 		.4byte	0x827
 2699 081d 12       		.uleb128 0x12
 2700 081e 01       		.uleb128 0x1
 2701 081f 50       		.byte	0x50
 2702 0820 05       		.uleb128 0x5
 2703 0821 03       		.byte	0x3
 2704 0822 00000000 		.4byte	FallingEdgeInterruptHandler
 2705 0826 00       		.byte	0
 2706 0827 11       		.uleb128 0x11
 2707 0828 1E000000 		.4byte	.LVL100
 2708 082c A70C0000 		.4byte	0xca7
 2709 0830 3B080000 		.4byte	0x83b
 2710 0834 12       		.uleb128 0x12
 2711 0835 01       		.uleb128 0x1
 2712 0836 50       		.byte	0x50
 2713 0837 02       		.uleb128 0x2
 2714 0838 74       		.byte	0x74
 2715 0839 00       		.sleb128 0
 2716 083a 00       		.byte	0
 2717 083b 11       		.uleb128 0x11
 2718 083c 24000000 		.4byte	.LVL101
 2719 0840 B20C0000 		.4byte	0xcb2
 2720 0844 4F080000 		.4byte	0x84f
 2721 0848 12       		.uleb128 0x12
 2722 0849 01       		.uleb128 0x1
 2723 084a 50       		.byte	0x50
 2724 084b 02       		.uleb128 0x2
 2725 084c 08       		.byte	0x8
 2726 084d 2F       		.byte	0x2f
 2727 084e 00       		.byte	0
 2728 084f 11       		.uleb128 0x11
 2729 0850 2A000000 		.4byte	.LVL102
 2730 0854 BD0C0000 		.4byte	0xcbd
 2731 0858 63080000 		.4byte	0x863
 2732 085c 12       		.uleb128 0x12
 2733 085d 01       		.uleb128 0x1
 2734 085e 50       		.byte	0x50
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 63


 2735 085f 02       		.uleb128 0x2
 2736 0860 08       		.byte	0x8
 2737 0861 2E       		.byte	0x2e
 2738 0862 00       		.byte	0
 2739 0863 11       		.uleb128 0x11
 2740 0864 30000000 		.4byte	.LVL103
 2741 0868 C80C0000 		.4byte	0xcc8
 2742 086c 7A080000 		.4byte	0x87a
 2743 0870 12       		.uleb128 0x12
 2744 0871 01       		.uleb128 0x1
 2745 0872 50       		.byte	0x50
 2746 0873 05       		.uleb128 0x5
 2747 0874 03       		.byte	0x3
 2748 0875 00000000 		.4byte	TransmitInterruptHandler
 2749 0879 00       		.byte	0
 2750 087a 11       		.uleb128 0x11
 2751 087b 36000000 		.4byte	.LVL104
 2752 087f D30C0000 		.4byte	0xcd3
 2753 0883 8E080000 		.4byte	0x88e
 2754 0887 12       		.uleb128 0x12
 2755 0888 01       		.uleb128 0x1
 2756 0889 50       		.byte	0x50
 2757 088a 02       		.uleb128 0x2
 2758 088b 08       		.byte	0x8
 2759 088c 33       		.byte	0x33
 2760 088d 00       		.byte	0
 2761 088e 11       		.uleb128 0x11
 2762 088f 3C000000 		.4byte	.LVL105
 2763 0893 DE0C0000 		.4byte	0xcde
 2764 0897 A2080000 		.4byte	0x8a2
 2765 089b 12       		.uleb128 0x12
 2766 089c 01       		.uleb128 0x1
 2767 089d 50       		.byte	0x50
 2768 089e 02       		.uleb128 0x2
 2769 089f 08       		.byte	0x8
 2770 08a0 34       		.byte	0x34
 2771 08a1 00       		.byte	0
 2772 08a2 11       		.uleb128 0x11
 2773 08a3 42000000 		.4byte	.LVL106
 2774 08a7 A70C0000 		.4byte	0xca7
 2775 08ab B6080000 		.4byte	0x8b6
 2776 08af 12       		.uleb128 0x12
 2777 08b0 01       		.uleb128 0x1
 2778 08b1 50       		.byte	0x50
 2779 08b2 02       		.uleb128 0x2
 2780 08b3 74       		.byte	0x74
 2781 08b4 00       		.sleb128 0
 2782 08b5 00       		.byte	0
 2783 08b6 11       		.uleb128 0x11
 2784 08b7 48000000 		.4byte	.LVL107
 2785 08bb E90C0000 		.4byte	0xce9
 2786 08bf CD080000 		.4byte	0x8cd
 2787 08c3 12       		.uleb128 0x12
 2788 08c4 01       		.uleb128 0x1
 2789 08c5 50       		.byte	0x50
 2790 08c6 05       		.uleb128 0x5
 2791 08c7 03       		.byte	0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 64


 2792 08c8 00000000 		.4byte	CollisionDelayInterruptHandler
 2793 08cc 00       		.byte	0
 2794 08cd 11       		.uleb128 0x11
 2795 08ce 52000000 		.4byte	.LVL108
 2796 08d2 F40C0000 		.4byte	0xcf4
 2797 08d6 E0080000 		.4byte	0x8e0
 2798 08da 12       		.uleb128 0x12
 2799 08db 01       		.uleb128 0x1
 2800 08dc 51       		.byte	0x51
 2801 08dd 01       		.uleb128 0x1
 2802 08de 31       		.byte	0x31
 2803 08df 00       		.byte	0
 2804 08e0 10       		.uleb128 0x10
 2805 08e1 56000000 		.4byte	.LVL109
 2806 08e5 000D0000 		.4byte	0xd00
 2807 08e9 10       		.uleb128 0x10
 2808 08ea 5E000000 		.4byte	.LVL110
 2809 08ee 0C0D0000 		.4byte	0xd0c
 2810 08f2 10       		.uleb128 0x10
 2811 08f3 36020000 		.4byte	.LVL161
 2812 08f7 CA030000 		.4byte	0x3ca
 2813 08fb 10       		.uleb128 0x10
 2814 08fc 3A020000 		.4byte	.LVL162
 2815 0900 0E030000 		.4byte	0x30e
 2816 0904 10       		.uleb128 0x10
 2817 0905 3E020000 		.4byte	.LVL163
 2818 0909 5A0C0000 		.4byte	0xc5a
 2819 090d 00       		.byte	0
 2820 090e 1C       		.uleb128 0x1c
 2821 090f BC000000 		.4byte	.LASF35
 2822 0913 05       		.byte	0x5
 2823 0914 2E       		.byte	0x2e
 2824 0915 D7000000 		.4byte	0xd7
 2825 0919 1D       		.uleb128 0x1d
 2826 091a 5B020000 		.4byte	.LASF36
 2827 091e 06       		.byte	0x6
 2828 091f D602     		.2byte	0x2d6
 2829 0921 C4000000 		.4byte	0xc4
 2830 0925 1D       		.uleb128 0x1d
 2831 0926 B9050000 		.4byte	.LASF37
 2832 092a 07       		.byte	0x7
 2833 092b 1207     		.2byte	0x712
 2834 092d 31090000 		.4byte	0x931
 2835 0931 06       		.uleb128 0x6
 2836 0932 8C000000 		.4byte	0x8c
 2837 0936 1E       		.uleb128 0x1e
 2838 0937 05030000 		.4byte	.LASF38
 2839 093b 01       		.byte	0x1
 2840 093c 39       		.byte	0x39
 2841 093d 47090000 		.4byte	0x947
 2842 0941 05       		.uleb128 0x5
 2843 0942 03       		.byte	0x3
 2844 0943 00000000 		.4byte	systemState
 2845 0947 06       		.uleb128 0x6
 2846 0948 E2000000 		.4byte	0xe2
 2847 094c 1E       		.uleb128 0x1e
 2848 094d 2C000000 		.4byte	.LASF39
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 65


 2849 0951 01       		.byte	0x1
 2850 0952 3C       		.byte	0x3c
 2851 0953 64090000 		.4byte	0x964
 2852 0957 05       		.uleb128 0x5
 2853 0958 03       		.byte	0x3
 2854 0959 00000000 		.4byte	lowFlag
 2855 095d 02       		.uleb128 0x2
 2856 095e 01       		.byte	0x1
 2857 095f 02       		.byte	0x2
 2858 0960 33040000 		.4byte	.LASF40
 2859 0964 06       		.uleb128 0x6
 2860 0965 5D090000 		.4byte	0x95d
 2861 0969 1F       		.uleb128 0x1f
 2862 096a 80090000 		.4byte	0x980
 2863 096e 80090000 		.4byte	0x980
 2864 0972 20       		.uleb128 0x20
 2865 0973 D0000000 		.4byte	0xd0
 2866 0977 F301     		.2byte	0x1f3
 2867 0979 21       		.uleb128 0x21
 2868 097a D0000000 		.4byte	0xd0
 2869 097e 0F       		.byte	0xf
 2870 097f 00       		.byte	0
 2871 0980 06       		.uleb128 0x6
 2872 0981 2C000000 		.4byte	0x2c
 2873 0985 1E       		.uleb128 0x1e
 2874 0986 1F000000 		.4byte	.LASF41
 2875 098a 01       		.byte	0x1
 2876 098b 3E       		.byte	0x3e
 2877 098c 96090000 		.4byte	0x996
 2878 0990 05       		.uleb128 0x5
 2879 0991 03       		.byte	0x3
 2880 0992 00000000 		.4byte	transmitData
 2881 0996 06       		.uleb128 0x6
 2882 0997 69090000 		.4byte	0x969
 2883 099b 1F       		.uleb128 0x1f
 2884 099c 80090000 		.4byte	0x980
 2885 09a0 AC090000 		.4byte	0x9ac
 2886 09a4 20       		.uleb128 0x20
 2887 09a5 D0000000 		.4byte	0xd0
 2888 09a9 F301     		.2byte	0x1f3
 2889 09ab 00       		.byte	0
 2890 09ac 1E       		.uleb128 0x1e
 2891 09ad 9C040000 		.4byte	.LASF42
 2892 09b1 01       		.byte	0x1
 2893 09b2 3F       		.byte	0x3f
 2894 09b3 BD090000 		.4byte	0x9bd
 2895 09b7 05       		.uleb128 0x5
 2896 09b8 03       		.byte	0x3
 2897 09b9 00000000 		.4byte	buffer
 2898 09bd 06       		.uleb128 0x6
 2899 09be 9B090000 		.4byte	0x99b
 2900 09c2 1E       		.uleb128 0x1e
 2901 09c3 CB040000 		.4byte	.LASF43
 2902 09c7 01       		.byte	0x1
 2903 09c8 40       		.byte	0x40
 2904 09c9 D3090000 		.4byte	0x9d3
 2905 09cd 05       		.uleb128 0x5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 66


 2906 09ce 03       		.byte	0x3
 2907 09cf 00000000 		.4byte	receiveBuffer
 2908 09d3 06       		.uleb128 0x6
 2909 09d4 9B090000 		.4byte	0x99b
 2910 09d8 1F       		.uleb128 0x1f
 2911 09d9 80090000 		.4byte	0x980
 2912 09dd E8090000 		.4byte	0x9e8
 2913 09e1 21       		.uleb128 0x21
 2914 09e2 D0000000 		.4byte	0xd0
 2915 09e6 0F       		.byte	0xf
 2916 09e7 00       		.byte	0
 2917 09e8 1E       		.uleb128 0x1e
 2918 09e9 D4010000 		.4byte	.LASF44
 2919 09ed 01       		.byte	0x1
 2920 09ee 41       		.byte	0x41
 2921 09ef F9090000 		.4byte	0x9f9
 2922 09f3 05       		.uleb128 0x5
 2923 09f4 03       		.byte	0x3
 2924 09f5 00000000 		.4byte	receiveData
 2925 09f9 06       		.uleb128 0x6
 2926 09fa D8090000 		.4byte	0x9d8
 2927 09fe 1E       		.uleb128 0x1e
 2928 09ff 7A050000 		.4byte	.LASF45
 2929 0a03 01       		.byte	0x1
 2930 0a04 42       		.byte	0x42
 2931 0a05 0F0A0000 		.4byte	0xa0f
 2932 0a09 05       		.uleb128 0x5
 2933 0a0a 03       		.byte	0x3
 2934 0a0b 00000000 		.4byte	position
 2935 0a0f 06       		.uleb128 0x6
 2936 0a10 73000000 		.4byte	0x73
 2937 0a14 1E       		.uleb128 0x1e
 2938 0a15 05040000 		.4byte	.LASF46
 2939 0a19 01       		.byte	0x1
 2940 0a1a 43       		.byte	0x43
 2941 0a1b 0F0A0000 		.4byte	0xa0f
 2942 0a1f 05       		.uleb128 0x5
 2943 0a20 03       		.byte	0x3
 2944 0a21 00000000 		.4byte	receivePosition
 2945 0a25 1E       		.uleb128 0x1e
 2946 0a26 C0020000 		.4byte	.LASF47
 2947 0a2a 01       		.byte	0x1
 2948 0a2b 44       		.byte	0x44
 2949 0a2c 0F0A0000 		.4byte	0xa0f
 2950 0a30 05       		.uleb128 0x5
 2951 0a31 03       		.byte	0x3
 2952 0a32 00000000 		.4byte	dataBitsRead
 2953 0a36 22       		.uleb128 0x22
 2954 0a37 69647800 		.ascii	"idx\000"
 2955 0a3b 01       		.byte	0x1
 2956 0a3c 45       		.byte	0x45
 2957 0a3d 0F0A0000 		.4byte	0xa0f
 2958 0a41 05       		.uleb128 0x5
 2959 0a42 03       		.byte	0x3
 2960 0a43 00000000 		.4byte	idx
 2961 0a47 1E       		.uleb128 0x1e
 2962 0a48 EA030000 		.4byte	.LASF48
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 67


 2963 0a4c 01       		.byte	0x1
 2964 0a4d 46       		.byte	0x46
 2965 0a4e 580A0000 		.4byte	0xa58
 2966 0a52 05       		.uleb128 0x5
 2967 0a53 03       		.byte	0x3
 2968 0a54 00000000 		.4byte	dataPtr
 2969 0a58 07       		.uleb128 0x7
 2970 0a59 04       		.byte	0x4
 2971 0a5a 5E0A0000 		.4byte	0xa5e
 2972 0a5e 06       		.uleb128 0x6
 2973 0a5f B1000000 		.4byte	0xb1
 2974 0a63 1E       		.uleb128 0x1e
 2975 0a64 93060000 		.4byte	.LASF49
 2976 0a68 01       		.byte	0x1
 2977 0a69 47       		.byte	0x47
 2978 0a6a 0F0A0000 		.4byte	0xa0f
 2979 0a6e 05       		.uleb128 0x5
 2980 0a6f 03       		.byte	0x3
 2981 0a70 00000000 		.4byte	transmitLock
 2982 0a74 1E       		.uleb128 0x1e
 2983 0a75 6E010000 		.4byte	.LASF50
 2984 0a79 01       		.byte	0x1
 2985 0a7a 48       		.byte	0x48
 2986 0a7b 0F0A0000 		.4byte	0xa0f
 2987 0a7f 05       		.uleb128 0x5
 2988 0a80 03       		.byte	0x3
 2989 0a81 00000000 		.4byte	receiveLock
 2990 0a85 1E       		.uleb128 0x1e
 2991 0a86 75000000 		.4byte	.LASF51
 2992 0a8a 01       		.byte	0x1
 2993 0a8b 49       		.byte	0x49
 2994 0a8c 64090000 		.4byte	0x964
 2995 0a90 05       		.uleb128 0x5
 2996 0a91 03       		.byte	0x3
 2997 0a92 00000000 		.4byte	collisionLock
 2998 0a96 1E       		.uleb128 0x1e
 2999 0a97 32030000 		.4byte	.LASF52
 3000 0a9b 01       		.byte	0x1
 3001 0a9c 4B       		.byte	0x4b
 3002 0a9d 5E0A0000 		.4byte	0xa5e
 3003 0aa1 05       		.uleb128 0x5
 3004 0aa2 03       		.byte	0x3
 3005 0aa3 00000000 		.4byte	sourceAddress
 3006 0aa7 1E       		.uleb128 0x1e
 3007 0aa8 80060000 		.4byte	.LASF53
 3008 0aac 01       		.byte	0x1
 3009 0aad 4C       		.byte	0x4c
 3010 0aae 5E0A0000 		.4byte	0xa5e
 3011 0ab2 05       		.uleb128 0x5
 3012 0ab3 03       		.byte	0x3
 3013 0ab4 00000000 		.4byte	destinationAddress
 3014 0ab8 1E       		.uleb128 0x1e
 3015 0ab9 FD040000 		.4byte	.LASF54
 3016 0abd 01       		.byte	0x1
 3017 0abe 4D       		.byte	0x4d
 3018 0abf 0F0A0000 		.4byte	0xa0f
 3019 0ac3 05       		.uleb128 0x5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 68


 3020 0ac4 03       		.byte	0x3
 3021 0ac5 00000000 		.4byte	messageLength
 3022 0ac9 1E       		.uleb128 0x1e
 3023 0aca DC000000 		.4byte	.LASF55
 3024 0ace 01       		.byte	0x1
 3025 0acf 4E       		.byte	0x4e
 3026 0ad0 5E0A0000 		.4byte	0xa5e
 3027 0ad4 05       		.uleb128 0x5
 3028 0ad5 03       		.byte	0x3
 3029 0ad6 00000000 		.4byte	crcUsage
 3030 0ada 1E       		.uleb128 0x1e
 3031 0adb 33050000 		.4byte	.LASF56
 3032 0adf 01       		.byte	0x1
 3033 0ae0 4F       		.byte	0x4f
 3034 0ae1 5E0A0000 		.4byte	0xa5e
 3035 0ae5 05       		.uleb128 0x5
 3036 0ae6 03       		.byte	0x3
 3037 0ae7 00000000 		.4byte	headerCRC
 3038 0aeb 1E       		.uleb128 0x1e
 3039 0aec 3D050000 		.4byte	.LASF57
 3040 0af0 01       		.byte	0x1
 3041 0af1 50       		.byte	0x50
 3042 0af2 0F0A0000 		.4byte	0xa0f
 3043 0af6 05       		.uleb128 0x5
 3044 0af7 03       		.byte	0x3
 3045 0af8 00000000 		.4byte	addressZeroReceive
 3046 0afc 1E       		.uleb128 0x1e
 3047 0afd BF040000 		.4byte	.LASF58
 3048 0b01 01       		.byte	0x1
 3049 0b02 51       		.byte	0x51
 3050 0b03 5E0A0000 		.4byte	0xa5e
 3051 0b07 05       		.uleb128 0x5
 3052 0b08 03       		.byte	0x3
 3053 0b09 00000000 		.4byte	currentChar
 3054 0b0d 1E       		.uleb128 0x1e
 3055 0b0e 3D010000 		.4byte	.LASF59
 3056 0b12 01       		.byte	0x1
 3057 0b13 52       		.byte	0x52
 3058 0b14 0F0A0000 		.4byte	0xa0f
 3059 0b18 05       		.uleb128 0x5
 3060 0b19 03       		.byte	0x3
 3061 0b1a 00000000 		.4byte	dataSize
 3062 0b1e 1E       		.uleb128 0x1e
 3063 0b1f D9020000 		.4byte	.LASF60
 3064 0b23 01       		.byte	0x1
 3065 0b24 53       		.byte	0x53
 3066 0b25 0F0A0000 		.4byte	0xa0f
 3067 0b29 05       		.uleb128 0x5
 3068 0b2a 03       		.byte	0x3
 3069 0b2b 00000000 		.4byte	transmitBitCount
 3070 0b2f 1E       		.uleb128 0x1e
 3071 0b30 C4010000 		.4byte	.LASF61
 3072 0b34 01       		.byte	0x1
 3073 0b35 54       		.byte	0x54
 3074 0b36 0F0A0000 		.4byte	0xa0f
 3075 0b3a 05       		.uleb128 0x5
 3076 0b3b 03       		.byte	0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 69


 3077 0b3c 00000000 		.4byte	receiveBitCount
 3078 0b40 1E       		.uleb128 0x1e
 3079 0b41 13000000 		.4byte	.LASF23
 3080 0b45 01       		.byte	0x1
 3081 0b46 55       		.byte	0x55
 3082 0b47 0F0A0000 		.4byte	0xa0f
 3083 0b4b 05       		.uleb128 0x5
 3084 0b4c 03       		.byte	0x3
 3085 0b4d 00000000 		.4byte	concatCount
 3086 0b51 1E       		.uleb128 0x1e
 3087 0b52 4B020000 		.4byte	.LASF62
 3088 0b56 01       		.byte	0x1
 3089 0b57 56       		.byte	0x56
 3090 0b58 80090000 		.4byte	0x980
 3091 0b5c 05       		.uleb128 0x5
 3092 0b5d 03       		.byte	0x3
 3093 0b5e 00000000 		.4byte	transmitAddress
 3094 0b62 1E       		.uleb128 0x1e
 3095 0b63 EA020000 		.4byte	.LASF63
 3096 0b67 01       		.byte	0x1
 3097 0b68 58       		.byte	0x58
 3098 0b69 5D090000 		.4byte	0x95d
 3099 0b6d 05       		.uleb128 0x5
 3100 0b6e 03       		.byte	0x3
 3101 0b6f 00000000 		.4byte	transmitMode
 3102 0b73 23       		.uleb128 0x23
 3103 0b74 5C050000 		.4byte	.LASF64
 3104 0b78 5C050000 		.4byte	.LASF64
 3105 0b7c 08       		.byte	0x8
 3106 0b7d 5A       		.byte	0x5a
 3107 0b7e 23       		.uleb128 0x23
 3108 0b7f E0040000 		.4byte	.LASF65
 3109 0b83 E0040000 		.4byte	.LASF65
 3110 0b87 09       		.byte	0x9
 3111 0b88 29       		.byte	0x29
 3112 0b89 23       		.uleb128 0x23
 3113 0b8a 22010000 		.4byte	.LASF66
 3114 0b8e 22010000 		.4byte	.LASF66
 3115 0b92 08       		.byte	0x8
 3116 0b93 5B       		.byte	0x5b
 3117 0b94 23       		.uleb128 0x23
 3118 0b95 24050000 		.4byte	.LASF67
 3119 0b99 24050000 		.4byte	.LASF67
 3120 0b9d 0A       		.byte	0xa
 3121 0b9e 26       		.byte	0x26
 3122 0b9f 23       		.uleb128 0x23
 3123 0ba0 1F050000 		.4byte	.LASF68
 3124 0ba4 1F050000 		.4byte	.LASF68
 3125 0ba8 0B       		.byte	0xb
 3126 0ba9 88       		.byte	0x88
 3127 0baa 23       		.uleb128 0x23
 3128 0bab 7A010000 		.4byte	.LASF69
 3129 0baf 7A010000 		.4byte	.LASF69
 3130 0bb3 0C       		.byte	0xc
 3131 0bb4 68       		.byte	0x68
 3132 0bb5 23       		.uleb128 0x23
 3133 0bb6 FF010000 		.4byte	.LASF70
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 70


 3134 0bba FF010000 		.4byte	.LASF70
 3135 0bbe 0C       		.byte	0xc
 3136 0bbf 6A       		.byte	0x6a
 3137 0bc0 23       		.uleb128 0x23
 3138 0bc1 9D010000 		.4byte	.LASF71
 3139 0bc5 9D010000 		.4byte	.LASF71
 3140 0bc9 0C       		.byte	0xc
 3141 0bca 5A       		.byte	0x5a
 3142 0bcb 23       		.uleb128 0x23
 3143 0bcc CA000000 		.4byte	.LASF72
 3144 0bd0 CA000000 		.4byte	.LASF72
 3145 0bd4 0D       		.byte	0xd
 3146 0bd5 68       		.byte	0x68
 3147 0bd6 23       		.uleb128 0x23
 3148 0bd7 EA000000 		.4byte	.LASF73
 3149 0bdb EA000000 		.4byte	.LASF73
 3150 0bdf 0D       		.byte	0xd
 3151 0be0 6A       		.byte	0x6a
 3152 0be1 23       		.uleb128 0x23
 3153 0be2 29020000 		.4byte	.LASF74
 3154 0be6 29020000 		.4byte	.LASF74
 3155 0bea 0D       		.byte	0xd
 3156 0beb 5A       		.byte	0x5a
 3157 0bec 23       		.uleb128 0x23
 3158 0bed 54040000 		.4byte	.LASF75
 3159 0bf1 54040000 		.4byte	.LASF75
 3160 0bf5 0E       		.byte	0xe
 3161 0bf6 26       		.byte	0x26
 3162 0bf7 23       		.uleb128 0x23
 3163 0bf8 34000000 		.4byte	.LASF76
 3164 0bfc 34000000 		.4byte	.LASF76
 3165 0c00 0E       		.byte	0xe
 3166 0c01 29       		.byte	0x29
 3167 0c02 23       		.uleb128 0x23
 3168 0c03 46010000 		.4byte	.LASF77
 3169 0c07 46010000 		.4byte	.LASF77
 3170 0c0b 0F       		.byte	0xf
 3171 0c0c 26       		.byte	0x26
 3172 0c0d 23       		.uleb128 0x23
 3173 0c0e A3040000 		.4byte	.LASF78
 3174 0c12 A3040000 		.4byte	.LASF78
 3175 0c16 10       		.byte	0x10
 3176 0c17 26       		.byte	0x26
 3177 0c18 23       		.uleb128 0x23
 3178 0c19 0B050000 		.4byte	.LASF79
 3179 0c1d 0B050000 		.4byte	.LASF79
 3180 0c21 0F       		.byte	0xf
 3181 0c22 29       		.byte	0x29
 3182 0c23 23       		.uleb128 0x23
 3183 0c24 4B000000 		.4byte	.LASF80
 3184 0c28 4B000000 		.4byte	.LASF80
 3185 0c2c 10       		.byte	0x10
 3186 0c2d 29       		.byte	0x29
 3187 0c2e 23       		.uleb128 0x23
 3188 0c2f 00000000 		.4byte	.LASF81
 3189 0c33 00000000 		.4byte	.LASF81
 3190 0c37 11       		.byte	0x11
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 71


 3191 0c38 28       		.byte	0x28
 3192 0c39 23       		.uleb128 0x23
 3193 0c3a 6A050000 		.4byte	.LASF82
 3194 0c3e 6A050000 		.4byte	.LASF82
 3195 0c42 11       		.byte	0x11
 3196 0c43 26       		.byte	0x26
 3197 0c44 23       		.uleb128 0x23
 3198 0c45 B2010000 		.4byte	.LASF83
 3199 0c49 B2010000 		.4byte	.LASF83
 3200 0c4d 11       		.byte	0x11
 3201 0c4e 24       		.byte	0x24
 3202 0c4f 23       		.uleb128 0x23
 3203 0c50 73040000 		.4byte	.LASF84
 3204 0c54 73040000 		.4byte	.LASF84
 3205 0c58 11       		.byte	0x11
 3206 0c59 25       		.byte	0x25
 3207 0c5a 23       		.uleb128 0x23
 3208 0c5b A0060000 		.4byte	.LASF85
 3209 0c5f A0060000 		.4byte	.LASF85
 3210 0c63 11       		.byte	0x11
 3211 0c64 29       		.byte	0x29
 3212 0c65 23       		.uleb128 0x23
 3213 0c66 83050000 		.4byte	.LASF86
 3214 0c6a 83050000 		.4byte	.LASF86
 3215 0c6e 11       		.byte	0x11
 3216 0c6f 2C       		.byte	0x2c
 3217 0c70 23       		.uleb128 0x23
 3218 0c71 DC030000 		.4byte	.LASF87
 3219 0c75 DC030000 		.4byte	.LASF87
 3220 0c79 12       		.byte	0x12
 3221 0c7a 5A       		.byte	0x5a
 3222 0c7b 23       		.uleb128 0x23
 3223 0c7c 3E000000 		.4byte	.LASF88
 3224 0c80 3E000000 		.4byte	.LASF88
 3225 0c84 12       		.byte	0x12
 3226 0c85 5B       		.byte	0x5b
 3227 0c86 23       		.uleb128 0x23
 3228 0c87 54060000 		.4byte	.LASF89
 3229 0c8b 54060000 		.4byte	.LASF89
 3230 0c8f 13       		.byte	0x13
 3231 0c90 18       		.byte	0x18
 3232 0c91 23       		.uleb128 0x23
 3233 0c92 5A000000 		.4byte	.LASF90
 3234 0c96 5A000000 		.4byte	.LASF90
 3235 0c9a 14       		.byte	0x14
 3236 0c9b 18       		.byte	0x18
 3237 0c9c 23       		.uleb128 0x23
 3238 0c9d 51010000 		.4byte	.LASF91
 3239 0ca1 51010000 		.4byte	.LASF91
 3240 0ca5 15       		.byte	0x15
 3241 0ca6 18       		.byte	0x18
 3242 0ca7 23       		.uleb128 0x23
 3243 0ca8 F2030000 		.4byte	.LASF92
 3244 0cac F2030000 		.4byte	.LASF92
 3245 0cb0 16       		.byte	0x16
 3246 0cb1 18       		.byte	0x18
 3247 0cb2 23       		.uleb128 0x23
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 72


 3248 0cb3 6A020000 		.4byte	.LASF93
 3249 0cb7 6A020000 		.4byte	.LASF93
 3250 0cbb 12       		.byte	0x12
 3251 0cbc 68       		.byte	0x68
 3252 0cbd 23       		.uleb128 0x23
 3253 0cbe 11030000 		.4byte	.LASF94
 3254 0cc2 11030000 		.4byte	.LASF94
 3255 0cc6 12       		.byte	0x12
 3256 0cc7 6A       		.byte	0x6a
 3257 0cc8 23       		.uleb128 0x23
 3258 0cc9 1A040000 		.4byte	.LASF95
 3259 0ccd 1A040000 		.4byte	.LASF95
 3260 0cd1 17       		.byte	0x17
 3261 0cd2 18       		.byte	0x18
 3262 0cd3 23       		.uleb128 0x23
 3263 0cd4 A4050000 		.4byte	.LASF96
 3264 0cd8 A4050000 		.4byte	.LASF96
 3265 0cdc 08       		.byte	0x8
 3266 0cdd 6A       		.byte	0x6a
 3267 0cde 23       		.uleb128 0x23
 3268 0cdf 5F040000 		.4byte	.LASF97
 3269 0ce3 5F040000 		.4byte	.LASF97
 3270 0ce7 08       		.byte	0x8
 3271 0ce8 68       		.byte	0x68
 3272 0ce9 23       		.uleb128 0x23
 3273 0cea 08010000 		.4byte	.LASF98
 3274 0cee 08010000 		.4byte	.LASF98
 3275 0cf2 18       		.byte	0x18
 3276 0cf3 18       		.byte	0x18
 3277 0cf4 24       		.uleb128 0x24
 3278 0cf5 2F010000 		.4byte	.LASF99
 3279 0cf9 2F010000 		.4byte	.LASF99
 3280 0cfd 06       		.byte	0x6
 3281 0cfe 2E01     		.2byte	0x12e
 3282 0d00 24       		.uleb128 0x24
 3283 0d01 E6010000 		.4byte	.LASF100
 3284 0d05 E6010000 		.4byte	.LASF100
 3285 0d09 06       		.byte	0x6
 3286 0d0a 3101     		.2byte	0x131
 3287 0d0c 23       		.uleb128 0x23
 3288 0d0d 93050000 		.4byte	.LASF101
 3289 0d11 93050000 		.4byte	.LASF101
 3290 0d15 11       		.byte	0x11
 3291 0d16 22       		.byte	0x22
 3292 0d17 00       		.byte	0
 3293              		.section	.debug_abbrev,"",%progbits
 3294              	.Ldebug_abbrev0:
 3295 0000 01       		.uleb128 0x1
 3296 0001 11       		.uleb128 0x11
 3297 0002 01       		.byte	0x1
 3298 0003 25       		.uleb128 0x25
 3299 0004 0E       		.uleb128 0xe
 3300 0005 13       		.uleb128 0x13
 3301 0006 0B       		.uleb128 0xb
 3302 0007 03       		.uleb128 0x3
 3303 0008 0E       		.uleb128 0xe
 3304 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 73


 3305 000a 0E       		.uleb128 0xe
 3306 000b 55       		.uleb128 0x55
 3307 000c 17       		.uleb128 0x17
 3308 000d 11       		.uleb128 0x11
 3309 000e 01       		.uleb128 0x1
 3310 000f 10       		.uleb128 0x10
 3311 0010 17       		.uleb128 0x17
 3312 0011 00       		.byte	0
 3313 0012 00       		.byte	0
 3314 0013 02       		.uleb128 0x2
 3315 0014 24       		.uleb128 0x24
 3316 0015 00       		.byte	0
 3317 0016 0B       		.uleb128 0xb
 3318 0017 0B       		.uleb128 0xb
 3319 0018 3E       		.uleb128 0x3e
 3320 0019 0B       		.uleb128 0xb
 3321 001a 03       		.uleb128 0x3
 3322 001b 0E       		.uleb128 0xe
 3323 001c 00       		.byte	0
 3324 001d 00       		.byte	0
 3325 001e 03       		.uleb128 0x3
 3326 001f 16       		.uleb128 0x16
 3327 0020 00       		.byte	0
 3328 0021 03       		.uleb128 0x3
 3329 0022 0E       		.uleb128 0xe
 3330 0023 3A       		.uleb128 0x3a
 3331 0024 0B       		.uleb128 0xb
 3332 0025 3B       		.uleb128 0x3b
 3333 0026 0B       		.uleb128 0xb
 3334 0027 49       		.uleb128 0x49
 3335 0028 13       		.uleb128 0x13
 3336 0029 00       		.byte	0
 3337 002a 00       		.byte	0
 3338 002b 04       		.uleb128 0x4
 3339 002c 24       		.uleb128 0x24
 3340 002d 00       		.byte	0
 3341 002e 0B       		.uleb128 0xb
 3342 002f 0B       		.uleb128 0xb
 3343 0030 3E       		.uleb128 0x3e
 3344 0031 0B       		.uleb128 0xb
 3345 0032 03       		.uleb128 0x3
 3346 0033 08       		.uleb128 0x8
 3347 0034 00       		.byte	0
 3348 0035 00       		.byte	0
 3349 0036 05       		.uleb128 0x5
 3350 0037 16       		.uleb128 0x16
 3351 0038 00       		.byte	0
 3352 0039 03       		.uleb128 0x3
 3353 003a 0E       		.uleb128 0xe
 3354 003b 3A       		.uleb128 0x3a
 3355 003c 0B       		.uleb128 0xb
 3356 003d 3B       		.uleb128 0x3b
 3357 003e 05       		.uleb128 0x5
 3358 003f 49       		.uleb128 0x49
 3359 0040 13       		.uleb128 0x13
 3360 0041 00       		.byte	0
 3361 0042 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 74


 3362 0043 06       		.uleb128 0x6
 3363 0044 35       		.uleb128 0x35
 3364 0045 00       		.byte	0
 3365 0046 49       		.uleb128 0x49
 3366 0047 13       		.uleb128 0x13
 3367 0048 00       		.byte	0
 3368 0049 00       		.byte	0
 3369 004a 07       		.uleb128 0x7
 3370 004b 0F       		.uleb128 0xf
 3371 004c 00       		.byte	0
 3372 004d 0B       		.uleb128 0xb
 3373 004e 0B       		.uleb128 0xb
 3374 004f 49       		.uleb128 0x49
 3375 0050 13       		.uleb128 0x13
 3376 0051 00       		.byte	0
 3377 0052 00       		.byte	0
 3378 0053 08       		.uleb128 0x8
 3379 0054 26       		.uleb128 0x26
 3380 0055 00       		.byte	0
 3381 0056 49       		.uleb128 0x49
 3382 0057 13       		.uleb128 0x13
 3383 0058 00       		.byte	0
 3384 0059 00       		.byte	0
 3385 005a 09       		.uleb128 0x9
 3386 005b 04       		.uleb128 0x4
 3387 005c 01       		.byte	0x1
 3388 005d 03       		.uleb128 0x3
 3389 005e 0E       		.uleb128 0xe
 3390 005f 0B       		.uleb128 0xb
 3391 0060 0B       		.uleb128 0xb
 3392 0061 49       		.uleb128 0x49
 3393 0062 13       		.uleb128 0x13
 3394 0063 3A       		.uleb128 0x3a
 3395 0064 0B       		.uleb128 0xb
 3396 0065 3B       		.uleb128 0x3b
 3397 0066 0B       		.uleb128 0xb
 3398 0067 01       		.uleb128 0x1
 3399 0068 13       		.uleb128 0x13
 3400 0069 00       		.byte	0
 3401 006a 00       		.byte	0
 3402 006b 0A       		.uleb128 0xa
 3403 006c 28       		.uleb128 0x28
 3404 006d 00       		.byte	0
 3405 006e 03       		.uleb128 0x3
 3406 006f 0E       		.uleb128 0xe
 3407 0070 1C       		.uleb128 0x1c
 3408 0071 0B       		.uleb128 0xb
 3409 0072 00       		.byte	0
 3410 0073 00       		.byte	0
 3411 0074 0B       		.uleb128 0xb
 3412 0075 2E       		.uleb128 0x2e
 3413 0076 00       		.byte	0
 3414 0077 3F       		.uleb128 0x3f
 3415 0078 19       		.uleb128 0x19
 3416 0079 03       		.uleb128 0x3
 3417 007a 0E       		.uleb128 0xe
 3418 007b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 75


 3419 007c 0B       		.uleb128 0xb
 3420 007d 3B       		.uleb128 0x3b
 3421 007e 05       		.uleb128 0x5
 3422 007f 27       		.uleb128 0x27
 3423 0080 19       		.uleb128 0x19
 3424 0081 11       		.uleb128 0x11
 3425 0082 01       		.uleb128 0x1
 3426 0083 12       		.uleb128 0x12
 3427 0084 06       		.uleb128 0x6
 3428 0085 40       		.uleb128 0x40
 3429 0086 18       		.uleb128 0x18
 3430 0087 9742     		.uleb128 0x2117
 3431 0089 19       		.uleb128 0x19
 3432 008a 00       		.byte	0
 3433 008b 00       		.byte	0
 3434 008c 0C       		.uleb128 0xc
 3435 008d 2E       		.uleb128 0x2e
 3436 008e 01       		.byte	0x1
 3437 008f 3F       		.uleb128 0x3f
 3438 0090 19       		.uleb128 0x19
 3439 0091 03       		.uleb128 0x3
 3440 0092 0E       		.uleb128 0xe
 3441 0093 3A       		.uleb128 0x3a
 3442 0094 0B       		.uleb128 0xb
 3443 0095 3B       		.uleb128 0x3b
 3444 0096 0B       		.uleb128 0xb
 3445 0097 27       		.uleb128 0x27
 3446 0098 19       		.uleb128 0x19
 3447 0099 11       		.uleb128 0x11
 3448 009a 01       		.uleb128 0x1
 3449 009b 12       		.uleb128 0x12
 3450 009c 06       		.uleb128 0x6
 3451 009d 40       		.uleb128 0x40
 3452 009e 18       		.uleb128 0x18
 3453 009f 9742     		.uleb128 0x2117
 3454 00a1 19       		.uleb128 0x19
 3455 00a2 01       		.uleb128 0x1
 3456 00a3 13       		.uleb128 0x13
 3457 00a4 00       		.byte	0
 3458 00a5 00       		.byte	0
 3459 00a6 0D       		.uleb128 0xd
 3460 00a7 34       		.uleb128 0x34
 3461 00a8 00       		.byte	0
 3462 00a9 03       		.uleb128 0x3
 3463 00aa 0E       		.uleb128 0xe
 3464 00ab 3A       		.uleb128 0x3a
 3465 00ac 0B       		.uleb128 0xb
 3466 00ad 3B       		.uleb128 0x3b
 3467 00ae 0B       		.uleb128 0xb
 3468 00af 49       		.uleb128 0x49
 3469 00b0 13       		.uleb128 0x13
 3470 00b1 02       		.uleb128 0x2
 3471 00b2 17       		.uleb128 0x17
 3472 00b3 00       		.byte	0
 3473 00b4 00       		.byte	0
 3474 00b5 0E       		.uleb128 0xe
 3475 00b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 76


 3476 00b7 01       		.byte	0x1
 3477 00b8 55       		.uleb128 0x55
 3478 00b9 17       		.uleb128 0x17
 3479 00ba 01       		.uleb128 0x1
 3480 00bb 13       		.uleb128 0x13
 3481 00bc 00       		.byte	0
 3482 00bd 00       		.byte	0
 3483 00be 0F       		.uleb128 0xf
 3484 00bf 34       		.uleb128 0x34
 3485 00c0 00       		.byte	0
 3486 00c1 03       		.uleb128 0x3
 3487 00c2 08       		.uleb128 0x8
 3488 00c3 3A       		.uleb128 0x3a
 3489 00c4 0B       		.uleb128 0xb
 3490 00c5 3B       		.uleb128 0x3b
 3491 00c6 0B       		.uleb128 0xb
 3492 00c7 49       		.uleb128 0x49
 3493 00c8 13       		.uleb128 0x13
 3494 00c9 02       		.uleb128 0x2
 3495 00ca 17       		.uleb128 0x17
 3496 00cb 00       		.byte	0
 3497 00cc 00       		.byte	0
 3498 00cd 10       		.uleb128 0x10
 3499 00ce 898201   		.uleb128 0x4109
 3500 00d1 00       		.byte	0
 3501 00d2 11       		.uleb128 0x11
 3502 00d3 01       		.uleb128 0x1
 3503 00d4 31       		.uleb128 0x31
 3504 00d5 13       		.uleb128 0x13
 3505 00d6 00       		.byte	0
 3506 00d7 00       		.byte	0
 3507 00d8 11       		.uleb128 0x11
 3508 00d9 898201   		.uleb128 0x4109
 3509 00dc 01       		.byte	0x1
 3510 00dd 11       		.uleb128 0x11
 3511 00de 01       		.uleb128 0x1
 3512 00df 31       		.uleb128 0x31
 3513 00e0 13       		.uleb128 0x13
 3514 00e1 01       		.uleb128 0x1
 3515 00e2 13       		.uleb128 0x13
 3516 00e3 00       		.byte	0
 3517 00e4 00       		.byte	0
 3518 00e5 12       		.uleb128 0x12
 3519 00e6 8A8201   		.uleb128 0x410a
 3520 00e9 00       		.byte	0
 3521 00ea 02       		.uleb128 0x2
 3522 00eb 18       		.uleb128 0x18
 3523 00ec 9142     		.uleb128 0x2111
 3524 00ee 18       		.uleb128 0x18
 3525 00ef 00       		.byte	0
 3526 00f0 00       		.byte	0
 3527 00f1 13       		.uleb128 0x13
 3528 00f2 898201   		.uleb128 0x4109
 3529 00f5 01       		.byte	0x1
 3530 00f6 11       		.uleb128 0x11
 3531 00f7 01       		.uleb128 0x1
 3532 00f8 31       		.uleb128 0x31
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 77


 3533 00f9 13       		.uleb128 0x13
 3534 00fa 00       		.byte	0
 3535 00fb 00       		.byte	0
 3536 00fc 14       		.uleb128 0x14
 3537 00fd 2E       		.uleb128 0x2e
 3538 00fe 01       		.byte	0x1
 3539 00ff 3F       		.uleb128 0x3f
 3540 0100 19       		.uleb128 0x19
 3541 0101 03       		.uleb128 0x3
 3542 0102 0E       		.uleb128 0xe
 3543 0103 3A       		.uleb128 0x3a
 3544 0104 0B       		.uleb128 0xb
 3545 0105 3B       		.uleb128 0x3b
 3546 0106 0B       		.uleb128 0xb
 3547 0107 27       		.uleb128 0x27
 3548 0108 19       		.uleb128 0x19
 3549 0109 11       		.uleb128 0x11
 3550 010a 01       		.uleb128 0x1
 3551 010b 12       		.uleb128 0x12
 3552 010c 06       		.uleb128 0x6
 3553 010d 40       		.uleb128 0x40
 3554 010e 18       		.uleb128 0x18
 3555 010f 9642     		.uleb128 0x2116
 3556 0111 19       		.uleb128 0x19
 3557 0112 01       		.uleb128 0x1
 3558 0113 13       		.uleb128 0x13
 3559 0114 00       		.byte	0
 3560 0115 00       		.byte	0
 3561 0116 15       		.uleb128 0x15
 3562 0117 0B       		.uleb128 0xb
 3563 0118 01       		.byte	0x1
 3564 0119 11       		.uleb128 0x11
 3565 011a 01       		.uleb128 0x1
 3566 011b 12       		.uleb128 0x12
 3567 011c 06       		.uleb128 0x6
 3568 011d 00       		.byte	0
 3569 011e 00       		.byte	0
 3570 011f 16       		.uleb128 0x16
 3571 0120 2E       		.uleb128 0x2e
 3572 0121 01       		.byte	0x1
 3573 0122 3F       		.uleb128 0x3f
 3574 0123 19       		.uleb128 0x19
 3575 0124 03       		.uleb128 0x3
 3576 0125 0E       		.uleb128 0xe
 3577 0126 3A       		.uleb128 0x3a
 3578 0127 0B       		.uleb128 0xb
 3579 0128 3B       		.uleb128 0x3b
 3580 0129 05       		.uleb128 0x5
 3581 012a 27       		.uleb128 0x27
 3582 012b 19       		.uleb128 0x19
 3583 012c 11       		.uleb128 0x11
 3584 012d 01       		.uleb128 0x1
 3585 012e 12       		.uleb128 0x12
 3586 012f 06       		.uleb128 0x6
 3587 0130 40       		.uleb128 0x40
 3588 0131 18       		.uleb128 0x18
 3589 0132 9742     		.uleb128 0x2117
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 78


 3590 0134 19       		.uleb128 0x19
 3591 0135 01       		.uleb128 0x1
 3592 0136 13       		.uleb128 0x13
 3593 0137 00       		.byte	0
 3594 0138 00       		.byte	0
 3595 0139 17       		.uleb128 0x17
 3596 013a 2E       		.uleb128 0x2e
 3597 013b 01       		.byte	0x1
 3598 013c 3F       		.uleb128 0x3f
 3599 013d 19       		.uleb128 0x19
 3600 013e 03       		.uleb128 0x3
 3601 013f 0E       		.uleb128 0xe
 3602 0140 3A       		.uleb128 0x3a
 3603 0141 0B       		.uleb128 0xb
 3604 0142 3B       		.uleb128 0x3b
 3605 0143 05       		.uleb128 0x5
 3606 0144 11       		.uleb128 0x11
 3607 0145 01       		.uleb128 0x1
 3608 0146 12       		.uleb128 0x12
 3609 0147 06       		.uleb128 0x6
 3610 0148 40       		.uleb128 0x40
 3611 0149 18       		.uleb128 0x18
 3612 014a 9742     		.uleb128 0x2117
 3613 014c 19       		.uleb128 0x19
 3614 014d 01       		.uleb128 0x1
 3615 014e 13       		.uleb128 0x13
 3616 014f 00       		.byte	0
 3617 0150 00       		.byte	0
 3618 0151 18       		.uleb128 0x18
 3619 0152 2E       		.uleb128 0x2e
 3620 0153 01       		.byte	0x1
 3621 0154 3F       		.uleb128 0x3f
 3622 0155 19       		.uleb128 0x19
 3623 0156 03       		.uleb128 0x3
 3624 0157 0E       		.uleb128 0xe
 3625 0158 3A       		.uleb128 0x3a
 3626 0159 0B       		.uleb128 0xb
 3627 015a 3B       		.uleb128 0x3b
 3628 015b 05       		.uleb128 0x5
 3629 015c 27       		.uleb128 0x27
 3630 015d 19       		.uleb128 0x19
 3631 015e 49       		.uleb128 0x49
 3632 015f 13       		.uleb128 0x13
 3633 0160 8701     		.uleb128 0x87
 3634 0162 19       		.uleb128 0x19
 3635 0163 11       		.uleb128 0x11
 3636 0164 01       		.uleb128 0x1
 3637 0165 12       		.uleb128 0x12
 3638 0166 06       		.uleb128 0x6
 3639 0167 40       		.uleb128 0x40
 3640 0168 18       		.uleb128 0x18
 3641 0169 9742     		.uleb128 0x2117
 3642 016b 19       		.uleb128 0x19
 3643 016c 01       		.uleb128 0x1
 3644 016d 13       		.uleb128 0x13
 3645 016e 00       		.byte	0
 3646 016f 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 79


 3647 0170 19       		.uleb128 0x19
 3648 0171 0B       		.uleb128 0xb
 3649 0172 01       		.byte	0x1
 3650 0173 11       		.uleb128 0x11
 3651 0174 01       		.uleb128 0x1
 3652 0175 12       		.uleb128 0x12
 3653 0176 06       		.uleb128 0x6
 3654 0177 01       		.uleb128 0x1
 3655 0178 13       		.uleb128 0x13
 3656 0179 00       		.byte	0
 3657 017a 00       		.byte	0
 3658 017b 1A       		.uleb128 0x1a
 3659 017c 34       		.uleb128 0x34
 3660 017d 00       		.byte	0
 3661 017e 03       		.uleb128 0x3
 3662 017f 0E       		.uleb128 0xe
 3663 0180 3A       		.uleb128 0x3a
 3664 0181 0B       		.uleb128 0xb
 3665 0182 3B       		.uleb128 0x3b
 3666 0183 05       		.uleb128 0x5
 3667 0184 49       		.uleb128 0x49
 3668 0185 13       		.uleb128 0x13
 3669 0186 02       		.uleb128 0x2
 3670 0187 17       		.uleb128 0x17
 3671 0188 00       		.byte	0
 3672 0189 00       		.byte	0
 3673 018a 1B       		.uleb128 0x1b
 3674 018b 34       		.uleb128 0x34
 3675 018c 00       		.byte	0
 3676 018d 03       		.uleb128 0x3
 3677 018e 08       		.uleb128 0x8
 3678 018f 3A       		.uleb128 0x3a
 3679 0190 0B       		.uleb128 0xb
 3680 0191 3B       		.uleb128 0x3b
 3681 0192 05       		.uleb128 0x5
 3682 0193 49       		.uleb128 0x49
 3683 0194 13       		.uleb128 0x13
 3684 0195 02       		.uleb128 0x2
 3685 0196 17       		.uleb128 0x17
 3686 0197 00       		.byte	0
 3687 0198 00       		.byte	0
 3688 0199 1C       		.uleb128 0x1c
 3689 019a 34       		.uleb128 0x34
 3690 019b 00       		.byte	0
 3691 019c 03       		.uleb128 0x3
 3692 019d 0E       		.uleb128 0xe
 3693 019e 3A       		.uleb128 0x3a
 3694 019f 0B       		.uleb128 0xb
 3695 01a0 3B       		.uleb128 0x3b
 3696 01a1 0B       		.uleb128 0xb
 3697 01a2 49       		.uleb128 0x49
 3698 01a3 13       		.uleb128 0x13
 3699 01a4 3F       		.uleb128 0x3f
 3700 01a5 19       		.uleb128 0x19
 3701 01a6 3C       		.uleb128 0x3c
 3702 01a7 19       		.uleb128 0x19
 3703 01a8 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 80


 3704 01a9 00       		.byte	0
 3705 01aa 1D       		.uleb128 0x1d
 3706 01ab 34       		.uleb128 0x34
 3707 01ac 00       		.byte	0
 3708 01ad 03       		.uleb128 0x3
 3709 01ae 0E       		.uleb128 0xe
 3710 01af 3A       		.uleb128 0x3a
 3711 01b0 0B       		.uleb128 0xb
 3712 01b1 3B       		.uleb128 0x3b
 3713 01b2 05       		.uleb128 0x5
 3714 01b3 49       		.uleb128 0x49
 3715 01b4 13       		.uleb128 0x13
 3716 01b5 3F       		.uleb128 0x3f
 3717 01b6 19       		.uleb128 0x19
 3718 01b7 3C       		.uleb128 0x3c
 3719 01b8 19       		.uleb128 0x19
 3720 01b9 00       		.byte	0
 3721 01ba 00       		.byte	0
 3722 01bb 1E       		.uleb128 0x1e
 3723 01bc 34       		.uleb128 0x34
 3724 01bd 00       		.byte	0
 3725 01be 03       		.uleb128 0x3
 3726 01bf 0E       		.uleb128 0xe
 3727 01c0 3A       		.uleb128 0x3a
 3728 01c1 0B       		.uleb128 0xb
 3729 01c2 3B       		.uleb128 0x3b
 3730 01c3 0B       		.uleb128 0xb
 3731 01c4 49       		.uleb128 0x49
 3732 01c5 13       		.uleb128 0x13
 3733 01c6 3F       		.uleb128 0x3f
 3734 01c7 19       		.uleb128 0x19
 3735 01c8 02       		.uleb128 0x2
 3736 01c9 18       		.uleb128 0x18
 3737 01ca 00       		.byte	0
 3738 01cb 00       		.byte	0
 3739 01cc 1F       		.uleb128 0x1f
 3740 01cd 01       		.uleb128 0x1
 3741 01ce 01       		.byte	0x1
 3742 01cf 49       		.uleb128 0x49
 3743 01d0 13       		.uleb128 0x13
 3744 01d1 01       		.uleb128 0x1
 3745 01d2 13       		.uleb128 0x13
 3746 01d3 00       		.byte	0
 3747 01d4 00       		.byte	0
 3748 01d5 20       		.uleb128 0x20
 3749 01d6 21       		.uleb128 0x21
 3750 01d7 00       		.byte	0
 3751 01d8 49       		.uleb128 0x49
 3752 01d9 13       		.uleb128 0x13
 3753 01da 2F       		.uleb128 0x2f
 3754 01db 05       		.uleb128 0x5
 3755 01dc 00       		.byte	0
 3756 01dd 00       		.byte	0
 3757 01de 21       		.uleb128 0x21
 3758 01df 21       		.uleb128 0x21
 3759 01e0 00       		.byte	0
 3760 01e1 49       		.uleb128 0x49
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 81


 3761 01e2 13       		.uleb128 0x13
 3762 01e3 2F       		.uleb128 0x2f
 3763 01e4 0B       		.uleb128 0xb
 3764 01e5 00       		.byte	0
 3765 01e6 00       		.byte	0
 3766 01e7 22       		.uleb128 0x22
 3767 01e8 34       		.uleb128 0x34
 3768 01e9 00       		.byte	0
 3769 01ea 03       		.uleb128 0x3
 3770 01eb 08       		.uleb128 0x8
 3771 01ec 3A       		.uleb128 0x3a
 3772 01ed 0B       		.uleb128 0xb
 3773 01ee 3B       		.uleb128 0x3b
 3774 01ef 0B       		.uleb128 0xb
 3775 01f0 49       		.uleb128 0x49
 3776 01f1 13       		.uleb128 0x13
 3777 01f2 3F       		.uleb128 0x3f
 3778 01f3 19       		.uleb128 0x19
 3779 01f4 02       		.uleb128 0x2
 3780 01f5 18       		.uleb128 0x18
 3781 01f6 00       		.byte	0
 3782 01f7 00       		.byte	0
 3783 01f8 23       		.uleb128 0x23
 3784 01f9 2E       		.uleb128 0x2e
 3785 01fa 00       		.byte	0
 3786 01fb 3F       		.uleb128 0x3f
 3787 01fc 19       		.uleb128 0x19
 3788 01fd 3C       		.uleb128 0x3c
 3789 01fe 19       		.uleb128 0x19
 3790 01ff 6E       		.uleb128 0x6e
 3791 0200 0E       		.uleb128 0xe
 3792 0201 03       		.uleb128 0x3
 3793 0202 0E       		.uleb128 0xe
 3794 0203 3A       		.uleb128 0x3a
 3795 0204 0B       		.uleb128 0xb
 3796 0205 3B       		.uleb128 0x3b
 3797 0206 0B       		.uleb128 0xb
 3798 0207 00       		.byte	0
 3799 0208 00       		.byte	0
 3800 0209 24       		.uleb128 0x24
 3801 020a 2E       		.uleb128 0x2e
 3802 020b 00       		.byte	0
 3803 020c 3F       		.uleb128 0x3f
 3804 020d 19       		.uleb128 0x19
 3805 020e 3C       		.uleb128 0x3c
 3806 020f 19       		.uleb128 0x19
 3807 0210 6E       		.uleb128 0x6e
 3808 0211 0E       		.uleb128 0xe
 3809 0212 03       		.uleb128 0x3
 3810 0213 0E       		.uleb128 0xe
 3811 0214 3A       		.uleb128 0x3a
 3812 0215 0B       		.uleb128 0xb
 3813 0216 3B       		.uleb128 0x3b
 3814 0217 05       		.uleb128 0x5
 3815 0218 00       		.byte	0
 3816 0219 00       		.byte	0
 3817 021a 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 82


 3818              		.section	.debug_loc,"",%progbits
 3819              	.Ldebug_loc0:
 3820              	.LLST0:
 3821 0000 02000000 		.4byte	.LVL0
 3822 0004 52000000 		.4byte	.LVL6
 3823 0008 0200     		.2byte	0x2
 3824 000a 30       		.byte	0x30
 3825 000b 9F       		.byte	0x9f
 3826 000c 52000000 		.4byte	.LVL6
 3827 0010 84000000 		.4byte	.LVL13
 3828 0014 0100     		.2byte	0x1
 3829 0016 54       		.byte	0x54
 3830 0017 00000000 		.4byte	0
 3831 001b 00000000 		.4byte	0
 3832              	.LLST1:
 3833 001f 02000000 		.4byte	.LVL0
 3834 0023 52000000 		.4byte	.LVL6
 3835 0027 0200     		.2byte	0x2
 3836 0029 30       		.byte	0x30
 3837 002a 9F       		.byte	0x9f
 3838 002b 52000000 		.4byte	.LVL6
 3839 002f 6C000000 		.4byte	.LVL8
 3840 0033 0100     		.2byte	0x1
 3841 0035 50       		.byte	0x50
 3842 0036 6E000000 		.4byte	.LVL9
 3843 003a 84000000 		.4byte	.LVL13
 3844 003e 0100     		.2byte	0x1
 3845 0040 50       		.byte	0x50
 3846 0041 00000000 		.4byte	0
 3847 0045 00000000 		.4byte	0
 3848              	.LLST2:
 3849 0049 4C000000 		.4byte	.LVL5
 3850 004d 52000000 		.4byte	.LVL6
 3851 0051 0200     		.2byte	0x2
 3852 0053 3F       		.byte	0x3f
 3853 0054 9F       		.byte	0x9f
 3854 0055 52000000 		.4byte	.LVL6
 3855 0059 78000000 		.4byte	.LVL12
 3856 005d 0100     		.2byte	0x1
 3857 005f 53       		.byte	0x53
 3858 0060 00000000 		.4byte	0
 3859 0064 00000000 		.4byte	0
 3860              	.LLST3:
 3861 0068 54000000 		.4byte	.LVL25
 3862 006c 68000000 		.4byte	.LVL29
 3863 0070 0100     		.2byte	0x1
 3864 0072 54       		.byte	0x54
 3865 0073 00000000 		.4byte	0
 3866 0077 00000000 		.4byte	0
 3867              	.LLST4:
 3868 007b 6E000000 		.4byte	.LVL111
 3869 007f 88000000 		.4byte	.LVL115
 3870 0083 0200     		.2byte	0x2
 3871 0085 30       		.byte	0x30
 3872 0086 9F       		.byte	0x9f
 3873 0087 88000000 		.4byte	.LVL115
 3874 008b F8000000 		.4byte	.LVL129
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 83


 3875 008f 0100     		.2byte	0x1
 3876 0091 54       		.byte	0x54
 3877 0092 F8000000 		.4byte	.LVL129
 3878 0096 FA000000 		.4byte	.LVL130
 3879 009a 0200     		.2byte	0x2
 3880 009c 30       		.byte	0x30
 3881 009d 9F       		.byte	0x9f
 3882 009e FA000000 		.4byte	.LVL130
 3883 00a2 64010000 		.4byte	.LVL141
 3884 00a6 0100     		.2byte	0x1
 3885 00a8 54       		.byte	0x54
 3886 00a9 88010000 		.4byte	.LVL145
 3887 00ad AE010000 		.4byte	.LVL146
 3888 00b1 0200     		.2byte	0x2
 3889 00b3 37       		.byte	0x37
 3890 00b4 9F       		.byte	0x9f
 3891 00b5 AE010000 		.4byte	.LVL146
 3892 00b9 32020000 		.4byte	.LVL160
 3893 00bd 0100     		.2byte	0x1
 3894 00bf 55       		.byte	0x55
 3895 00c0 00000000 		.4byte	0
 3896 00c4 00000000 		.4byte	0
 3897              	.LLST5:
 3898 00c8 76000000 		.4byte	.LVL112
 3899 00cc 88000000 		.4byte	.LVL115
 3900 00d0 0200     		.2byte	0x2
 3901 00d2 30       		.byte	0x30
 3902 00d3 9F       		.byte	0x9f
 3903 00d4 9A000000 		.4byte	.LVL119
 3904 00d8 C3000000 		.4byte	.LVL121-1
 3905 00dc 0100     		.2byte	0x1
 3906 00de 50       		.byte	0x50
 3907 00df FA000000 		.4byte	.LVL130
 3908 00e3 04010000 		.4byte	.LVL131
 3909 00e7 0100     		.2byte	0x1
 3910 00e9 50       		.byte	0x50
 3911 00ea 20010000 		.4byte	.LVL134
 3912 00ee 2E010000 		.4byte	.LVL135
 3913 00f2 0100     		.2byte	0x1
 3914 00f4 50       		.byte	0x50
 3915 00f5 46010000 		.4byte	.LVL138
 3916 00f9 5D010000 		.4byte	.LVL139-1
 3917 00fd 0100     		.2byte	0x1
 3918 00ff 50       		.byte	0x50
 3919 0100 88010000 		.4byte	.LVL145
 3920 0104 AE010000 		.4byte	.LVL146
 3921 0108 0200     		.2byte	0x2
 3922 010a 30       		.byte	0x30
 3923 010b 9F       		.byte	0x9f
 3924 010c AE010000 		.4byte	.LVL146
 3925 0110 BC010000 		.4byte	.LVL149
 3926 0114 0100     		.2byte	0x1
 3927 0116 54       		.byte	0x54
 3928 0117 BC010000 		.4byte	.LVL149
 3929 011b C4010000 		.4byte	.LVL150
 3930 011f 0100     		.2byte	0x1
 3931 0121 50       		.byte	0x50
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 84


 3932 0122 D6010000 		.4byte	.LVL153
 3933 0126 32020000 		.4byte	.LVL160
 3934 012a 0100     		.2byte	0x1
 3935 012c 54       		.byte	0x54
 3936 012d 00000000 		.4byte	0
 3937 0131 00000000 		.4byte	0
 3938              	.LLST6:
 3939 0135 9E000000 		.4byte	.LVL120
 3940 0139 C3000000 		.4byte	.LVL121-1
 3941 013d 0100     		.2byte	0x1
 3942 013f 50       		.byte	0x50
 3943 0140 FA000000 		.4byte	.LVL130
 3944 0144 04010000 		.4byte	.LVL131
 3945 0148 0100     		.2byte	0x1
 3946 014a 50       		.byte	0x50
 3947 014b 00000000 		.4byte	0
 3948 014f 00000000 		.4byte	0
 3949              	.LLST7:
 3950 0153 48020000 		.4byte	.LVL164
 3951 0157 5A020000 		.4byte	.LVL165
 3952 015b 0100     		.2byte	0x1
 3953 015d 50       		.byte	0x50
 3954 015e 00000000 		.4byte	0
 3955 0162 00000000 		.4byte	0
 3956              		.section	.debug_aranges,"",%progbits
 3957 0000 5C000000 		.4byte	0x5c
 3958 0004 0200     		.2byte	0x2
 3959 0006 00000000 		.4byte	.Ldebug_info0
 3960 000a 04       		.byte	0x4
 3961 000b 00       		.byte	0
 3962 000c 0000     		.2byte	0
 3963 000e 0000     		.2byte	0
 3964 0010 00000000 		.4byte	.LFB69
 3965 0014 0C000000 		.4byte	.LFE69-.LFB69
 3966 0018 00000000 		.4byte	.LFB64
 3967 001c 9C000000 		.4byte	.LFE64-.LFB64
 3968 0020 00000000 		.4byte	.LFB65
 3969 0024 28010000 		.4byte	.LFE65-.LFB65
 3970 0028 00000000 		.4byte	.LFB66
 3971 002c 78000000 		.4byte	.LFE66-.LFB66
 3972 0030 00000000 		.4byte	.LFB67
 3973 0034 48000000 		.4byte	.LFE67-.LFB67
 3974 0038 00000000 		.4byte	.LFB68
 3975 003c 3C000000 		.4byte	.LFE68-.LFB68
 3976 0040 00000000 		.4byte	.LFB71
 3977 0044 94000000 		.4byte	.LFE71-.LFB71
 3978 0048 00000000 		.4byte	.LFB72
 3979 004c 64030000 		.4byte	.LFE72-.LFB72
 3980 0050 00000000 		.4byte	.LFB70
 3981 0054 AC020000 		.4byte	.LFE70-.LFB70
 3982 0058 00000000 		.4byte	0
 3983 005c 00000000 		.4byte	0
 3984              		.section	.debug_ranges,"",%progbits
 3985              	.Ldebug_ranges0:
 3986 0000 4C000000 		.4byte	.LBB2
 3987 0004 4E000000 		.4byte	.LBE2
 3988 0008 50000000 		.4byte	.LBB3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 85


 3989 000c 76000000 		.4byte	.LBE3
 3990 0010 00000000 		.4byte	0
 3991 0014 00000000 		.4byte	0
 3992 0018 00000000 		.4byte	.LFB69
 3993 001c 0C000000 		.4byte	.LFE69
 3994 0020 00000000 		.4byte	.LFB64
 3995 0024 9C000000 		.4byte	.LFE64
 3996 0028 00000000 		.4byte	.LFB65
 3997 002c 28010000 		.4byte	.LFE65
 3998 0030 00000000 		.4byte	.LFB66
 3999 0034 78000000 		.4byte	.LFE66
 4000 0038 00000000 		.4byte	.LFB67
 4001 003c 48000000 		.4byte	.LFE67
 4002 0040 00000000 		.4byte	.LFB68
 4003 0044 3C000000 		.4byte	.LFE68
 4004 0048 00000000 		.4byte	.LFB71
 4005 004c 94000000 		.4byte	.LFE71
 4006 0050 00000000 		.4byte	.LFB72
 4007 0054 64030000 		.4byte	.LFE72
 4008 0058 00000000 		.4byte	.LFB70
 4009 005c AC020000 		.4byte	.LFE70
 4010 0060 00000000 		.4byte	0
 4011 0064 00000000 		.4byte	0
 4012              		.section	.debug_line,"",%progbits
 4013              	.Ldebug_line0:
 4014 0000 66050000 		.section	.debug_str,"MS",%progbits,1
 4014      0200CD02 
 4014      00000201 
 4014      FB0E0D00 
 4014      01010101 
 4015              	.LASF81:
 4016 0000 55534255 		.ascii	"USBUART_CDCIsReady\000"
 4016      4152545F 
 4016      43444349 
 4016      73526561 
 4016      647900
 4017              	.LASF23:
 4018 0013 636F6E63 		.ascii	"concatCount\000"
 4018      6174436F 
 4018      756E7400 
 4019              	.LASF41:
 4020 001f 7472616E 		.ascii	"transmitData\000"
 4020      736D6974 
 4020      44617461 
 4020      00
 4021              	.LASF39:
 4022 002c 6C6F7746 		.ascii	"lowFlag\000"
 4022      6C616700 
 4023              	.LASF76:
 4024 0034 49444C45 		.ascii	"IDLE_Read\000"
 4024      5F526561 
 4024      6400
 4025              	.LASF88:
 4026 003e 54696D65 		.ascii	"TimerTX_Stop\000"
 4026      7254585F 
 4026      53746F70 
 4026      00
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 86


 4027              	.LASF80:
 4028 004b 434F4C4C 		.ascii	"COLLISION_Read\000"
 4028      4953494F 
 4028      4E5F5265 
 4028      616400
 4029              	.LASF90:
 4030 005a 52697369 		.ascii	"RisingEdgeISR_StartEx\000"
 4030      6E674564 
 4030      67654953 
 4030      525F5374 
 4030      61727445 
 4031              	.LASF20:
 4032 0070 49444C45 		.ascii	"IDLE\000"
 4032      00
 4033              	.LASF51:
 4034 0075 636F6C6C 		.ascii	"collisionLock\000"
 4034      6973696F 
 4034      6E4C6F63 
 4034      6B00
 4035              	.LASF25:
 4036 0083 52656365 		.ascii	"ReceiveInterruptHandler\000"
 4036      69766549 
 4036      6E746572 
 4036      72757074 
 4036      48616E64 
 4037              	.LASF2:
 4038 009b 73686F72 		.ascii	"short int\000"
 4038      7420696E 
 4038      7400
 4039              	.LASF34:
 4040 00a5 696E7075 		.ascii	"input\000"
 4040      7400
 4041              	.LASF19:
 4042 00ab 73697A65 		.ascii	"sizetype\000"
 4042      74797065 
 4042      00
 4043              	.LASF28:
 4044 00b4 72616E64 		.ascii	"randNum\000"
 4044      4E756D00 
 4045              	.LASF35:
 4046 00bc 5F5F6374 		.ascii	"__ctype_ptr__\000"
 4046      7970655F 
 4046      7074725F 
 4046      5F00
 4047              	.LASF72:
 4048 00ca 54696D65 		.ascii	"Timer_WritePeriod\000"
 4048      725F5772 
 4048      69746550 
 4048      6572696F 
 4048      6400
 4049              	.LASF55:
 4050 00dc 63726355 		.ascii	"crcUsage\000"
 4050      73616765 
 4050      00
 4051              	.LASF107:
 4052 00e5 6D61696E 		.ascii	"main\000"
 4052      00
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 87


 4053              	.LASF73:
 4054 00ea 54696D65 		.ascii	"Timer_WriteCounter\000"
 4054      725F5772 
 4054      69746543 
 4054      6F756E74 
 4054      657200
 4055              	.LASF4:
 4056 00fd 5F5F7569 		.ascii	"__uint16_t\000"
 4056      6E743136 
 4056      5F7400
 4057              	.LASF98:
 4058 0108 436F6C6C 		.ascii	"CollisionDelayISR_StartEx\000"
 4058      6973696F 
 4058      6E44656C 
 4058      61794953 
 4058      525F5374 
 4059              	.LASF66:
 4060 0122 54696D65 		.ascii	"TimerRX_Stop\000"
 4060      7252585F 
 4060      53746F70 
 4060      00
 4061              	.LASF99:
 4062 012f 55534255 		.ascii	"USBUART_Start\000"
 4062      4152545F 
 4062      53746172 
 4062      7400
 4063              	.LASF59:
 4064 013d 64617461 		.ascii	"dataSize\000"
 4064      53697A65 
 4064      00
 4065              	.LASF77:
 4066 0146 42555359 		.ascii	"BUSY_Write\000"
 4066      5F577269 
 4066      746500
 4067              	.LASF91:
 4068 0151 46616C6C 		.ascii	"FallingEdgeISR_StartEx\000"
 4068      696E6745 
 4068      64676549 
 4068      53525F53 
 4068      74617274 
 4069              	.LASF13:
 4070 0168 75696E74 		.ascii	"uint8\000"
 4070      3800
 4071              	.LASF50:
 4072 016e 72656365 		.ascii	"receiveLock\000"
 4072      6976654C 
 4072      6F636B00 
 4073              	.LASF69:
 4074 017a 436F6C6C 		.ascii	"CollisionDelay_WritePeriod\000"
 4074      6973696F 
 4074      6E44656C 
 4074      61795F57 
 4074      72697465 
 4075              	.LASF33:
 4076 0195 696E436F 		.ascii	"inCount\000"
 4076      756E7400 
 4077              	.LASF71:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 88


 4078 019d 436F6C6C 		.ascii	"CollisionDelay_Start\000"
 4078      6973696F 
 4078      6E44656C 
 4078      61795F53 
 4078      74617274 
 4079              	.LASF83:
 4080 01b2 55534255 		.ascii	"USBUART_PutString\000"
 4080      4152545F 
 4080      50757453 
 4080      7472696E 
 4080      6700
 4081              	.LASF61:
 4082 01c4 72656365 		.ascii	"receiveBitCount\000"
 4082      69766542 
 4082      6974436F 
 4082      756E7400 
 4083              	.LASF44:
 4084 01d4 72656365 		.ascii	"receiveData\000"
 4084      69766544 
 4084      61746100 
 4085              	.LASF14:
 4086 01e0 666C6F61 		.ascii	"float\000"
 4086      7400
 4087              	.LASF100:
 4088 01e6 55534255 		.ascii	"USBUART_GetConfiguration\000"
 4088      4152545F 
 4088      47657443 
 4088      6F6E6669 
 4088      67757261 
 4089              	.LASF70:
 4090 01ff 436F6C6C 		.ascii	"CollisionDelay_WriteCounter\000"
 4090      6973696F 
 4090      6E44656C 
 4090      61795F57 
 4090      72697465 
 4091              	.LASF8:
 4092 021b 6C6F6E67 		.ascii	"long long int\000"
 4092      206C6F6E 
 4092      6720696E 
 4092      7400
 4093              	.LASF74:
 4094 0229 54696D65 		.ascii	"Timer_Start\000"
 4094      725F5374 
 4094      61727400 
 4095              	.LASF6:
 4096 0235 6C6F6E67 		.ascii	"long int\000"
 4096      20696E74 
 4096      00
 4097              	.LASF31:
 4098 023e 73746174 		.ascii	"stateDiagram\000"
 4098      65446961 
 4098      6772616D 
 4098      00
 4099              	.LASF62:
 4100 024b 7472616E 		.ascii	"transmitAddress\000"
 4100      736D6974 
 4100      41646472 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 89


 4100      65737300 
 4101              	.LASF36:
 4102 025b 55534255 		.ascii	"USBUART_device\000"
 4102      4152545F 
 4102      64657669 
 4102      636500
 4103              	.LASF93:
 4104 026a 54696D65 		.ascii	"TimerTX_WritePeriod\000"
 4104      7254585F 
 4104      57726974 
 4104      65506572 
 4104      696F6400 
 4105              	.LASF30:
 4106 027e 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 4106      696E6745 
 4106      64676549 
 4106      6E746572 
 4106      72757074 
 4107              	.LASF27:
 4108 029a 54696D65 		.ascii	"TimerInterruptHandler\000"
 4108      72496E74 
 4108      65727275 
 4108      70744861 
 4108      6E646C65 
 4109              	.LASF105:
 4110 02b0 73746174 		.ascii	"state\000"
 4110      6500
 4111              	.LASF21:
 4112 02b6 434F4C4C 		.ascii	"COLLISION\000"
 4112      4953494F 
 4112      4E00
 4113              	.LASF47:
 4114 02c0 64617461 		.ascii	"dataBitsRead\000"
 4114      42697473 
 4114      52656164 
 4114      00
 4115              	.LASF18:
 4116 02cd 6C6F6E67 		.ascii	"long double\000"
 4116      20646F75 
 4116      626C6500 
 4117              	.LASF60:
 4118 02d9 7472616E 		.ascii	"transmitBitCount\000"
 4118      736D6974 
 4118      42697443 
 4118      6F756E74 
 4118      00
 4119              	.LASF63:
 4120 02ea 7472616E 		.ascii	"transmitMode\000"
 4120      736D6974 
 4120      4D6F6465 
 4120      00
 4121              	.LASF1:
 4122 02f7 756E7369 		.ascii	"unsigned char\000"
 4122      676E6564 
 4122      20636861 
 4122      7200
 4123              	.LASF38:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 90


 4124 0305 73797374 		.ascii	"systemState\000"
 4124      656D5374 
 4124      61746500 
 4125              	.LASF94:
 4126 0311 54696D65 		.ascii	"TimerTX_WriteCounter\000"
 4126      7254585F 
 4126      57726974 
 4126      65436F75 
 4126      6E746572 
 4127              	.LASF0:
 4128 0326 7369676E 		.ascii	"signed char\000"
 4128      65642063 
 4128      68617200 
 4129              	.LASF52:
 4130 0332 736F7572 		.ascii	"sourceAddress\000"
 4130      63654164 
 4130      64726573 
 4130      7300
 4131              	.LASF9:
 4132 0340 6C6F6E67 		.ascii	"long long unsigned int\000"
 4132      206C6F6E 
 4132      6720756E 
 4132      7369676E 
 4132      65642069 
 4133              	.LASF104:
 4134 0357 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 4134      73657273 
 4134      5C77696E 
 4134      73746F6E 
 4134      615C446F 
 4135 0385 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 4135      726B696E 
 4135      6720495C 
 4135      63653439 
 4135      35306C61 
 4136              	.LASF10:
 4137 03b4 756E7369 		.ascii	"unsigned int\000"
 4137      676E6564 
 4137      20696E74 
 4137      00
 4138              	.LASF11:
 4139 03c1 75696E74 		.ascii	"uint16_t\000"
 4139      31365F74 
 4139      00
 4140              	.LASF7:
 4141 03ca 6C6F6E67 		.ascii	"long unsigned int\000"
 4141      20756E73 
 4141      69676E65 
 4141      6420696E 
 4141      7400
 4142              	.LASF87:
 4143 03dc 54696D65 		.ascii	"TimerTX_Start\000"
 4143      7254585F 
 4143      53746172 
 4143      7400
 4144              	.LASF48:
 4145 03ea 64617461 		.ascii	"dataPtr\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 91


 4145      50747200 
 4146              	.LASF92:
 4147 03f2 52656365 		.ascii	"ReceiveISR_StartEx\000"
 4147      69766549 
 4147      53525F53 
 4147      74617274 
 4147      457800
 4148              	.LASF46:
 4149 0405 72656365 		.ascii	"receivePosition\000"
 4149      69766550 
 4149      6F736974 
 4149      696F6E00 
 4150              	.LASF22:
 4151 0415 42555359 		.ascii	"BUSY\000"
 4151      00
 4152              	.LASF95:
 4153 041a 5472616E 		.ascii	"TransmitISR_StartEx\000"
 4153      736D6974 
 4153      4953525F 
 4153      53746172 
 4153      74457800 
 4154              	.LASF16:
 4155 042e 63686172 		.ascii	"char\000"
 4155      00
 4156              	.LASF40:
 4157 0433 5F426F6F 		.ascii	"_Bool\000"
 4157      6C00
 4158              	.LASF12:
 4159 0439 696E7433 		.ascii	"int32_t\000"
 4159      325F7400 
 4160              	.LASF3:
 4161 0441 73686F72 		.ascii	"short unsigned int\000"
 4161      7420756E 
 4161      7369676E 
 4161      65642069 
 4161      6E7400
 4162              	.LASF75:
 4163 0454 49444C45 		.ascii	"IDLE_Write\000"
 4163      5F577269 
 4163      746500
 4164              	.LASF97:
 4165 045f 54696D65 		.ascii	"TimerRX_WritePeriod\000"
 4165      7252585F 
 4165      57726974 
 4165      65506572 
 4165      696F6400 
 4166              	.LASF84:
 4167 0473 55534255 		.ascii	"USBUART_PutChar\000"
 4167      4152545F 
 4167      50757443 
 4167      68617200 
 4168              	.LASF26:
 4169 0483 5472616E 		.ascii	"TransmitInterruptHandler\000"
 4169      736D6974 
 4169      496E7465 
 4169      72727570 
 4169      7448616E 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 92


 4170              	.LASF42:
 4171 049c 62756666 		.ascii	"buffer\000"
 4171      657200
 4172              	.LASF78:
 4173 04a3 434F4C4C 		.ascii	"COLLISION_Write\000"
 4173      4953494F 
 4173      4E5F5772 
 4173      69746500 
 4174              	.LASF103:
 4175 04b3 6D61696E 		.ascii	"main.c\000"
 4175      2E6300
 4176              	.LASF17:
 4177 04ba 72656738 		.ascii	"reg8\000"
 4177      00
 4178              	.LASF58:
 4179 04bf 63757272 		.ascii	"currentChar\000"
 4179      656E7443 
 4179      68617200 
 4180              	.LASF43:
 4181 04cb 72656365 		.ascii	"receiveBuffer\000"
 4181      69766542 
 4181      75666665 
 4181      7200
 4182              	.LASF15:
 4183 04d9 646F7562 		.ascii	"double\000"
 4183      6C6500
 4184              	.LASF65:
 4185 04e0 52454345 		.ascii	"RECEIVE_Read\000"
 4185      4956455F 
 4185      52656164 
 4185      00
 4186              	.LASF32:
 4187 04ed 63686563 		.ascii	"checkForNewData\000"
 4187      6B466F72 
 4187      4E657744 
 4187      61746100 
 4188              	.LASF54:
 4189 04fd 6D657373 		.ascii	"messageLength\000"
 4189      6167654C 
 4189      656E6774 
 4189      6800
 4190              	.LASF79:
 4191 050b 42555359 		.ascii	"BUSY_Read\000"
 4191      5F526561 
 4191      6400
 4192              	.LASF5:
 4193 0515 5F5F696E 		.ascii	"__int32_t\000"
 4193      7433325F 
 4193      7400
 4194              	.LASF68:
 4195 051f 72616E64 		.ascii	"rand\000"
 4195      00
 4196              	.LASF67:
 4197 0524 5452414E 		.ascii	"TRANSMIT_Write\000"
 4197      534D4954 
 4197      5F577269 
 4197      746500
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 93


 4198              	.LASF56:
 4199 0533 68656164 		.ascii	"headerCRC\000"
 4199      65724352 
 4199      4300
 4200              	.LASF57:
 4201 053d 61646472 		.ascii	"addressZeroReceive\000"
 4201      6573735A 
 4201      65726F52 
 4201      65636569 
 4201      766500
 4202              	.LASF24:
 4203 0550 63686172 		.ascii	"characterRX\000"
 4203      61637465 
 4203      72525800 
 4204              	.LASF64:
 4205 055c 54696D65 		.ascii	"TimerRX_Start\000"
 4205      7252585F 
 4205      53746172 
 4205      7400
 4206              	.LASF82:
 4207 056a 55534255 		.ascii	"USBUART_PutCRLF\000"
 4207      4152545F 
 4207      50757443 
 4207      524C4600 
 4208              	.LASF45:
 4209 057a 706F7369 		.ascii	"position\000"
 4209      74696F6E 
 4209      00
 4210              	.LASF86:
 4211 0583 55534255 		.ascii	"USBUART_GetChar\000"
 4211      4152545F 
 4211      47657443 
 4211      68617200 
 4212              	.LASF101:
 4213 0593 55534255 		.ascii	"USBUART_CDC_Init\000"
 4213      4152545F 
 4213      4344435F 
 4213      496E6974 
 4213      00
 4214              	.LASF96:
 4215 05a4 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 4215      7252585F 
 4215      57726974 
 4215      65436F75 
 4215      6E746572 
 4216              	.LASF37:
 4217 05b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4217      52784275 
 4217      66666572 
 4217      00
 4218              	.LASF102:
 4219 05c6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4219      43313120 
 4219      352E342E 
 4219      31203230 
 4219      31363036 
 4220 05f9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccGj21tg.s 			page 94


 4220      20726576 
 4220      6973696F 
 4220      6E203233 
 4220      37373135 
 4221 062c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4221      66756E63 
 4221      74696F6E 
 4221      2D736563 
 4221      74696F6E 
 4222              	.LASF89:
 4223 0654 54696D65 		.ascii	"TimerISR_StartEx\000"
 4223      72495352 
 4223      5F537461 
 4223      72744578 
 4223      00
 4224              	.LASF29:
 4225 0665 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 4225      6E674564 
 4225      6765496E 
 4225      74657272 
 4225      75707448 
 4226              	.LASF53:
 4227 0680 64657374 		.ascii	"destinationAddress\000"
 4227      696E6174 
 4227      696F6E41 
 4227      64647265 
 4227      737300
 4228              	.LASF49:
 4229 0693 7472616E 		.ascii	"transmitLock\000"
 4229      736D6974 
 4229      4C6F636B 
 4229      00
 4230              	.LASF85:
 4231 06a0 55534255 		.ascii	"USBUART_DataIsReady\000"
 4231      4152545F 
 4231      44617461 
 4231      49735265 
 4231      61647900 
 4232              	.LASF106:
 4233 06b4 436F6C6C 		.ascii	"CollisionDelayInterruptHandler\000"
 4233      6973696F 
 4233      6E44656C 
 4233      6179496E 
 4233      74657272 
 4234              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
