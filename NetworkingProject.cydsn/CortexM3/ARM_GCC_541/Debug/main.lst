ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CollisionDelayInterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	CollisionDelayInterruptHandler
  22              		.thumb
  23              		.thumb_func
  24              		.type	CollisionDelayInterruptHandler, %function
  25              	CollisionDelayInterruptHandler:
  26              	.LFB69:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - systemState machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdio.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <stdbool.h>
  26:main.c        **** 
  27:main.c        **** //States include: 
  28:main.c        **** //Busy - signals that the channel monitor is busy
  29:main.c        **** //       and in either line high or line low 
  30:main.c        **** //Collision - collision detected, line high
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 2


  31:main.c        **** //Idle - initialized state looking for rising
  32:main.c        **** //       edge to occur
  33:main.c        **** enum state {IDLE, COLLISION, BUSY} systemState;
  34:main.c        **** 
  35:main.c        **** //flag to help determine if signal level is low or high
  36:main.c        **** _Bool lowFlag = 0;
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** 
  41:main.c        **** #define BROADCAST_ADDRESS 0
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        **** #define VERSION_NUMBER 0x01
  45:main.c        **** #define CRC 128 //CRCs are not being used
  46:main.c        **** #define HEADER 0b1110111 //header CRC not being used 
  47:main.c        **** #define BLANK_MESSAGE_CRC 0x77
  48:main.c        **** #define COLLISION_PERIOD     52
  49:main.c        **** #define COLLISION_COUNTER    51
  50:main.c        **** #define IDLE_PERIOD     830
  51:main.c        **** #define IDLE_COUNTER    829
  52:main.c        **** #define RECEIVE_PERIOD   52
  53:main.c        **** #define RECEIVE_COUNTER  51
  54:main.c        **** #define TRANSMIT_PERIOD     47
  55:main.c        **** #define TRANSMIT_COUNTER    46 
  56:main.c        **** #define BUFFER_SIZE 500
  57:main.c        **** //student assigned addressses
  58:main.c        **** #define ADDR1Start 0x60 //46
  59:main.c        **** #define ADDR2Start 55
  60:main.c        **** #define ADDR3Start 124 //Kamith didn't have one listed so gave him 124
  61:main.c        **** #define ADDRLength 2
  62:main.c        **** 
  63:main.c        **** #define MESSAGE_POS 7
  64:main.c        **** #define HEADER_SIZE
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** unsigned char transmitData[BUFFER_SIZE][16];
  68:main.c        **** unsigned char buffer[BUFFER_SIZE];
  69:main.c        **** unsigned char receiveBuffer[BUFFER_SIZE];
  70:main.c        **** unsigned char receiveData[16]; 
  71:main.c        **** volatile int position = 0;
  72:main.c        **** int receivePosition = 0;
  73:main.c        **** int dataBitsRead = 0;
  74:main.c        **** int idx = 0;
  75:main.c        **** char* dataPtr;
  76:main.c        **** int transmitLock = 0; // High when transmitting
  77:main.c        **** int receiveLock = 0;
  78:main.c        **** bool collisionLock = false; // High when collision should not.
  79:main.c        **** //int startHeaderReceieved = 0;
  80:main.c        **** //int verNumMatch = 0;
  81:main.c        **** char sourceAddress = 0x00;
  82:main.c        **** char destinationAddress = 0x00;
  83:main.c        **** int  messageLength = 0;
  84:main.c        **** char crcUsage = 0x00;
  85:main.c        **** char headerCRC = 0x00;
  86:main.c        **** int addressZeroReceive = 0;
  87:main.c        **** char currentChar;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 3


  88:main.c        **** int dataSize;
  89:main.c        **** int transmitBitCount = 0;
  90:main.c        **** int receiveBitCount = 0;
  91:main.c        **** int concatCount = 0;
  92:main.c        **** unsigned char transmitAddress = 0; 
  93:main.c        **** 
  94:main.c        **** bool transmitMode = true; // Whether currently transmitting or receiving
  95:main.c        **** 
  96:main.c        **** void checkForNewData(); 
  97:main.c        **** void stateDiagram(); 
  98:main.c        **** 
  99:main.c        **** /*******************************************************************************
 100:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
 101:main.c        **** ********************************************************************************/
 102:main.c        **** 
 103:main.c        ****  /**********************************************************
 104:main.c        ****  * function name: ReceiveInterruptHandler
 105:main.c        ****  * operation: Handles interrupt timer if the timer expires
 106:main.c        ****  *            indicates an idle condition or colllision
 107:main.c        ****  *            reads the logic levon the input pin/signal
 108:main.c        ****  *            high -> collision set
 109:main.c        ****  *            low -> idle set
 110:main.c        ****  * inputs: none
 111:main.c        ****  * returns: none
 112:main.c        ****  * implemented: 14 Dec 2017
 113:main.c        ****  * edited:
 114:main.c        ****  *********************************************************/ 
 115:main.c        **** 
 116:main.c        **** // TODO Code needs to be added to accept signals at
 117:main.c        **** // various speeds. The documentation states that the signal
 118:main.c        **** // MUST be tolerated at speeds of ±1.32%, and MUST NOT be
 119:main.c        **** // tolerated at speeds of ±8% or so. See standard specification
 120:main.c        **** // for more details.
 121:main.c        **** 
 122:main.c        **** // TODO Move characterRX logic into RX_Bit_Counter
 123:main.c        **** // incrementation section of code. This will make
 124:main.c        **** // this ISR more efficient.
 125:main.c        **** CY_ISR(ReceiveInterruptHandler){
 126:main.c        ****     int concatCount = 0;
 127:main.c        ****     char characterRX = 0;
 128:main.c        ****     
 129:main.c        ****     TimerRX_STATUS; 
 130:main.c        ****     
 131:main.c        ****     if(systemState != COLLISION){
 132:main.c        ****         TimerRX_Start();
 133:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
 134:main.c        ****         ++receiveBitCount;
 135:main.c        ****         
 136:main.c        ****     }else{
 137:main.c        ****         
 138:main.c        ****         receiveBitCount = 0;   
 139:main.c        ****         receivePosition = 0;
 140:main.c        ****         dataBitsRead = 0;
 141:main.c        ****         TimerRX_Stop();
 142:main.c        ****         receiveLock = 0;
 143:main.c        ****     }
 144:main.c        ****     
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 4


 145:main.c        ****     if(receiveBitCount >= 15 ){
 146:main.c        ****         receiveBitCount = 0;
 147:main.c        ****         TimerRX_Stop();
 148:main.c        ****         receiveLock = 0;
 149:main.c        ****         
 150:main.c        ****         
 151:main.c        ****         for(int x = 15; x >= 0; x--){
 152:main.c        ****             if(x == 15){
 153:main.c        ****              characterRX = 0x00;    
 154:main.c        ****             }
 155:main.c        ****             if(x % 2 != 0){
 156:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 157:main.c        ****                 ++concatCount;
 158:main.c        ****             }
 159:main.c        ****         }
 160:main.c        ****         receiveBuffer[receivePosition] = characterRX;
 161:main.c        ****         ++receivePosition;
 162:main.c        ****        
 163:main.c        ****     }
 164:main.c        **** }
 165:main.c        **** 
 166:main.c        ****  /**********************************************************
 167:main.c        ****  * function name: ReceiveInterruptHandler
 168:main.c        ****  * operation: Handles the transmit interrupt.
 169:main.c        **** Fires each time we need to transmit.
 170:main.c        ****  * inputs: none
 171:main.c        ****  * returns: none
 172:main.c        ****  * implemented: 14 Dec 2017
 173:main.c        ****  * edited:
 174:main.c        ****  *********************************************************/ 
 175:main.c        **** CY_ISR(TransmitInterruptHandler)
 176:main.c        **** {
 177:main.c        **** 	TimerTX_STATUS; 
 178:main.c        ****     if (position >= dataSize) {
 179:main.c        ****         return;
 180:main.c        ****     }
 181:main.c        **** 	currentChar = buffer[position];
 182:main.c        **** 
 183:main.c        ****     if (!collisionLock) {
 184:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 185:main.c        ****     		if(transmitBitCount == 0){
 186:main.c        ****     			TRANSMIT_Write(1);
 187:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 188:main.c        ****     		}else if(transmitBitCount%2 != 0){
 189:main.c        ****     			TRANSMIT_Write(0);
 190:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 191:main.c        ****     		}else{
 192:main.c        ****     			if(currentChar & (1<<(6-idx))){
 193:main.c        ****     				TRANSMIT_Write(1);
 194:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 195:main.c        ****     			}else{
 196:main.c        ****     				TRANSMIT_Write(0);
 197:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 198:main.c        ****     			}
 199:main.c        ****     				++idx;
 200:main.c        ****     		}
 201:main.c        ****         }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 5


 202:main.c        ****         // CyDelayUs(495);
 203:main.c        ****         ++transmitBitCount;
 204:main.c        ****         if(transmitBitCount >= 16){
 205:main.c        **** 		    ++position;
 206:main.c        **** 		    idx = 0;
 207:main.c        **** 		    transmitBitCount = 0;
 208:main.c        ****             transmitLock = 0;
 209:main.c        ****             TRANSMIT_Write(0);
 210:main.c        **** 
 211:main.c        ****         }
 212:main.c        ****     } else {
 213:main.c        ****         position = 0;
 214:main.c        ****         transmitBitCount = 0;
 215:main.c        ****     }
 216:main.c        **** }
 217:main.c        **** 
 218:main.c        **** 
 219:main.c        ****  /**********************************************************
 220:main.c        ****  * function name: TimerInterruptHandler
 221:main.c        ****  * operation: When a node that is transmitting and detects 
 222:main.c        ****  *            a collision, the node shall stop transmitting
 223:main.c        ****  *            and wait a random amount of time between 0
 224:main.c        ****  *            and 1.000 second (s), and then determine if
 225:main.c        ****  *            the bus is idle and if so begin a retrans.
 226:main.c        ****  * inputs: none
 227:main.c        ****  * returns: none
 228:main.c        ****  * implemented: 14 Dec 2017
 229:main.c        ****  * edited:
 230:main.c        ****  *********************************************************/
 231:main.c        **** 
 232:main.c        **** //TODO: WORK ON THE TRYING REATTEMPT UP TO 10 TIMES
 233:main.c        **** CY_ISR(TimerInterruptHandler)
 234:main.c        **** {     
 235:main.c        ****    	Timer_STATUS; 
 236:main.c        ****     
 237:main.c        ****     if (!(lowFlag) ){
 238:main.c        ****         systemState = IDLE;
 239:main.c        ****          transmitLock = 1;
 240:main.c        ****     } else {
 241:main.c        ****         systemState = COLLISION;
 242:main.c        ****         TRANSMIT_Write(0); 
 243:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 244:main.c        ****         collisionLock = 1; // Collision
 245:main.c        ****         position = 0; // Start over entire packet.
 246:main.c        ****         receivePosition = 0;
 247:main.c        ****         
 248:main.c        ****         uint16_t randNum = (uint16_t)((float)rand() / RAND_MAX * 1000);
 249:main.c        ****         CollisionDelay_WritePeriod(randNum);
 250:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 251:main.c        ****         CollisionDelay_Start();
 252:main.c        ****     }
 253:main.c        **** }
 254:main.c        **** 
 255:main.c        **** 
 256:main.c        ****  /**********************************************************
 257:main.c        ****  * function name: RisingEdgeInterruptHandler
 258:main.c        ****  * operation: Handles interrupt for when a rising edge on 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 6


 259:main.c        ****  *            the timer occurs. Triggers system to look for
 260:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 261:main.c        ****  *            interupt to occur in .6ms and sets state to 
 262:main.c        ****  *            busy
 263:main.c        ****  * inputs: none
 264:main.c        ****  * returns: none
 265:main.c        ****  * implemented: 14 Dec 2017
 266:main.c        ****  * edited:
 267:main.c        ****  *********************************************************/ 
 268:main.c        **** 
 269:main.c        **** // TODO Fix "race against time" between ReceiveInterruptHandler ant his.
 270:main.c        **** // If this wins the race, then RX_Bit_Counter doesn't increment properly.
 271:main.c        **** // This is the reason why code didn't work well at higher speeds.
 272:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 273:main.c        **** {
 274:main.c        ****     if ((!lowFlag)){
 275:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 276:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 277:main.c        ****         Timer_Start();
 278:main.c        ****         lowFlag = 1;
 279:main.c        ****         systemState = BUSY;
 280:main.c        ****     }
 281:main.c        ****     if(receiveLock == 0){
 282:main.c        ****         TimerRX_Start();
 283:main.c        ****         receiveLock = 1;
 284:main.c        ****         
 285:main.c        ****     }
 286:main.c        **** }
 287:main.c        ****  
 288:main.c        ****  /**********************************************************
 289:main.c        ****  * function name: FallingEdgeInterruptHandler
 290:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 291:main.c        ****  *            the timer occurs. Triggers system to look for
 292:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 293:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 294:main.c        ****  *            busy
 295:main.c        ****  * inputs: none
 296:main.c        ****  * returns: none
 297:main.c        ****  * implemented: 14 Dec 2017
 298:main.c        ****  * edited:
 299:main.c        ****  *********************************************************/ 
 300:main.c        **** // TODO This could also contribute to the "race against time" issue.
 301:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 302:main.c        **** {
 303:main.c        ****     if (lowFlag){
 304:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 305:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 306:main.c        ****         Timer_Start();
 307:main.c        ****         lowFlag = 0;
 308:main.c        ****         systemState = BUSY;
 309:main.c        ****     }
 310:main.c        **** }
 311:main.c        **** 
 312:main.c        **** /**
 313:main.c        **** This interrupt should fire after the random delay period of the timer after
 314:main.c        **** a collision has expired. All this does is tells the transmitter that it has
 315:main.c        **** the green light to transmit.
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 7


 316:main.c        **** */
 317:main.c        **** CY_ISR(CollisionDelayInterruptHandler)
 318:main.c        **** {
  28              		.loc 1 318 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 319:main.c        ****     collisionLock = false;
  33              		.loc 1 319 0
  34 0000 0022     		movs	r2, #0
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE69:
  44              		.size	CollisionDelayInterruptHandler, .-CollisionDelayInterruptHandler
  45              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
  46              		.align	2
  47              		.global	ReceiveInterruptHandler
  48              		.thumb
  49              		.thumb_func
  50              		.type	ReceiveInterruptHandler, %function
  51              	ReceiveInterruptHandler:
  52              	.LFB64:
 125:main.c        ****     int concatCount = 0;
  53              		.loc 1 125 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 38B5     		push	{r3, r4, r5, lr}
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 3, -16
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 5, -8
  62              		.cfi_offset 14, -4
  63              	.LVL0:
 129:main.c        ****     
  64              		.loc 1 129 0
  65 0002 1F4B     		ldr	r3, .L14
  66 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131:main.c        ****         TimerRX_Start();
  67              		.loc 1 131 0
  68 0006 1F4B     		ldr	r3, .L14+4
  69 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 000a 012B     		cmp	r3, #1
  71 000c 0BD0     		beq	.L5
 132:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
  72              		.loc 1 132 0
  73 000e FFF7FEFF 		bl	TimerRX_Start
  74              	.LVL1:
 133:main.c        ****         ++receiveBitCount;
  75              		.loc 1 133 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 8


  76 0012 1D4C     		ldr	r4, .L14+8
  77 0014 6568     		ldr	r5, [r4, #4]
  78 0016 FFF7FEFF 		bl	RECEIVE_Read
  79              	.LVL2:
  80 001a 1C4B     		ldr	r3, .L14+12
  81 001c 5855     		strb	r0, [r3, r5]
 134:main.c        ****         
  82              		.loc 1 134 0
  83 001e 6368     		ldr	r3, [r4, #4]
  84 0020 0133     		adds	r3, r3, #1
  85 0022 6360     		str	r3, [r4, #4]
  86 0024 07E0     		b	.L6
  87              	.L5:
 138:main.c        ****         receivePosition = 0;
  88              		.loc 1 138 0
  89 0026 184C     		ldr	r4, .L14+8
  90 0028 0025     		movs	r5, #0
  91 002a 6560     		str	r5, [r4, #4]
 139:main.c        ****         dataBitsRead = 0;
  92              		.loc 1 139 0
  93 002c A560     		str	r5, [r4, #8]
 140:main.c        ****         TimerRX_Stop();
  94              		.loc 1 140 0
  95 002e E560     		str	r5, [r4, #12]
 141:main.c        ****         receiveLock = 0;
  96              		.loc 1 141 0
  97 0030 FFF7FEFF 		bl	TimerRX_Stop
  98              	.LVL3:
 142:main.c        ****     }
  99              		.loc 1 142 0
 100 0034 2561     		str	r5, [r4, #16]
 101              	.L6:
 145:main.c        ****         receiveBitCount = 0;
 102              		.loc 1 145 0
 103 0036 144B     		ldr	r3, .L14+8
 104 0038 5B68     		ldr	r3, [r3, #4]
 105 003a 0E2B     		cmp	r3, #14
 106 003c 1FDD     		ble	.L4
 146:main.c        ****         TimerRX_Stop();
 107              		.loc 1 146 0
 108 003e 124D     		ldr	r5, .L14+8
 109 0040 0024     		movs	r4, #0
 110 0042 6C60     		str	r4, [r5, #4]
 147:main.c        ****         receiveLock = 0;
 111              		.loc 1 147 0
 112 0044 FFF7FEFF 		bl	TimerRX_Stop
 113              	.LVL4:
 148:main.c        ****         
 114              		.loc 1 148 0
 115 0048 2C61     		str	r4, [r5, #16]
 116              	.LVL5:
 117              	.LBB2:
 151:main.c        ****             if(x == 15){
 118              		.loc 1 151 0
 119 004a 0F23     		movs	r3, #15
 120              	.LBE2:
 127:main.c        ****     
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 9


 121              		.loc 1 127 0
 122 004c 2246     		mov	r2, r4
 126:main.c        ****     char characterRX = 0;
 123              		.loc 1 126 0
 124 004e 2046     		mov	r0, r4
 125              	.LBB3:
 151:main.c        ****             if(x == 15){
 126              		.loc 1 151 0
 127 0050 0DE0     		b	.L8
 128              	.LVL6:
 129              	.L11:
 152:main.c        ****              characterRX = 0x00;    
 130              		.loc 1 152 0
 131 0052 0F2B     		cmp	r3, #15
 132 0054 00D1     		bne	.L9
 153:main.c        ****             }
 133              		.loc 1 153 0
 134 0056 0022     		movs	r2, #0
 135              	.LVL7:
 136              	.L9:
 155:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 137              		.loc 1 155 0
 138 0058 13F0010F 		tst	r3, #1
 139 005c 06D0     		beq	.L10
 156:main.c        ****                 ++concatCount;
 140              		.loc 1 156 0
 141 005e 0B49     		ldr	r1, .L14+12
 142 0060 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 143 0062 441E     		subs	r4, r0, #1
 144 0064 A140     		lsls	r1, r1, r4
 145 0066 0A43     		orrs	r2, r2, r1
 146              	.LVL8:
 147 0068 D2B2     		uxtb	r2, r2
 148              	.LVL9:
 157:main.c        ****             }
 149              		.loc 1 157 0
 150 006a 0130     		adds	r0, r0, #1
 151              	.LVL10:
 152              	.L10:
 151:main.c        ****             if(x == 15){
 153              		.loc 1 151 0 discriminator 2
 154 006c 013B     		subs	r3, r3, #1
 155              	.LVL11:
 156              	.L8:
 151:main.c        ****             if(x == 15){
 157              		.loc 1 151 0 is_stmt 0 discriminator 1
 158 006e 002B     		cmp	r3, #0
 159 0070 EFDA     		bge	.L11
 160              	.LBE3:
 160:main.c        ****         ++receivePosition;
 161              		.loc 1 160 0 is_stmt 1
 162 0072 0549     		ldr	r1, .L14+8
 163 0074 8B68     		ldr	r3, [r1, #8]
 164              	.LVL12:
 165 0076 0648     		ldr	r0, .L14+16
 166              	.LVL13:
 167 0078 C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 10


 161:main.c        ****        
 168              		.loc 1 161 0
 169 007a 0133     		adds	r3, r3, #1
 170 007c 8B60     		str	r3, [r1, #8]
 171              	.LVL14:
 172              	.L4:
 173 007e 38BD     		pop	{r3, r4, r5, pc}
 174              	.L15:
 175              		.align	2
 176              	.L14:
 177 0080 67650040 		.word	1073767783
 178 0084 00000000 		.word	systemState
 179 0088 00000000 		.word	.LANCHOR0
 180 008c 00000000 		.word	receiveData
 181 0090 00000000 		.word	receiveBuffer
 182              		.cfi_endproc
 183              	.LFE64:
 184              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 185              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 186              		.align	2
 187              		.global	TransmitInterruptHandler
 188              		.thumb
 189              		.thumb_func
 190              		.type	TransmitInterruptHandler, %function
 191              	TransmitInterruptHandler:
 192              	.LFB65:
 176:main.c        **** 	TimerTX_STATUS; 
 193              		.loc 1 176 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 177:main.c        ****     if (position >= dataSize) {
 201              		.loc 1 177 0
 202 0002 3B4B     		ldr	r3, .L27
 203 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 178:main.c        ****         return;
 204              		.loc 1 178 0
 205 0006 3B4B     		ldr	r3, .L27+4
 206 0008 5A69     		ldr	r2, [r3, #20]
 207 000a 3B4B     		ldr	r3, .L27+8
 208 000c 1B68     		ldr	r3, [r3]
 209 000e 9A42     		cmp	r2, r3
 210 0010 6DDA     		bge	.L16
 181:main.c        **** 
 211              		.loc 1 181 0
 212 0012 384A     		ldr	r2, .L27+4
 213 0014 5169     		ldr	r1, [r2, #20]
 214 0016 3948     		ldr	r0, .L27+12
 215 0018 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 216 001a 3948     		ldr	r0, .L27+16
 217 001c 0170     		strb	r1, [r0]
 183:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 218              		.loc 1 183 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 11


 219 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 220 0020 002A     		cmp	r2, #0
 221 0022 60D1     		bne	.L18
 184:main.c        ****     		if(transmitBitCount == 0){
 222              		.loc 1 184 0
 223 0024 334A     		ldr	r2, .L27+4
 224 0026 5269     		ldr	r2, [r2, #20]
 225 0028 9342     		cmp	r3, r2
 226 002a 02DD     		ble	.L19
 184:main.c        ****     		if(transmitBitCount == 0){
 227              		.loc 1 184 0 is_stmt 0 discriminator 1
 228 002c 354B     		ldr	r3, .L27+20
 229 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230 0030 3BB1     		cbz	r3, .L20
 231              	.L19:
 184:main.c        ****     		if(transmitBitCount == 0){
 232              		.loc 1 184 0 discriminator 3
 233 0032 304B     		ldr	r3, .L27+4
 234 0034 9B69     		ldr	r3, [r3, #24]
 235 0036 002B     		cmp	r3, #0
 236 0038 44D0     		beq	.L21
 184:main.c        ****     		if(transmitBitCount == 0){
 237              		.loc 1 184 0 discriminator 4
 238 003a 324B     		ldr	r3, .L27+20
 239 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 003e 022B     		cmp	r3, #2
 241 0040 40D1     		bne	.L21
 242              	.L20:
 185:main.c        ****     			TRANSMIT_Write(1);
 243              		.loc 1 185 0 is_stmt 1
 244 0042 2C4B     		ldr	r3, .L27+4
 245 0044 DB69     		ldr	r3, [r3, #28]
 246 0046 5BB9     		cbnz	r3, .L22
 186:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 247              		.loc 1 186 0
 248 0048 0120     		movs	r0, #1
 249 004a FFF7FEFF 		bl	TRANSMIT_Write
 250              	.LVL15:
 187:main.c        ****     		}else if(transmitBitCount%2 != 0){
 251              		.loc 1 187 0
 252 004e 294A     		ldr	r2, .L27+4
 253 0050 5169     		ldr	r1, [r2, #20]
 254 0052 D269     		ldr	r2, [r2, #28]
 255 0054 2C4B     		ldr	r3, .L27+24
 256 0056 03EB0113 		add	r3, r3, r1, lsl #4
 257 005a 3121     		movs	r1, #49
 258 005c 9954     		strb	r1, [r3, r2]
 259 005e 31E0     		b	.L21
 260              	.L22:
 188:main.c        ****     			TRANSMIT_Write(0);
 261              		.loc 1 188 0
 262 0060 13F0010F 		tst	r3, #1
 263 0064 0BD0     		beq	.L23
 189:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 264              		.loc 1 189 0
 265 0066 0020     		movs	r0, #0
 266 0068 FFF7FEFF 		bl	TRANSMIT_Write
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 12


 267              	.LVL16:
 190:main.c        ****     		}else{
 268              		.loc 1 190 0
 269 006c 214A     		ldr	r2, .L27+4
 270 006e 5169     		ldr	r1, [r2, #20]
 271 0070 D269     		ldr	r2, [r2, #28]
 272 0072 254B     		ldr	r3, .L27+24
 273 0074 03EB0113 		add	r3, r3, r1, lsl #4
 274 0078 3021     		movs	r1, #48
 275 007a 9954     		strb	r1, [r3, r2]
 276 007c 22E0     		b	.L21
 277              	.L23:
 192:main.c        ****     				TRANSMIT_Write(1);
 278              		.loc 1 192 0
 279 007e 1D4B     		ldr	r3, .L27+4
 280 0080 1B6A     		ldr	r3, [r3, #32]
 281 0082 C3F10603 		rsb	r3, r3, #6
 282 0086 1941     		asrs	r1, r1, r3
 283 0088 11F0010F 		tst	r1, #1
 284 008c 0BD0     		beq	.L24
 193:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 285              		.loc 1 193 0
 286 008e 0120     		movs	r0, #1
 287 0090 FFF7FEFF 		bl	TRANSMIT_Write
 288              	.LVL17:
 194:main.c        ****     			}else{
 289              		.loc 1 194 0
 290 0094 174A     		ldr	r2, .L27+4
 291 0096 5169     		ldr	r1, [r2, #20]
 292 0098 D269     		ldr	r2, [r2, #28]
 293 009a 1B4B     		ldr	r3, .L27+24
 294 009c 03EB0113 		add	r3, r3, r1, lsl #4
 295 00a0 3121     		movs	r1, #49
 296 00a2 9954     		strb	r1, [r3, r2]
 297 00a4 0AE0     		b	.L25
 298              	.L24:
 196:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 299              		.loc 1 196 0
 300 00a6 0020     		movs	r0, #0
 301 00a8 FFF7FEFF 		bl	TRANSMIT_Write
 302              	.LVL18:
 197:main.c        ****     			}
 303              		.loc 1 197 0
 304 00ac 114A     		ldr	r2, .L27+4
 305 00ae 5169     		ldr	r1, [r2, #20]
 306 00b0 D269     		ldr	r2, [r2, #28]
 307 00b2 154B     		ldr	r3, .L27+24
 308 00b4 03EB0113 		add	r3, r3, r1, lsl #4
 309 00b8 3021     		movs	r1, #48
 310 00ba 9954     		strb	r1, [r3, r2]
 311              	.L25:
 199:main.c        ****     		}
 312              		.loc 1 199 0
 313 00bc 0D4A     		ldr	r2, .L27+4
 314 00be 136A     		ldr	r3, [r2, #32]
 315 00c0 0133     		adds	r3, r3, #1
 316 00c2 1362     		str	r3, [r2, #32]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 13


 317              	.L21:
 203:main.c        ****         if(transmitBitCount >= 16){
 318              		.loc 1 203 0
 319 00c4 0B4A     		ldr	r2, .L27+4
 320 00c6 D369     		ldr	r3, [r2, #28]
 321 00c8 0133     		adds	r3, r3, #1
 322 00ca D361     		str	r3, [r2, #28]
 204:main.c        **** 		    ++position;
 323              		.loc 1 204 0
 324 00cc 0F2B     		cmp	r3, #15
 325 00ce 0EDD     		ble	.L16
 205:main.c        **** 		    idx = 0;
 326              		.loc 1 205 0
 327 00d0 1346     		mov	r3, r2
 328 00d2 5269     		ldr	r2, [r2, #20]
 329 00d4 0132     		adds	r2, r2, #1
 330 00d6 5A61     		str	r2, [r3, #20]
 206:main.c        **** 		    transmitBitCount = 0;
 331              		.loc 1 206 0
 332 00d8 0020     		movs	r0, #0
 333 00da 1862     		str	r0, [r3, #32]
 207:main.c        ****             transmitLock = 0;
 334              		.loc 1 207 0
 335 00dc D861     		str	r0, [r3, #28]
 208:main.c        ****             TRANSMIT_Write(0);
 336              		.loc 1 208 0
 337 00de 9861     		str	r0, [r3, #24]
 209:main.c        **** 
 338              		.loc 1 209 0
 339 00e0 FFF7FEFF 		bl	TRANSMIT_Write
 340              	.LVL19:
 341 00e4 08BD     		pop	{r3, pc}
 342              	.L18:
 213:main.c        ****         transmitBitCount = 0;
 343              		.loc 1 213 0
 344 00e6 034B     		ldr	r3, .L27+4
 345 00e8 0022     		movs	r2, #0
 346 00ea 5A61     		str	r2, [r3, #20]
 214:main.c        ****     }
 347              		.loc 1 214 0
 348 00ec DA61     		str	r2, [r3, #28]
 349              	.L16:
 350 00ee 08BD     		pop	{r3, pc}
 351              	.L28:
 352              		.align	2
 353              	.L27:
 354 00f0 034F0040 		.word	1073762051
 355 00f4 00000000 		.word	.LANCHOR0
 356 00f8 00000000 		.word	dataSize
 357 00fc 00000000 		.word	buffer
 358 0100 00000000 		.word	currentChar
 359 0104 00000000 		.word	systemState
 360 0108 00000000 		.word	transmitData
 361              		.cfi_endproc
 362              	.LFE65:
 363              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 364              		.global	__aeabi_i2f
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 14


 365              		.global	__aeabi_fmul
 366              		.global	__aeabi_f2uiz
 367              		.section	.text.TimerInterruptHandler,"ax",%progbits
 368              		.align	2
 369              		.global	TimerInterruptHandler
 370              		.thumb
 371              		.thumb_func
 372              		.type	TimerInterruptHandler, %function
 373              	TimerInterruptHandler:
 374              	.LFB66:
 234:main.c        ****    	Timer_STATUS; 
 375              		.loc 1 234 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 235:main.c        ****     
 379              		.loc 1 235 0
 380 0000 184B     		ldr	r3, .L33
 381 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237:main.c        ****         systemState = IDLE;
 382              		.loc 1 237 0
 383 0004 184B     		ldr	r3, .L33+4
 384 0006 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 385 000a 33B9     		cbnz	r3, .L30
 238:main.c        ****          transmitLock = 1;
 386              		.loc 1 238 0
 387 000c 0022     		movs	r2, #0
 388 000e 174B     		ldr	r3, .L33+8
 389 0010 1A70     		strb	r2, [r3]
 239:main.c        ****     } else {
 390              		.loc 1 239 0
 391 0012 0122     		movs	r2, #1
 392 0014 144B     		ldr	r3, .L33+4
 393 0016 9A61     		str	r2, [r3, #24]
 394 0018 7047     		bx	lr
 395              	.L30:
 234:main.c        ****    	Timer_STATUS; 
 396              		.loc 1 234 0
 397 001a 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401              	.LBB4:
 241:main.c        ****         TRANSMIT_Write(0); 
 402              		.loc 1 241 0
 403 001c 0124     		movs	r4, #1
 404 001e 134B     		ldr	r3, .L33+8
 405 0020 1C70     		strb	r4, [r3]
 242:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 406              		.loc 1 242 0
 407 0022 0020     		movs	r0, #0
 408 0024 FFF7FEFF 		bl	TRANSMIT_Write
 409              	.LVL20:
 243:main.c        ****         collisionLock = 1; // Collision
 410              		.loc 1 243 0
 411 0028 0F4B     		ldr	r3, .L33+4
 412 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 15


 413 002c 9A61     		str	r2, [r3, #24]
 244:main.c        ****         position = 0; // Start over entire packet.
 414              		.loc 1 244 0
 415 002e 1C70     		strb	r4, [r3]
 245:main.c        ****         receivePosition = 0;
 416              		.loc 1 245 0
 417 0030 5A61     		str	r2, [r3, #20]
 246:main.c        ****         
 418              		.loc 1 246 0
 419 0032 9A60     		str	r2, [r3, #8]
 248:main.c        ****         CollisionDelay_WritePeriod(randNum);
 420              		.loc 1 248 0
 421 0034 FFF7FEFF 		bl	rand
 422              	.LVL21:
 423 0038 FFF7FEFF 		bl	__aeabi_i2f
 424              	.LVL22:
 425 003c 4FF04051 		mov	r1, #805306368
 426 0040 FFF7FEFF 		bl	__aeabi_fmul
 427              	.LVL23:
 428 0044 0A49     		ldr	r1, .L33+12
 429 0046 FFF7FEFF 		bl	__aeabi_fmul
 430              	.LVL24:
 431 004a FFF7FEFF 		bl	__aeabi_f2uiz
 432              	.LVL25:
 433 004e 84B2     		uxth	r4, r0
 434              	.LVL26:
 249:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 435              		.loc 1 249 0
 436 0050 2046     		mov	r0, r4
 437 0052 FFF7FEFF 		bl	CollisionDelay_WritePeriod
 438              	.LVL27:
 250:main.c        ****         CollisionDelay_Start();
 439              		.loc 1 250 0
 440 0056 601E     		subs	r0, r4, #1
 441 0058 80B2     		uxth	r0, r0
 442 005a FFF7FEFF 		bl	CollisionDelay_WriteCounter
 443              	.LVL28:
 251:main.c        ****     }
 444              		.loc 1 251 0
 445 005e FFF7FEFF 		bl	CollisionDelay_Start
 446              	.LVL29:
 447 0062 10BD     		pop	{r4, pc}
 448              	.LVL30:
 449              	.L34:
 450              		.align	2
 451              	.L33:
 452 0064 65650040 		.word	1073767781
 453 0068 00000000 		.word	.LANCHOR0
 454 006c 00000000 		.word	systemState
 455 0070 00007A44 		.word	1148846080
 456              	.LBE4:
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 460              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 461              		.align	2
 462              		.global	RisingEdgeInterruptHandler
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 16


 463              		.thumb
 464              		.thumb_func
 465              		.type	RisingEdgeInterruptHandler, %function
 466              	RisingEdgeInterruptHandler:
 467              	.LFB67:
 273:main.c        ****     if ((!lowFlag)){
 468              		.loc 1 273 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 274:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 476              		.loc 1 274 0
 477 0002 0E4B     		ldr	r3, .L39
 478 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 479 0008 73B9     		cbnz	r3, .L36
 275:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 480              		.loc 1 275 0
 481 000a 3420     		movs	r0, #52
 482 000c FFF7FEFF 		bl	Timer_WritePeriod
 483              	.LVL31:
 276:main.c        ****         Timer_Start();
 484              		.loc 1 276 0
 485 0010 3320     		movs	r0, #51
 486 0012 FFF7FEFF 		bl	Timer_WriteCounter
 487              	.LVL32:
 277:main.c        ****         lowFlag = 1;
 488              		.loc 1 277 0
 489 0016 FFF7FEFF 		bl	Timer_Start
 490              	.LVL33:
 278:main.c        ****         systemState = BUSY;
 491              		.loc 1 278 0
 492 001a 0122     		movs	r2, #1
 493 001c 074B     		ldr	r3, .L39
 494 001e 83F82420 		strb	r2, [r3, #36]
 279:main.c        ****     }
 495              		.loc 1 279 0
 496 0022 0222     		movs	r2, #2
 497 0024 064B     		ldr	r3, .L39+4
 498 0026 1A70     		strb	r2, [r3]
 499              	.L36:
 281:main.c        ****         TimerRX_Start();
 500              		.loc 1 281 0
 501 0028 044B     		ldr	r3, .L39
 502 002a 1B69     		ldr	r3, [r3, #16]
 503 002c 23B9     		cbnz	r3, .L35
 282:main.c        ****         receiveLock = 1;
 504              		.loc 1 282 0
 505 002e FFF7FEFF 		bl	TimerRX_Start
 506              	.LVL34:
 283:main.c        ****         
 507              		.loc 1 283 0
 508 0032 0122     		movs	r2, #1
 509 0034 014B     		ldr	r3, .L39
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 17


 510 0036 1A61     		str	r2, [r3, #16]
 511              	.L35:
 512 0038 08BD     		pop	{r3, pc}
 513              	.L40:
 514 003a 00BF     		.align	2
 515              	.L39:
 516 003c 00000000 		.word	.LANCHOR0
 517 0040 00000000 		.word	systemState
 518              		.cfi_endproc
 519              	.LFE67:
 520              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 521              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 522              		.align	2
 523              		.global	FallingEdgeInterruptHandler
 524              		.thumb
 525              		.thumb_func
 526              		.type	FallingEdgeInterruptHandler, %function
 527              	FallingEdgeInterruptHandler:
 528              	.LFB68:
 302:main.c        ****     if (lowFlag){
 529              		.loc 1 302 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 303:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 537              		.loc 1 303 0
 538 0002 0B4B     		ldr	r3, .L44
 539 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 540 0008 83B1     		cbz	r3, .L41
 304:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 541              		.loc 1 304 0
 542 000a 40F23E30 		movw	r0, #830
 543 000e FFF7FEFF 		bl	Timer_WritePeriod
 544              	.LVL35:
 305:main.c        ****         Timer_Start();
 545              		.loc 1 305 0
 546 0012 40F23D30 		movw	r0, #829
 547 0016 FFF7FEFF 		bl	Timer_WriteCounter
 548              	.LVL36:
 306:main.c        ****         lowFlag = 0;
 549              		.loc 1 306 0
 550 001a FFF7FEFF 		bl	Timer_Start
 551              	.LVL37:
 307:main.c        ****         systemState = BUSY;
 552              		.loc 1 307 0
 553 001e 0022     		movs	r2, #0
 554 0020 034B     		ldr	r3, .L44
 555 0022 83F82420 		strb	r2, [r3, #36]
 308:main.c        ****     }
 556              		.loc 1 308 0
 557 0026 0222     		movs	r2, #2
 558 0028 024B     		ldr	r3, .L44+4
 559 002a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 18


 560              	.L41:
 561 002c 08BD     		pop	{r3, pc}
 562              	.L45:
 563 002e 00BF     		.align	2
 564              	.L44:
 565 0030 00000000 		.word	.LANCHOR0
 566 0034 00000000 		.word	systemState
 567              		.cfi_endproc
 568              	.LFE68:
 569              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 570              		.section	.text.stateDiagram,"ax",%progbits
 571              		.align	2
 572              		.global	stateDiagram
 573              		.thumb
 574              		.thumb_func
 575              		.type	stateDiagram, %function
 576              	stateDiagram:
 577              	.LFB71:
 320:main.c        **** }
 321:main.c        **** 
 322:main.c        **** /**********************************************************
 323:main.c        ****  * function name: main
 324:main.c        ****  * operation: Handles the main state machine diagram for the
 325:main.c        ****  *            system. Changes  states when needed and calls
 326:main.c        ****  *            appropriate interrupt routines when triggered.                
 327:main.c        ****  * inputs: none
 328:main.c        ****  * returns: none
 329:main.c        ****  * implemented: 14 Dec 2017
 330:main.c        ****  * edited:
 331:main.c        ****  *********************************************************/ 
 332:main.c        **** int main(void)
 333:main.c        **** {
 334:main.c        **** 
 335:main.c        ****     //enable global interrupts
 336:main.c        ****     //start the interrupt handlers for the timers and other components
 337:main.c        ****     CyGlobalIntEnable; 
 338:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 339:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 340:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 341:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 342:main.c        **** 
 343:main.c        ****     // TimerTX_Start();
 344:main.c        ****     TimerTX_WritePeriod(TRANSMIT_PERIOD);
 345:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 346:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 347:main.c        ****     
 348:main.c        ****     TimerRX_WriteCounter(RECEIVE_COUNTER);
 349:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 350:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 351:main.c        ****     
 352:main.c        ****     CollisionDelayISR_StartEx(CollisionDelayInterruptHandler);
 353:main.c        ****         
 354:main.c        ****     //configure usb to start
 355:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 356:main.c        ****     
 357:main.c        ****     while (!USBUART_GetConfiguration());
 358:main.c        ****     USBUART_CDC_Init();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 19


 359:main.c        ****     
 360:main.c        ****     //starting system in idle state
 361:main.c        ****     systemState = IDLE;
 362:main.c        **** 
 363:main.c        ****     while(1) {
 364:main.c        ****                 
 365:main.c        **** 		/** if (0 != USBUART_IsConfigurationChanged())
 366:main.c        **** 		{
 367:main.c        **** 			
 368:main.c        **** 			if (0 != USBUART_GetConfiguration())
 369:main.c        **** 			{				
 370:main.c        **** 				USBUART_CDC_Init();
 371:main.c        **** 			}
 372:main.c        **** 		} */
 373:main.c        ****         
 374:main.c        ****         
 375:main.c        ****         if(transmitMode){
 376:main.c        ****             int inCount = 0;
 377:main.c        ****             transmitAddress = 0;
 378:main.c        ****             char input = 0;
 379:main.c        ****             while(!USBUART_CDCIsReady());
 380:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 381:main.c        ****             while(inCount < 3){
 382:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 383:main.c        ****                     stateDiagram();
 384:main.c        ****                 }
 385:main.c        ****                 
 386:main.c        ****                 input = USBUART_GetChar();
 387:main.c        ****                 
 388:main.c        ****                 //get the transmitAddress entered in
 389:main.c        ****                 if(inCount == 0){
 390:main.c        ****                     if (toupper(input) == 'R') {
 391:main.c        ****                         transmitMode = false;
 392:main.c        ****                         TimerRX_Start();
 393:main.c        ****                         USBUART_PutChar(input);
 394:main.c        ****                         
 395:main.c        ****                         USBUART_PutCRLF();
 396:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 397:main.c        ****                         inCount = 0;
 398:main.c        ****                         break;
 399:main.c        ****                     } else {
 400:main.c        ****                         transmitAddress  += 100*(input - (0x30));
 401:main.c        ****                         USBUART_PutChar(input);
 402:main.c        ****                         ++inCount;
 403:main.c        ****                     }
 404:main.c        ****                 }else if(inCount == 1){
 405:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 406:main.c        ****                     USBUART_PutChar(input);
 407:main.c        ****                     ++inCount;
 408:main.c        ****                 }else if (inCount == 2){
 409:main.c        ****                     transmitAddress  += input - (0x30);   
 410:main.c        ****                     USBUART_PutChar(input);
 411:main.c        ****                     ++inCount;
 412:main.c        ****                 }
 413:main.c        ****                 
 414:main.c        ****             }
 415:main.c        ****             if (!transmitMode) {
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 20


 416:main.c        ****                 continue;
 417:main.c        ****             }
 418:main.c        **** 
 419:main.c        ****             while(!USBUART_CDCIsReady());
 420:main.c        ****             USBUART_PutCRLF();
 421:main.c        ****             while(!USBUART_CDCIsReady());
 422:main.c        ****             USBUART_PutString("Enter message: ");
 423:main.c        ****             inCount = 7; 
 424:main.c        ****             input = 0; 
 425:main.c        **** 
 426:main.c        ****             
 427:main.c        ****             buffer[0] = 0x00; // Start of header
 428:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 429:main.c        ****             buffer[2] = ADDR1Start; // Source address
 430:main.c        ****             buffer[3] = transmitAddress; // Destination address
 431:main.c        ****             buffer[4] = 0x00; // CRC disabled
 432:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 433:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 434:main.c        ****             
 435:main.c        ****             //Enter = 0x0D (carriage return or \r)
 436:main.c        ****             while(input != 0x0D){
 437:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 438:main.c        ****                 input = USBUART_GetChar();
 439:main.c        ****                 if(input != 0x0D){
 440:main.c        ****                     buffer[inCount] = input;
 441:main.c        ****                     while(!USBUART_CDCIsReady());
 442:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 443:main.c        ****                     ++inCount;
 444:main.c        ****                 }
 445:main.c        ****             }
 446:main.c        ****             buffer[4] = inCount - 7; // Removes CR character.
 447:main.c        ****             if (buffer[4] > 44) {
 448:main.c        ****                 while(!USBUART_CDCIsReady());
 449:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 450:main.c        ****                 continue;
 451:main.c        ****             }
 452:main.c        **** 
 453:main.c        ****             dataSize = inCount;
 454:main.c        ****             position = 0; // Reset position in transmit interrupt
 455:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 456:main.c        ****             dataSize++;
 457:main.c        ****             TimerTX_Start();
 458:main.c        ****             while (position < dataSize);
 459:main.c        ****             TimerTX_Stop();
 460:main.c        ****             while(!USBUART_CDCIsReady());
 461:main.c        ****             USBUART_PutCRLF(); 
 462:main.c        ****             
 463:main.c        ****         } else { // Receive mode
 464:main.c        ****             checkForNewData();
 465:main.c        ****             stateDiagram();
 466:main.c        ****             if (USBUART_DataIsReady()) { 
 467:main.c        ****                 char input;
 468:main.c        ****                 input = USBUART_GetChar();
 469:main.c        ****                 if (toupper(input) == 'T') {
 470:main.c        ****                     transmitMode = true;
 471:main.c        ****                 }
 472:main.c        ****             }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 21


 473:main.c        ****         }
 474:main.c        ****     }
 475:main.c        **** }
 476:main.c        **** 
 477:main.c        **** void stateDiagram(){
 578              		.loc 1 477 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582 0000 08B5     		push	{r3, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 3, -8
 585              		.cfi_offset 14, -4
 478:main.c        ****     switch(systemState){      
 586              		.loc 1 478 0
 587 0002 214B     		ldr	r3, .L52
 588 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589 0006 012B     		cmp	r3, #1
 590 0008 2CD0     		beq	.L48
 591 000a 13B1     		cbz	r3, .L49
 592 000c 022B     		cmp	r3, #2
 593 000e 17D0     		beq	.L50
 594 0010 08BD     		pop	{r3, pc}
 595              	.L49:
 479:main.c        ****         case IDLE :;
 480:main.c        ****             IDLE_Write(1);
 596              		.loc 1 480 0
 597 0012 0120     		movs	r0, #1
 598 0014 FFF7FEFF 		bl	IDLE_Write
 599              	.LVL38:
 481:main.c        ****             BUSY_Write(!IDLE_Read());
 600              		.loc 1 481 0
 601 0018 FFF7FEFF 		bl	IDLE_Read
 602              	.LVL39:
 603 001c B0FA80F0 		clz	r0, r0
 604 0020 4009     		lsrs	r0, r0, #5
 605 0022 FFF7FEFF 		bl	BUSY_Write
 606              	.LVL40:
 482:main.c        ****             COLLISION_Write(!IDLE_Read());
 607              		.loc 1 482 0
 608 0026 FFF7FEFF 		bl	IDLE_Read
 609              	.LVL41:
 610 002a B0FA80F0 		clz	r0, r0
 611 002e 4009     		lsrs	r0, r0, #5
 612 0030 FFF7FEFF 		bl	COLLISION_Write
 613              	.LVL42:
 483:main.c        ****             
 484:main.c        ****             dataBitsRead = 0;
 614              		.loc 1 484 0
 615 0034 154B     		ldr	r3, .L52+4
 616 0036 0022     		movs	r2, #0
 617 0038 DA60     		str	r2, [r3, #12]
 485:main.c        ****             receivePosition = 0;
 618              		.loc 1 485 0
 619 003a 9A60     		str	r2, [r3, #8]
 486:main.c        ****             addressZeroReceive = 0;
 620              		.loc 1 486 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 22


 621 003c 9A62     		str	r2, [r3, #40]
 487:main.c        ****         break;
 622              		.loc 1 487 0
 623 003e 08BD     		pop	{r3, pc}
 624              	.L50:
 488:main.c        **** 
 489:main.c        ****         case BUSY:
 490:main.c        ****             BUSY_Write(1);
 625              		.loc 1 490 0
 626 0040 0120     		movs	r0, #1
 627 0042 FFF7FEFF 		bl	BUSY_Write
 628              	.LVL43:
 491:main.c        ****             IDLE_Write(!BUSY_Read());
 629              		.loc 1 491 0
 630 0046 FFF7FEFF 		bl	BUSY_Read
 631              	.LVL44:
 632 004a B0FA80F0 		clz	r0, r0
 633 004e 4009     		lsrs	r0, r0, #5
 634 0050 FFF7FEFF 		bl	IDLE_Write
 635              	.LVL45:
 492:main.c        ****             COLLISION_Write(!BUSY_Read());
 636              		.loc 1 492 0
 637 0054 FFF7FEFF 		bl	BUSY_Read
 638              	.LVL46:
 639 0058 B0FA80F0 		clz	r0, r0
 640 005c 4009     		lsrs	r0, r0, #5
 641 005e FFF7FEFF 		bl	COLLISION_Write
 642              	.LVL47:
 493:main.c        ****         break;
 643              		.loc 1 493 0
 644 0062 08BD     		pop	{r3, pc}
 645              	.L48:
 494:main.c        **** 
 495:main.c        ****         case COLLISION:;
 496:main.c        ****             COLLISION_Write(1);
 646              		.loc 1 496 0
 647 0064 0120     		movs	r0, #1
 648 0066 FFF7FEFF 		bl	COLLISION_Write
 649              	.LVL48:
 497:main.c        ****             IDLE_Write(!COLLISION_Read());
 650              		.loc 1 497 0
 651 006a FFF7FEFF 		bl	COLLISION_Read
 652              	.LVL49:
 653 006e B0FA80F0 		clz	r0, r0
 654 0072 4009     		lsrs	r0, r0, #5
 655 0074 FFF7FEFF 		bl	IDLE_Write
 656              	.LVL50:
 498:main.c        ****             BUSY_Write(!COLLISION_Read());
 657              		.loc 1 498 0
 658 0078 FFF7FEFF 		bl	COLLISION_Read
 659              	.LVL51:
 660 007c B0FA80F0 		clz	r0, r0
 661 0080 4009     		lsrs	r0, r0, #5
 662 0082 FFF7FEFF 		bl	BUSY_Write
 663              	.LVL52:
 664 0086 08BD     		pop	{r3, pc}
 665              	.L53:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 23


 666              		.align	2
 667              	.L52:
 668 0088 00000000 		.word	systemState
 669 008c 00000000 		.word	.LANCHOR0
 670              		.cfi_endproc
 671              	.LFE71:
 672              		.size	stateDiagram, .-stateDiagram
 673              		.section	.text.checkForNewData,"ax",%progbits
 674              		.align	2
 675              		.global	checkForNewData
 676              		.thumb
 677              		.thumb_func
 678              		.type	checkForNewData, %function
 679              	checkForNewData:
 680              	.LFB72:
 499:main.c        ****         break;
 500:main.c        ****     }   
 501:main.c        **** }
 502:main.c        **** 
 503:main.c        **** /**
 504:main.c        **** */
 505:main.c        **** void checkForNewData(){
 681              		.loc 1 505 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685 0000 08B5     		push	{r3, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 3, -8
 688              		.cfi_offset 14, -4
 506:main.c        ****     if(USBUART_CDCIsReady() != 0){
 689              		.loc 1 506 0
 690 0002 FFF7FEFF 		bl	USBUART_CDCIsReady
 691              	.LVL53:
 692 0006 0028     		cmp	r0, #0
 693 0008 40F05C81 		bne	.L55
 694 000c 08BD     		pop	{r3, pc}
 695              	.L84:
 507:main.c        ****         while(dataBitsRead != receivePosition){
 508:main.c        ****             if(dataBitsRead <= 6){
 696              		.loc 1 508 0
 697 000e 062A     		cmp	r2, #6
 698 0010 10DC     		bgt	.L57
 509:main.c        ****     //            if(receiveBuffer[0] == 0x00){
 510:main.c        ****     //                startHeaderReceieved = 1;
 511:main.c        ****     //            }
 512:main.c        ****     //            if(receiveBuffer[1] == 0x01){
 513:main.c        ****     //                    verNumMatch = 1;
 514:main.c        ****     //           }
 515:main.c        ****                 sourceAddress = receiveBuffer[2];
 699              		.loc 1 515 0
 700 0012 B04A     		ldr	r2, .L86
 701 0014 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 702 0016 B04B     		ldr	r3, .L86+4
 703 0018 83F82C10 		strb	r1, [r3, #44]
 516:main.c        ****                 destinationAddress = receiveBuffer[3];
 704              		.loc 1 516 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 24


 705 001c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 706 001e 83F82D10 		strb	r1, [r3, #45]
 517:main.c        ****                 messageLength = receiveBuffer[4];
 707              		.loc 1 517 0
 708 0022 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 709 0024 1963     		str	r1, [r3, #48]
 518:main.c        ****                 crcUsage = receiveBuffer[5];
 710              		.loc 1 518 0
 711 0026 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 712 0028 83F83410 		strb	r1, [r3, #52]
 519:main.c        ****                 headerCRC = receiveBuffer[6];            
 713              		.loc 1 519 0
 714 002c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 715 002e 83F83520 		strb	r2, [r3, #53]
 716 0032 43E1     		b	.L58
 717              	.L57:
 520:main.c        ****             } else {
 521:main.c        ****                 if(destinationAddress == BROADCAST_ADDRESS || 
 718              		.loc 1 521 0
 719 0034 A84B     		ldr	r3, .L86+4
 720 0036 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 721 003a 73B1     		cbz	r3, .L59
 522:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 722              		.loc 1 522 0 discriminator 1
 723 003c A3F16002 		sub	r2, r3, #96
 724 0040 D2B2     		uxtb	r2, r2
 521:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 725              		.loc 1 521 0 discriminator 1
 726 0042 022A     		cmp	r2, #2
 727 0044 09D9     		bls	.L59
 523:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 728              		.loc 1 523 0
 729 0046 A3F13702 		sub	r2, r3, #55
 730 004a D2B2     		uxtb	r2, r2
 522:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 731              		.loc 1 522 0
 732 004c 022A     		cmp	r2, #2
 733 004e 04D9     		bls	.L59
 524:main.c        ****                 ((destinationAddress >= ADDR3Start) && (destinationAddress <= ADDR3Start+ADDRLength
 734              		.loc 1 524 0
 735 0050 7C3B     		subs	r3, r3, #124
 736 0052 DBB2     		uxtb	r3, r3
 523:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 737              		.loc 1 523 0
 738 0054 022B     		cmp	r3, #2
 739 0056 00F23181 		bhi	.L58
 740              	.L59:
 525:main.c        ****                     if(addressZeroReceive == 0){
 741              		.loc 1 525 0
 742 005a 9F4B     		ldr	r3, .L86+4
 743 005c 9B6A     		ldr	r3, [r3, #40]
 744 005e 002B     		cmp	r3, #0
 745 0060 40F01F81 		bne	.L60
 746              	.L61:
 526:main.c        ****                         while(!USBUART_CDCIsReady());
 747              		.loc 1 526 0 discriminator 1
 748 0064 FFF7FEFF 		bl	USBUART_CDCIsReady
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 25


 749              	.LVL54:
 750 0068 0028     		cmp	r0, #0
 751 006a FBD0     		beq	.L61
 527:main.c        ****                         USBUART_PutCRLF();
 752              		.loc 1 527 0
 753 006c FFF7FEFF 		bl	USBUART_PutCRLF
 754              	.LVL55:
 755              	.L62:
 528:main.c        ****                         while(!USBUART_CDCIsReady());
 756              		.loc 1 528 0 discriminator 1
 757 0070 FFF7FEFF 		bl	USBUART_CDCIsReady
 758              	.LVL56:
 759 0074 0028     		cmp	r0, #0
 760 0076 FBD0     		beq	.L62
 529:main.c        ****                         USBUART_PutCRLF();
 761              		.loc 1 529 0
 762 0078 FFF7FEFF 		bl	USBUART_PutCRLF
 763              	.LVL57:
 764              	.L63:
 530:main.c        ****                         while(!USBUART_CDCIsReady());
 765              		.loc 1 530 0 discriminator 1
 766 007c FFF7FEFF 		bl	USBUART_CDCIsReady
 767              	.LVL58:
 768 0080 0028     		cmp	r0, #0
 769 0082 FBD0     		beq	.L63
 531:main.c        ****                         USBUART_PutCRLF(); 
 770              		.loc 1 531 0
 771 0084 FFF7FEFF 		bl	USBUART_PutCRLF
 772              	.LVL59:
 773              	.L64:
 532:main.c        ****                         while(!USBUART_CDCIsReady());
 774              		.loc 1 532 0 discriminator 1
 775 0088 FFF7FEFF 		bl	USBUART_CDCIsReady
 776              	.LVL60:
 777 008c 0028     		cmp	r0, #0
 778 008e FBD0     		beq	.L64
 533:main.c        ****                         USBUART_PutString("Message From: ");
 779              		.loc 1 533 0
 780 0090 9248     		ldr	r0, .L86+8
 781 0092 FFF7FEFF 		bl	USBUART_PutString
 782              	.LVL61:
 783              	.L65:
 534:main.c        ****                         while(!USBUART_CDCIsReady());
 784              		.loc 1 534 0 discriminator 1
 785 0096 FFF7FEFF 		bl	USBUART_CDCIsReady
 786              	.LVL62:
 787 009a 0028     		cmp	r0, #0
 788 009c FBD0     		beq	.L65
 535:main.c        **** 
 536:main.c        ****                         USBUART_PutChar(((sourceAddress)/100)+0x30);
 789              		.loc 1 536 0
 790 009e 8E4B     		ldr	r3, .L86+4
 791 00a0 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 792 00a4 8E48     		ldr	r0, .L86+12
 793 00a6 A0FB0330 		umull	r3, r0, r0, r3
 794 00aa 4009     		lsrs	r0, r0, #5
 795 00ac 3030     		adds	r0, r0, #48
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 26


 796 00ae FFF7FEFF 		bl	USBUART_PutChar
 797              	.LVL63:
 798              	.L66:
 537:main.c        **** 
 538:main.c        ****                         while(!USBUART_CDCIsReady());
 799              		.loc 1 538 0 discriminator 1
 800 00b2 FFF7FEFF 		bl	USBUART_CDCIsReady
 801              	.LVL64:
 802 00b6 0028     		cmp	r0, #0
 803 00b8 FBD0     		beq	.L66
 539:main.c        ****                         USBUART_PutChar(((sourceAddress/10)%10)+0x30);
 804              		.loc 1 539 0
 805 00ba 874B     		ldr	r3, .L86+4
 806 00bc 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 807 00c0 884A     		ldr	r2, .L86+16
 808 00c2 A2FB0313 		umull	r1, r3, r2, r3
 809 00c6 DB08     		lsrs	r3, r3, #3
 810 00c8 A2FB0312 		umull	r1, r2, r2, r3
 811 00cc D208     		lsrs	r2, r2, #3
 812 00ce 02EB8202 		add	r2, r2, r2, lsl #2
 813 00d2 5000     		lsls	r0, r2, #1
 814 00d4 181A     		subs	r0, r3, r0
 815 00d6 3030     		adds	r0, r0, #48
 816 00d8 C0B2     		uxtb	r0, r0
 817 00da FFF7FEFF 		bl	USBUART_PutChar
 818              	.LVL65:
 819              	.L67:
 540:main.c        ****                         while(!USBUART_CDCIsReady());
 820              		.loc 1 540 0 discriminator 1
 821 00de FFF7FEFF 		bl	USBUART_CDCIsReady
 822              	.LVL66:
 823 00e2 0028     		cmp	r0, #0
 824 00e4 FBD0     		beq	.L67
 541:main.c        ****              
 542:main.c        ****                         USBUART_PutChar(((sourceAddress%10)%10)+0x30);
 825              		.loc 1 542 0
 826 00e6 7C4B     		ldr	r3, .L86+4
 827 00e8 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 828 00ec 7D4A     		ldr	r2, .L86+16
 829 00ee A2FB0301 		umull	r0, r1, r2, r3
 830 00f2 C908     		lsrs	r1, r1, #3
 831 00f4 01EB8101 		add	r1, r1, r1, lsl #2
 832 00f8 4800     		lsls	r0, r1, #1
 833 00fa 1B1A     		subs	r3, r3, r0
 834 00fc DBB2     		uxtb	r3, r3
 835 00fe A2FB0312 		umull	r1, r2, r2, r3
 836 0102 D208     		lsrs	r2, r2, #3
 837 0104 02EB8202 		add	r2, r2, r2, lsl #2
 838 0108 5000     		lsls	r0, r2, #1
 839 010a 181A     		subs	r0, r3, r0
 840 010c 3030     		adds	r0, r0, #48
 841 010e C0B2     		uxtb	r0, r0
 842 0110 FFF7FEFF 		bl	USBUART_PutChar
 843              	.LVL67:
 844              	.L68:
 543:main.c        ****                         while(!USBUART_CDCIsReady());
 845              		.loc 1 543 0 discriminator 1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 27


 846 0114 FFF7FEFF 		bl	USBUART_CDCIsReady
 847              	.LVL68:
 848 0118 0028     		cmp	r0, #0
 849 011a FBD0     		beq	.L68
 544:main.c        ****                         USBUART_PutCRLF();
 850              		.loc 1 544 0
 851 011c FFF7FEFF 		bl	USBUART_PutCRLF
 852              	.LVL69:
 853              	.L69:
 545:main.c        ****                         while(!USBUART_CDCIsReady());
 854              		.loc 1 545 0 discriminator 1
 855 0120 FFF7FEFF 		bl	USBUART_CDCIsReady
 856              	.LVL70:
 857 0124 0028     		cmp	r0, #0
 858 0126 FBD0     		beq	.L69
 546:main.c        ****                         USBUART_PutString("Sent To: ");
 859              		.loc 1 546 0
 860 0128 6F48     		ldr	r0, .L86+20
 861 012a FFF7FEFF 		bl	USBUART_PutString
 862              	.LVL71:
 547:main.c        ****                         if(destinationAddress == BROADCAST_ADDRESS){
 863              		.loc 1 547 0
 864 012e 6A4B     		ldr	r3, .L86+4
 865 0130 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 866 0134 6BB9     		cbnz	r3, .L70
 867              	.L71:
 548:main.c        ****                             while(!USBUART_CDCIsReady());
 868              		.loc 1 548 0 discriminator 1
 869 0136 FFF7FEFF 		bl	USBUART_CDCIsReady
 870              	.LVL72:
 871 013a 0028     		cmp	r0, #0
 872 013c FBD0     		beq	.L71
 549:main.c        ****                             USBUART_PutString("BCST ");
 873              		.loc 1 549 0
 874 013e 6B48     		ldr	r0, .L86+24
 875 0140 FFF7FEFF 		bl	USBUART_PutString
 876              	.LVL73:
 877              	.L72:
 550:main.c        ****                             while(!USBUART_CDCIsReady());
 878              		.loc 1 550 0 discriminator 1
 879 0144 FFF7FEFF 		bl	USBUART_CDCIsReady
 880              	.LVL74:
 881 0148 0028     		cmp	r0, #0
 882 014a FBD0     		beq	.L72
 551:main.c        ****                             USBUART_PutCRLF();
 883              		.loc 1 551 0
 884 014c FFF7FEFF 		bl	USBUART_PutCRLF
 885              	.LVL75:
 886 0150 46E0     		b	.L77
 887              	.L70:
 552:main.c        ****                         }else{
 553:main.c        ****                             while(!USBUART_CDCIsReady());
 888              		.loc 1 553 0 discriminator 1
 889 0152 FFF7FEFF 		bl	USBUART_CDCIsReady
 890              	.LVL76:
 891 0156 0028     		cmp	r0, #0
 892 0158 FBD0     		beq	.L70
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 28


 554:main.c        ****              
 555:main.c        ****                             USBUART_PutChar(((destinationAddress)/100)+0x30);
 893              		.loc 1 555 0
 894 015a 5F4B     		ldr	r3, .L86+4
 895 015c 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 896 0160 5F48     		ldr	r0, .L86+12
 897 0162 A0FB0330 		umull	r3, r0, r0, r3
 898 0166 4009     		lsrs	r0, r0, #5
 899 0168 3030     		adds	r0, r0, #48
 900 016a FFF7FEFF 		bl	USBUART_PutChar
 901              	.LVL77:
 902              	.L74:
 556:main.c        **** 
 557:main.c        ****                             while(!USBUART_CDCIsReady());
 903              		.loc 1 557 0 discriminator 1
 904 016e FFF7FEFF 		bl	USBUART_CDCIsReady
 905              	.LVL78:
 906 0172 0028     		cmp	r0, #0
 907 0174 FBD0     		beq	.L74
 558:main.c        ****                             USBUART_PutChar(((destinationAddress/10)%10)+0x30);
 908              		.loc 1 558 0
 909 0176 584B     		ldr	r3, .L86+4
 910 0178 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 911 017c 594A     		ldr	r2, .L86+16
 912 017e A2FB0313 		umull	r1, r3, r2, r3
 913 0182 DB08     		lsrs	r3, r3, #3
 914 0184 A2FB0312 		umull	r1, r2, r2, r3
 915 0188 D208     		lsrs	r2, r2, #3
 916 018a 02EB8202 		add	r2, r2, r2, lsl #2
 917 018e 5000     		lsls	r0, r2, #1
 918 0190 1B1A     		subs	r3, r3, r0
 919 0192 03F13000 		add	r0, r3, #48
 920 0196 C0B2     		uxtb	r0, r0
 921 0198 FFF7FEFF 		bl	USBUART_PutChar
 922              	.LVL79:
 923              	.L75:
 559:main.c        ****                             while(!USBUART_CDCIsReady());
 924              		.loc 1 559 0 discriminator 1
 925 019c FFF7FEFF 		bl	USBUART_CDCIsReady
 926              	.LVL80:
 927 01a0 0028     		cmp	r0, #0
 928 01a2 FBD0     		beq	.L75
 560:main.c        ****                
 561:main.c        ****                             USBUART_PutChar(((destinationAddress%10)%10)+0x30);
 929              		.loc 1 561 0
 930 01a4 4C4B     		ldr	r3, .L86+4
 931 01a6 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 932 01aa 4E4A     		ldr	r2, .L86+16
 933 01ac A2FB0301 		umull	r0, r1, r2, r3
 934 01b0 C908     		lsrs	r1, r1, #3
 935 01b2 01EB8101 		add	r1, r1, r1, lsl #2
 936 01b6 4800     		lsls	r0, r1, #1
 937 01b8 1B1A     		subs	r3, r3, r0
 938 01ba DBB2     		uxtb	r3, r3
 939 01bc A2FB0312 		umull	r1, r2, r2, r3
 940 01c0 D208     		lsrs	r2, r2, #3
 941 01c2 02EB8202 		add	r2, r2, r2, lsl #2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 29


 942 01c6 5000     		lsls	r0, r2, #1
 943 01c8 1B1A     		subs	r3, r3, r0
 944 01ca 03F13000 		add	r0, r3, #48
 945 01ce C0B2     		uxtb	r0, r0
 946 01d0 FFF7FEFF 		bl	USBUART_PutChar
 947              	.LVL81:
 562:main.c        ****                             USBUART_PutCRLF();
 948              		.loc 1 562 0
 949 01d4 FFF7FEFF 		bl	USBUART_PutCRLF
 950              	.LVL82:
 951              	.L76:
 563:main.c        ****                             while(!USBUART_CDCIsReady());
 952              		.loc 1 563 0 discriminator 1
 953 01d8 FFF7FEFF 		bl	USBUART_CDCIsReady
 954              	.LVL83:
 955 01dc 0028     		cmp	r0, #0
 956 01de FBD0     		beq	.L76
 957              	.L77:
 564:main.c        ****                         }
 565:main.c        ****                         while(!USBUART_CDCIsReady());
 958              		.loc 1 565 0 discriminator 1
 959 01e0 FFF7FEFF 		bl	USBUART_CDCIsReady
 960              	.LVL84:
 961 01e4 0028     		cmp	r0, #0
 962 01e6 FBD0     		beq	.L77
 566:main.c        ****                         USBUART_PutString("Size: ");
 963              		.loc 1 566 0
 964 01e8 4148     		ldr	r0, .L86+28
 965 01ea FFF7FEFF 		bl	USBUART_PutString
 966              	.LVL85:
 967              	.L78:
 567:main.c        ****                         while(!USBUART_CDCIsReady());
 968              		.loc 1 567 0 discriminator 1
 969 01ee FFF7FEFF 		bl	USBUART_CDCIsReady
 970              	.LVL86:
 971 01f2 0028     		cmp	r0, #0
 972 01f4 FBD0     		beq	.L78
 568:main.c        ****                         USBUART_PutChar(((messageLength)/100)+0x30);
 973              		.loc 1 568 0
 974 01f6 384B     		ldr	r3, .L86+4
 975 01f8 1B6B     		ldr	r3, [r3, #48]
 976 01fa 3948     		ldr	r0, .L86+12
 977 01fc 80FB0320 		smull	r2, r0, r0, r3
 978 0200 DB17     		asrs	r3, r3, #31
 979 0202 C3EB6010 		rsb	r0, r3, r0, asr #5
 980 0206 3030     		adds	r0, r0, #48
 981 0208 C0B2     		uxtb	r0, r0
 982 020a FFF7FEFF 		bl	USBUART_PutChar
 983              	.LVL87:
 984              	.L79:
 569:main.c        ****                         while(!USBUART_CDCIsReady());
 985              		.loc 1 569 0 discriminator 1
 986 020e FFF7FEFF 		bl	USBUART_CDCIsReady
 987              	.LVL88:
 988 0212 0028     		cmp	r0, #0
 989 0214 FBD0     		beq	.L79
 570:main.c        ****                         USBUART_PutChar(((messageLength/10)%10)+0x30);
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 30


 990              		.loc 1 570 0
 991 0216 304B     		ldr	r3, .L86+4
 992 0218 1B6B     		ldr	r3, [r3, #48]
 993 021a 3648     		ldr	r0, .L86+32
 994 021c 80FB0312 		smull	r1, r2, r0, r3
 995 0220 DB17     		asrs	r3, r3, #31
 996 0222 C3EBA202 		rsb	r2, r3, r2, asr #2
 997 0226 80FB0230 		smull	r3, r0, r0, r2
 998 022a D317     		asrs	r3, r2, #31
 999 022c C3EBA000 		rsb	r0, r3, r0, asr #2
 1000 0230 00EB8000 		add	r0, r0, r0, lsl #2
 1001 0234 4300     		lsls	r3, r0, #1
 1002 0236 D01A     		subs	r0, r2, r3
 1003 0238 3030     		adds	r0, r0, #48
 1004 023a C0B2     		uxtb	r0, r0
 1005 023c FFF7FEFF 		bl	USBUART_PutChar
 1006              	.LVL89:
 1007              	.L80:
 571:main.c        ****                         while(!USBUART_CDCIsReady());
 1008              		.loc 1 571 0 discriminator 1
 1009 0240 FFF7FEFF 		bl	USBUART_CDCIsReady
 1010              	.LVL90:
 1011 0244 0028     		cmp	r0, #0
 1012 0246 FBD0     		beq	.L80
 572:main.c        ****                         USBUART_PutChar(((messageLength%10)%10)+0x30);
 1013              		.loc 1 572 0
 1014 0248 234B     		ldr	r3, .L86+4
 1015 024a 196B     		ldr	r1, [r3, #48]
 1016 024c 2948     		ldr	r0, .L86+32
 1017 024e 80FB0132 		smull	r3, r2, r0, r1
 1018 0252 CB17     		asrs	r3, r1, #31
 1019 0254 C3EBA202 		rsb	r2, r3, r2, asr #2
 1020 0258 02EB8202 		add	r2, r2, r2, lsl #2
 1021 025c 5300     		lsls	r3, r2, #1
 1022 025e CA1A     		subs	r2, r1, r3
 1023 0260 80FB0230 		smull	r3, r0, r0, r2
 1024 0264 D317     		asrs	r3, r2, #31
 1025 0266 C3EBA000 		rsb	r0, r3, r0, asr #2
 1026 026a 00EB8000 		add	r0, r0, r0, lsl #2
 1027 026e 4300     		lsls	r3, r0, #1
 1028 0270 D01A     		subs	r0, r2, r3
 1029 0272 3030     		adds	r0, r0, #48
 1030 0274 C0B2     		uxtb	r0, r0
 1031 0276 FFF7FEFF 		bl	USBUART_PutChar
 1032              	.LVL91:
 1033              	.L81:
 573:main.c        ****                         while(!USBUART_CDCIsReady());
 1034              		.loc 1 573 0 discriminator 1
 1035 027a FFF7FEFF 		bl	USBUART_CDCIsReady
 1036              	.LVL92:
 1037 027e 0028     		cmp	r0, #0
 1038 0280 FBD0     		beq	.L81
 574:main.c        ****                         USBUART_PutCRLF();
 1039              		.loc 1 574 0
 1040 0282 FFF7FEFF 		bl	USBUART_PutCRLF
 1041              	.LVL93:
 1042              	.L82:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 31


 575:main.c        ****                         while(!USBUART_CDCIsReady());
 1043              		.loc 1 575 0 discriminator 1
 1044 0286 FFF7FEFF 		bl	USBUART_CDCIsReady
 1045              	.LVL94:
 1046 028a 0028     		cmp	r0, #0
 1047 028c FBD0     		beq	.L82
 576:main.c        ****                         USBUART_PutString("Message: ");
 1048              		.loc 1 576 0
 1049 028e 1A48     		ldr	r0, .L86+36
 1050 0290 FFF7FEFF 		bl	USBUART_PutString
 1051              	.LVL95:
 1052              	.L83:
 577:main.c        ****                         while(!USBUART_CDCIsReady());
 1053              		.loc 1 577 0 discriminator 1
 1054 0294 FFF7FEFF 		bl	USBUART_CDCIsReady
 1055              	.LVL96:
 1056 0298 0028     		cmp	r0, #0
 1057 029a FBD0     		beq	.L83
 578:main.c        ****                         addressZeroReceive = 1;
 1058              		.loc 1 578 0
 1059 029c 0122     		movs	r2, #1
 1060 029e 0E4B     		ldr	r3, .L86+4
 1061 02a0 9A62     		str	r2, [r3, #40]
 1062              	.L60:
 579:main.c        ****                     }
 580:main.c        ****                     if(dataBitsRead > 6 && dataBitsRead < receiveBuffer[4] + 7){
 1063              		.loc 1 580 0
 1064 02a2 0D4B     		ldr	r3, .L86+4
 1065 02a4 DB68     		ldr	r3, [r3, #12]
 1066 02a6 062B     		cmp	r3, #6
 1067 02a8 08DD     		ble	.L58
 1068              		.loc 1 580 0 is_stmt 0 discriminator 1
 1069 02aa 0A4A     		ldr	r2, .L86
 1070 02ac 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 1071 02ae 0732     		adds	r2, r2, #7
 1072 02b0 9342     		cmp	r3, r2
 1073 02b2 03DA     		bge	.L58
 581:main.c        ****                         USBUART_PutChar(receiveBuffer[dataBitsRead]);
 1074              		.loc 1 581 0 is_stmt 1
 1075 02b4 074A     		ldr	r2, .L86
 1076 02b6 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1077 02b8 FFF7FEFF 		bl	USBUART_PutChar
 1078              	.LVL97:
 1079              	.L58:
 582:main.c        ****                     }
 583:main.c        ****                     
 584:main.c        ****                 }
 585:main.c        ****             }
 586:main.c        ****             ++dataBitsRead;
 1080              		.loc 1 586 0
 1081 02bc 064A     		ldr	r2, .L86+4
 1082 02be D368     		ldr	r3, [r2, #12]
 1083 02c0 0133     		adds	r3, r3, #1
 1084 02c2 D360     		str	r3, [r2, #12]
 1085              	.L55:
 507:main.c        ****             if(dataBitsRead <= 6){
 1086              		.loc 1 507 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 32


 1087 02c4 044B     		ldr	r3, .L86+4
 1088 02c6 DA68     		ldr	r2, [r3, #12]
 1089 02c8 9B68     		ldr	r3, [r3, #8]
 1090 02ca 9A42     		cmp	r2, r3
 1091 02cc 7FF49FAE 		bne	.L84
 1092 02d0 08BD     		pop	{r3, pc}
 1093              	.L87:
 1094 02d2 00BF     		.align	2
 1095              	.L86:
 1096 02d4 00000000 		.word	receiveBuffer
 1097 02d8 00000000 		.word	.LANCHOR0
 1098 02dc 00000000 		.word	.LC0
 1099 02e0 1F85EB51 		.word	1374389535
 1100 02e4 CDCCCCCC 		.word	-858993459
 1101 02e8 10000000 		.word	.LC1
 1102 02ec 1C000000 		.word	.LC2
 1103 02f0 24000000 		.word	.LC3
 1104 02f4 67666666 		.word	1717986919
 1105 02f8 2C000000 		.word	.LC4
 1106              		.cfi_endproc
 1107              	.LFE72:
 1108              		.size	checkForNewData, .-checkForNewData
 1109              		.section	.text.main,"ax",%progbits
 1110              		.align	2
 1111              		.global	main
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	main, %function
 1115              	main:
 1116              	.LFB70:
 333:main.c        **** 
 1117              		.loc 1 333 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121 0000 38B5     		push	{r3, r4, r5, lr}
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 3, -16
 1124              		.cfi_offset 4, -12
 1125              		.cfi_offset 5, -8
 1126              		.cfi_offset 14, -4
 337:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 1127              		.loc 1 337 0
 1128              		.syntax unified
 1129              	@ 337 "main.c" 1
 1130 0002 62B6     		CPSIE   i
 1131              	@ 0 "" 2
 338:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 1132              		.loc 1 338 0
 1133              		.thumb
 1134              		.syntax unified
 1135 0004 8A48     		ldr	r0, .L117
 1136 0006 FFF7FEFF 		bl	TimerISR_StartEx
 1137              	.LVL98:
 339:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 1138              		.loc 1 339 0
 1139 000a 8A48     		ldr	r0, .L117+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 33


 1140 000c FFF7FEFF 		bl	RisingEdgeISR_StartEx
 1141              	.LVL99:
 340:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 1142              		.loc 1 340 0
 1143 0010 8948     		ldr	r0, .L117+8
 1144 0012 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 1145              	.LVL100:
 341:main.c        **** 
 1146              		.loc 1 341 0
 1147 0016 894C     		ldr	r4, .L117+12
 1148 0018 2046     		mov	r0, r4
 1149 001a FFF7FEFF 		bl	ReceiveISR_StartEx
 1150              	.LVL101:
 344:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 1151              		.loc 1 344 0
 1152 001e 2F20     		movs	r0, #47
 1153 0020 FFF7FEFF 		bl	TimerTX_WritePeriod
 1154              	.LVL102:
 345:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 1155              		.loc 1 345 0
 1156 0024 2E20     		movs	r0, #46
 1157 0026 FFF7FEFF 		bl	TimerTX_WriteCounter
 1158              	.LVL103:
 346:main.c        ****     
 1159              		.loc 1 346 0
 1160 002a 8548     		ldr	r0, .L117+16
 1161 002c FFF7FEFF 		bl	TransmitISR_StartEx
 1162              	.LVL104:
 348:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 1163              		.loc 1 348 0
 1164 0030 3320     		movs	r0, #51
 1165 0032 FFF7FEFF 		bl	TimerRX_WriteCounter
 1166              	.LVL105:
 349:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 1167              		.loc 1 349 0
 1168 0036 3420     		movs	r0, #52
 1169 0038 FFF7FEFF 		bl	TimerRX_WritePeriod
 1170              	.LVL106:
 350:main.c        ****     
 1171              		.loc 1 350 0
 1172 003c 2046     		mov	r0, r4
 1173 003e FFF7FEFF 		bl	ReceiveISR_StartEx
 1174              	.LVL107:
 352:main.c        ****         
 1175              		.loc 1 352 0
 1176 0042 8048     		ldr	r0, .L117+20
 1177 0044 FFF7FEFF 		bl	CollisionDelayISR_StartEx
 1178              	.LVL108:
 355:main.c        ****     
 1179              		.loc 1 355 0
 1180 0048 7F4B     		ldr	r3, .L117+24
 1181 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1182 004c 0121     		movs	r1, #1
 1183 004e FFF7FEFF 		bl	USBUART_Start
 1184              	.LVL109:
 1185              	.L89:
 357:main.c        ****     USBUART_CDC_Init();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 34


 1186              		.loc 1 357 0 discriminator 1
 1187 0052 FFF7FEFF 		bl	USBUART_GetConfiguration
 1188              	.LVL110:
 1189 0056 0028     		cmp	r0, #0
 1190 0058 FBD0     		beq	.L89
 358:main.c        ****     
 1191              		.loc 1 358 0
 1192 005a FFF7FEFF 		bl	USBUART_CDC_Init
 1193              	.LVL111:
 361:main.c        **** 
 1194              		.loc 1 361 0
 1195 005e 0022     		movs	r2, #0
 1196 0060 7A4B     		ldr	r3, .L117+28
 1197 0062 1A70     		strb	r2, [r3]
 1198              	.L90:
 375:main.c        ****             int inCount = 0;
 1199              		.loc 1 375 0
 1200 0064 7A4B     		ldr	r3, .L117+32
 1201 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0068 002B     		cmp	r3, #0
 1203 006a 00F0C580 		beq	.L91
 1204              	.LVL112:
 1205              	.LBB5:
 377:main.c        ****             char input = 0;
 1206              		.loc 1 377 0
 1207 006e 0022     		movs	r2, #0
 1208 0070 784B     		ldr	r3, .L117+36
 1209 0072 83F83620 		strb	r2, [r3, #54]
 1210              	.LVL113:
 1211              	.L92:
 379:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 1212              		.loc 1 379 0 discriminator 1
 1213 0076 FFF7FEFF 		bl	USBUART_CDCIsReady
 1214              	.LVL114:
 1215 007a 0028     		cmp	r0, #0
 1216 007c FBD0     		beq	.L92
 380:main.c        ****             while(inCount < 3){
 1217              		.loc 1 380 0
 1218 007e 7648     		ldr	r0, .L117+40
 1219 0080 FFF7FEFF 		bl	USBUART_PutString
 1220              	.LVL115:
 376:main.c        ****             transmitAddress = 0;
 1221              		.loc 1 376 0
 1222 0084 0024     		movs	r4, #0
 381:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1223              		.loc 1 381 0
 1224 0086 54E0     		b	.L93
 1225              	.LVL116:
 1226              	.L94:
 383:main.c        ****                 }
 1227              		.loc 1 383 0
 1228 0088 FFF7FEFF 		bl	stateDiagram
 1229              	.LVL117:
 1230              	.L102:
 382:main.c        ****                     stateDiagram();
 1231              		.loc 1 382 0
 1232 008c FFF7FEFF 		bl	USBUART_DataIsReady
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 35


 1233              	.LVL118:
 1234 0090 0028     		cmp	r0, #0
 1235 0092 F9D0     		beq	.L94
 386:main.c        ****                 
 1236              		.loc 1 386 0
 1237 0094 FFF7FEFF 		bl	USBUART_GetChar
 1238              	.LVL119:
 1239 0098 0546     		mov	r5, r0
 1240              	.LVL120:
 389:main.c        ****                     if (toupper(input) == 'R') {
 1241              		.loc 1 389 0
 1242 009a 6CBB     		cbnz	r4, .L95
 1243              	.LVL121:
 1244              	.LBB6:
 390:main.c        ****                         transmitMode = false;
 1245              		.loc 1 390 0
 1246 009c 6F4B     		ldr	r3, .L117+44
 1247 009e 1B68     		ldr	r3, [r3]
 1248 00a0 0344     		add	r3, r3, r0
 1249 00a2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1250 00a4 03F00303 		and	r3, r3, #3
 1251 00a8 022B     		cmp	r3, #2
 1252 00aa 02D1     		bne	.L96
 390:main.c        ****                         transmitMode = false;
 1253              		.loc 1 390 0 is_stmt 0 discriminator 1
 1254 00ac A0F12003 		sub	r3, r0, #32
 1255 00b0 00E0     		b	.L97
 1256              	.L96:
 390:main.c        ****                         transmitMode = false;
 1257              		.loc 1 390 0 discriminator 2
 1258 00b2 0346     		mov	r3, r0
 1259              	.L97:
 1260              	.LBE6:
 390:main.c        ****                         transmitMode = false;
 1261              		.loc 1 390 0 discriminator 4
 1262 00b4 522B     		cmp	r3, #82
 1263 00b6 0DD1     		bne	.L98
 391:main.c        ****                         TimerRX_Start();
 1264              		.loc 1 391 0 is_stmt 1
 1265 00b8 0022     		movs	r2, #0
 1266 00ba 654B     		ldr	r3, .L117+32
 1267 00bc 1A70     		strb	r2, [r3]
 392:main.c        ****                         USBUART_PutChar(input);
 1268              		.loc 1 392 0
 1269 00be FFF7FEFF 		bl	TimerRX_Start
 1270              	.LVL122:
 393:main.c        ****                         
 1271              		.loc 1 393 0
 1272 00c2 2846     		mov	r0, r5
 1273 00c4 FFF7FEFF 		bl	USBUART_PutChar
 1274              	.LVL123:
 395:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 1275              		.loc 1 395 0
 1276 00c8 FFF7FEFF 		bl	USBUART_PutCRLF
 1277              	.LVL124:
 396:main.c        ****                         inCount = 0;
 1278              		.loc 1 396 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 36


 1279 00cc 6448     		ldr	r0, .L117+48
 1280 00ce FFF7FEFF 		bl	USBUART_PutString
 1281              	.LVL125:
 398:main.c        ****                     } else {
 1282              		.loc 1 398 0
 1283 00d2 30E0     		b	.L99
 1284              	.LVL126:
 1285              	.L98:
 400:main.c        ****                         USBUART_PutChar(input);
 1286              		.loc 1 400 0
 1287 00d4 A5F13003 		sub	r3, r5, #48
 1288 00d8 5E49     		ldr	r1, .L117+36
 1289 00da 03EB8303 		add	r3, r3, r3, lsl #2
 1290 00de 03EB8303 		add	r3, r3, r3, lsl #2
 1291 00e2 91F83620 		ldrb	r2, [r1, #54]	@ zero_extendqisi2
 1292 00e6 02EB8303 		add	r3, r2, r3, lsl #2
 1293 00ea 81F83630 		strb	r3, [r1, #54]
 401:main.c        ****                         ++inCount;
 1294              		.loc 1 401 0
 1295 00ee 2846     		mov	r0, r5
 1296              	.LVL127:
 1297 00f0 FFF7FEFF 		bl	USBUART_PutChar
 1298              	.LVL128:
 402:main.c        ****                     }
 1299              		.loc 1 402 0
 1300 00f4 0134     		adds	r4, r4, #1
 1301              	.LVL129:
 1302 00f6 1CE0     		b	.L93
 1303              	.LVL130:
 1304              	.L95:
 404:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 1305              		.loc 1 404 0
 1306 00f8 012C     		cmp	r4, #1
 1307 00fa 0ED1     		bne	.L101
 405:main.c        ****                     USBUART_PutChar(input);
 1308              		.loc 1 405 0
 1309 00fc A0F13003 		sub	r3, r0, #48
 1310 0100 5449     		ldr	r1, .L117+36
 1311 0102 03EB8303 		add	r3, r3, r3, lsl #2
 1312 0106 91F83620 		ldrb	r2, [r1, #54]	@ zero_extendqisi2
 1313 010a 02EB4303 		add	r3, r2, r3, lsl #1
 1314 010e 81F83630 		strb	r3, [r1, #54]
 406:main.c        ****                     ++inCount;
 1315              		.loc 1 406 0
 1316 0112 FFF7FEFF 		bl	USBUART_PutChar
 1317              	.LVL131:
 407:main.c        ****                 }else if (inCount == 2){
 1318              		.loc 1 407 0
 1319 0116 0134     		adds	r4, r4, #1
 1320              	.LVL132:
 1321 0118 0BE0     		b	.L93
 1322              	.LVL133:
 1323              	.L101:
 408:main.c        ****                     transmitAddress  += input - (0x30);   
 1324              		.loc 1 408 0
 1325 011a 022C     		cmp	r4, #2
 1326 011c 09D1     		bne	.L93
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 37


 409:main.c        ****                     USBUART_PutChar(input);
 1327              		.loc 1 409 0
 1328 011e 4D4A     		ldr	r2, .L117+36
 1329 0120 92F83630 		ldrb	r3, [r2, #54]	@ zero_extendqisi2
 1330 0124 0344     		add	r3, r3, r0
 1331 0126 303B     		subs	r3, r3, #48
 1332 0128 82F83630 		strb	r3, [r2, #54]
 410:main.c        ****                     ++inCount;
 1333              		.loc 1 410 0
 1334 012c FFF7FEFF 		bl	USBUART_PutChar
 1335              	.LVL134:
 411:main.c        ****                 }
 1336              		.loc 1 411 0
 1337 0130 0134     		adds	r4, r4, #1
 1338              	.LVL135:
 1339              	.L93:
 381:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1340              		.loc 1 381 0
 1341 0132 022C     		cmp	r4, #2
 1342 0134 AADD     		ble	.L102
 1343              	.LVL136:
 1344              	.L99:
 415:main.c        ****                 continue;
 1345              		.loc 1 415 0
 1346 0136 464B     		ldr	r3, .L117+32
 1347 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 013a 002B     		cmp	r3, #0
 1349 013c 92D0     		beq	.L90
 1350              	.L104:
 419:main.c        ****             USBUART_PutCRLF();
 1351              		.loc 1 419 0 discriminator 1
 1352 013e FFF7FEFF 		bl	USBUART_CDCIsReady
 1353              	.LVL137:
 1354 0142 0028     		cmp	r0, #0
 1355 0144 FBD0     		beq	.L104
 420:main.c        ****             while(!USBUART_CDCIsReady());
 1356              		.loc 1 420 0
 1357 0146 FFF7FEFF 		bl	USBUART_PutCRLF
 1358              	.LVL138:
 1359              	.L105:
 421:main.c        ****             USBUART_PutString("Enter message: ");
 1360              		.loc 1 421 0 discriminator 1
 1361 014a FFF7FEFF 		bl	USBUART_CDCIsReady
 1362              	.LVL139:
 1363 014e 0028     		cmp	r0, #0
 1364 0150 FBD0     		beq	.L105
 422:main.c        ****             inCount = 7; 
 1365              		.loc 1 422 0
 1366 0152 4448     		ldr	r0, .L117+52
 1367 0154 FFF7FEFF 		bl	USBUART_PutString
 1368              	.LVL140:
 427:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 1369              		.loc 1 427 0
 1370 0158 434B     		ldr	r3, .L117+56
 1371 015a 0024     		movs	r4, #0
 1372 015c 1C70     		strb	r4, [r3]
 428:main.c        ****             buffer[2] = ADDR1Start; // Source address
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 38


 1373              		.loc 1 428 0
 1374 015e 0122     		movs	r2, #1
 1375 0160 5A70     		strb	r2, [r3, #1]
 429:main.c        ****             buffer[3] = transmitAddress; // Destination address
 1376              		.loc 1 429 0
 1377 0162 6022     		movs	r2, #96
 1378 0164 9A70     		strb	r2, [r3, #2]
 430:main.c        ****             buffer[4] = 0x00; // CRC disabled
 1379              		.loc 1 430 0
 1380 0166 3B4A     		ldr	r2, .L117+36
 1381 0168 92F83620 		ldrb	r2, [r2, #54]	@ zero_extendqisi2
 1382 016c DA70     		strb	r2, [r3, #3]
 431:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 1383              		.loc 1 431 0
 1384 016e 1C71     		strb	r4, [r3, #4]
 432:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 1385              		.loc 1 432 0
 1386 0170 8022     		movs	r2, #128
 1387 0172 5A71     		strb	r2, [r3, #5]
 433:main.c        ****             
 1388              		.loc 1 433 0
 1389 0174 7722     		movs	r2, #119
 1390 0176 9A71     		strb	r2, [r3, #6]
 423:main.c        ****             input = 0; 
 1391              		.loc 1 423 0
 1392 0178 0725     		movs	r5, #7
 436:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1393              		.loc 1 436 0
 1394 017a 13E0     		b	.L106
 1395              	.LVL141:
 1396              	.L107:
 437:main.c        ****                 input = USBUART_GetChar();
 1397              		.loc 1 437 0 discriminator 1
 1398 017c FFF7FEFF 		bl	USBUART_DataIsReady
 1399              	.LVL142:
 1400 0180 0028     		cmp	r0, #0
 1401 0182 FBD0     		beq	.L107
 438:main.c        ****                 if(input != 0x0D){
 1402              		.loc 1 438 0
 1403 0184 FFF7FEFF 		bl	USBUART_GetChar
 1404              	.LVL143:
 1405 0188 0446     		mov	r4, r0
 1406              	.LVL144:
 439:main.c        ****                     buffer[inCount] = input;
 1407              		.loc 1 439 0
 1408 018a 0D28     		cmp	r0, #13
 1409 018c 0AD0     		beq	.L106
 440:main.c        ****                     while(!USBUART_CDCIsReady());
 1410              		.loc 1 440 0
 1411 018e 364B     		ldr	r3, .L117+56
 1412 0190 5855     		strb	r0, [r3, r5]
 1413              	.LVL145:
 1414              	.L109:
 441:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 1415              		.loc 1 441 0 discriminator 1
 1416 0192 FFF7FEFF 		bl	USBUART_CDCIsReady
 1417              	.LVL146:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 39


 1418 0196 0028     		cmp	r0, #0
 1419 0198 FBD0     		beq	.L109
 442:main.c        ****                     ++inCount;
 1420              		.loc 1 442 0
 1421 019a 334B     		ldr	r3, .L117+56
 1422 019c 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1423 019e FFF7FEFF 		bl	USBUART_PutChar
 1424              	.LVL147:
 443:main.c        ****                 }
 1425              		.loc 1 443 0
 1426 01a2 0135     		adds	r5, r5, #1
 1427              	.LVL148:
 1428              	.L106:
 436:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1429              		.loc 1 436 0
 1430 01a4 0D2C     		cmp	r4, #13
 1431 01a6 E9D1     		bne	.L107
 446:main.c        ****             if (buffer[4] > 44) {
 1432              		.loc 1 446 0
 1433 01a8 EB1F     		subs	r3, r5, #7
 1434 01aa DBB2     		uxtb	r3, r3
 1435 01ac 2E4A     		ldr	r2, .L117+56
 1436 01ae 1371     		strb	r3, [r2, #4]
 447:main.c        ****                 while(!USBUART_CDCIsReady());
 1437              		.loc 1 447 0
 1438 01b0 2C2B     		cmp	r3, #44
 1439 01b2 07D9     		bls	.L110
 1440              	.L111:
 448:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 1441              		.loc 1 448 0 discriminator 1
 1442 01b4 FFF7FEFF 		bl	USBUART_CDCIsReady
 1443              	.LVL149:
 1444 01b8 0028     		cmp	r0, #0
 1445 01ba FBD0     		beq	.L111
 449:main.c        ****                 continue;
 1446              		.loc 1 449 0
 1447 01bc 2B48     		ldr	r0, .L117+60
 1448 01be FFF7FEFF 		bl	USBUART_PutString
 1449              	.LVL150:
 450:main.c        ****             }
 1450              		.loc 1 450 0
 1451 01c2 4FE7     		b	.L90
 1452              	.L110:
 454:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 1453              		.loc 1 454 0
 1454 01c4 0022     		movs	r2, #0
 1455 01c6 234B     		ldr	r3, .L117+36
 1456 01c8 5A61     		str	r2, [r3, #20]
 455:main.c        ****             dataSize++;
 1457              		.loc 1 455 0
 1458 01ca 7722     		movs	r2, #119
 1459 01cc 264B     		ldr	r3, .L117+56
 1460 01ce 5A55     		strb	r2, [r3, r5]
 456:main.c        ****             TimerTX_Start();
 1461              		.loc 1 456 0
 1462 01d0 0135     		adds	r5, r5, #1
 1463              	.LVL151:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 40


 1464 01d2 274B     		ldr	r3, .L117+64
 1465 01d4 1D60     		str	r5, [r3]
 457:main.c        ****             while (position < dataSize);
 1466              		.loc 1 457 0
 1467 01d6 FFF7FEFF 		bl	TimerTX_Start
 1468              	.LVL152:
 1469              	.L112:
 458:main.c        ****             TimerTX_Stop();
 1470              		.loc 1 458 0 discriminator 1
 1471 01da 1E4B     		ldr	r3, .L117+36
 1472 01dc 5A69     		ldr	r2, [r3, #20]
 1473 01de 244B     		ldr	r3, .L117+64
 1474 01e0 1B68     		ldr	r3, [r3]
 1475 01e2 9A42     		cmp	r2, r3
 1476 01e4 F9DB     		blt	.L112
 459:main.c        ****             while(!USBUART_CDCIsReady());
 1477              		.loc 1 459 0
 1478 01e6 FFF7FEFF 		bl	TimerTX_Stop
 1479              	.LVL153:
 1480              	.L113:
 460:main.c        ****             USBUART_PutCRLF(); 
 1481              		.loc 1 460 0 discriminator 1
 1482 01ea FFF7FEFF 		bl	USBUART_CDCIsReady
 1483              	.LVL154:
 1484 01ee 0028     		cmp	r0, #0
 1485 01f0 FBD0     		beq	.L113
 461:main.c        ****             
 1486              		.loc 1 461 0
 1487 01f2 FFF7FEFF 		bl	USBUART_PutCRLF
 1488              	.LVL155:
 1489              	.LBE5:
 1490 01f6 35E7     		b	.L90
 1491              	.LVL156:
 1492              	.L91:
 464:main.c        ****             stateDiagram();
 1493              		.loc 1 464 0
 1494 01f8 FFF7FEFF 		bl	checkForNewData
 1495              	.LVL157:
 465:main.c        ****             if (USBUART_DataIsReady()) { 
 1496              		.loc 1 465 0
 1497 01fc FFF7FEFF 		bl	stateDiagram
 1498              	.LVL158:
 466:main.c        ****                 char input;
 1499              		.loc 1 466 0
 1500 0200 FFF7FEFF 		bl	USBUART_DataIsReady
 1501              	.LVL159:
 1502 0204 0028     		cmp	r0, #0
 1503 0206 3FF42DAF 		beq	.L90
 1504              	.LBB7:
 468:main.c        ****                 if (toupper(input) == 'T') {
 1505              		.loc 1 468 0
 1506 020a FFF7FEFF 		bl	USBUART_GetChar
 1507              	.LVL160:
 1508              	.LBB8:
 469:main.c        ****                     transmitMode = true;
 1509              		.loc 1 469 0
 1510 020e 134B     		ldr	r3, .L117+44
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 41


 1511 0210 1B68     		ldr	r3, [r3]
 1512 0212 0344     		add	r3, r3, r0
 1513 0214 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1514 0216 03F00303 		and	r3, r3, #3
 1515 021a 022B     		cmp	r3, #2
 1516 021c 00D1     		bne	.L115
 469:main.c        ****                     transmitMode = true;
 1517              		.loc 1 469 0 is_stmt 0 discriminator 1
 1518 021e 2038     		subs	r0, r0, #32
 1519              	.LVL161:
 1520              	.L115:
 1521              	.LBE8:
 469:main.c        ****                     transmitMode = true;
 1522              		.loc 1 469 0 discriminator 4
 1523 0220 5428     		cmp	r0, #84
 1524 0222 7FF41FAF 		bne	.L90
 470:main.c        ****                 }
 1525              		.loc 1 470 0 is_stmt 1
 1526 0226 0122     		movs	r2, #1
 1527 0228 094B     		ldr	r3, .L117+32
 1528 022a 1A70     		strb	r2, [r3]
 1529 022c 1AE7     		b	.L90
 1530              	.L118:
 1531 022e 00BF     		.align	2
 1532              	.L117:
 1533 0230 00000000 		.word	TimerInterruptHandler
 1534 0234 00000000 		.word	RisingEdgeInterruptHandler
 1535 0238 00000000 		.word	FallingEdgeInterruptHandler
 1536 023c 00000000 		.word	ReceiveInterruptHandler
 1537 0240 00000000 		.word	TransmitInterruptHandler
 1538 0244 00000000 		.word	CollisionDelayInterruptHandler
 1539 0248 00000000 		.word	USBUART_device
 1540 024c 00000000 		.word	systemState
 1541 0250 00000000 		.word	.LANCHOR1
 1542 0254 00000000 		.word	.LANCHOR0
 1543 0258 38000000 		.word	.LC5
 1544 025c 00000000 		.word	__ctype_ptr__
 1545 0260 70000000 		.word	.LC6
 1546 0264 98000000 		.word	.LC7
 1547 0268 00000000 		.word	buffer
 1548 026c A8000000 		.word	.LC8
 1549 0270 00000000 		.word	dataSize
 1550              	.LBE7:
 1551              		.cfi_endproc
 1552              	.LFE70:
 1553              		.size	main, .-main
 1554              		.global	transmitMode
 1555              		.global	transmitAddress
 1556              		.global	concatCount
 1557              		.global	receiveBitCount
 1558              		.global	transmitBitCount
 1559              		.comm	dataSize,4,4
 1560              		.comm	currentChar,1,1
 1561              		.global	addressZeroReceive
 1562              		.global	headerCRC
 1563              		.global	crcUsage
 1564              		.global	messageLength
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 42


 1565              		.global	destinationAddress
 1566              		.global	sourceAddress
 1567              		.global	collisionLock
 1568              		.global	receiveLock
 1569              		.global	transmitLock
 1570              		.comm	dataPtr,4,4
 1571              		.global	idx
 1572              		.global	dataBitsRead
 1573              		.global	receivePosition
 1574              		.global	position
 1575              		.comm	receiveData,16,4
 1576              		.comm	receiveBuffer,500,4
 1577              		.comm	buffer,500,4
 1578              		.comm	transmitData,8000,4
 1579              		.global	lowFlag
 1580              		.comm	systemState,1,1
 1581              		.data
 1582              		.set	.LANCHOR1,. + 0
 1583              		.type	transmitMode, %object
 1584              		.size	transmitMode, 1
 1585              	transmitMode:
 1586 0000 01       		.byte	1
 1587              		.section	.rodata.str1.4,"aMS",%progbits,1
 1588              		.align	2
 1589              	.LC0:
 1590 0000 4D657373 		.ascii	"Message From: \000"
 1590      61676520 
 1590      46726F6D 
 1590      3A2000
 1591 000f 00       		.space	1
 1592              	.LC1:
 1593 0010 53656E74 		.ascii	"Sent To: \000"
 1593      20546F3A 
 1593      2000
 1594 001a 0000     		.space	2
 1595              	.LC2:
 1596 001c 42435354 		.ascii	"BCST \000"
 1596      2000
 1597 0022 0000     		.space	2
 1598              	.LC3:
 1599 0024 53697A65 		.ascii	"Size: \000"
 1599      3A2000
 1600 002b 00       		.space	1
 1601              	.LC4:
 1602 002c 4D657373 		.ascii	"Message: \000"
 1602      6167653A 
 1602      2000
 1603 0036 0000     		.space	2
 1604              	.LC5:
 1605 0038 456E7465 		.ascii	"Enter Address or press 'R' to switch to receive mod"
 1605      72204164 
 1605      64726573 
 1605      73206F72 
 1605      20707265 
 1606 006b 653A2000 		.ascii	"e: \000"
 1607 006f 00       		.space	1
 1608              	.LC6:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 43


 1609 0070 50726573 		.ascii	"Press 'T' to switch to transmit mode.\015\012\000"
 1609      73202754 
 1609      2720746F 
 1609      20737769 
 1609      74636820 
 1610              	.LC7:
 1611 0098 456E7465 		.ascii	"Enter message: \000"
 1611      72206D65 
 1611      73736167 
 1611      653A2000 
 1612              	.LC8:
 1613 00a8 0D0A4D65 		.ascii	"\015\012Message must be no more than 44 bytes.\015\012"
 1613      73736167 
 1613      65206D75 
 1613      73742062 
 1613      65206E6F 
 1614 00d2 00       		.ascii	"\000"
 1615              		.bss
 1616              		.align	2
 1617              		.set	.LANCHOR0,. + 0
 1618              		.type	collisionLock, %object
 1619              		.size	collisionLock, 1
 1620              	collisionLock:
 1621 0000 00       		.space	1
 1622 0001 000000   		.space	3
 1623              		.type	receiveBitCount, %object
 1624              		.size	receiveBitCount, 4
 1625              	receiveBitCount:
 1626 0004 00000000 		.space	4
 1627              		.type	receivePosition, %object
 1628              		.size	receivePosition, 4
 1629              	receivePosition:
 1630 0008 00000000 		.space	4
 1631              		.type	dataBitsRead, %object
 1632              		.size	dataBitsRead, 4
 1633              	dataBitsRead:
 1634 000c 00000000 		.space	4
 1635              		.type	receiveLock, %object
 1636              		.size	receiveLock, 4
 1637              	receiveLock:
 1638 0010 00000000 		.space	4
 1639              		.type	position, %object
 1640              		.size	position, 4
 1641              	position:
 1642 0014 00000000 		.space	4
 1643              		.type	transmitLock, %object
 1644              		.size	transmitLock, 4
 1645              	transmitLock:
 1646 0018 00000000 		.space	4
 1647              		.type	transmitBitCount, %object
 1648              		.size	transmitBitCount, 4
 1649              	transmitBitCount:
 1650 001c 00000000 		.space	4
 1651              		.type	idx, %object
 1652              		.size	idx, 4
 1653              	idx:
 1654 0020 00000000 		.space	4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 44


 1655              		.type	lowFlag, %object
 1656              		.size	lowFlag, 1
 1657              	lowFlag:
 1658 0024 00       		.space	1
 1659 0025 000000   		.space	3
 1660              		.type	addressZeroReceive, %object
 1661              		.size	addressZeroReceive, 4
 1662              	addressZeroReceive:
 1663 0028 00000000 		.space	4
 1664              		.type	sourceAddress, %object
 1665              		.size	sourceAddress, 1
 1666              	sourceAddress:
 1667 002c 00       		.space	1
 1668              		.type	destinationAddress, %object
 1669              		.size	destinationAddress, 1
 1670              	destinationAddress:
 1671 002d 00       		.space	1
 1672 002e 0000     		.space	2
 1673              		.type	messageLength, %object
 1674              		.size	messageLength, 4
 1675              	messageLength:
 1676 0030 00000000 		.space	4
 1677              		.type	crcUsage, %object
 1678              		.size	crcUsage, 1
 1679              	crcUsage:
 1680 0034 00       		.space	1
 1681              		.type	headerCRC, %object
 1682              		.size	headerCRC, 1
 1683              	headerCRC:
 1684 0035 00       		.space	1
 1685              		.type	transmitAddress, %object
 1686              		.size	transmitAddress, 1
 1687              	transmitAddress:
 1688 0036 00       		.space	1
 1689 0037 00       		.space	1
 1690              		.type	concatCount, %object
 1691              		.size	concatCount, 4
 1692              	concatCount:
 1693 0038 00000000 		.space	4
 1694              		.text
 1695              	.Letext0:
 1696              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1697              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1698              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1699              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1700              		.file 6 "Generated_Source\\PSoC5/USBUART.h"
 1701              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1702              		.file 8 "Generated_Source\\PSoC5/TimerRX.h"
 1703              		.file 9 "Generated_Source\\PSoC5/RECEIVE.h"
 1704              		.file 10 "Generated_Source\\PSoC5/TRANSMIT.h"
 1705              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 1706              		.file 12 "Generated_Source\\PSoC5/CollisionDelay.h"
 1707              		.file 13 "Generated_Source\\PSoC5/Timer.h"
 1708              		.file 14 "Generated_Source\\PSoC5/IDLE.h"
 1709              		.file 15 "Generated_Source\\PSoC5/BUSY.h"
 1710              		.file 16 "Generated_Source\\PSoC5/COLLISION.h"
 1711              		.file 17 "Generated_Source\\PSoC5/USBUART_cdc.h"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 45


 1712              		.file 18 "Generated_Source\\PSoC5/TimerTX.h"
 1713              		.file 19 "Generated_Source\\PSoC5/TimerISR.h"
 1714              		.file 20 "Generated_Source\\PSoC5/RisingEdgeISR.h"
 1715              		.file 21 "Generated_Source\\PSoC5/FallingEdgeISR.h"
 1716              		.file 22 "Generated_Source\\PSoC5/ReceiveISR.h"
 1717              		.file 23 "Generated_Source\\PSoC5/TransmitISR.h"
 1718              		.file 24 "Generated_Source\\PSoC5/CollisionDelayISR.h"
 1719              		.section	.debug_info,"",%progbits
 1720              	.Ldebug_info0:
 1721 0000 BF0C0000 		.4byte	0xcbf
 1722 0004 0400     		.2byte	0x4
 1723 0006 00000000 		.4byte	.Ldebug_abbrev0
 1724 000a 04       		.byte	0x4
 1725 000b 01       		.uleb128 0x1
 1726 000c C6050000 		.4byte	.LASF102
 1727 0010 0C       		.byte	0xc
 1728 0011 B3040000 		.4byte	.LASF103
 1729 0015 57030000 		.4byte	.LASF104
 1730 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1731 001d 00000000 		.4byte	0
 1732 0021 00000000 		.4byte	.Ldebug_line0
 1733 0025 02       		.uleb128 0x2
 1734 0026 01       		.byte	0x1
 1735 0027 06       		.byte	0x6
 1736 0028 26030000 		.4byte	.LASF0
 1737 002c 02       		.uleb128 0x2
 1738 002d 01       		.byte	0x1
 1739 002e 08       		.byte	0x8
 1740 002f F7020000 		.4byte	.LASF1
 1741 0033 02       		.uleb128 0x2
 1742 0034 02       		.byte	0x2
 1743 0035 05       		.byte	0x5
 1744 0036 9B000000 		.4byte	.LASF2
 1745 003a 03       		.uleb128 0x3
 1746 003b FD000000 		.4byte	.LASF4
 1747 003f 02       		.byte	0x2
 1748 0040 2B       		.byte	0x2b
 1749 0041 45000000 		.4byte	0x45
 1750 0045 02       		.uleb128 0x2
 1751 0046 02       		.byte	0x2
 1752 0047 07       		.byte	0x7
 1753 0048 41040000 		.4byte	.LASF3
 1754 004c 03       		.uleb128 0x3
 1755 004d 15050000 		.4byte	.LASF5
 1756 0051 02       		.byte	0x2
 1757 0052 3F       		.byte	0x3f
 1758 0053 57000000 		.4byte	0x57
 1759 0057 02       		.uleb128 0x2
 1760 0058 04       		.byte	0x4
 1761 0059 05       		.byte	0x5
 1762 005a 35020000 		.4byte	.LASF6
 1763 005e 02       		.uleb128 0x2
 1764 005f 04       		.byte	0x4
 1765 0060 07       		.byte	0x7
 1766 0061 CA030000 		.4byte	.LASF7
 1767 0065 02       		.uleb128 0x2
 1768 0066 08       		.byte	0x8
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 46


 1769 0067 05       		.byte	0x5
 1770 0068 1B020000 		.4byte	.LASF8
 1771 006c 02       		.uleb128 0x2
 1772 006d 08       		.byte	0x8
 1773 006e 07       		.byte	0x7
 1774 006f 40030000 		.4byte	.LASF9
 1775 0073 04       		.uleb128 0x4
 1776 0074 04       		.byte	0x4
 1777 0075 05       		.byte	0x5
 1778 0076 696E7400 		.ascii	"int\000"
 1779 007a 02       		.uleb128 0x2
 1780 007b 04       		.byte	0x4
 1781 007c 07       		.byte	0x7
 1782 007d B4030000 		.4byte	.LASF10
 1783 0081 03       		.uleb128 0x3
 1784 0082 C1030000 		.4byte	.LASF11
 1785 0086 03       		.byte	0x3
 1786 0087 24       		.byte	0x24
 1787 0088 3A000000 		.4byte	0x3a
 1788 008c 03       		.uleb128 0x3
 1789 008d 39040000 		.4byte	.LASF12
 1790 0091 03       		.byte	0x3
 1791 0092 2C       		.byte	0x2c
 1792 0093 4C000000 		.4byte	0x4c
 1793 0097 05       		.uleb128 0x5
 1794 0098 68010000 		.4byte	.LASF13
 1795 009c 04       		.byte	0x4
 1796 009d 9201     		.2byte	0x192
 1797 009f 2C000000 		.4byte	0x2c
 1798 00a3 02       		.uleb128 0x2
 1799 00a4 04       		.byte	0x4
 1800 00a5 04       		.byte	0x4
 1801 00a6 E0010000 		.4byte	.LASF14
 1802 00aa 02       		.uleb128 0x2
 1803 00ab 08       		.byte	0x8
 1804 00ac 04       		.byte	0x4
 1805 00ad D9040000 		.4byte	.LASF15
 1806 00b1 02       		.uleb128 0x2
 1807 00b2 01       		.byte	0x1
 1808 00b3 08       		.byte	0x8
 1809 00b4 2E040000 		.4byte	.LASF16
 1810 00b8 05       		.uleb128 0x5
 1811 00b9 BA040000 		.4byte	.LASF17
 1812 00bd 04       		.byte	0x4
 1813 00be 3C02     		.2byte	0x23c
 1814 00c0 C4000000 		.4byte	0xc4
 1815 00c4 06       		.uleb128 0x6
 1816 00c5 97000000 		.4byte	0x97
 1817 00c9 02       		.uleb128 0x2
 1818 00ca 08       		.byte	0x8
 1819 00cb 04       		.byte	0x4
 1820 00cc CD020000 		.4byte	.LASF18
 1821 00d0 02       		.uleb128 0x2
 1822 00d1 04       		.byte	0x4
 1823 00d2 07       		.byte	0x7
 1824 00d3 AB000000 		.4byte	.LASF19
 1825 00d7 07       		.uleb128 0x7
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 47


 1826 00d8 04       		.byte	0x4
 1827 00d9 B1000000 		.4byte	0xb1
 1828 00dd 07       		.uleb128 0x7
 1829 00de 04       		.byte	0x4
 1830 00df E3000000 		.4byte	0xe3
 1831 00e3 08       		.uleb128 0x8
 1832 00e4 B1000000 		.4byte	0xb1
 1833 00e8 09       		.uleb128 0x9
 1834 00e9 B0020000 		.4byte	.LASF105
 1835 00ed 01       		.byte	0x1
 1836 00ee 2C000000 		.4byte	0x2c
 1837 00f2 01       		.byte	0x1
 1838 00f3 21       		.byte	0x21
 1839 00f4 0B010000 		.4byte	0x10b
 1840 00f8 0A       		.uleb128 0xa
 1841 00f9 70000000 		.4byte	.LASF20
 1842 00fd 00       		.byte	0
 1843 00fe 0A       		.uleb128 0xa
 1844 00ff B6020000 		.4byte	.LASF21
 1845 0103 01       		.byte	0x1
 1846 0104 0A       		.uleb128 0xa
 1847 0105 15040000 		.4byte	.LASF22
 1848 0109 02       		.byte	0x2
 1849 010a 00       		.byte	0
 1850 010b 0B       		.uleb128 0xb
 1851 010c B4060000 		.4byte	.LASF106
 1852 0110 01       		.byte	0x1
 1853 0111 3D01     		.2byte	0x13d
 1854 0113 00000000 		.4byte	.LFB69
 1855 0117 0C000000 		.4byte	.LFE69-.LFB69
 1856 011b 01       		.uleb128 0x1
 1857 011c 9C       		.byte	0x9c
 1858 011d 0C       		.uleb128 0xc
 1859 011e 83000000 		.4byte	.LASF25
 1860 0122 01       		.byte	0x1
 1861 0123 7D       		.byte	0x7d
 1862 0124 00000000 		.4byte	.LFB64
 1863 0128 94000000 		.4byte	.LFE64-.LFB64
 1864 012c 01       		.uleb128 0x1
 1865 012d 9C       		.byte	0x9c
 1866 012e 8C010000 		.4byte	0x18c
 1867 0132 0D       		.uleb128 0xd
 1868 0133 13000000 		.4byte	.LASF23
 1869 0137 01       		.byte	0x1
 1870 0138 7E       		.byte	0x7e
 1871 0139 73000000 		.4byte	0x73
 1872 013d 00000000 		.4byte	.LLST0
 1873 0141 0D       		.uleb128 0xd
 1874 0142 50050000 		.4byte	.LASF24
 1875 0146 01       		.byte	0x1
 1876 0147 7F       		.byte	0x7f
 1877 0148 B1000000 		.4byte	0xb1
 1878 014c 1F000000 		.4byte	.LLST1
 1879 0150 0E       		.uleb128 0xe
 1880 0151 00000000 		.4byte	.Ldebug_ranges0+0
 1881 0155 67010000 		.4byte	0x167
 1882 0159 0F       		.uleb128 0xf
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 48


 1883 015a 7800     		.ascii	"x\000"
 1884 015c 01       		.byte	0x1
 1885 015d 97       		.byte	0x97
 1886 015e 73000000 		.4byte	0x73
 1887 0162 49000000 		.4byte	.LLST2
 1888 0166 00       		.byte	0
 1889 0167 10       		.uleb128 0x10
 1890 0168 12000000 		.4byte	.LVL1
 1891 016c 1E0B0000 		.4byte	0xb1e
 1892 0170 10       		.uleb128 0x10
 1893 0171 1A000000 		.4byte	.LVL2
 1894 0175 290B0000 		.4byte	0xb29
 1895 0179 10       		.uleb128 0x10
 1896 017a 34000000 		.4byte	.LVL3
 1897 017e 340B0000 		.4byte	0xb34
 1898 0182 10       		.uleb128 0x10
 1899 0183 48000000 		.4byte	.LVL4
 1900 0187 340B0000 		.4byte	0xb34
 1901 018b 00       		.byte	0
 1902 018c 0C       		.uleb128 0xc
 1903 018d 83040000 		.4byte	.LASF26
 1904 0191 01       		.byte	0x1
 1905 0192 AF       		.byte	0xaf
 1906 0193 00000000 		.4byte	.LFB65
 1907 0197 0C010000 		.4byte	.LFE65-.LFB65
 1908 019b 01       		.uleb128 0x1
 1909 019c 9C       		.byte	0x9c
 1910 019d FD010000 		.4byte	0x1fd
 1911 01a1 11       		.uleb128 0x11
 1912 01a2 4E000000 		.4byte	.LVL15
 1913 01a6 3F0B0000 		.4byte	0xb3f
 1914 01aa B4010000 		.4byte	0x1b4
 1915 01ae 12       		.uleb128 0x12
 1916 01af 01       		.uleb128 0x1
 1917 01b0 50       		.byte	0x50
 1918 01b1 01       		.uleb128 0x1
 1919 01b2 31       		.byte	0x31
 1920 01b3 00       		.byte	0
 1921 01b4 11       		.uleb128 0x11
 1922 01b5 6C000000 		.4byte	.LVL16
 1923 01b9 3F0B0000 		.4byte	0xb3f
 1924 01bd C7010000 		.4byte	0x1c7
 1925 01c1 12       		.uleb128 0x12
 1926 01c2 01       		.uleb128 0x1
 1927 01c3 50       		.byte	0x50
 1928 01c4 01       		.uleb128 0x1
 1929 01c5 30       		.byte	0x30
 1930 01c6 00       		.byte	0
 1931 01c7 11       		.uleb128 0x11
 1932 01c8 94000000 		.4byte	.LVL17
 1933 01cc 3F0B0000 		.4byte	0xb3f
 1934 01d0 DA010000 		.4byte	0x1da
 1935 01d4 12       		.uleb128 0x12
 1936 01d5 01       		.uleb128 0x1
 1937 01d6 50       		.byte	0x50
 1938 01d7 01       		.uleb128 0x1
 1939 01d8 31       		.byte	0x31
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 49


 1940 01d9 00       		.byte	0
 1941 01da 11       		.uleb128 0x11
 1942 01db AC000000 		.4byte	.LVL18
 1943 01df 3F0B0000 		.4byte	0xb3f
 1944 01e3 ED010000 		.4byte	0x1ed
 1945 01e7 12       		.uleb128 0x12
 1946 01e8 01       		.uleb128 0x1
 1947 01e9 50       		.byte	0x50
 1948 01ea 01       		.uleb128 0x1
 1949 01eb 30       		.byte	0x30
 1950 01ec 00       		.byte	0
 1951 01ed 13       		.uleb128 0x13
 1952 01ee E4000000 		.4byte	.LVL19
 1953 01f2 3F0B0000 		.4byte	0xb3f
 1954 01f6 12       		.uleb128 0x12
 1955 01f7 01       		.uleb128 0x1
 1956 01f8 50       		.byte	0x50
 1957 01f9 01       		.uleb128 0x1
 1958 01fa 30       		.byte	0x30
 1959 01fb 00       		.byte	0
 1960 01fc 00       		.byte	0
 1961 01fd 14       		.uleb128 0x14
 1962 01fe 9A020000 		.4byte	.LASF27
 1963 0202 01       		.byte	0x1
 1964 0203 E9       		.byte	0xe9
 1965 0204 00000000 		.4byte	.LFB66
 1966 0208 74000000 		.4byte	.LFE66-.LFB66
 1967 020c 01       		.uleb128 0x1
 1968 020d 9C       		.byte	0x9c
 1969 020e 79020000 		.4byte	0x279
 1970 0212 15       		.uleb128 0x15
 1971 0213 1C000000 		.4byte	.LBB4
 1972 0217 58000000 		.4byte	.LBE4-.LBB4
 1973 021b 0D       		.uleb128 0xd
 1974 021c B4000000 		.4byte	.LASF28
 1975 0220 01       		.byte	0x1
 1976 0221 F8       		.byte	0xf8
 1977 0222 81000000 		.4byte	0x81
 1978 0226 68000000 		.4byte	.LLST3
 1979 022a 11       		.uleb128 0x11
 1980 022b 28000000 		.4byte	.LVL20
 1981 022f 3F0B0000 		.4byte	0xb3f
 1982 0233 3D020000 		.4byte	0x23d
 1983 0237 12       		.uleb128 0x12
 1984 0238 01       		.uleb128 0x1
 1985 0239 50       		.byte	0x50
 1986 023a 01       		.uleb128 0x1
 1987 023b 30       		.byte	0x30
 1988 023c 00       		.byte	0
 1989 023d 10       		.uleb128 0x10
 1990 023e 38000000 		.4byte	.LVL21
 1991 0242 4A0B0000 		.4byte	0xb4a
 1992 0246 11       		.uleb128 0x11
 1993 0247 56000000 		.4byte	.LVL27
 1994 024b 550B0000 		.4byte	0xb55
 1995 024f 5A020000 		.4byte	0x25a
 1996 0253 12       		.uleb128 0x12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 50


 1997 0254 01       		.uleb128 0x1
 1998 0255 50       		.byte	0x50
 1999 0256 02       		.uleb128 0x2
 2000 0257 74       		.byte	0x74
 2001 0258 00       		.sleb128 0
 2002 0259 00       		.byte	0
 2003 025a 11       		.uleb128 0x11
 2004 025b 5E000000 		.4byte	.LVL28
 2005 025f 600B0000 		.4byte	0xb60
 2006 0263 6E020000 		.4byte	0x26e
 2007 0267 12       		.uleb128 0x12
 2008 0268 01       		.uleb128 0x1
 2009 0269 50       		.byte	0x50
 2010 026a 02       		.uleb128 0x2
 2011 026b 74       		.byte	0x74
 2012 026c 7F       		.sleb128 -1
 2013 026d 00       		.byte	0
 2014 026e 10       		.uleb128 0x10
 2015 026f 62000000 		.4byte	.LVL29
 2016 0273 6B0B0000 		.4byte	0xb6b
 2017 0277 00       		.byte	0
 2018 0278 00       		.byte	0
 2019 0279 16       		.uleb128 0x16
 2020 027a 65060000 		.4byte	.LASF29
 2021 027e 01       		.byte	0x1
 2022 027f 1001     		.2byte	0x110
 2023 0281 00000000 		.4byte	.LFB67
 2024 0285 44000000 		.4byte	.LFE67-.LFB67
 2025 0289 01       		.uleb128 0x1
 2026 028a 9C       		.byte	0x9c
 2027 028b CA020000 		.4byte	0x2ca
 2028 028f 11       		.uleb128 0x11
 2029 0290 10000000 		.4byte	.LVL31
 2030 0294 760B0000 		.4byte	0xb76
 2031 0298 A3020000 		.4byte	0x2a3
 2032 029c 12       		.uleb128 0x12
 2033 029d 01       		.uleb128 0x1
 2034 029e 50       		.byte	0x50
 2035 029f 02       		.uleb128 0x2
 2036 02a0 08       		.byte	0x8
 2037 02a1 34       		.byte	0x34
 2038 02a2 00       		.byte	0
 2039 02a3 11       		.uleb128 0x11
 2040 02a4 16000000 		.4byte	.LVL32
 2041 02a8 810B0000 		.4byte	0xb81
 2042 02ac B7020000 		.4byte	0x2b7
 2043 02b0 12       		.uleb128 0x12
 2044 02b1 01       		.uleb128 0x1
 2045 02b2 50       		.byte	0x50
 2046 02b3 02       		.uleb128 0x2
 2047 02b4 08       		.byte	0x8
 2048 02b5 33       		.byte	0x33
 2049 02b6 00       		.byte	0
 2050 02b7 10       		.uleb128 0x10
 2051 02b8 1A000000 		.4byte	.LVL33
 2052 02bc 8C0B0000 		.4byte	0xb8c
 2053 02c0 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 51


 2054 02c1 32000000 		.4byte	.LVL34
 2055 02c5 1E0B0000 		.4byte	0xb1e
 2056 02c9 00       		.byte	0
 2057 02ca 16       		.uleb128 0x16
 2058 02cb 7E020000 		.4byte	.LASF30
 2059 02cf 01       		.byte	0x1
 2060 02d0 2D01     		.2byte	0x12d
 2061 02d2 00000000 		.4byte	.LFB68
 2062 02d6 38000000 		.4byte	.LFE68-.LFB68
 2063 02da 01       		.uleb128 0x1
 2064 02db 9C       		.byte	0x9c
 2065 02dc 14030000 		.4byte	0x314
 2066 02e0 11       		.uleb128 0x11
 2067 02e1 12000000 		.4byte	.LVL35
 2068 02e5 760B0000 		.4byte	0xb76
 2069 02e9 F5020000 		.4byte	0x2f5
 2070 02ed 12       		.uleb128 0x12
 2071 02ee 01       		.uleb128 0x1
 2072 02ef 50       		.byte	0x50
 2073 02f0 03       		.uleb128 0x3
 2074 02f1 0A       		.byte	0xa
 2075 02f2 3E03     		.2byte	0x33e
 2076 02f4 00       		.byte	0
 2077 02f5 11       		.uleb128 0x11
 2078 02f6 1A000000 		.4byte	.LVL36
 2079 02fa 810B0000 		.4byte	0xb81
 2080 02fe 0A030000 		.4byte	0x30a
 2081 0302 12       		.uleb128 0x12
 2082 0303 01       		.uleb128 0x1
 2083 0304 50       		.byte	0x50
 2084 0305 03       		.uleb128 0x3
 2085 0306 0A       		.byte	0xa
 2086 0307 3D03     		.2byte	0x33d
 2087 0309 00       		.byte	0
 2088 030a 10       		.uleb128 0x10
 2089 030b 1E000000 		.4byte	.LVL37
 2090 030f 8C0B0000 		.4byte	0xb8c
 2091 0313 00       		.byte	0
 2092 0314 17       		.uleb128 0x17
 2093 0315 3E020000 		.4byte	.LASF31
 2094 0319 01       		.byte	0x1
 2095 031a DD01     		.2byte	0x1dd
 2096 031c 00000000 		.4byte	.LFB71
 2097 0320 90000000 		.4byte	.LFE71-.LFB71
 2098 0324 01       		.uleb128 0x1
 2099 0325 9C       		.byte	0x9c
 2100 0326 D0030000 		.4byte	0x3d0
 2101 032a 11       		.uleb128 0x11
 2102 032b 18000000 		.4byte	.LVL38
 2103 032f 970B0000 		.4byte	0xb97
 2104 0333 3D030000 		.4byte	0x33d
 2105 0337 12       		.uleb128 0x12
 2106 0338 01       		.uleb128 0x1
 2107 0339 50       		.byte	0x50
 2108 033a 01       		.uleb128 0x1
 2109 033b 31       		.byte	0x31
 2110 033c 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 52


 2111 033d 10       		.uleb128 0x10
 2112 033e 1C000000 		.4byte	.LVL39
 2113 0342 A20B0000 		.4byte	0xba2
 2114 0346 10       		.uleb128 0x10
 2115 0347 26000000 		.4byte	.LVL40
 2116 034b AD0B0000 		.4byte	0xbad
 2117 034f 10       		.uleb128 0x10
 2118 0350 2A000000 		.4byte	.LVL41
 2119 0354 A20B0000 		.4byte	0xba2
 2120 0358 10       		.uleb128 0x10
 2121 0359 34000000 		.4byte	.LVL42
 2122 035d B80B0000 		.4byte	0xbb8
 2123 0361 11       		.uleb128 0x11
 2124 0362 46000000 		.4byte	.LVL43
 2125 0366 AD0B0000 		.4byte	0xbad
 2126 036a 74030000 		.4byte	0x374
 2127 036e 12       		.uleb128 0x12
 2128 036f 01       		.uleb128 0x1
 2129 0370 50       		.byte	0x50
 2130 0371 01       		.uleb128 0x1
 2131 0372 31       		.byte	0x31
 2132 0373 00       		.byte	0
 2133 0374 10       		.uleb128 0x10
 2134 0375 4A000000 		.4byte	.LVL44
 2135 0379 C30B0000 		.4byte	0xbc3
 2136 037d 10       		.uleb128 0x10
 2137 037e 54000000 		.4byte	.LVL45
 2138 0382 970B0000 		.4byte	0xb97
 2139 0386 10       		.uleb128 0x10
 2140 0387 58000000 		.4byte	.LVL46
 2141 038b C30B0000 		.4byte	0xbc3
 2142 038f 10       		.uleb128 0x10
 2143 0390 62000000 		.4byte	.LVL47
 2144 0394 B80B0000 		.4byte	0xbb8
 2145 0398 11       		.uleb128 0x11
 2146 0399 6A000000 		.4byte	.LVL48
 2147 039d B80B0000 		.4byte	0xbb8
 2148 03a1 AB030000 		.4byte	0x3ab
 2149 03a5 12       		.uleb128 0x12
 2150 03a6 01       		.uleb128 0x1
 2151 03a7 50       		.byte	0x50
 2152 03a8 01       		.uleb128 0x1
 2153 03a9 31       		.byte	0x31
 2154 03aa 00       		.byte	0
 2155 03ab 10       		.uleb128 0x10
 2156 03ac 6E000000 		.4byte	.LVL49
 2157 03b0 CE0B0000 		.4byte	0xbce
 2158 03b4 10       		.uleb128 0x10
 2159 03b5 78000000 		.4byte	.LVL50
 2160 03b9 970B0000 		.4byte	0xb97
 2161 03bd 10       		.uleb128 0x10
 2162 03be 7C000000 		.4byte	.LVL51
 2163 03c2 CE0B0000 		.4byte	0xbce
 2164 03c6 10       		.uleb128 0x10
 2165 03c7 86000000 		.4byte	.LVL52
 2166 03cb AD0B0000 		.4byte	0xbad
 2167 03cf 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 53


 2168 03d0 17       		.uleb128 0x17
 2169 03d1 ED040000 		.4byte	.LASF32
 2170 03d5 01       		.byte	0x1
 2171 03d6 F901     		.2byte	0x1f9
 2172 03d8 00000000 		.4byte	.LFB72
 2173 03dc FC020000 		.4byte	.LFE72-.LFB72
 2174 03e0 01       		.uleb128 0x1
 2175 03e1 9C       		.byte	0x9c
 2176 03e2 C2050000 		.4byte	0x5c2
 2177 03e6 10       		.uleb128 0x10
 2178 03e7 06000000 		.4byte	.LVL53
 2179 03eb D90B0000 		.4byte	0xbd9
 2180 03ef 10       		.uleb128 0x10
 2181 03f0 68000000 		.4byte	.LVL54
 2182 03f4 D90B0000 		.4byte	0xbd9
 2183 03f8 10       		.uleb128 0x10
 2184 03f9 70000000 		.4byte	.LVL55
 2185 03fd E40B0000 		.4byte	0xbe4
 2186 0401 10       		.uleb128 0x10
 2187 0402 74000000 		.4byte	.LVL56
 2188 0406 D90B0000 		.4byte	0xbd9
 2189 040a 10       		.uleb128 0x10
 2190 040b 7C000000 		.4byte	.LVL57
 2191 040f E40B0000 		.4byte	0xbe4
 2192 0413 10       		.uleb128 0x10
 2193 0414 80000000 		.4byte	.LVL58
 2194 0418 D90B0000 		.4byte	0xbd9
 2195 041c 10       		.uleb128 0x10
 2196 041d 88000000 		.4byte	.LVL59
 2197 0421 E40B0000 		.4byte	0xbe4
 2198 0425 10       		.uleb128 0x10
 2199 0426 8C000000 		.4byte	.LVL60
 2200 042a D90B0000 		.4byte	0xbd9
 2201 042e 11       		.uleb128 0x11
 2202 042f 96000000 		.4byte	.LVL61
 2203 0433 EF0B0000 		.4byte	0xbef
 2204 0437 45040000 		.4byte	0x445
 2205 043b 12       		.uleb128 0x12
 2206 043c 01       		.uleb128 0x1
 2207 043d 50       		.byte	0x50
 2208 043e 05       		.uleb128 0x5
 2209 043f 03       		.byte	0x3
 2210 0440 00000000 		.4byte	.LC0
 2211 0444 00       		.byte	0
 2212 0445 10       		.uleb128 0x10
 2213 0446 9A000000 		.4byte	.LVL62
 2214 044a D90B0000 		.4byte	0xbd9
 2215 044e 10       		.uleb128 0x10
 2216 044f B2000000 		.4byte	.LVL63
 2217 0453 FA0B0000 		.4byte	0xbfa
 2218 0457 10       		.uleb128 0x10
 2219 0458 B6000000 		.4byte	.LVL64
 2220 045c D90B0000 		.4byte	0xbd9
 2221 0460 10       		.uleb128 0x10
 2222 0461 DE000000 		.4byte	.LVL65
 2223 0465 FA0B0000 		.4byte	0xbfa
 2224 0469 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 54


 2225 046a E2000000 		.4byte	.LVL66
 2226 046e D90B0000 		.4byte	0xbd9
 2227 0472 10       		.uleb128 0x10
 2228 0473 14010000 		.4byte	.LVL67
 2229 0477 FA0B0000 		.4byte	0xbfa
 2230 047b 10       		.uleb128 0x10
 2231 047c 18010000 		.4byte	.LVL68
 2232 0480 D90B0000 		.4byte	0xbd9
 2233 0484 10       		.uleb128 0x10
 2234 0485 20010000 		.4byte	.LVL69
 2235 0489 E40B0000 		.4byte	0xbe4
 2236 048d 10       		.uleb128 0x10
 2237 048e 24010000 		.4byte	.LVL70
 2238 0492 D90B0000 		.4byte	0xbd9
 2239 0496 11       		.uleb128 0x11
 2240 0497 2E010000 		.4byte	.LVL71
 2241 049b EF0B0000 		.4byte	0xbef
 2242 049f AD040000 		.4byte	0x4ad
 2243 04a3 12       		.uleb128 0x12
 2244 04a4 01       		.uleb128 0x1
 2245 04a5 50       		.byte	0x50
 2246 04a6 05       		.uleb128 0x5
 2247 04a7 03       		.byte	0x3
 2248 04a8 10000000 		.4byte	.LC1
 2249 04ac 00       		.byte	0
 2250 04ad 10       		.uleb128 0x10
 2251 04ae 3A010000 		.4byte	.LVL72
 2252 04b2 D90B0000 		.4byte	0xbd9
 2253 04b6 11       		.uleb128 0x11
 2254 04b7 44010000 		.4byte	.LVL73
 2255 04bb EF0B0000 		.4byte	0xbef
 2256 04bf CD040000 		.4byte	0x4cd
 2257 04c3 12       		.uleb128 0x12
 2258 04c4 01       		.uleb128 0x1
 2259 04c5 50       		.byte	0x50
 2260 04c6 05       		.uleb128 0x5
 2261 04c7 03       		.byte	0x3
 2262 04c8 1C000000 		.4byte	.LC2
 2263 04cc 00       		.byte	0
 2264 04cd 10       		.uleb128 0x10
 2265 04ce 48010000 		.4byte	.LVL74
 2266 04d2 D90B0000 		.4byte	0xbd9
 2267 04d6 10       		.uleb128 0x10
 2268 04d7 50010000 		.4byte	.LVL75
 2269 04db E40B0000 		.4byte	0xbe4
 2270 04df 10       		.uleb128 0x10
 2271 04e0 56010000 		.4byte	.LVL76
 2272 04e4 D90B0000 		.4byte	0xbd9
 2273 04e8 10       		.uleb128 0x10
 2274 04e9 6E010000 		.4byte	.LVL77
 2275 04ed FA0B0000 		.4byte	0xbfa
 2276 04f1 10       		.uleb128 0x10
 2277 04f2 72010000 		.4byte	.LVL78
 2278 04f6 D90B0000 		.4byte	0xbd9
 2279 04fa 10       		.uleb128 0x10
 2280 04fb 9C010000 		.4byte	.LVL79
 2281 04ff FA0B0000 		.4byte	0xbfa
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 55


 2282 0503 10       		.uleb128 0x10
 2283 0504 A0010000 		.4byte	.LVL80
 2284 0508 D90B0000 		.4byte	0xbd9
 2285 050c 10       		.uleb128 0x10
 2286 050d D4010000 		.4byte	.LVL81
 2287 0511 FA0B0000 		.4byte	0xbfa
 2288 0515 10       		.uleb128 0x10
 2289 0516 D8010000 		.4byte	.LVL82
 2290 051a E40B0000 		.4byte	0xbe4
 2291 051e 10       		.uleb128 0x10
 2292 051f DC010000 		.4byte	.LVL83
 2293 0523 D90B0000 		.4byte	0xbd9
 2294 0527 10       		.uleb128 0x10
 2295 0528 E4010000 		.4byte	.LVL84
 2296 052c D90B0000 		.4byte	0xbd9
 2297 0530 11       		.uleb128 0x11
 2298 0531 EE010000 		.4byte	.LVL85
 2299 0535 EF0B0000 		.4byte	0xbef
 2300 0539 47050000 		.4byte	0x547
 2301 053d 12       		.uleb128 0x12
 2302 053e 01       		.uleb128 0x1
 2303 053f 50       		.byte	0x50
 2304 0540 05       		.uleb128 0x5
 2305 0541 03       		.byte	0x3
 2306 0542 24000000 		.4byte	.LC3
 2307 0546 00       		.byte	0
 2308 0547 10       		.uleb128 0x10
 2309 0548 F2010000 		.4byte	.LVL86
 2310 054c D90B0000 		.4byte	0xbd9
 2311 0550 10       		.uleb128 0x10
 2312 0551 0E020000 		.4byte	.LVL87
 2313 0555 FA0B0000 		.4byte	0xbfa
 2314 0559 10       		.uleb128 0x10
 2315 055a 12020000 		.4byte	.LVL88
 2316 055e D90B0000 		.4byte	0xbd9
 2317 0562 10       		.uleb128 0x10
 2318 0563 40020000 		.4byte	.LVL89
 2319 0567 FA0B0000 		.4byte	0xbfa
 2320 056b 10       		.uleb128 0x10
 2321 056c 44020000 		.4byte	.LVL90
 2322 0570 D90B0000 		.4byte	0xbd9
 2323 0574 10       		.uleb128 0x10
 2324 0575 7A020000 		.4byte	.LVL91
 2325 0579 FA0B0000 		.4byte	0xbfa
 2326 057d 10       		.uleb128 0x10
 2327 057e 7E020000 		.4byte	.LVL92
 2328 0582 D90B0000 		.4byte	0xbd9
 2329 0586 10       		.uleb128 0x10
 2330 0587 86020000 		.4byte	.LVL93
 2331 058b E40B0000 		.4byte	0xbe4
 2332 058f 10       		.uleb128 0x10
 2333 0590 8A020000 		.4byte	.LVL94
 2334 0594 D90B0000 		.4byte	0xbd9
 2335 0598 11       		.uleb128 0x11
 2336 0599 94020000 		.4byte	.LVL95
 2337 059d EF0B0000 		.4byte	0xbef
 2338 05a1 AF050000 		.4byte	0x5af
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 56


 2339 05a5 12       		.uleb128 0x12
 2340 05a6 01       		.uleb128 0x1
 2341 05a7 50       		.byte	0x50
 2342 05a8 05       		.uleb128 0x5
 2343 05a9 03       		.byte	0x3
 2344 05aa 2C000000 		.4byte	.LC4
 2345 05ae 00       		.byte	0
 2346 05af 10       		.uleb128 0x10
 2347 05b0 98020000 		.4byte	.LVL96
 2348 05b4 D90B0000 		.4byte	0xbd9
 2349 05b8 10       		.uleb128 0x10
 2350 05b9 BC020000 		.4byte	.LVL97
 2351 05bd FA0B0000 		.4byte	0xbfa
 2352 05c1 00       		.byte	0
 2353 05c2 18       		.uleb128 0x18
 2354 05c3 E5000000 		.4byte	.LASF107
 2355 05c7 01       		.byte	0x1
 2356 05c8 4C01     		.2byte	0x14c
 2357 05ca 73000000 		.4byte	0x73
 2358 05ce 00000000 		.4byte	.LFB70
 2359 05d2 74020000 		.4byte	.LFE70-.LFB70
 2360 05d6 01       		.uleb128 0x1
 2361 05d7 9C       		.byte	0x9c
 2362 05d8 E7080000 		.4byte	0x8e7
 2363 05dc 19       		.uleb128 0x19
 2364 05dd 6E000000 		.4byte	.LBB5
 2365 05e1 88010000 		.4byte	.LBE5-.LBB5
 2366 05e5 76070000 		.4byte	0x776
 2367 05e9 1A       		.uleb128 0x1a
 2368 05ea 95010000 		.4byte	.LASF33
 2369 05ee 01       		.byte	0x1
 2370 05ef 7801     		.2byte	0x178
 2371 05f1 73000000 		.4byte	0x73
 2372 05f5 7B000000 		.4byte	.LLST4
 2373 05f9 1A       		.uleb128 0x1a
 2374 05fa A5000000 		.4byte	.LASF34
 2375 05fe 01       		.byte	0x1
 2376 05ff 7A01     		.2byte	0x17a
 2377 0601 B1000000 		.4byte	0xb1
 2378 0605 D5000000 		.4byte	.LLST5
 2379 0609 19       		.uleb128 0x19
 2380 060a 9C000000 		.4byte	.LBB6
 2381 060e 18000000 		.4byte	.LBE6-.LBB6
 2382 0612 27060000 		.4byte	0x627
 2383 0616 1B       		.uleb128 0x1b
 2384 0617 5F5F7800 		.ascii	"__x\000"
 2385 061b 01       		.byte	0x1
 2386 061c 8601     		.2byte	0x186
 2387 061e B1000000 		.4byte	0xb1
 2388 0622 42010000 		.4byte	.LLST6
 2389 0626 00       		.byte	0
 2390 0627 10       		.uleb128 0x10
 2391 0628 7A000000 		.4byte	.LVL114
 2392 062c D90B0000 		.4byte	0xbd9
 2393 0630 11       		.uleb128 0x11
 2394 0631 84000000 		.4byte	.LVL115
 2395 0635 EF0B0000 		.4byte	0xbef
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 57


 2396 0639 47060000 		.4byte	0x647
 2397 063d 12       		.uleb128 0x12
 2398 063e 01       		.uleb128 0x1
 2399 063f 50       		.byte	0x50
 2400 0640 05       		.uleb128 0x5
 2401 0641 03       		.byte	0x3
 2402 0642 38000000 		.4byte	.LC5
 2403 0646 00       		.byte	0
 2404 0647 10       		.uleb128 0x10
 2405 0648 8C000000 		.4byte	.LVL117
 2406 064c 14030000 		.4byte	0x314
 2407 0650 10       		.uleb128 0x10
 2408 0651 90000000 		.4byte	.LVL118
 2409 0655 050C0000 		.4byte	0xc05
 2410 0659 10       		.uleb128 0x10
 2411 065a 98000000 		.4byte	.LVL119
 2412 065e 100C0000 		.4byte	0xc10
 2413 0662 10       		.uleb128 0x10
 2414 0663 C2000000 		.4byte	.LVL122
 2415 0667 1E0B0000 		.4byte	0xb1e
 2416 066b 11       		.uleb128 0x11
 2417 066c C8000000 		.4byte	.LVL123
 2418 0670 FA0B0000 		.4byte	0xbfa
 2419 0674 7F060000 		.4byte	0x67f
 2420 0678 12       		.uleb128 0x12
 2421 0679 01       		.uleb128 0x1
 2422 067a 50       		.byte	0x50
 2423 067b 02       		.uleb128 0x2
 2424 067c 75       		.byte	0x75
 2425 067d 00       		.sleb128 0
 2426 067e 00       		.byte	0
 2427 067f 10       		.uleb128 0x10
 2428 0680 CC000000 		.4byte	.LVL124
 2429 0684 E40B0000 		.4byte	0xbe4
 2430 0688 11       		.uleb128 0x11
 2431 0689 D2000000 		.4byte	.LVL125
 2432 068d EF0B0000 		.4byte	0xbef
 2433 0691 9F060000 		.4byte	0x69f
 2434 0695 12       		.uleb128 0x12
 2435 0696 01       		.uleb128 0x1
 2436 0697 50       		.byte	0x50
 2437 0698 05       		.uleb128 0x5
 2438 0699 03       		.byte	0x3
 2439 069a 70000000 		.4byte	.LC6
 2440 069e 00       		.byte	0
 2441 069f 11       		.uleb128 0x11
 2442 06a0 F4000000 		.4byte	.LVL128
 2443 06a4 FA0B0000 		.4byte	0xbfa
 2444 06a8 B3060000 		.4byte	0x6b3
 2445 06ac 12       		.uleb128 0x12
 2446 06ad 01       		.uleb128 0x1
 2447 06ae 50       		.byte	0x50
 2448 06af 02       		.uleb128 0x2
 2449 06b0 75       		.byte	0x75
 2450 06b1 00       		.sleb128 0
 2451 06b2 00       		.byte	0
 2452 06b3 11       		.uleb128 0x11
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 58


 2453 06b4 16010000 		.4byte	.LVL131
 2454 06b8 FA0B0000 		.4byte	0xbfa
 2455 06bc C7060000 		.4byte	0x6c7
 2456 06c0 12       		.uleb128 0x12
 2457 06c1 01       		.uleb128 0x1
 2458 06c2 50       		.byte	0x50
 2459 06c3 02       		.uleb128 0x2
 2460 06c4 75       		.byte	0x75
 2461 06c5 00       		.sleb128 0
 2462 06c6 00       		.byte	0
 2463 06c7 11       		.uleb128 0x11
 2464 06c8 30010000 		.4byte	.LVL134
 2465 06cc FA0B0000 		.4byte	0xbfa
 2466 06d0 DB060000 		.4byte	0x6db
 2467 06d4 12       		.uleb128 0x12
 2468 06d5 01       		.uleb128 0x1
 2469 06d6 50       		.byte	0x50
 2470 06d7 02       		.uleb128 0x2
 2471 06d8 75       		.byte	0x75
 2472 06d9 00       		.sleb128 0
 2473 06da 00       		.byte	0
 2474 06db 10       		.uleb128 0x10
 2475 06dc 42010000 		.4byte	.LVL137
 2476 06e0 D90B0000 		.4byte	0xbd9
 2477 06e4 10       		.uleb128 0x10
 2478 06e5 4A010000 		.4byte	.LVL138
 2479 06e9 E40B0000 		.4byte	0xbe4
 2480 06ed 10       		.uleb128 0x10
 2481 06ee 4E010000 		.4byte	.LVL139
 2482 06f2 D90B0000 		.4byte	0xbd9
 2483 06f6 11       		.uleb128 0x11
 2484 06f7 58010000 		.4byte	.LVL140
 2485 06fb EF0B0000 		.4byte	0xbef
 2486 06ff 0D070000 		.4byte	0x70d
 2487 0703 12       		.uleb128 0x12
 2488 0704 01       		.uleb128 0x1
 2489 0705 50       		.byte	0x50
 2490 0706 05       		.uleb128 0x5
 2491 0707 03       		.byte	0x3
 2492 0708 98000000 		.4byte	.LC7
 2493 070c 00       		.byte	0
 2494 070d 10       		.uleb128 0x10
 2495 070e 80010000 		.4byte	.LVL142
 2496 0712 050C0000 		.4byte	0xc05
 2497 0716 10       		.uleb128 0x10
 2498 0717 88010000 		.4byte	.LVL143
 2499 071b 100C0000 		.4byte	0xc10
 2500 071f 10       		.uleb128 0x10
 2501 0720 96010000 		.4byte	.LVL146
 2502 0724 D90B0000 		.4byte	0xbd9
 2503 0728 10       		.uleb128 0x10
 2504 0729 A2010000 		.4byte	.LVL147
 2505 072d FA0B0000 		.4byte	0xbfa
 2506 0731 10       		.uleb128 0x10
 2507 0732 B8010000 		.4byte	.LVL149
 2508 0736 D90B0000 		.4byte	0xbd9
 2509 073a 11       		.uleb128 0x11
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 59


 2510 073b C2010000 		.4byte	.LVL150
 2511 073f EF0B0000 		.4byte	0xbef
 2512 0743 51070000 		.4byte	0x751
 2513 0747 12       		.uleb128 0x12
 2514 0748 01       		.uleb128 0x1
 2515 0749 50       		.byte	0x50
 2516 074a 05       		.uleb128 0x5
 2517 074b 03       		.byte	0x3
 2518 074c A8000000 		.4byte	.LC8
 2519 0750 00       		.byte	0
 2520 0751 10       		.uleb128 0x10
 2521 0752 DA010000 		.4byte	.LVL152
 2522 0756 1B0C0000 		.4byte	0xc1b
 2523 075a 10       		.uleb128 0x10
 2524 075b EA010000 		.4byte	.LVL153
 2525 075f 260C0000 		.4byte	0xc26
 2526 0763 10       		.uleb128 0x10
 2527 0764 EE010000 		.4byte	.LVL154
 2528 0768 D90B0000 		.4byte	0xbd9
 2529 076c 10       		.uleb128 0x10
 2530 076d F6010000 		.4byte	.LVL155
 2531 0771 E40B0000 		.4byte	0xbe4
 2532 0775 00       		.byte	0
 2533 0776 19       		.uleb128 0x19
 2534 0777 0A020000 		.4byte	.LBB7
 2535 077b 6A000000 		.4byte	.LBE7-.LBB7
 2536 077f BB070000 		.4byte	0x7bb
 2537 0783 1A       		.uleb128 0x1a
 2538 0784 A5000000 		.4byte	.LASF34
 2539 0788 01       		.byte	0x1
 2540 0789 D301     		.2byte	0x1d3
 2541 078b B1000000 		.4byte	0xb1
 2542 078f 60010000 		.4byte	.LLST7
 2543 0793 19       		.uleb128 0x19
 2544 0794 0E020000 		.4byte	.LBB8
 2545 0798 12000000 		.4byte	.LBE8-.LBB8
 2546 079c B1070000 		.4byte	0x7b1
 2547 07a0 1B       		.uleb128 0x1b
 2548 07a1 5F5F7800 		.ascii	"__x\000"
 2549 07a5 01       		.byte	0x1
 2550 07a6 D501     		.2byte	0x1d5
 2551 07a8 B1000000 		.4byte	0xb1
 2552 07ac 60010000 		.4byte	.LLST7
 2553 07b0 00       		.byte	0
 2554 07b1 10       		.uleb128 0x10
 2555 07b2 0E020000 		.4byte	.LVL160
 2556 07b6 100C0000 		.4byte	0xc10
 2557 07ba 00       		.byte	0
 2558 07bb 11       		.uleb128 0x11
 2559 07bc 0A000000 		.4byte	.LVL98
 2560 07c0 310C0000 		.4byte	0xc31
 2561 07c4 D2070000 		.4byte	0x7d2
 2562 07c8 12       		.uleb128 0x12
 2563 07c9 01       		.uleb128 0x1
 2564 07ca 50       		.byte	0x50
 2565 07cb 05       		.uleb128 0x5
 2566 07cc 03       		.byte	0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 60


 2567 07cd 00000000 		.4byte	TimerInterruptHandler
 2568 07d1 00       		.byte	0
 2569 07d2 11       		.uleb128 0x11
 2570 07d3 10000000 		.4byte	.LVL99
 2571 07d7 3C0C0000 		.4byte	0xc3c
 2572 07db E9070000 		.4byte	0x7e9
 2573 07df 12       		.uleb128 0x12
 2574 07e0 01       		.uleb128 0x1
 2575 07e1 50       		.byte	0x50
 2576 07e2 05       		.uleb128 0x5
 2577 07e3 03       		.byte	0x3
 2578 07e4 00000000 		.4byte	RisingEdgeInterruptHandler
 2579 07e8 00       		.byte	0
 2580 07e9 11       		.uleb128 0x11
 2581 07ea 16000000 		.4byte	.LVL100
 2582 07ee 470C0000 		.4byte	0xc47
 2583 07f2 00080000 		.4byte	0x800
 2584 07f6 12       		.uleb128 0x12
 2585 07f7 01       		.uleb128 0x1
 2586 07f8 50       		.byte	0x50
 2587 07f9 05       		.uleb128 0x5
 2588 07fa 03       		.byte	0x3
 2589 07fb 00000000 		.4byte	FallingEdgeInterruptHandler
 2590 07ff 00       		.byte	0
 2591 0800 11       		.uleb128 0x11
 2592 0801 1E000000 		.4byte	.LVL101
 2593 0805 520C0000 		.4byte	0xc52
 2594 0809 14080000 		.4byte	0x814
 2595 080d 12       		.uleb128 0x12
 2596 080e 01       		.uleb128 0x1
 2597 080f 50       		.byte	0x50
 2598 0810 02       		.uleb128 0x2
 2599 0811 74       		.byte	0x74
 2600 0812 00       		.sleb128 0
 2601 0813 00       		.byte	0
 2602 0814 11       		.uleb128 0x11
 2603 0815 24000000 		.4byte	.LVL102
 2604 0819 5D0C0000 		.4byte	0xc5d
 2605 081d 28080000 		.4byte	0x828
 2606 0821 12       		.uleb128 0x12
 2607 0822 01       		.uleb128 0x1
 2608 0823 50       		.byte	0x50
 2609 0824 02       		.uleb128 0x2
 2610 0825 08       		.byte	0x8
 2611 0826 2F       		.byte	0x2f
 2612 0827 00       		.byte	0
 2613 0828 11       		.uleb128 0x11
 2614 0829 2A000000 		.4byte	.LVL103
 2615 082d 680C0000 		.4byte	0xc68
 2616 0831 3C080000 		.4byte	0x83c
 2617 0835 12       		.uleb128 0x12
 2618 0836 01       		.uleb128 0x1
 2619 0837 50       		.byte	0x50
 2620 0838 02       		.uleb128 0x2
 2621 0839 08       		.byte	0x8
 2622 083a 2E       		.byte	0x2e
 2623 083b 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 61


 2624 083c 11       		.uleb128 0x11
 2625 083d 30000000 		.4byte	.LVL104
 2626 0841 730C0000 		.4byte	0xc73
 2627 0845 53080000 		.4byte	0x853
 2628 0849 12       		.uleb128 0x12
 2629 084a 01       		.uleb128 0x1
 2630 084b 50       		.byte	0x50
 2631 084c 05       		.uleb128 0x5
 2632 084d 03       		.byte	0x3
 2633 084e 00000000 		.4byte	TransmitInterruptHandler
 2634 0852 00       		.byte	0
 2635 0853 11       		.uleb128 0x11
 2636 0854 36000000 		.4byte	.LVL105
 2637 0858 7E0C0000 		.4byte	0xc7e
 2638 085c 67080000 		.4byte	0x867
 2639 0860 12       		.uleb128 0x12
 2640 0861 01       		.uleb128 0x1
 2641 0862 50       		.byte	0x50
 2642 0863 02       		.uleb128 0x2
 2643 0864 08       		.byte	0x8
 2644 0865 33       		.byte	0x33
 2645 0866 00       		.byte	0
 2646 0867 11       		.uleb128 0x11
 2647 0868 3C000000 		.4byte	.LVL106
 2648 086c 890C0000 		.4byte	0xc89
 2649 0870 7B080000 		.4byte	0x87b
 2650 0874 12       		.uleb128 0x12
 2651 0875 01       		.uleb128 0x1
 2652 0876 50       		.byte	0x50
 2653 0877 02       		.uleb128 0x2
 2654 0878 08       		.byte	0x8
 2655 0879 34       		.byte	0x34
 2656 087a 00       		.byte	0
 2657 087b 11       		.uleb128 0x11
 2658 087c 42000000 		.4byte	.LVL107
 2659 0880 520C0000 		.4byte	0xc52
 2660 0884 8F080000 		.4byte	0x88f
 2661 0888 12       		.uleb128 0x12
 2662 0889 01       		.uleb128 0x1
 2663 088a 50       		.byte	0x50
 2664 088b 02       		.uleb128 0x2
 2665 088c 74       		.byte	0x74
 2666 088d 00       		.sleb128 0
 2667 088e 00       		.byte	0
 2668 088f 11       		.uleb128 0x11
 2669 0890 48000000 		.4byte	.LVL108
 2670 0894 940C0000 		.4byte	0xc94
 2671 0898 A6080000 		.4byte	0x8a6
 2672 089c 12       		.uleb128 0x12
 2673 089d 01       		.uleb128 0x1
 2674 089e 50       		.byte	0x50
 2675 089f 05       		.uleb128 0x5
 2676 08a0 03       		.byte	0x3
 2677 08a1 00000000 		.4byte	CollisionDelayInterruptHandler
 2678 08a5 00       		.byte	0
 2679 08a6 11       		.uleb128 0x11
 2680 08a7 52000000 		.4byte	.LVL109
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 62


 2681 08ab 9F0C0000 		.4byte	0xc9f
 2682 08af B9080000 		.4byte	0x8b9
 2683 08b3 12       		.uleb128 0x12
 2684 08b4 01       		.uleb128 0x1
 2685 08b5 51       		.byte	0x51
 2686 08b6 01       		.uleb128 0x1
 2687 08b7 31       		.byte	0x31
 2688 08b8 00       		.byte	0
 2689 08b9 10       		.uleb128 0x10
 2690 08ba 56000000 		.4byte	.LVL110
 2691 08be AB0C0000 		.4byte	0xcab
 2692 08c2 10       		.uleb128 0x10
 2693 08c3 5E000000 		.4byte	.LVL111
 2694 08c7 B70C0000 		.4byte	0xcb7
 2695 08cb 10       		.uleb128 0x10
 2696 08cc FC010000 		.4byte	.LVL157
 2697 08d0 D0030000 		.4byte	0x3d0
 2698 08d4 10       		.uleb128 0x10
 2699 08d5 00020000 		.4byte	.LVL158
 2700 08d9 14030000 		.4byte	0x314
 2701 08dd 10       		.uleb128 0x10
 2702 08de 04020000 		.4byte	.LVL159
 2703 08e2 050C0000 		.4byte	0xc05
 2704 08e6 00       		.byte	0
 2705 08e7 1C       		.uleb128 0x1c
 2706 08e8 BC000000 		.4byte	.LASF35
 2707 08ec 05       		.byte	0x5
 2708 08ed 2E       		.byte	0x2e
 2709 08ee DD000000 		.4byte	0xdd
 2710 08f2 1D       		.uleb128 0x1d
 2711 08f3 5B020000 		.4byte	.LASF36
 2712 08f7 06       		.byte	0x6
 2713 08f8 D602     		.2byte	0x2d6
 2714 08fa C4000000 		.4byte	0xc4
 2715 08fe 1D       		.uleb128 0x1d
 2716 08ff B9050000 		.4byte	.LASF37
 2717 0903 07       		.byte	0x7
 2718 0904 1207     		.2byte	0x712
 2719 0906 0A090000 		.4byte	0x90a
 2720 090a 06       		.uleb128 0x6
 2721 090b 8C000000 		.4byte	0x8c
 2722 090f 1E       		.uleb128 0x1e
 2723 0910 05030000 		.4byte	.LASF38
 2724 0914 01       		.byte	0x1
 2725 0915 21       		.byte	0x21
 2726 0916 E8000000 		.4byte	0xe8
 2727 091a 05       		.uleb128 0x5
 2728 091b 03       		.byte	0x3
 2729 091c 00000000 		.4byte	systemState
 2730 0920 1E       		.uleb128 0x1e
 2731 0921 2C000000 		.4byte	.LASF39
 2732 0925 01       		.byte	0x1
 2733 0926 24       		.byte	0x24
 2734 0927 31090000 		.4byte	0x931
 2735 092b 05       		.uleb128 0x5
 2736 092c 03       		.byte	0x3
 2737 092d 00000000 		.4byte	lowFlag
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 63


 2738 0931 02       		.uleb128 0x2
 2739 0932 01       		.byte	0x1
 2740 0933 02       		.byte	0x2
 2741 0934 33040000 		.4byte	.LASF40
 2742 0938 1F       		.uleb128 0x1f
 2743 0939 2C000000 		.4byte	0x2c
 2744 093d 4F090000 		.4byte	0x94f
 2745 0941 20       		.uleb128 0x20
 2746 0942 D0000000 		.4byte	0xd0
 2747 0946 F301     		.2byte	0x1f3
 2748 0948 21       		.uleb128 0x21
 2749 0949 D0000000 		.4byte	0xd0
 2750 094d 0F       		.byte	0xf
 2751 094e 00       		.byte	0
 2752 094f 1E       		.uleb128 0x1e
 2753 0950 1F000000 		.4byte	.LASF41
 2754 0954 01       		.byte	0x1
 2755 0955 43       		.byte	0x43
 2756 0956 38090000 		.4byte	0x938
 2757 095a 05       		.uleb128 0x5
 2758 095b 03       		.byte	0x3
 2759 095c 00000000 		.4byte	transmitData
 2760 0960 1F       		.uleb128 0x1f
 2761 0961 2C000000 		.4byte	0x2c
 2762 0965 71090000 		.4byte	0x971
 2763 0969 20       		.uleb128 0x20
 2764 096a D0000000 		.4byte	0xd0
 2765 096e F301     		.2byte	0x1f3
 2766 0970 00       		.byte	0
 2767 0971 1E       		.uleb128 0x1e
 2768 0972 9C040000 		.4byte	.LASF42
 2769 0976 01       		.byte	0x1
 2770 0977 44       		.byte	0x44
 2771 0978 60090000 		.4byte	0x960
 2772 097c 05       		.uleb128 0x5
 2773 097d 03       		.byte	0x3
 2774 097e 00000000 		.4byte	buffer
 2775 0982 1E       		.uleb128 0x1e
 2776 0983 CB040000 		.4byte	.LASF43
 2777 0987 01       		.byte	0x1
 2778 0988 45       		.byte	0x45
 2779 0989 60090000 		.4byte	0x960
 2780 098d 05       		.uleb128 0x5
 2781 098e 03       		.byte	0x3
 2782 098f 00000000 		.4byte	receiveBuffer
 2783 0993 1F       		.uleb128 0x1f
 2784 0994 2C000000 		.4byte	0x2c
 2785 0998 A3090000 		.4byte	0x9a3
 2786 099c 21       		.uleb128 0x21
 2787 099d D0000000 		.4byte	0xd0
 2788 09a1 0F       		.byte	0xf
 2789 09a2 00       		.byte	0
 2790 09a3 1E       		.uleb128 0x1e
 2791 09a4 D4010000 		.4byte	.LASF44
 2792 09a8 01       		.byte	0x1
 2793 09a9 46       		.byte	0x46
 2794 09aa 93090000 		.4byte	0x993
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 64


 2795 09ae 05       		.uleb128 0x5
 2796 09af 03       		.byte	0x3
 2797 09b0 00000000 		.4byte	receiveData
 2798 09b4 1E       		.uleb128 0x1e
 2799 09b5 7A050000 		.4byte	.LASF45
 2800 09b9 01       		.byte	0x1
 2801 09ba 47       		.byte	0x47
 2802 09bb C5090000 		.4byte	0x9c5
 2803 09bf 05       		.uleb128 0x5
 2804 09c0 03       		.byte	0x3
 2805 09c1 00000000 		.4byte	position
 2806 09c5 06       		.uleb128 0x6
 2807 09c6 73000000 		.4byte	0x73
 2808 09ca 1E       		.uleb128 0x1e
 2809 09cb 05040000 		.4byte	.LASF46
 2810 09cf 01       		.byte	0x1
 2811 09d0 48       		.byte	0x48
 2812 09d1 73000000 		.4byte	0x73
 2813 09d5 05       		.uleb128 0x5
 2814 09d6 03       		.byte	0x3
 2815 09d7 00000000 		.4byte	receivePosition
 2816 09db 1E       		.uleb128 0x1e
 2817 09dc C0020000 		.4byte	.LASF47
 2818 09e0 01       		.byte	0x1
 2819 09e1 49       		.byte	0x49
 2820 09e2 73000000 		.4byte	0x73
 2821 09e6 05       		.uleb128 0x5
 2822 09e7 03       		.byte	0x3
 2823 09e8 00000000 		.4byte	dataBitsRead
 2824 09ec 22       		.uleb128 0x22
 2825 09ed 69647800 		.ascii	"idx\000"
 2826 09f1 01       		.byte	0x1
 2827 09f2 4A       		.byte	0x4a
 2828 09f3 73000000 		.4byte	0x73
 2829 09f7 05       		.uleb128 0x5
 2830 09f8 03       		.byte	0x3
 2831 09f9 00000000 		.4byte	idx
 2832 09fd 1E       		.uleb128 0x1e
 2833 09fe EA030000 		.4byte	.LASF48
 2834 0a02 01       		.byte	0x1
 2835 0a03 4B       		.byte	0x4b
 2836 0a04 D7000000 		.4byte	0xd7
 2837 0a08 05       		.uleb128 0x5
 2838 0a09 03       		.byte	0x3
 2839 0a0a 00000000 		.4byte	dataPtr
 2840 0a0e 1E       		.uleb128 0x1e
 2841 0a0f 93060000 		.4byte	.LASF49
 2842 0a13 01       		.byte	0x1
 2843 0a14 4C       		.byte	0x4c
 2844 0a15 73000000 		.4byte	0x73
 2845 0a19 05       		.uleb128 0x5
 2846 0a1a 03       		.byte	0x3
 2847 0a1b 00000000 		.4byte	transmitLock
 2848 0a1f 1E       		.uleb128 0x1e
 2849 0a20 6E010000 		.4byte	.LASF50
 2850 0a24 01       		.byte	0x1
 2851 0a25 4D       		.byte	0x4d
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 65


 2852 0a26 73000000 		.4byte	0x73
 2853 0a2a 05       		.uleb128 0x5
 2854 0a2b 03       		.byte	0x3
 2855 0a2c 00000000 		.4byte	receiveLock
 2856 0a30 1E       		.uleb128 0x1e
 2857 0a31 75000000 		.4byte	.LASF51
 2858 0a35 01       		.byte	0x1
 2859 0a36 4E       		.byte	0x4e
 2860 0a37 31090000 		.4byte	0x931
 2861 0a3b 05       		.uleb128 0x5
 2862 0a3c 03       		.byte	0x3
 2863 0a3d 00000000 		.4byte	collisionLock
 2864 0a41 1E       		.uleb128 0x1e
 2865 0a42 32030000 		.4byte	.LASF52
 2866 0a46 01       		.byte	0x1
 2867 0a47 51       		.byte	0x51
 2868 0a48 B1000000 		.4byte	0xb1
 2869 0a4c 05       		.uleb128 0x5
 2870 0a4d 03       		.byte	0x3
 2871 0a4e 00000000 		.4byte	sourceAddress
 2872 0a52 1E       		.uleb128 0x1e
 2873 0a53 80060000 		.4byte	.LASF53
 2874 0a57 01       		.byte	0x1
 2875 0a58 52       		.byte	0x52
 2876 0a59 B1000000 		.4byte	0xb1
 2877 0a5d 05       		.uleb128 0x5
 2878 0a5e 03       		.byte	0x3
 2879 0a5f 00000000 		.4byte	destinationAddress
 2880 0a63 1E       		.uleb128 0x1e
 2881 0a64 FD040000 		.4byte	.LASF54
 2882 0a68 01       		.byte	0x1
 2883 0a69 53       		.byte	0x53
 2884 0a6a 73000000 		.4byte	0x73
 2885 0a6e 05       		.uleb128 0x5
 2886 0a6f 03       		.byte	0x3
 2887 0a70 00000000 		.4byte	messageLength
 2888 0a74 1E       		.uleb128 0x1e
 2889 0a75 DC000000 		.4byte	.LASF55
 2890 0a79 01       		.byte	0x1
 2891 0a7a 54       		.byte	0x54
 2892 0a7b B1000000 		.4byte	0xb1
 2893 0a7f 05       		.uleb128 0x5
 2894 0a80 03       		.byte	0x3
 2895 0a81 00000000 		.4byte	crcUsage
 2896 0a85 1E       		.uleb128 0x1e
 2897 0a86 33050000 		.4byte	.LASF56
 2898 0a8a 01       		.byte	0x1
 2899 0a8b 55       		.byte	0x55
 2900 0a8c B1000000 		.4byte	0xb1
 2901 0a90 05       		.uleb128 0x5
 2902 0a91 03       		.byte	0x3
 2903 0a92 00000000 		.4byte	headerCRC
 2904 0a96 1E       		.uleb128 0x1e
 2905 0a97 3D050000 		.4byte	.LASF57
 2906 0a9b 01       		.byte	0x1
 2907 0a9c 56       		.byte	0x56
 2908 0a9d 73000000 		.4byte	0x73
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 66


 2909 0aa1 05       		.uleb128 0x5
 2910 0aa2 03       		.byte	0x3
 2911 0aa3 00000000 		.4byte	addressZeroReceive
 2912 0aa7 1E       		.uleb128 0x1e
 2913 0aa8 BF040000 		.4byte	.LASF58
 2914 0aac 01       		.byte	0x1
 2915 0aad 57       		.byte	0x57
 2916 0aae B1000000 		.4byte	0xb1
 2917 0ab2 05       		.uleb128 0x5
 2918 0ab3 03       		.byte	0x3
 2919 0ab4 00000000 		.4byte	currentChar
 2920 0ab8 1E       		.uleb128 0x1e
 2921 0ab9 3D010000 		.4byte	.LASF59
 2922 0abd 01       		.byte	0x1
 2923 0abe 58       		.byte	0x58
 2924 0abf 73000000 		.4byte	0x73
 2925 0ac3 05       		.uleb128 0x5
 2926 0ac4 03       		.byte	0x3
 2927 0ac5 00000000 		.4byte	dataSize
 2928 0ac9 1E       		.uleb128 0x1e
 2929 0aca D9020000 		.4byte	.LASF60
 2930 0ace 01       		.byte	0x1
 2931 0acf 59       		.byte	0x59
 2932 0ad0 73000000 		.4byte	0x73
 2933 0ad4 05       		.uleb128 0x5
 2934 0ad5 03       		.byte	0x3
 2935 0ad6 00000000 		.4byte	transmitBitCount
 2936 0ada 1E       		.uleb128 0x1e
 2937 0adb C4010000 		.4byte	.LASF61
 2938 0adf 01       		.byte	0x1
 2939 0ae0 5A       		.byte	0x5a
 2940 0ae1 73000000 		.4byte	0x73
 2941 0ae5 05       		.uleb128 0x5
 2942 0ae6 03       		.byte	0x3
 2943 0ae7 00000000 		.4byte	receiveBitCount
 2944 0aeb 1E       		.uleb128 0x1e
 2945 0aec 13000000 		.4byte	.LASF23
 2946 0af0 01       		.byte	0x1
 2947 0af1 5B       		.byte	0x5b
 2948 0af2 73000000 		.4byte	0x73
 2949 0af6 05       		.uleb128 0x5
 2950 0af7 03       		.byte	0x3
 2951 0af8 00000000 		.4byte	concatCount
 2952 0afc 1E       		.uleb128 0x1e
 2953 0afd 4B020000 		.4byte	.LASF62
 2954 0b01 01       		.byte	0x1
 2955 0b02 5C       		.byte	0x5c
 2956 0b03 2C000000 		.4byte	0x2c
 2957 0b07 05       		.uleb128 0x5
 2958 0b08 03       		.byte	0x3
 2959 0b09 00000000 		.4byte	transmitAddress
 2960 0b0d 1E       		.uleb128 0x1e
 2961 0b0e EA020000 		.4byte	.LASF63
 2962 0b12 01       		.byte	0x1
 2963 0b13 5E       		.byte	0x5e
 2964 0b14 31090000 		.4byte	0x931
 2965 0b18 05       		.uleb128 0x5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 67


 2966 0b19 03       		.byte	0x3
 2967 0b1a 00000000 		.4byte	transmitMode
 2968 0b1e 23       		.uleb128 0x23
 2969 0b1f 5C050000 		.4byte	.LASF64
 2970 0b23 5C050000 		.4byte	.LASF64
 2971 0b27 08       		.byte	0x8
 2972 0b28 5A       		.byte	0x5a
 2973 0b29 23       		.uleb128 0x23
 2974 0b2a E0040000 		.4byte	.LASF65
 2975 0b2e E0040000 		.4byte	.LASF65
 2976 0b32 09       		.byte	0x9
 2977 0b33 29       		.byte	0x29
 2978 0b34 23       		.uleb128 0x23
 2979 0b35 22010000 		.4byte	.LASF66
 2980 0b39 22010000 		.4byte	.LASF66
 2981 0b3d 08       		.byte	0x8
 2982 0b3e 5B       		.byte	0x5b
 2983 0b3f 23       		.uleb128 0x23
 2984 0b40 24050000 		.4byte	.LASF67
 2985 0b44 24050000 		.4byte	.LASF67
 2986 0b48 0A       		.byte	0xa
 2987 0b49 26       		.byte	0x26
 2988 0b4a 23       		.uleb128 0x23
 2989 0b4b 1F050000 		.4byte	.LASF68
 2990 0b4f 1F050000 		.4byte	.LASF68
 2991 0b53 0B       		.byte	0xb
 2992 0b54 88       		.byte	0x88
 2993 0b55 23       		.uleb128 0x23
 2994 0b56 7A010000 		.4byte	.LASF69
 2995 0b5a 7A010000 		.4byte	.LASF69
 2996 0b5e 0C       		.byte	0xc
 2997 0b5f 68       		.byte	0x68
 2998 0b60 23       		.uleb128 0x23
 2999 0b61 FF010000 		.4byte	.LASF70
 3000 0b65 FF010000 		.4byte	.LASF70
 3001 0b69 0C       		.byte	0xc
 3002 0b6a 6A       		.byte	0x6a
 3003 0b6b 23       		.uleb128 0x23
 3004 0b6c 9D010000 		.4byte	.LASF71
 3005 0b70 9D010000 		.4byte	.LASF71
 3006 0b74 0C       		.byte	0xc
 3007 0b75 5A       		.byte	0x5a
 3008 0b76 23       		.uleb128 0x23
 3009 0b77 CA000000 		.4byte	.LASF72
 3010 0b7b CA000000 		.4byte	.LASF72
 3011 0b7f 0D       		.byte	0xd
 3012 0b80 68       		.byte	0x68
 3013 0b81 23       		.uleb128 0x23
 3014 0b82 EA000000 		.4byte	.LASF73
 3015 0b86 EA000000 		.4byte	.LASF73
 3016 0b8a 0D       		.byte	0xd
 3017 0b8b 6A       		.byte	0x6a
 3018 0b8c 23       		.uleb128 0x23
 3019 0b8d 29020000 		.4byte	.LASF74
 3020 0b91 29020000 		.4byte	.LASF74
 3021 0b95 0D       		.byte	0xd
 3022 0b96 5A       		.byte	0x5a
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 68


 3023 0b97 23       		.uleb128 0x23
 3024 0b98 54040000 		.4byte	.LASF75
 3025 0b9c 54040000 		.4byte	.LASF75
 3026 0ba0 0E       		.byte	0xe
 3027 0ba1 26       		.byte	0x26
 3028 0ba2 23       		.uleb128 0x23
 3029 0ba3 34000000 		.4byte	.LASF76
 3030 0ba7 34000000 		.4byte	.LASF76
 3031 0bab 0E       		.byte	0xe
 3032 0bac 29       		.byte	0x29
 3033 0bad 23       		.uleb128 0x23
 3034 0bae 46010000 		.4byte	.LASF77
 3035 0bb2 46010000 		.4byte	.LASF77
 3036 0bb6 0F       		.byte	0xf
 3037 0bb7 26       		.byte	0x26
 3038 0bb8 23       		.uleb128 0x23
 3039 0bb9 A3040000 		.4byte	.LASF78
 3040 0bbd A3040000 		.4byte	.LASF78
 3041 0bc1 10       		.byte	0x10
 3042 0bc2 26       		.byte	0x26
 3043 0bc3 23       		.uleb128 0x23
 3044 0bc4 0B050000 		.4byte	.LASF79
 3045 0bc8 0B050000 		.4byte	.LASF79
 3046 0bcc 0F       		.byte	0xf
 3047 0bcd 29       		.byte	0x29
 3048 0bce 23       		.uleb128 0x23
 3049 0bcf 4B000000 		.4byte	.LASF80
 3050 0bd3 4B000000 		.4byte	.LASF80
 3051 0bd7 10       		.byte	0x10
 3052 0bd8 29       		.byte	0x29
 3053 0bd9 23       		.uleb128 0x23
 3054 0bda 00000000 		.4byte	.LASF81
 3055 0bde 00000000 		.4byte	.LASF81
 3056 0be2 11       		.byte	0x11
 3057 0be3 28       		.byte	0x28
 3058 0be4 23       		.uleb128 0x23
 3059 0be5 6A050000 		.4byte	.LASF82
 3060 0be9 6A050000 		.4byte	.LASF82
 3061 0bed 11       		.byte	0x11
 3062 0bee 26       		.byte	0x26
 3063 0bef 23       		.uleb128 0x23
 3064 0bf0 B2010000 		.4byte	.LASF83
 3065 0bf4 B2010000 		.4byte	.LASF83
 3066 0bf8 11       		.byte	0x11
 3067 0bf9 24       		.byte	0x24
 3068 0bfa 23       		.uleb128 0x23
 3069 0bfb 73040000 		.4byte	.LASF84
 3070 0bff 73040000 		.4byte	.LASF84
 3071 0c03 11       		.byte	0x11
 3072 0c04 25       		.byte	0x25
 3073 0c05 23       		.uleb128 0x23
 3074 0c06 A0060000 		.4byte	.LASF85
 3075 0c0a A0060000 		.4byte	.LASF85
 3076 0c0e 11       		.byte	0x11
 3077 0c0f 29       		.byte	0x29
 3078 0c10 23       		.uleb128 0x23
 3079 0c11 83050000 		.4byte	.LASF86
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 69


 3080 0c15 83050000 		.4byte	.LASF86
 3081 0c19 11       		.byte	0x11
 3082 0c1a 2C       		.byte	0x2c
 3083 0c1b 23       		.uleb128 0x23
 3084 0c1c DC030000 		.4byte	.LASF87
 3085 0c20 DC030000 		.4byte	.LASF87
 3086 0c24 12       		.byte	0x12
 3087 0c25 5A       		.byte	0x5a
 3088 0c26 23       		.uleb128 0x23
 3089 0c27 3E000000 		.4byte	.LASF88
 3090 0c2b 3E000000 		.4byte	.LASF88
 3091 0c2f 12       		.byte	0x12
 3092 0c30 5B       		.byte	0x5b
 3093 0c31 23       		.uleb128 0x23
 3094 0c32 54060000 		.4byte	.LASF89
 3095 0c36 54060000 		.4byte	.LASF89
 3096 0c3a 13       		.byte	0x13
 3097 0c3b 18       		.byte	0x18
 3098 0c3c 23       		.uleb128 0x23
 3099 0c3d 5A000000 		.4byte	.LASF90
 3100 0c41 5A000000 		.4byte	.LASF90
 3101 0c45 14       		.byte	0x14
 3102 0c46 18       		.byte	0x18
 3103 0c47 23       		.uleb128 0x23
 3104 0c48 51010000 		.4byte	.LASF91
 3105 0c4c 51010000 		.4byte	.LASF91
 3106 0c50 15       		.byte	0x15
 3107 0c51 18       		.byte	0x18
 3108 0c52 23       		.uleb128 0x23
 3109 0c53 F2030000 		.4byte	.LASF92
 3110 0c57 F2030000 		.4byte	.LASF92
 3111 0c5b 16       		.byte	0x16
 3112 0c5c 18       		.byte	0x18
 3113 0c5d 23       		.uleb128 0x23
 3114 0c5e 6A020000 		.4byte	.LASF93
 3115 0c62 6A020000 		.4byte	.LASF93
 3116 0c66 12       		.byte	0x12
 3117 0c67 68       		.byte	0x68
 3118 0c68 23       		.uleb128 0x23
 3119 0c69 11030000 		.4byte	.LASF94
 3120 0c6d 11030000 		.4byte	.LASF94
 3121 0c71 12       		.byte	0x12
 3122 0c72 6A       		.byte	0x6a
 3123 0c73 23       		.uleb128 0x23
 3124 0c74 1A040000 		.4byte	.LASF95
 3125 0c78 1A040000 		.4byte	.LASF95
 3126 0c7c 17       		.byte	0x17
 3127 0c7d 18       		.byte	0x18
 3128 0c7e 23       		.uleb128 0x23
 3129 0c7f A4050000 		.4byte	.LASF96
 3130 0c83 A4050000 		.4byte	.LASF96
 3131 0c87 08       		.byte	0x8
 3132 0c88 6A       		.byte	0x6a
 3133 0c89 23       		.uleb128 0x23
 3134 0c8a 5F040000 		.4byte	.LASF97
 3135 0c8e 5F040000 		.4byte	.LASF97
 3136 0c92 08       		.byte	0x8
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 70


 3137 0c93 68       		.byte	0x68
 3138 0c94 23       		.uleb128 0x23
 3139 0c95 08010000 		.4byte	.LASF98
 3140 0c99 08010000 		.4byte	.LASF98
 3141 0c9d 18       		.byte	0x18
 3142 0c9e 18       		.byte	0x18
 3143 0c9f 24       		.uleb128 0x24
 3144 0ca0 2F010000 		.4byte	.LASF99
 3145 0ca4 2F010000 		.4byte	.LASF99
 3146 0ca8 06       		.byte	0x6
 3147 0ca9 2E01     		.2byte	0x12e
 3148 0cab 24       		.uleb128 0x24
 3149 0cac E6010000 		.4byte	.LASF100
 3150 0cb0 E6010000 		.4byte	.LASF100
 3151 0cb4 06       		.byte	0x6
 3152 0cb5 3101     		.2byte	0x131
 3153 0cb7 23       		.uleb128 0x23
 3154 0cb8 93050000 		.4byte	.LASF101
 3155 0cbc 93050000 		.4byte	.LASF101
 3156 0cc0 11       		.byte	0x11
 3157 0cc1 22       		.byte	0x22
 3158 0cc2 00       		.byte	0
 3159              		.section	.debug_abbrev,"",%progbits
 3160              	.Ldebug_abbrev0:
 3161 0000 01       		.uleb128 0x1
 3162 0001 11       		.uleb128 0x11
 3163 0002 01       		.byte	0x1
 3164 0003 25       		.uleb128 0x25
 3165 0004 0E       		.uleb128 0xe
 3166 0005 13       		.uleb128 0x13
 3167 0006 0B       		.uleb128 0xb
 3168 0007 03       		.uleb128 0x3
 3169 0008 0E       		.uleb128 0xe
 3170 0009 1B       		.uleb128 0x1b
 3171 000a 0E       		.uleb128 0xe
 3172 000b 55       		.uleb128 0x55
 3173 000c 17       		.uleb128 0x17
 3174 000d 11       		.uleb128 0x11
 3175 000e 01       		.uleb128 0x1
 3176 000f 10       		.uleb128 0x10
 3177 0010 17       		.uleb128 0x17
 3178 0011 00       		.byte	0
 3179 0012 00       		.byte	0
 3180 0013 02       		.uleb128 0x2
 3181 0014 24       		.uleb128 0x24
 3182 0015 00       		.byte	0
 3183 0016 0B       		.uleb128 0xb
 3184 0017 0B       		.uleb128 0xb
 3185 0018 3E       		.uleb128 0x3e
 3186 0019 0B       		.uleb128 0xb
 3187 001a 03       		.uleb128 0x3
 3188 001b 0E       		.uleb128 0xe
 3189 001c 00       		.byte	0
 3190 001d 00       		.byte	0
 3191 001e 03       		.uleb128 0x3
 3192 001f 16       		.uleb128 0x16
 3193 0020 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 71


 3194 0021 03       		.uleb128 0x3
 3195 0022 0E       		.uleb128 0xe
 3196 0023 3A       		.uleb128 0x3a
 3197 0024 0B       		.uleb128 0xb
 3198 0025 3B       		.uleb128 0x3b
 3199 0026 0B       		.uleb128 0xb
 3200 0027 49       		.uleb128 0x49
 3201 0028 13       		.uleb128 0x13
 3202 0029 00       		.byte	0
 3203 002a 00       		.byte	0
 3204 002b 04       		.uleb128 0x4
 3205 002c 24       		.uleb128 0x24
 3206 002d 00       		.byte	0
 3207 002e 0B       		.uleb128 0xb
 3208 002f 0B       		.uleb128 0xb
 3209 0030 3E       		.uleb128 0x3e
 3210 0031 0B       		.uleb128 0xb
 3211 0032 03       		.uleb128 0x3
 3212 0033 08       		.uleb128 0x8
 3213 0034 00       		.byte	0
 3214 0035 00       		.byte	0
 3215 0036 05       		.uleb128 0x5
 3216 0037 16       		.uleb128 0x16
 3217 0038 00       		.byte	0
 3218 0039 03       		.uleb128 0x3
 3219 003a 0E       		.uleb128 0xe
 3220 003b 3A       		.uleb128 0x3a
 3221 003c 0B       		.uleb128 0xb
 3222 003d 3B       		.uleb128 0x3b
 3223 003e 05       		.uleb128 0x5
 3224 003f 49       		.uleb128 0x49
 3225 0040 13       		.uleb128 0x13
 3226 0041 00       		.byte	0
 3227 0042 00       		.byte	0
 3228 0043 06       		.uleb128 0x6
 3229 0044 35       		.uleb128 0x35
 3230 0045 00       		.byte	0
 3231 0046 49       		.uleb128 0x49
 3232 0047 13       		.uleb128 0x13
 3233 0048 00       		.byte	0
 3234 0049 00       		.byte	0
 3235 004a 07       		.uleb128 0x7
 3236 004b 0F       		.uleb128 0xf
 3237 004c 00       		.byte	0
 3238 004d 0B       		.uleb128 0xb
 3239 004e 0B       		.uleb128 0xb
 3240 004f 49       		.uleb128 0x49
 3241 0050 13       		.uleb128 0x13
 3242 0051 00       		.byte	0
 3243 0052 00       		.byte	0
 3244 0053 08       		.uleb128 0x8
 3245 0054 26       		.uleb128 0x26
 3246 0055 00       		.byte	0
 3247 0056 49       		.uleb128 0x49
 3248 0057 13       		.uleb128 0x13
 3249 0058 00       		.byte	0
 3250 0059 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 72


 3251 005a 09       		.uleb128 0x9
 3252 005b 04       		.uleb128 0x4
 3253 005c 01       		.byte	0x1
 3254 005d 03       		.uleb128 0x3
 3255 005e 0E       		.uleb128 0xe
 3256 005f 0B       		.uleb128 0xb
 3257 0060 0B       		.uleb128 0xb
 3258 0061 49       		.uleb128 0x49
 3259 0062 13       		.uleb128 0x13
 3260 0063 3A       		.uleb128 0x3a
 3261 0064 0B       		.uleb128 0xb
 3262 0065 3B       		.uleb128 0x3b
 3263 0066 0B       		.uleb128 0xb
 3264 0067 01       		.uleb128 0x1
 3265 0068 13       		.uleb128 0x13
 3266 0069 00       		.byte	0
 3267 006a 00       		.byte	0
 3268 006b 0A       		.uleb128 0xa
 3269 006c 28       		.uleb128 0x28
 3270 006d 00       		.byte	0
 3271 006e 03       		.uleb128 0x3
 3272 006f 0E       		.uleb128 0xe
 3273 0070 1C       		.uleb128 0x1c
 3274 0071 0B       		.uleb128 0xb
 3275 0072 00       		.byte	0
 3276 0073 00       		.byte	0
 3277 0074 0B       		.uleb128 0xb
 3278 0075 2E       		.uleb128 0x2e
 3279 0076 00       		.byte	0
 3280 0077 3F       		.uleb128 0x3f
 3281 0078 19       		.uleb128 0x19
 3282 0079 03       		.uleb128 0x3
 3283 007a 0E       		.uleb128 0xe
 3284 007b 3A       		.uleb128 0x3a
 3285 007c 0B       		.uleb128 0xb
 3286 007d 3B       		.uleb128 0x3b
 3287 007e 05       		.uleb128 0x5
 3288 007f 27       		.uleb128 0x27
 3289 0080 19       		.uleb128 0x19
 3290 0081 11       		.uleb128 0x11
 3291 0082 01       		.uleb128 0x1
 3292 0083 12       		.uleb128 0x12
 3293 0084 06       		.uleb128 0x6
 3294 0085 40       		.uleb128 0x40
 3295 0086 18       		.uleb128 0x18
 3296 0087 9742     		.uleb128 0x2117
 3297 0089 19       		.uleb128 0x19
 3298 008a 00       		.byte	0
 3299 008b 00       		.byte	0
 3300 008c 0C       		.uleb128 0xc
 3301 008d 2E       		.uleb128 0x2e
 3302 008e 01       		.byte	0x1
 3303 008f 3F       		.uleb128 0x3f
 3304 0090 19       		.uleb128 0x19
 3305 0091 03       		.uleb128 0x3
 3306 0092 0E       		.uleb128 0xe
 3307 0093 3A       		.uleb128 0x3a
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 73


 3308 0094 0B       		.uleb128 0xb
 3309 0095 3B       		.uleb128 0x3b
 3310 0096 0B       		.uleb128 0xb
 3311 0097 27       		.uleb128 0x27
 3312 0098 19       		.uleb128 0x19
 3313 0099 11       		.uleb128 0x11
 3314 009a 01       		.uleb128 0x1
 3315 009b 12       		.uleb128 0x12
 3316 009c 06       		.uleb128 0x6
 3317 009d 40       		.uleb128 0x40
 3318 009e 18       		.uleb128 0x18
 3319 009f 9742     		.uleb128 0x2117
 3320 00a1 19       		.uleb128 0x19
 3321 00a2 01       		.uleb128 0x1
 3322 00a3 13       		.uleb128 0x13
 3323 00a4 00       		.byte	0
 3324 00a5 00       		.byte	0
 3325 00a6 0D       		.uleb128 0xd
 3326 00a7 34       		.uleb128 0x34
 3327 00a8 00       		.byte	0
 3328 00a9 03       		.uleb128 0x3
 3329 00aa 0E       		.uleb128 0xe
 3330 00ab 3A       		.uleb128 0x3a
 3331 00ac 0B       		.uleb128 0xb
 3332 00ad 3B       		.uleb128 0x3b
 3333 00ae 0B       		.uleb128 0xb
 3334 00af 49       		.uleb128 0x49
 3335 00b0 13       		.uleb128 0x13
 3336 00b1 02       		.uleb128 0x2
 3337 00b2 17       		.uleb128 0x17
 3338 00b3 00       		.byte	0
 3339 00b4 00       		.byte	0
 3340 00b5 0E       		.uleb128 0xe
 3341 00b6 0B       		.uleb128 0xb
 3342 00b7 01       		.byte	0x1
 3343 00b8 55       		.uleb128 0x55
 3344 00b9 17       		.uleb128 0x17
 3345 00ba 01       		.uleb128 0x1
 3346 00bb 13       		.uleb128 0x13
 3347 00bc 00       		.byte	0
 3348 00bd 00       		.byte	0
 3349 00be 0F       		.uleb128 0xf
 3350 00bf 34       		.uleb128 0x34
 3351 00c0 00       		.byte	0
 3352 00c1 03       		.uleb128 0x3
 3353 00c2 08       		.uleb128 0x8
 3354 00c3 3A       		.uleb128 0x3a
 3355 00c4 0B       		.uleb128 0xb
 3356 00c5 3B       		.uleb128 0x3b
 3357 00c6 0B       		.uleb128 0xb
 3358 00c7 49       		.uleb128 0x49
 3359 00c8 13       		.uleb128 0x13
 3360 00c9 02       		.uleb128 0x2
 3361 00ca 17       		.uleb128 0x17
 3362 00cb 00       		.byte	0
 3363 00cc 00       		.byte	0
 3364 00cd 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 74


 3365 00ce 898201   		.uleb128 0x4109
 3366 00d1 00       		.byte	0
 3367 00d2 11       		.uleb128 0x11
 3368 00d3 01       		.uleb128 0x1
 3369 00d4 31       		.uleb128 0x31
 3370 00d5 13       		.uleb128 0x13
 3371 00d6 00       		.byte	0
 3372 00d7 00       		.byte	0
 3373 00d8 11       		.uleb128 0x11
 3374 00d9 898201   		.uleb128 0x4109
 3375 00dc 01       		.byte	0x1
 3376 00dd 11       		.uleb128 0x11
 3377 00de 01       		.uleb128 0x1
 3378 00df 31       		.uleb128 0x31
 3379 00e0 13       		.uleb128 0x13
 3380 00e1 01       		.uleb128 0x1
 3381 00e2 13       		.uleb128 0x13
 3382 00e3 00       		.byte	0
 3383 00e4 00       		.byte	0
 3384 00e5 12       		.uleb128 0x12
 3385 00e6 8A8201   		.uleb128 0x410a
 3386 00e9 00       		.byte	0
 3387 00ea 02       		.uleb128 0x2
 3388 00eb 18       		.uleb128 0x18
 3389 00ec 9142     		.uleb128 0x2111
 3390 00ee 18       		.uleb128 0x18
 3391 00ef 00       		.byte	0
 3392 00f0 00       		.byte	0
 3393 00f1 13       		.uleb128 0x13
 3394 00f2 898201   		.uleb128 0x4109
 3395 00f5 01       		.byte	0x1
 3396 00f6 11       		.uleb128 0x11
 3397 00f7 01       		.uleb128 0x1
 3398 00f8 31       		.uleb128 0x31
 3399 00f9 13       		.uleb128 0x13
 3400 00fa 00       		.byte	0
 3401 00fb 00       		.byte	0
 3402 00fc 14       		.uleb128 0x14
 3403 00fd 2E       		.uleb128 0x2e
 3404 00fe 01       		.byte	0x1
 3405 00ff 3F       		.uleb128 0x3f
 3406 0100 19       		.uleb128 0x19
 3407 0101 03       		.uleb128 0x3
 3408 0102 0E       		.uleb128 0xe
 3409 0103 3A       		.uleb128 0x3a
 3410 0104 0B       		.uleb128 0xb
 3411 0105 3B       		.uleb128 0x3b
 3412 0106 0B       		.uleb128 0xb
 3413 0107 27       		.uleb128 0x27
 3414 0108 19       		.uleb128 0x19
 3415 0109 11       		.uleb128 0x11
 3416 010a 01       		.uleb128 0x1
 3417 010b 12       		.uleb128 0x12
 3418 010c 06       		.uleb128 0x6
 3419 010d 40       		.uleb128 0x40
 3420 010e 18       		.uleb128 0x18
 3421 010f 9642     		.uleb128 0x2116
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 75


 3422 0111 19       		.uleb128 0x19
 3423 0112 01       		.uleb128 0x1
 3424 0113 13       		.uleb128 0x13
 3425 0114 00       		.byte	0
 3426 0115 00       		.byte	0
 3427 0116 15       		.uleb128 0x15
 3428 0117 0B       		.uleb128 0xb
 3429 0118 01       		.byte	0x1
 3430 0119 11       		.uleb128 0x11
 3431 011a 01       		.uleb128 0x1
 3432 011b 12       		.uleb128 0x12
 3433 011c 06       		.uleb128 0x6
 3434 011d 00       		.byte	0
 3435 011e 00       		.byte	0
 3436 011f 16       		.uleb128 0x16
 3437 0120 2E       		.uleb128 0x2e
 3438 0121 01       		.byte	0x1
 3439 0122 3F       		.uleb128 0x3f
 3440 0123 19       		.uleb128 0x19
 3441 0124 03       		.uleb128 0x3
 3442 0125 0E       		.uleb128 0xe
 3443 0126 3A       		.uleb128 0x3a
 3444 0127 0B       		.uleb128 0xb
 3445 0128 3B       		.uleb128 0x3b
 3446 0129 05       		.uleb128 0x5
 3447 012a 27       		.uleb128 0x27
 3448 012b 19       		.uleb128 0x19
 3449 012c 11       		.uleb128 0x11
 3450 012d 01       		.uleb128 0x1
 3451 012e 12       		.uleb128 0x12
 3452 012f 06       		.uleb128 0x6
 3453 0130 40       		.uleb128 0x40
 3454 0131 18       		.uleb128 0x18
 3455 0132 9742     		.uleb128 0x2117
 3456 0134 19       		.uleb128 0x19
 3457 0135 01       		.uleb128 0x1
 3458 0136 13       		.uleb128 0x13
 3459 0137 00       		.byte	0
 3460 0138 00       		.byte	0
 3461 0139 17       		.uleb128 0x17
 3462 013a 2E       		.uleb128 0x2e
 3463 013b 01       		.byte	0x1
 3464 013c 3F       		.uleb128 0x3f
 3465 013d 19       		.uleb128 0x19
 3466 013e 03       		.uleb128 0x3
 3467 013f 0E       		.uleb128 0xe
 3468 0140 3A       		.uleb128 0x3a
 3469 0141 0B       		.uleb128 0xb
 3470 0142 3B       		.uleb128 0x3b
 3471 0143 05       		.uleb128 0x5
 3472 0144 11       		.uleb128 0x11
 3473 0145 01       		.uleb128 0x1
 3474 0146 12       		.uleb128 0x12
 3475 0147 06       		.uleb128 0x6
 3476 0148 40       		.uleb128 0x40
 3477 0149 18       		.uleb128 0x18
 3478 014a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 76


 3479 014c 19       		.uleb128 0x19
 3480 014d 01       		.uleb128 0x1
 3481 014e 13       		.uleb128 0x13
 3482 014f 00       		.byte	0
 3483 0150 00       		.byte	0
 3484 0151 18       		.uleb128 0x18
 3485 0152 2E       		.uleb128 0x2e
 3486 0153 01       		.byte	0x1
 3487 0154 3F       		.uleb128 0x3f
 3488 0155 19       		.uleb128 0x19
 3489 0156 03       		.uleb128 0x3
 3490 0157 0E       		.uleb128 0xe
 3491 0158 3A       		.uleb128 0x3a
 3492 0159 0B       		.uleb128 0xb
 3493 015a 3B       		.uleb128 0x3b
 3494 015b 05       		.uleb128 0x5
 3495 015c 27       		.uleb128 0x27
 3496 015d 19       		.uleb128 0x19
 3497 015e 49       		.uleb128 0x49
 3498 015f 13       		.uleb128 0x13
 3499 0160 8701     		.uleb128 0x87
 3500 0162 19       		.uleb128 0x19
 3501 0163 11       		.uleb128 0x11
 3502 0164 01       		.uleb128 0x1
 3503 0165 12       		.uleb128 0x12
 3504 0166 06       		.uleb128 0x6
 3505 0167 40       		.uleb128 0x40
 3506 0168 18       		.uleb128 0x18
 3507 0169 9742     		.uleb128 0x2117
 3508 016b 19       		.uleb128 0x19
 3509 016c 01       		.uleb128 0x1
 3510 016d 13       		.uleb128 0x13
 3511 016e 00       		.byte	0
 3512 016f 00       		.byte	0
 3513 0170 19       		.uleb128 0x19
 3514 0171 0B       		.uleb128 0xb
 3515 0172 01       		.byte	0x1
 3516 0173 11       		.uleb128 0x11
 3517 0174 01       		.uleb128 0x1
 3518 0175 12       		.uleb128 0x12
 3519 0176 06       		.uleb128 0x6
 3520 0177 01       		.uleb128 0x1
 3521 0178 13       		.uleb128 0x13
 3522 0179 00       		.byte	0
 3523 017a 00       		.byte	0
 3524 017b 1A       		.uleb128 0x1a
 3525 017c 34       		.uleb128 0x34
 3526 017d 00       		.byte	0
 3527 017e 03       		.uleb128 0x3
 3528 017f 0E       		.uleb128 0xe
 3529 0180 3A       		.uleb128 0x3a
 3530 0181 0B       		.uleb128 0xb
 3531 0182 3B       		.uleb128 0x3b
 3532 0183 05       		.uleb128 0x5
 3533 0184 49       		.uleb128 0x49
 3534 0185 13       		.uleb128 0x13
 3535 0186 02       		.uleb128 0x2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 77


 3536 0187 17       		.uleb128 0x17
 3537 0188 00       		.byte	0
 3538 0189 00       		.byte	0
 3539 018a 1B       		.uleb128 0x1b
 3540 018b 34       		.uleb128 0x34
 3541 018c 00       		.byte	0
 3542 018d 03       		.uleb128 0x3
 3543 018e 08       		.uleb128 0x8
 3544 018f 3A       		.uleb128 0x3a
 3545 0190 0B       		.uleb128 0xb
 3546 0191 3B       		.uleb128 0x3b
 3547 0192 05       		.uleb128 0x5
 3548 0193 49       		.uleb128 0x49
 3549 0194 13       		.uleb128 0x13
 3550 0195 02       		.uleb128 0x2
 3551 0196 17       		.uleb128 0x17
 3552 0197 00       		.byte	0
 3553 0198 00       		.byte	0
 3554 0199 1C       		.uleb128 0x1c
 3555 019a 34       		.uleb128 0x34
 3556 019b 00       		.byte	0
 3557 019c 03       		.uleb128 0x3
 3558 019d 0E       		.uleb128 0xe
 3559 019e 3A       		.uleb128 0x3a
 3560 019f 0B       		.uleb128 0xb
 3561 01a0 3B       		.uleb128 0x3b
 3562 01a1 0B       		.uleb128 0xb
 3563 01a2 49       		.uleb128 0x49
 3564 01a3 13       		.uleb128 0x13
 3565 01a4 3F       		.uleb128 0x3f
 3566 01a5 19       		.uleb128 0x19
 3567 01a6 3C       		.uleb128 0x3c
 3568 01a7 19       		.uleb128 0x19
 3569 01a8 00       		.byte	0
 3570 01a9 00       		.byte	0
 3571 01aa 1D       		.uleb128 0x1d
 3572 01ab 34       		.uleb128 0x34
 3573 01ac 00       		.byte	0
 3574 01ad 03       		.uleb128 0x3
 3575 01ae 0E       		.uleb128 0xe
 3576 01af 3A       		.uleb128 0x3a
 3577 01b0 0B       		.uleb128 0xb
 3578 01b1 3B       		.uleb128 0x3b
 3579 01b2 05       		.uleb128 0x5
 3580 01b3 49       		.uleb128 0x49
 3581 01b4 13       		.uleb128 0x13
 3582 01b5 3F       		.uleb128 0x3f
 3583 01b6 19       		.uleb128 0x19
 3584 01b7 3C       		.uleb128 0x3c
 3585 01b8 19       		.uleb128 0x19
 3586 01b9 00       		.byte	0
 3587 01ba 00       		.byte	0
 3588 01bb 1E       		.uleb128 0x1e
 3589 01bc 34       		.uleb128 0x34
 3590 01bd 00       		.byte	0
 3591 01be 03       		.uleb128 0x3
 3592 01bf 0E       		.uleb128 0xe
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 78


 3593 01c0 3A       		.uleb128 0x3a
 3594 01c1 0B       		.uleb128 0xb
 3595 01c2 3B       		.uleb128 0x3b
 3596 01c3 0B       		.uleb128 0xb
 3597 01c4 49       		.uleb128 0x49
 3598 01c5 13       		.uleb128 0x13
 3599 01c6 3F       		.uleb128 0x3f
 3600 01c7 19       		.uleb128 0x19
 3601 01c8 02       		.uleb128 0x2
 3602 01c9 18       		.uleb128 0x18
 3603 01ca 00       		.byte	0
 3604 01cb 00       		.byte	0
 3605 01cc 1F       		.uleb128 0x1f
 3606 01cd 01       		.uleb128 0x1
 3607 01ce 01       		.byte	0x1
 3608 01cf 49       		.uleb128 0x49
 3609 01d0 13       		.uleb128 0x13
 3610 01d1 01       		.uleb128 0x1
 3611 01d2 13       		.uleb128 0x13
 3612 01d3 00       		.byte	0
 3613 01d4 00       		.byte	0
 3614 01d5 20       		.uleb128 0x20
 3615 01d6 21       		.uleb128 0x21
 3616 01d7 00       		.byte	0
 3617 01d8 49       		.uleb128 0x49
 3618 01d9 13       		.uleb128 0x13
 3619 01da 2F       		.uleb128 0x2f
 3620 01db 05       		.uleb128 0x5
 3621 01dc 00       		.byte	0
 3622 01dd 00       		.byte	0
 3623 01de 21       		.uleb128 0x21
 3624 01df 21       		.uleb128 0x21
 3625 01e0 00       		.byte	0
 3626 01e1 49       		.uleb128 0x49
 3627 01e2 13       		.uleb128 0x13
 3628 01e3 2F       		.uleb128 0x2f
 3629 01e4 0B       		.uleb128 0xb
 3630 01e5 00       		.byte	0
 3631 01e6 00       		.byte	0
 3632 01e7 22       		.uleb128 0x22
 3633 01e8 34       		.uleb128 0x34
 3634 01e9 00       		.byte	0
 3635 01ea 03       		.uleb128 0x3
 3636 01eb 08       		.uleb128 0x8
 3637 01ec 3A       		.uleb128 0x3a
 3638 01ed 0B       		.uleb128 0xb
 3639 01ee 3B       		.uleb128 0x3b
 3640 01ef 0B       		.uleb128 0xb
 3641 01f0 49       		.uleb128 0x49
 3642 01f1 13       		.uleb128 0x13
 3643 01f2 3F       		.uleb128 0x3f
 3644 01f3 19       		.uleb128 0x19
 3645 01f4 02       		.uleb128 0x2
 3646 01f5 18       		.uleb128 0x18
 3647 01f6 00       		.byte	0
 3648 01f7 00       		.byte	0
 3649 01f8 23       		.uleb128 0x23
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 79


 3650 01f9 2E       		.uleb128 0x2e
 3651 01fa 00       		.byte	0
 3652 01fb 3F       		.uleb128 0x3f
 3653 01fc 19       		.uleb128 0x19
 3654 01fd 3C       		.uleb128 0x3c
 3655 01fe 19       		.uleb128 0x19
 3656 01ff 6E       		.uleb128 0x6e
 3657 0200 0E       		.uleb128 0xe
 3658 0201 03       		.uleb128 0x3
 3659 0202 0E       		.uleb128 0xe
 3660 0203 3A       		.uleb128 0x3a
 3661 0204 0B       		.uleb128 0xb
 3662 0205 3B       		.uleb128 0x3b
 3663 0206 0B       		.uleb128 0xb
 3664 0207 00       		.byte	0
 3665 0208 00       		.byte	0
 3666 0209 24       		.uleb128 0x24
 3667 020a 2E       		.uleb128 0x2e
 3668 020b 00       		.byte	0
 3669 020c 3F       		.uleb128 0x3f
 3670 020d 19       		.uleb128 0x19
 3671 020e 3C       		.uleb128 0x3c
 3672 020f 19       		.uleb128 0x19
 3673 0210 6E       		.uleb128 0x6e
 3674 0211 0E       		.uleb128 0xe
 3675 0212 03       		.uleb128 0x3
 3676 0213 0E       		.uleb128 0xe
 3677 0214 3A       		.uleb128 0x3a
 3678 0215 0B       		.uleb128 0xb
 3679 0216 3B       		.uleb128 0x3b
 3680 0217 05       		.uleb128 0x5
 3681 0218 00       		.byte	0
 3682 0219 00       		.byte	0
 3683 021a 00       		.byte	0
 3684              		.section	.debug_loc,"",%progbits
 3685              	.Ldebug_loc0:
 3686              	.LLST0:
 3687 0000 02000000 		.4byte	.LVL0
 3688 0004 52000000 		.4byte	.LVL6
 3689 0008 0200     		.2byte	0x2
 3690 000a 30       		.byte	0x30
 3691 000b 9F       		.byte	0x9f
 3692 000c 52000000 		.4byte	.LVL6
 3693 0010 78000000 		.4byte	.LVL13
 3694 0014 0100     		.2byte	0x1
 3695 0016 50       		.byte	0x50
 3696 0017 00000000 		.4byte	0
 3697 001b 00000000 		.4byte	0
 3698              	.LLST1:
 3699 001f 02000000 		.4byte	.LVL0
 3700 0023 52000000 		.4byte	.LVL6
 3701 0027 0200     		.2byte	0x2
 3702 0029 30       		.byte	0x30
 3703 002a 9F       		.byte	0x9f
 3704 002b 52000000 		.4byte	.LVL6
 3705 002f 68000000 		.4byte	.LVL8
 3706 0033 0100     		.2byte	0x1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 80


 3707 0035 52       		.byte	0x52
 3708 0036 6A000000 		.4byte	.LVL9
 3709 003a 7E000000 		.4byte	.LVL14
 3710 003e 0100     		.2byte	0x1
 3711 0040 52       		.byte	0x52
 3712 0041 00000000 		.4byte	0
 3713 0045 00000000 		.4byte	0
 3714              	.LLST2:
 3715 0049 4A000000 		.4byte	.LVL5
 3716 004d 52000000 		.4byte	.LVL6
 3717 0051 0200     		.2byte	0x2
 3718 0053 3F       		.byte	0x3f
 3719 0054 9F       		.byte	0x9f
 3720 0055 52000000 		.4byte	.LVL6
 3721 0059 76000000 		.4byte	.LVL12
 3722 005d 0100     		.2byte	0x1
 3723 005f 53       		.byte	0x53
 3724 0060 00000000 		.4byte	0
 3725 0064 00000000 		.4byte	0
 3726              	.LLST3:
 3727 0068 50000000 		.4byte	.LVL26
 3728 006c 64000000 		.4byte	.LVL30
 3729 0070 0100     		.2byte	0x1
 3730 0072 54       		.byte	0x54
 3731 0073 00000000 		.4byte	0
 3732 0077 00000000 		.4byte	0
 3733              	.LLST4:
 3734 007b 6E000000 		.4byte	.LVL112
 3735 007f 88000000 		.4byte	.LVL116
 3736 0083 0200     		.2byte	0x2
 3737 0085 30       		.byte	0x30
 3738 0086 9F       		.byte	0x9f
 3739 0087 88000000 		.4byte	.LVL116
 3740 008b D2000000 		.4byte	.LVL125
 3741 008f 0100     		.2byte	0x1
 3742 0091 54       		.byte	0x54
 3743 0092 D2000000 		.4byte	.LVL125
 3744 0096 D4000000 		.4byte	.LVL126
 3745 009a 0200     		.2byte	0x2
 3746 009c 30       		.byte	0x30
 3747 009d 9F       		.byte	0x9f
 3748 009e D4000000 		.4byte	.LVL126
 3749 00a2 36010000 		.4byte	.LVL136
 3750 00a6 0100     		.2byte	0x1
 3751 00a8 54       		.byte	0x54
 3752 00a9 58010000 		.4byte	.LVL140
 3753 00ad 7C010000 		.4byte	.LVL141
 3754 00b1 0200     		.2byte	0x2
 3755 00b3 37       		.byte	0x37
 3756 00b4 9F       		.byte	0x9f
 3757 00b5 7C010000 		.4byte	.LVL141
 3758 00b9 D2010000 		.4byte	.LVL151
 3759 00bd 0100     		.2byte	0x1
 3760 00bf 55       		.byte	0x55
 3761 00c0 D2010000 		.4byte	.LVL151
 3762 00c4 F8010000 		.4byte	.LVL156
 3763 00c8 0300     		.2byte	0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 81


 3764 00ca 75       		.byte	0x75
 3765 00cb 7F       		.sleb128 -1
 3766 00cc 9F       		.byte	0x9f
 3767 00cd 00000000 		.4byte	0
 3768 00d1 00000000 		.4byte	0
 3769              	.LLST5:
 3770 00d5 76000000 		.4byte	.LVL113
 3771 00d9 88000000 		.4byte	.LVL116
 3772 00dd 0200     		.2byte	0x2
 3773 00df 30       		.byte	0x30
 3774 00e0 9F       		.byte	0x9f
 3775 00e1 9A000000 		.4byte	.LVL120
 3776 00e5 C1000000 		.4byte	.LVL122-1
 3777 00e9 0100     		.2byte	0x1
 3778 00eb 50       		.byte	0x50
 3779 00ec D4000000 		.4byte	.LVL126
 3780 00f0 F0000000 		.4byte	.LVL127
 3781 00f4 0100     		.2byte	0x1
 3782 00f6 50       		.byte	0x50
 3783 00f7 F8000000 		.4byte	.LVL130
 3784 00fb 15010000 		.4byte	.LVL131-1
 3785 00ff 0100     		.2byte	0x1
 3786 0101 50       		.byte	0x50
 3787 0102 1A010000 		.4byte	.LVL133
 3788 0106 2F010000 		.4byte	.LVL134-1
 3789 010a 0100     		.2byte	0x1
 3790 010c 50       		.byte	0x50
 3791 010d 58010000 		.4byte	.LVL140
 3792 0111 7C010000 		.4byte	.LVL141
 3793 0115 0200     		.2byte	0x2
 3794 0117 30       		.byte	0x30
 3795 0118 9F       		.byte	0x9f
 3796 0119 7C010000 		.4byte	.LVL141
 3797 011d 8A010000 		.4byte	.LVL144
 3798 0121 0100     		.2byte	0x1
 3799 0123 54       		.byte	0x54
 3800 0124 8A010000 		.4byte	.LVL144
 3801 0128 92010000 		.4byte	.LVL145
 3802 012c 0100     		.2byte	0x1
 3803 012e 50       		.byte	0x50
 3804 012f A4010000 		.4byte	.LVL148
 3805 0133 F8010000 		.4byte	.LVL156
 3806 0137 0100     		.2byte	0x1
 3807 0139 54       		.byte	0x54
 3808 013a 00000000 		.4byte	0
 3809 013e 00000000 		.4byte	0
 3810              	.LLST6:
 3811 0142 9C000000 		.4byte	.LVL121
 3812 0146 C1000000 		.4byte	.LVL122-1
 3813 014a 0100     		.2byte	0x1
 3814 014c 50       		.byte	0x50
 3815 014d D4000000 		.4byte	.LVL126
 3816 0151 F0000000 		.4byte	.LVL127
 3817 0155 0100     		.2byte	0x1
 3818 0157 50       		.byte	0x50
 3819 0158 00000000 		.4byte	0
 3820 015c 00000000 		.4byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 82


 3821              	.LLST7:
 3822 0160 0E020000 		.4byte	.LVL160
 3823 0164 20020000 		.4byte	.LVL161
 3824 0168 0100     		.2byte	0x1
 3825 016a 50       		.byte	0x50
 3826 016b 00000000 		.4byte	0
 3827 016f 00000000 		.4byte	0
 3828              		.section	.debug_aranges,"",%progbits
 3829 0000 5C000000 		.4byte	0x5c
 3830 0004 0200     		.2byte	0x2
 3831 0006 00000000 		.4byte	.Ldebug_info0
 3832 000a 04       		.byte	0x4
 3833 000b 00       		.byte	0
 3834 000c 0000     		.2byte	0
 3835 000e 0000     		.2byte	0
 3836 0010 00000000 		.4byte	.LFB69
 3837 0014 0C000000 		.4byte	.LFE69-.LFB69
 3838 0018 00000000 		.4byte	.LFB64
 3839 001c 94000000 		.4byte	.LFE64-.LFB64
 3840 0020 00000000 		.4byte	.LFB65
 3841 0024 0C010000 		.4byte	.LFE65-.LFB65
 3842 0028 00000000 		.4byte	.LFB66
 3843 002c 74000000 		.4byte	.LFE66-.LFB66
 3844 0030 00000000 		.4byte	.LFB67
 3845 0034 44000000 		.4byte	.LFE67-.LFB67
 3846 0038 00000000 		.4byte	.LFB68
 3847 003c 38000000 		.4byte	.LFE68-.LFB68
 3848 0040 00000000 		.4byte	.LFB71
 3849 0044 90000000 		.4byte	.LFE71-.LFB71
 3850 0048 00000000 		.4byte	.LFB72
 3851 004c FC020000 		.4byte	.LFE72-.LFB72
 3852 0050 00000000 		.4byte	.LFB70
 3853 0054 74020000 		.4byte	.LFE70-.LFB70
 3854 0058 00000000 		.4byte	0
 3855 005c 00000000 		.4byte	0
 3856              		.section	.debug_ranges,"",%progbits
 3857              	.Ldebug_ranges0:
 3858 0000 4A000000 		.4byte	.LBB2
 3859 0004 4C000000 		.4byte	.LBE2
 3860 0008 50000000 		.4byte	.LBB3
 3861 000c 72000000 		.4byte	.LBE3
 3862 0010 00000000 		.4byte	0
 3863 0014 00000000 		.4byte	0
 3864 0018 00000000 		.4byte	.LFB69
 3865 001c 0C000000 		.4byte	.LFE69
 3866 0020 00000000 		.4byte	.LFB64
 3867 0024 94000000 		.4byte	.LFE64
 3868 0028 00000000 		.4byte	.LFB65
 3869 002c 0C010000 		.4byte	.LFE65
 3870 0030 00000000 		.4byte	.LFB66
 3871 0034 74000000 		.4byte	.LFE66
 3872 0038 00000000 		.4byte	.LFB67
 3873 003c 44000000 		.4byte	.LFE67
 3874 0040 00000000 		.4byte	.LFB68
 3875 0044 38000000 		.4byte	.LFE68
 3876 0048 00000000 		.4byte	.LFB71
 3877 004c 90000000 		.4byte	.LFE71
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 83


 3878 0050 00000000 		.4byte	.LFB72
 3879 0054 FC020000 		.4byte	.LFE72
 3880 0058 00000000 		.4byte	.LFB70
 3881 005c 74020000 		.4byte	.LFE70
 3882 0060 00000000 		.4byte	0
 3883 0064 00000000 		.4byte	0
 3884              		.section	.debug_line,"",%progbits
 3885              	.Ldebug_line0:
 3886 0000 3E050000 		.section	.debug_str,"MS",%progbits,1
 3886      0200CD02 
 3886      00000201 
 3886      FB0E0D00 
 3886      01010101 
 3887              	.LASF81:
 3888 0000 55534255 		.ascii	"USBUART_CDCIsReady\000"
 3888      4152545F 
 3888      43444349 
 3888      73526561 
 3888      647900
 3889              	.LASF23:
 3890 0013 636F6E63 		.ascii	"concatCount\000"
 3890      6174436F 
 3890      756E7400 
 3891              	.LASF41:
 3892 001f 7472616E 		.ascii	"transmitData\000"
 3892      736D6974 
 3892      44617461 
 3892      00
 3893              	.LASF39:
 3894 002c 6C6F7746 		.ascii	"lowFlag\000"
 3894      6C616700 
 3895              	.LASF76:
 3896 0034 49444C45 		.ascii	"IDLE_Read\000"
 3896      5F526561 
 3896      6400
 3897              	.LASF88:
 3898 003e 54696D65 		.ascii	"TimerTX_Stop\000"
 3898      7254585F 
 3898      53746F70 
 3898      00
 3899              	.LASF80:
 3900 004b 434F4C4C 		.ascii	"COLLISION_Read\000"
 3900      4953494F 
 3900      4E5F5265 
 3900      616400
 3901              	.LASF90:
 3902 005a 52697369 		.ascii	"RisingEdgeISR_StartEx\000"
 3902      6E674564 
 3902      67654953 
 3902      525F5374 
 3902      61727445 
 3903              	.LASF20:
 3904 0070 49444C45 		.ascii	"IDLE\000"
 3904      00
 3905              	.LASF51:
 3906 0075 636F6C6C 		.ascii	"collisionLock\000"
 3906      6973696F 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 84


 3906      6E4C6F63 
 3906      6B00
 3907              	.LASF25:
 3908 0083 52656365 		.ascii	"ReceiveInterruptHandler\000"
 3908      69766549 
 3908      6E746572 
 3908      72757074 
 3908      48616E64 
 3909              	.LASF2:
 3910 009b 73686F72 		.ascii	"short int\000"
 3910      7420696E 
 3910      7400
 3911              	.LASF34:
 3912 00a5 696E7075 		.ascii	"input\000"
 3912      7400
 3913              	.LASF19:
 3914 00ab 73697A65 		.ascii	"sizetype\000"
 3914      74797065 
 3914      00
 3915              	.LASF28:
 3916 00b4 72616E64 		.ascii	"randNum\000"
 3916      4E756D00 
 3917              	.LASF35:
 3918 00bc 5F5F6374 		.ascii	"__ctype_ptr__\000"
 3918      7970655F 
 3918      7074725F 
 3918      5F00
 3919              	.LASF72:
 3920 00ca 54696D65 		.ascii	"Timer_WritePeriod\000"
 3920      725F5772 
 3920      69746550 
 3920      6572696F 
 3920      6400
 3921              	.LASF55:
 3922 00dc 63726355 		.ascii	"crcUsage\000"
 3922      73616765 
 3922      00
 3923              	.LASF107:
 3924 00e5 6D61696E 		.ascii	"main\000"
 3924      00
 3925              	.LASF73:
 3926 00ea 54696D65 		.ascii	"Timer_WriteCounter\000"
 3926      725F5772 
 3926      69746543 
 3926      6F756E74 
 3926      657200
 3927              	.LASF4:
 3928 00fd 5F5F7569 		.ascii	"__uint16_t\000"
 3928      6E743136 
 3928      5F7400
 3929              	.LASF98:
 3930 0108 436F6C6C 		.ascii	"CollisionDelayISR_StartEx\000"
 3930      6973696F 
 3930      6E44656C 
 3930      61794953 
 3930      525F5374 
 3931              	.LASF66:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 85


 3932 0122 54696D65 		.ascii	"TimerRX_Stop\000"
 3932      7252585F 
 3932      53746F70 
 3932      00
 3933              	.LASF99:
 3934 012f 55534255 		.ascii	"USBUART_Start\000"
 3934      4152545F 
 3934      53746172 
 3934      7400
 3935              	.LASF59:
 3936 013d 64617461 		.ascii	"dataSize\000"
 3936      53697A65 
 3936      00
 3937              	.LASF77:
 3938 0146 42555359 		.ascii	"BUSY_Write\000"
 3938      5F577269 
 3938      746500
 3939              	.LASF91:
 3940 0151 46616C6C 		.ascii	"FallingEdgeISR_StartEx\000"
 3940      696E6745 
 3940      64676549 
 3940      53525F53 
 3940      74617274 
 3941              	.LASF13:
 3942 0168 75696E74 		.ascii	"uint8\000"
 3942      3800
 3943              	.LASF50:
 3944 016e 72656365 		.ascii	"receiveLock\000"
 3944      6976654C 
 3944      6F636B00 
 3945              	.LASF69:
 3946 017a 436F6C6C 		.ascii	"CollisionDelay_WritePeriod\000"
 3946      6973696F 
 3946      6E44656C 
 3946      61795F57 
 3946      72697465 
 3947              	.LASF33:
 3948 0195 696E436F 		.ascii	"inCount\000"
 3948      756E7400 
 3949              	.LASF71:
 3950 019d 436F6C6C 		.ascii	"CollisionDelay_Start\000"
 3950      6973696F 
 3950      6E44656C 
 3950      61795F53 
 3950      74617274 
 3951              	.LASF83:
 3952 01b2 55534255 		.ascii	"USBUART_PutString\000"
 3952      4152545F 
 3952      50757453 
 3952      7472696E 
 3952      6700
 3953              	.LASF61:
 3954 01c4 72656365 		.ascii	"receiveBitCount\000"
 3954      69766542 
 3954      6974436F 
 3954      756E7400 
 3955              	.LASF44:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 86


 3956 01d4 72656365 		.ascii	"receiveData\000"
 3956      69766544 
 3956      61746100 
 3957              	.LASF14:
 3958 01e0 666C6F61 		.ascii	"float\000"
 3958      7400
 3959              	.LASF100:
 3960 01e6 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3960      4152545F 
 3960      47657443 
 3960      6F6E6669 
 3960      67757261 
 3961              	.LASF70:
 3962 01ff 436F6C6C 		.ascii	"CollisionDelay_WriteCounter\000"
 3962      6973696F 
 3962      6E44656C 
 3962      61795F57 
 3962      72697465 
 3963              	.LASF8:
 3964 021b 6C6F6E67 		.ascii	"long long int\000"
 3964      206C6F6E 
 3964      6720696E 
 3964      7400
 3965              	.LASF74:
 3966 0229 54696D65 		.ascii	"Timer_Start\000"
 3966      725F5374 
 3966      61727400 
 3967              	.LASF6:
 3968 0235 6C6F6E67 		.ascii	"long int\000"
 3968      20696E74 
 3968      00
 3969              	.LASF31:
 3970 023e 73746174 		.ascii	"stateDiagram\000"
 3970      65446961 
 3970      6772616D 
 3970      00
 3971              	.LASF62:
 3972 024b 7472616E 		.ascii	"transmitAddress\000"
 3972      736D6974 
 3972      41646472 
 3972      65737300 
 3973              	.LASF36:
 3974 025b 55534255 		.ascii	"USBUART_device\000"
 3974      4152545F 
 3974      64657669 
 3974      636500
 3975              	.LASF93:
 3976 026a 54696D65 		.ascii	"TimerTX_WritePeriod\000"
 3976      7254585F 
 3976      57726974 
 3976      65506572 
 3976      696F6400 
 3977              	.LASF30:
 3978 027e 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 3978      696E6745 
 3978      64676549 
 3978      6E746572 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 87


 3978      72757074 
 3979              	.LASF27:
 3980 029a 54696D65 		.ascii	"TimerInterruptHandler\000"
 3980      72496E74 
 3980      65727275 
 3980      70744861 
 3980      6E646C65 
 3981              	.LASF105:
 3982 02b0 73746174 		.ascii	"state\000"
 3982      6500
 3983              	.LASF21:
 3984 02b6 434F4C4C 		.ascii	"COLLISION\000"
 3984      4953494F 
 3984      4E00
 3985              	.LASF47:
 3986 02c0 64617461 		.ascii	"dataBitsRead\000"
 3986      42697473 
 3986      52656164 
 3986      00
 3987              	.LASF18:
 3988 02cd 6C6F6E67 		.ascii	"long double\000"
 3988      20646F75 
 3988      626C6500 
 3989              	.LASF60:
 3990 02d9 7472616E 		.ascii	"transmitBitCount\000"
 3990      736D6974 
 3990      42697443 
 3990      6F756E74 
 3990      00
 3991              	.LASF63:
 3992 02ea 7472616E 		.ascii	"transmitMode\000"
 3992      736D6974 
 3992      4D6F6465 
 3992      00
 3993              	.LASF1:
 3994 02f7 756E7369 		.ascii	"unsigned char\000"
 3994      676E6564 
 3994      20636861 
 3994      7200
 3995              	.LASF38:
 3996 0305 73797374 		.ascii	"systemState\000"
 3996      656D5374 
 3996      61746500 
 3997              	.LASF94:
 3998 0311 54696D65 		.ascii	"TimerTX_WriteCounter\000"
 3998      7254585F 
 3998      57726974 
 3998      65436F75 
 3998      6E746572 
 3999              	.LASF0:
 4000 0326 7369676E 		.ascii	"signed char\000"
 4000      65642063 
 4000      68617200 
 4001              	.LASF52:
 4002 0332 736F7572 		.ascii	"sourceAddress\000"
 4002      63654164 
 4002      64726573 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 88


 4002      7300
 4003              	.LASF9:
 4004 0340 6C6F6E67 		.ascii	"long long unsigned int\000"
 4004      206C6F6E 
 4004      6720756E 
 4004      7369676E 
 4004      65642069 
 4005              	.LASF104:
 4006 0357 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 4006      73657273 
 4006      5C77696E 
 4006      73746F6E 
 4006      615C446F 
 4007 0385 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 4007      726B696E 
 4007      6720495C 
 4007      63653439 
 4007      35306C61 
 4008              	.LASF10:
 4009 03b4 756E7369 		.ascii	"unsigned int\000"
 4009      676E6564 
 4009      20696E74 
 4009      00
 4010              	.LASF11:
 4011 03c1 75696E74 		.ascii	"uint16_t\000"
 4011      31365F74 
 4011      00
 4012              	.LASF7:
 4013 03ca 6C6F6E67 		.ascii	"long unsigned int\000"
 4013      20756E73 
 4013      69676E65 
 4013      6420696E 
 4013      7400
 4014              	.LASF87:
 4015 03dc 54696D65 		.ascii	"TimerTX_Start\000"
 4015      7254585F 
 4015      53746172 
 4015      7400
 4016              	.LASF48:
 4017 03ea 64617461 		.ascii	"dataPtr\000"
 4017      50747200 
 4018              	.LASF92:
 4019 03f2 52656365 		.ascii	"ReceiveISR_StartEx\000"
 4019      69766549 
 4019      53525F53 
 4019      74617274 
 4019      457800
 4020              	.LASF46:
 4021 0405 72656365 		.ascii	"receivePosition\000"
 4021      69766550 
 4021      6F736974 
 4021      696F6E00 
 4022              	.LASF22:
 4023 0415 42555359 		.ascii	"BUSY\000"
 4023      00
 4024              	.LASF95:
 4025 041a 5472616E 		.ascii	"TransmitISR_StartEx\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 89


 4025      736D6974 
 4025      4953525F 
 4025      53746172 
 4025      74457800 
 4026              	.LASF16:
 4027 042e 63686172 		.ascii	"char\000"
 4027      00
 4028              	.LASF40:
 4029 0433 5F426F6F 		.ascii	"_Bool\000"
 4029      6C00
 4030              	.LASF12:
 4031 0439 696E7433 		.ascii	"int32_t\000"
 4031      325F7400 
 4032              	.LASF3:
 4033 0441 73686F72 		.ascii	"short unsigned int\000"
 4033      7420756E 
 4033      7369676E 
 4033      65642069 
 4033      6E7400
 4034              	.LASF75:
 4035 0454 49444C45 		.ascii	"IDLE_Write\000"
 4035      5F577269 
 4035      746500
 4036              	.LASF97:
 4037 045f 54696D65 		.ascii	"TimerRX_WritePeriod\000"
 4037      7252585F 
 4037      57726974 
 4037      65506572 
 4037      696F6400 
 4038              	.LASF84:
 4039 0473 55534255 		.ascii	"USBUART_PutChar\000"
 4039      4152545F 
 4039      50757443 
 4039      68617200 
 4040              	.LASF26:
 4041 0483 5472616E 		.ascii	"TransmitInterruptHandler\000"
 4041      736D6974 
 4041      496E7465 
 4041      72727570 
 4041      7448616E 
 4042              	.LASF42:
 4043 049c 62756666 		.ascii	"buffer\000"
 4043      657200
 4044              	.LASF78:
 4045 04a3 434F4C4C 		.ascii	"COLLISION_Write\000"
 4045      4953494F 
 4045      4E5F5772 
 4045      69746500 
 4046              	.LASF103:
 4047 04b3 6D61696E 		.ascii	"main.c\000"
 4047      2E6300
 4048              	.LASF17:
 4049 04ba 72656738 		.ascii	"reg8\000"
 4049      00
 4050              	.LASF58:
 4051 04bf 63757272 		.ascii	"currentChar\000"
 4051      656E7443 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 90


 4051      68617200 
 4052              	.LASF43:
 4053 04cb 72656365 		.ascii	"receiveBuffer\000"
 4053      69766542 
 4053      75666665 
 4053      7200
 4054              	.LASF15:
 4055 04d9 646F7562 		.ascii	"double\000"
 4055      6C6500
 4056              	.LASF65:
 4057 04e0 52454345 		.ascii	"RECEIVE_Read\000"
 4057      4956455F 
 4057      52656164 
 4057      00
 4058              	.LASF32:
 4059 04ed 63686563 		.ascii	"checkForNewData\000"
 4059      6B466F72 
 4059      4E657744 
 4059      61746100 
 4060              	.LASF54:
 4061 04fd 6D657373 		.ascii	"messageLength\000"
 4061      6167654C 
 4061      656E6774 
 4061      6800
 4062              	.LASF79:
 4063 050b 42555359 		.ascii	"BUSY_Read\000"
 4063      5F526561 
 4063      6400
 4064              	.LASF5:
 4065 0515 5F5F696E 		.ascii	"__int32_t\000"
 4065      7433325F 
 4065      7400
 4066              	.LASF68:
 4067 051f 72616E64 		.ascii	"rand\000"
 4067      00
 4068              	.LASF67:
 4069 0524 5452414E 		.ascii	"TRANSMIT_Write\000"
 4069      534D4954 
 4069      5F577269 
 4069      746500
 4070              	.LASF56:
 4071 0533 68656164 		.ascii	"headerCRC\000"
 4071      65724352 
 4071      4300
 4072              	.LASF57:
 4073 053d 61646472 		.ascii	"addressZeroReceive\000"
 4073      6573735A 
 4073      65726F52 
 4073      65636569 
 4073      766500
 4074              	.LASF24:
 4075 0550 63686172 		.ascii	"characterRX\000"
 4075      61637465 
 4075      72525800 
 4076              	.LASF64:
 4077 055c 54696D65 		.ascii	"TimerRX_Start\000"
 4077      7252585F 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 91


 4077      53746172 
 4077      7400
 4078              	.LASF82:
 4079 056a 55534255 		.ascii	"USBUART_PutCRLF\000"
 4079      4152545F 
 4079      50757443 
 4079      524C4600 
 4080              	.LASF45:
 4081 057a 706F7369 		.ascii	"position\000"
 4081      74696F6E 
 4081      00
 4082              	.LASF86:
 4083 0583 55534255 		.ascii	"USBUART_GetChar\000"
 4083      4152545F 
 4083      47657443 
 4083      68617200 
 4084              	.LASF101:
 4085 0593 55534255 		.ascii	"USBUART_CDC_Init\000"
 4085      4152545F 
 4085      4344435F 
 4085      496E6974 
 4085      00
 4086              	.LASF96:
 4087 05a4 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 4087      7252585F 
 4087      57726974 
 4087      65436F75 
 4087      6E746572 
 4088              	.LASF37:
 4089 05b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4089      52784275 
 4089      66666572 
 4089      00
 4090              	.LASF102:
 4091 05c6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4091      43313120 
 4091      352E342E 
 4091      31203230 
 4091      31363036 
 4092 05f9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4092      20726576 
 4092      6973696F 
 4092      6E203233 
 4092      37373135 
 4093 062c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4093      66756E63 
 4093      74696F6E 
 4093      2D736563 
 4093      74696F6E 
 4094              	.LASF89:
 4095 0654 54696D65 		.ascii	"TimerISR_StartEx\000"
 4095      72495352 
 4095      5F537461 
 4095      72744578 
 4095      00
 4096              	.LASF29:
 4097 0665 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccxBb9Qt.s 			page 92


 4097      6E674564 
 4097      6765496E 
 4097      74657272 
 4097      75707448 
 4098              	.LASF53:
 4099 0680 64657374 		.ascii	"destinationAddress\000"
 4099      696E6174 
 4099      696F6E41 
 4099      64647265 
 4099      737300
 4100              	.LASF49:
 4101 0693 7472616E 		.ascii	"transmitLock\000"
 4101      736D6974 
 4101      4C6F636B 
 4101      00
 4102              	.LASF85:
 4103 06a0 55534255 		.ascii	"USBUART_DataIsReady\000"
 4103      4152545F 
 4103      44617461 
 4103      49735265 
 4103      61647900 
 4104              	.LASF106:
 4105 06b4 436F6C6C 		.ascii	"CollisionDelayInterruptHandler\000"
 4105      6973696F 
 4105      6E44656C 
 4105      6179496E 
 4105      74657272 
 4106              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
