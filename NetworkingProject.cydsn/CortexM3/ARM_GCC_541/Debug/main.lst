ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	systemState,1,1
  20              		.global	lowFlag
  21              		.bss
  22              		.type	lowFlag, %object
  23              		.size	lowFlag, 1
  24              	lowFlag:
  25 0000 00       		.space	1
  26              		.comm	transmitData,8000,4
  27              		.comm	buffer,500,4
  28              		.comm	receiveBuffer,500,4
  29              		.comm	receiveData,16,4
  30              		.global	position
  31 0001 000000   		.align	2
  32              		.type	position, %object
  33              		.size	position, 4
  34              	position:
  35 0004 00000000 		.space	4
  36              		.global	receivePosition
  37              		.align	2
  38              		.type	receivePosition, %object
  39              		.size	receivePosition, 4
  40              	receivePosition:
  41 0008 00000000 		.space	4
  42              		.global	dataBitsRead
  43              		.align	2
  44              		.type	dataBitsRead, %object
  45              		.size	dataBitsRead, 4
  46              	dataBitsRead:
  47 000c 00000000 		.space	4
  48              		.global	idx
  49              		.align	2
  50              		.type	idx, %object
  51              		.size	idx, 4
  52              	idx:
  53 0010 00000000 		.space	4
  54              		.comm	dataPtr,4,4
  55              		.global	transmitLock
  56              		.align	2
  57              		.type	transmitLock, %object
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 2


  58              		.size	transmitLock, 4
  59              	transmitLock:
  60 0014 00000000 		.space	4
  61              		.global	receiveLock
  62              		.align	2
  63              		.type	receiveLock, %object
  64              		.size	receiveLock, 4
  65              	receiveLock:
  66 0018 00000000 		.space	4
  67              		.global	collisionLock
  68              		.type	collisionLock, %object
  69              		.size	collisionLock, 1
  70              	collisionLock:
  71 001c 00       		.space	1
  72              		.global	sourceAddress
  73              		.type	sourceAddress, %object
  74              		.size	sourceAddress, 1
  75              	sourceAddress:
  76 001d 00       		.space	1
  77              		.global	destinationAddress
  78              		.type	destinationAddress, %object
  79              		.size	destinationAddress, 1
  80              	destinationAddress:
  81 001e 00       		.space	1
  82              		.global	messageLength
  83 001f 00       		.align	2
  84              		.type	messageLength, %object
  85              		.size	messageLength, 4
  86              	messageLength:
  87 0020 00000000 		.space	4
  88              		.global	crcUsage
  89              		.type	crcUsage, %object
  90              		.size	crcUsage, 1
  91              	crcUsage:
  92 0024 00       		.space	1
  93              		.global	headerCRC
  94              		.type	headerCRC, %object
  95              		.size	headerCRC, 1
  96              	headerCRC:
  97 0025 00       		.space	1
  98              		.global	addressZeroReceive
  99 0026 0000     		.align	2
 100              		.type	addressZeroReceive, %object
 101              		.size	addressZeroReceive, 4
 102              	addressZeroReceive:
 103 0028 00000000 		.space	4
 104              		.comm	currentChar,1,1
 105              		.comm	dataSize,4,4
 106              		.global	transmitBitCount
 107              		.align	2
 108              		.type	transmitBitCount, %object
 109              		.size	transmitBitCount, 4
 110              	transmitBitCount:
 111 002c 00000000 		.space	4
 112              		.global	receiveBitCount
 113              		.align	2
 114              		.type	receiveBitCount, %object
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 3


 115              		.size	receiveBitCount, 4
 116              	receiveBitCount:
 117 0030 00000000 		.space	4
 118              		.global	concatCount
 119              		.align	2
 120              		.type	concatCount, %object
 121              		.size	concatCount, 4
 122              	concatCount:
 123 0034 00000000 		.space	4
 124              		.global	transmitAddress
 125              		.type	transmitAddress, %object
 126              		.size	transmitAddress, 1
 127              	transmitAddress:
 128 0038 00       		.space	1
 129              		.global	transmitMode
 130              		.data
 131              		.type	transmitMode, %object
 132              		.size	transmitMode, 1
 133              	transmitMode:
 134 0000 01       		.byte	1
 135              		.section	.text.nothing,"ax",%progbits
 136              		.align	2
 137              		.global	nothing
 138              		.thumb
 139              		.thumb_func
 140              		.type	nothing, %function
 141              	nothing:
 142              	.LFB64:
 143              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - systemState machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdio.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <stdbool.h>
  26:main.c        **** 
  27:main.c        **** #define BROADCAST_ADDRESS 0
  28:main.c        **** #define VERSION_NUMBER 0x01
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 4


  29:main.c        **** #define CRC 128 //CRCs are not being used
  30:main.c        **** #define HEADER 0b1110111 //header CRC not being used 
  31:main.c        **** #define BLANK_MESSAGE_CRC 0x77
  32:main.c        **** #define COLLISION_PERIOD     52
  33:main.c        **** #define COLLISION_COUNTER    51
  34:main.c        **** #define IDLE_PERIOD     830
  35:main.c        **** #define IDLE_COUNTER    829
  36:main.c        **** #define RECEIVE_PERIOD   52
  37:main.c        **** #define RECEIVE_COUNTER  51
  38:main.c        **** #define TRANSMIT_PERIOD     47
  39:main.c        **** #define TRANSMIT_COUNTER    46 
  40:main.c        **** #define BUFFER_SIZE 500
  41:main.c        **** //student assigned addressses
  42:main.c        **** #define ADDR1Start 46
  43:main.c        **** #define ADDR2Start 55
  44:main.c        **** #define ADDR3Start 124 //Kamith didn't have one listed so gave him 124
  45:main.c        **** #define ADDRLength 2
  46:main.c        **** 
  47:main.c        **** #define MESSAGE_POS 7
  48:main.c        **** #define HEADER_SIZE
  49:main.c        **** 
  50:main.c        **** 
  51:main.c        **** //States include: 
  52:main.c        **** //Busy - signals that the channel monitor is busy
  53:main.c        **** //       and in either line high or line low 
  54:main.c        **** //Collision - collision detected, line high
  55:main.c        **** //Idle - initialized state looking for rising
  56:main.c        **** //       edge to occur
  57:main.c        **** volatile enum state {IDLE, COLLISION, BUSY} systemState;
  58:main.c        **** 
  59:main.c        **** //flag to help determine if signal level is low or high
  60:main.c        **** volatile _Bool lowFlag = 0;
  61:main.c        **** 
  62:main.c        **** volatile unsigned char transmitData[BUFFER_SIZE][16];
  63:main.c        **** volatile unsigned char buffer[BUFFER_SIZE];
  64:main.c        **** volatile unsigned char receiveBuffer[BUFFER_SIZE];
  65:main.c        **** volatile unsigned char receiveData[16]; 
  66:main.c        **** volatile int position = 0;
  67:main.c        **** volatile int receivePosition = 0;
  68:main.c        **** volatile int dataBitsRead = 0;
  69:main.c        **** volatile int idx = 0;
  70:main.c        **** volatile char* dataPtr;
  71:main.c        **** volatile int transmitLock = 0; // High when transmitting
  72:main.c        **** volatile int receiveLock = 0;
  73:main.c        **** volatile bool collisionLock = false; // High when collision should not.
  74:main.c        **** 
  75:main.c        **** volatile char sourceAddress = 0x00;
  76:main.c        **** volatile char destinationAddress = 0x00;
  77:main.c        **** volatile int  messageLength = 0;
  78:main.c        **** volatile char crcUsage = 0x00;
  79:main.c        **** volatile char headerCRC = 0x00;
  80:main.c        **** volatile int addressZeroReceive = 0;
  81:main.c        **** volatile char currentChar;
  82:main.c        **** volatile int dataSize;
  83:main.c        **** volatile int transmitBitCount = 0;
  84:main.c        **** volatile int receiveBitCount = 0;
  85:main.c        **** volatile int concatCount = 0;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 5


  86:main.c        **** volatile unsigned char transmitAddress = 0; 
  87:main.c        **** 
  88:main.c        **** bool transmitMode = true; // Whether currently transmitting or receiving
  89:main.c        **** 
  90:main.c        **** void checkForNewData(); 
  91:main.c        **** void stateDiagram(); 
  92:main.c        **** void nothing() {
 144              		.loc 1 92 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 83B0     		sub	sp, sp, #12
 153              		.cfi_def_cfa_offset 16
 154 0004 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
  93:main.c        ****     int junk = 1;
 156              		.loc 1 93 0
 157 0006 0123     		movs	r3, #1
 158 0008 7B60     		str	r3, [r7, #4]
  94:main.c        ****     return;
 159              		.loc 1 94 0
 160 000a 00BF     		nop
  95:main.c        **** }
 161              		.loc 1 95 0
 162 000c 0C37     		adds	r7, r7, #12
 163              		.cfi_def_cfa_offset 4
 164 000e BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0010 80BC     		pop	{r7}
 168              		.cfi_restore 7
 169              		.cfi_def_cfa_offset 0
 170 0012 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE64:
 173              		.size	nothing, .-nothing
 174              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
 175              		.align	2
 176              		.global	ReceiveInterruptHandler
 177              		.thumb
 178              		.thumb_func
 179              		.type	ReceiveInterruptHandler, %function
 180              	ReceiveInterruptHandler:
 181              	.LFB65:
  96:main.c        **** 
  97:main.c        **** /*******************************************************************************
  98:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
  99:main.c        **** ********************************************************************************/
 100:main.c        **** 
 101:main.c        ****  /**********************************************************
 102:main.c        ****  * function name: ReceiveInterruptHandler
 103:main.c        ****  * operation: Handles interrupt timer if the timer expires
 104:main.c        ****  *            indicates an idle condition or colllision
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 6


 105:main.c        ****  *            reads the logic levon the input pin/signal
 106:main.c        ****  *            high -> collision set
 107:main.c        ****  *            low -> idle set
 108:main.c        ****  * inputs: none
 109:main.c        ****  * returns: none
 110:main.c        ****  * implemented: 14 Dec 2017
 111:main.c        ****  * edited:
 112:main.c        ****  *********************************************************/ 
 113:main.c        **** 
 114:main.c        **** // TODO Code needs to be added to accept signals at
 115:main.c        **** // various speeds. The documentation states that the signal
 116:main.c        **** // MUST be tolerated at speeds of ±1.32%, and MUST NOT be
 117:main.c        **** // tolerated at speeds of ±8% or so. See standard specification
 118:main.c        **** // for more details.
 119:main.c        **** 
 120:main.c        **** // TODO Move characterRX logic into RX_Bit_Counter
 121:main.c        **** // incrementation section of code. This will make
 122:main.c        **** // this ISR more efficient.
 123:main.c        **** CY_ISR(ReceiveInterruptHandler){
 182              		.loc 1 123 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 90B5     		push	{r4, r7, lr}
 187              		.cfi_def_cfa_offset 12
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 85B0     		sub	sp, sp, #20
 192              		.cfi_def_cfa_offset 32
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 124:main.c        ****     int concatCount = 0;
 195              		.loc 1 124 0
 196 0006 0023     		movs	r3, #0
 197 0008 FB60     		str	r3, [r7, #12]
 125:main.c        ****     char characterRX = 0;
 198              		.loc 1 125 0
 199 000a 0023     		movs	r3, #0
 200 000c FB72     		strb	r3, [r7, #11]
 126:main.c        ****     
 127:main.c        ****     TimerRX_STATUS; 
 201              		.loc 1 127 0
 202 000e 364B     		ldr	r3, .L13
 203 0010 1B78     		ldrb	r3, [r3]
 128:main.c        ****     
 129:main.c        ****     if(systemState != COLLISION){
 204              		.loc 1 129 0
 205 0012 364B     		ldr	r3, .L13+4
 206 0014 1B78     		ldrb	r3, [r3]
 207 0016 DBB2     		uxtb	r3, r3
 208 0018 012B     		cmp	r3, #1
 209 001a 17D0     		beq	.L4
 130:main.c        ****         TimerRX_Start();
 210              		.loc 1 130 0
 211 001c FFF7FEFF 		bl	TimerRX_Start
 131:main.c        ****         if (receiveBitCount % 2) {
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 7


 212              		.loc 1 131 0
 213 0020 334B     		ldr	r3, .L13+8
 214 0022 1B68     		ldr	r3, [r3]
 215 0024 03F00103 		and	r3, r3, #1
 216 0028 002B     		cmp	r3, #0
 217 002a 01D1     		bne	.L5
 132:main.c        ****             
 133:main.c        ****         } 
 134:main.c        ****         else {
 135:main.c        ****             nothing();
 218              		.loc 1 135 0
 219 002c FFF7FEFF 		bl	nothing
 220              	.L5:
 136:main.c        ****         }
 137:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
 221              		.loc 1 137 0
 222 0030 2F4B     		ldr	r3, .L13+8
 223 0032 1C68     		ldr	r4, [r3]
 224 0034 FFF7FEFF 		bl	RECEIVE_Read
 225 0038 0346     		mov	r3, r0
 226 003a 1A46     		mov	r2, r3
 227 003c 2D4B     		ldr	r3, .L13+12
 228 003e 1A55     		strb	r2, [r3, r4]
 138:main.c        ****         ++receiveBitCount;
 229              		.loc 1 138 0
 230 0040 2B4B     		ldr	r3, .L13+8
 231 0042 1B68     		ldr	r3, [r3]
 232 0044 0133     		adds	r3, r3, #1
 233 0046 2A4A     		ldr	r2, .L13+8
 234 0048 1360     		str	r3, [r2]
 235 004a 0DE0     		b	.L6
 236              	.L4:
 139:main.c        ****         
 140:main.c        ****     }else{
 141:main.c        ****         
 142:main.c        ****         receiveBitCount = 0;   
 237              		.loc 1 142 0
 238 004c 284B     		ldr	r3, .L13+8
 239 004e 0022     		movs	r2, #0
 240 0050 1A60     		str	r2, [r3]
 143:main.c        ****         receivePosition = 0;
 241              		.loc 1 143 0
 242 0052 294B     		ldr	r3, .L13+16
 243 0054 0022     		movs	r2, #0
 244 0056 1A60     		str	r2, [r3]
 144:main.c        ****         dataBitsRead = 0;
 245              		.loc 1 144 0
 246 0058 284B     		ldr	r3, .L13+20
 247 005a 0022     		movs	r2, #0
 248 005c 1A60     		str	r2, [r3]
 145:main.c        ****         TimerRX_Stop();
 249              		.loc 1 145 0
 250 005e FFF7FEFF 		bl	TimerRX_Stop
 146:main.c        ****         receiveLock = 0;
 251              		.loc 1 146 0
 252 0062 274B     		ldr	r3, .L13+24
 253 0064 0022     		movs	r2, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 8


 254 0066 1A60     		str	r2, [r3]
 255              	.L6:
 147:main.c        ****     }
 148:main.c        ****     
 149:main.c        ****     if(receiveBitCount >= 15 ){
 256              		.loc 1 149 0
 257 0068 214B     		ldr	r3, .L13+8
 258 006a 1B68     		ldr	r3, [r3]
 259 006c 0E2B     		cmp	r3, #14
 260 006e 37DD     		ble	.L12
 150:main.c        ****         receiveBitCount = 0;
 261              		.loc 1 150 0
 262 0070 1F4B     		ldr	r3, .L13+8
 263 0072 0022     		movs	r2, #0
 264 0074 1A60     		str	r2, [r3]
 151:main.c        ****         TimerRX_Stop();
 265              		.loc 1 151 0
 266 0076 FFF7FEFF 		bl	TimerRX_Stop
 152:main.c        ****         receiveLock = 0;
 267              		.loc 1 152 0
 268 007a 214B     		ldr	r3, .L13+24
 269 007c 0022     		movs	r2, #0
 270 007e 1A60     		str	r2, [r3]
 271              	.LBB2:
 153:main.c        ****         
 154:main.c        ****         
 155:main.c        ****         for(int x = 15; x >= 0; x--){
 272              		.loc 1 155 0
 273 0080 0F23     		movs	r3, #15
 274 0082 7B60     		str	r3, [r7, #4]
 275 0084 1FE0     		b	.L8
 276              	.L11:
 156:main.c        ****             if(x == 15){
 277              		.loc 1 156 0
 278 0086 7B68     		ldr	r3, [r7, #4]
 279 0088 0F2B     		cmp	r3, #15
 280 008a 01D1     		bne	.L9
 157:main.c        ****              characterRX = 0x00;    
 281              		.loc 1 157 0
 282 008c 0023     		movs	r3, #0
 283 008e FB72     		strb	r3, [r7, #11]
 284              	.L9:
 158:main.c        ****             }
 159:main.c        ****             if(x % 2 != 0){
 285              		.loc 1 159 0
 286 0090 7B68     		ldr	r3, [r7, #4]
 287 0092 03F00103 		and	r3, r3, #1
 288 0096 002B     		cmp	r3, #0
 289 0098 12D0     		beq	.L10
 160:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 290              		.loc 1 160 0
 291 009a 164A     		ldr	r2, .L13+12
 292 009c 7B68     		ldr	r3, [r7, #4]
 293 009e 1344     		add	r3, r3, r2
 294 00a0 1B78     		ldrb	r3, [r3]
 295 00a2 DBB2     		uxtb	r3, r3
 296 00a4 1A46     		mov	r2, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 9


 297 00a6 FB68     		ldr	r3, [r7, #12]
 298 00a8 013B     		subs	r3, r3, #1
 299 00aa 02FA03F3 		lsl	r3, r2, r3
 300 00ae 5AB2     		sxtb	r2, r3
 301 00b0 97F90B30 		ldrsb	r3, [r7, #11]
 302 00b4 1343     		orrs	r3, r3, r2
 303 00b6 5BB2     		sxtb	r3, r3
 304 00b8 FB72     		strb	r3, [r7, #11]
 161:main.c        ****                 ++concatCount;
 305              		.loc 1 161 0
 306 00ba FB68     		ldr	r3, [r7, #12]
 307 00bc 0133     		adds	r3, r3, #1
 308 00be FB60     		str	r3, [r7, #12]
 309              	.L10:
 155:main.c        ****             if(x == 15){
 310              		.loc 1 155 0 discriminator 2
 311 00c0 7B68     		ldr	r3, [r7, #4]
 312 00c2 013B     		subs	r3, r3, #1
 313 00c4 7B60     		str	r3, [r7, #4]
 314              	.L8:
 155:main.c        ****             if(x == 15){
 315              		.loc 1 155 0 is_stmt 0 discriminator 1
 316 00c6 7B68     		ldr	r3, [r7, #4]
 317 00c8 002B     		cmp	r3, #0
 318 00ca DCDA     		bge	.L11
 319              	.LBE2:
 162:main.c        ****             }
 163:main.c        ****         }
 164:main.c        ****         receiveBuffer[receivePosition] = characterRX;
 320              		.loc 1 164 0 is_stmt 1
 321 00cc 0A4B     		ldr	r3, .L13+16
 322 00ce 1B68     		ldr	r3, [r3]
 323 00d0 0C49     		ldr	r1, .L13+28
 324 00d2 FA7A     		ldrb	r2, [r7, #11]
 325 00d4 CA54     		strb	r2, [r1, r3]
 165:main.c        ****         ++receivePosition;
 326              		.loc 1 165 0
 327 00d6 084B     		ldr	r3, .L13+16
 328 00d8 1B68     		ldr	r3, [r3]
 329 00da 0133     		adds	r3, r3, #1
 330 00dc 064A     		ldr	r2, .L13+16
 331 00de 1360     		str	r3, [r2]
 332              	.L12:
 166:main.c        ****        
 167:main.c        ****     }
 168:main.c        **** }
 333              		.loc 1 168 0
 334 00e0 00BF     		nop
 335 00e2 1437     		adds	r7, r7, #20
 336              		.cfi_def_cfa_offset 12
 337 00e4 BD46     		mov	sp, r7
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 00e6 90BD     		pop	{r4, r7, pc}
 341              	.L14:
 342              		.align	2
 343              	.L13:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 10


 344 00e8 63640040 		.word	1073767523
 345 00ec 00000000 		.word	systemState
 346 00f0 00000000 		.word	receiveBitCount
 347 00f4 00000000 		.word	receiveData
 348 00f8 00000000 		.word	receivePosition
 349 00fc 00000000 		.word	dataBitsRead
 350 0100 00000000 		.word	receiveLock
 351 0104 00000000 		.word	receiveBuffer
 352              		.cfi_endproc
 353              	.LFE65:
 354              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 355              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 356              		.align	2
 357              		.global	TransmitInterruptHandler
 358              		.thumb
 359              		.thumb_func
 360              		.type	TransmitInterruptHandler, %function
 361              	TransmitInterruptHandler:
 362              	.LFB66:
 169:main.c        **** 
 170:main.c        ****  /**********************************************************
 171:main.c        ****  * function name: ReceiveInterruptHandler
 172:main.c        ****  * operation: Handles the transmit interrupt.
 173:main.c        **** Fires each time we need to transmit.
 174:main.c        ****  * inputs: none
 175:main.c        ****  * returns: none
 176:main.c        ****  * implemented: 14 Dec 2017
 177:main.c        ****  * edited:
 178:main.c        ****  *********************************************************/ 
 179:main.c        **** CY_ISR(TransmitInterruptHandler)
 180:main.c        **** {
 363              		.loc 1 180 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 181:main.c        **** 	TimerTX_STATUS; 
 373              		.loc 1 181 0
 374 0004 524B     		ldr	r3, .L28
 375 0006 1B78     		ldrb	r3, [r3]
 182:main.c        ****     if (position >= dataSize) {
 376              		.loc 1 182 0
 377 0008 524B     		ldr	r3, .L28+4
 378 000a 1A68     		ldr	r2, [r3]
 379 000c 524B     		ldr	r3, .L28+8
 380 000e 1B68     		ldr	r3, [r3]
 381 0010 9A42     		cmp	r2, r3
 382 0012 80F29A80 		bge	.L27
 183:main.c        ****         return;
 184:main.c        ****     }
 185:main.c        **** 	currentChar = buffer[position];
 383              		.loc 1 185 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 11


 384 0016 4F4B     		ldr	r3, .L28+4
 385 0018 1B68     		ldr	r3, [r3]
 386 001a 504A     		ldr	r2, .L28+12
 387 001c D35C     		ldrb	r3, [r2, r3]
 388 001e DAB2     		uxtb	r2, r3
 389 0020 4F4B     		ldr	r3, .L28+16
 390 0022 1A70     		strb	r2, [r3]
 186:main.c        **** 
 187:main.c        ****     if (!collisionLock) {
 391              		.loc 1 187 0
 392 0024 4F4B     		ldr	r3, .L28+20
 393 0026 1B78     		ldrb	r3, [r3]
 394 0028 DBB2     		uxtb	r3, r3
 395 002a 83F00103 		eor	r3, r3, #1
 396 002e DBB2     		uxtb	r3, r3
 397 0030 002B     		cmp	r3, #0
 398 0032 00F08380 		beq	.L18
 188:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 399              		.loc 1 188 0
 400 0036 474B     		ldr	r3, .L28+4
 401 0038 1A68     		ldr	r2, [r3]
 402 003a 474B     		ldr	r3, .L28+8
 403 003c 1B68     		ldr	r3, [r3]
 404 003e 9A42     		cmp	r2, r3
 405 0040 04DA     		bge	.L19
 406              		.loc 1 188 0 is_stmt 0 discriminator 1
 407 0042 494B     		ldr	r3, .L28+24
 408 0044 1B78     		ldrb	r3, [r3]
 409 0046 DBB2     		uxtb	r3, r3
 410 0048 002B     		cmp	r3, #0
 411 004a 08D0     		beq	.L20
 412              	.L19:
 413              		.loc 1 188 0 discriminator 3
 414 004c 474B     		ldr	r3, .L28+28
 415 004e 1B68     		ldr	r3, [r3]
 416 0050 002B     		cmp	r3, #0
 417 0052 58D0     		beq	.L21
 418              		.loc 1 188 0 discriminator 4
 419 0054 444B     		ldr	r3, .L28+24
 420 0056 1B78     		ldrb	r3, [r3]
 421 0058 DBB2     		uxtb	r3, r3
 422 005a 022B     		cmp	r3, #2
 423 005c 53D1     		bne	.L21
 424              	.L20:
 189:main.c        ****     		if(transmitBitCount == 0){
 425              		.loc 1 189 0 is_stmt 1
 426 005e 444B     		ldr	r3, .L28+32
 427 0060 1B68     		ldr	r3, [r3]
 428 0062 002B     		cmp	r3, #0
 429 0064 0DD1     		bne	.L22
 190:main.c        ****     			TRANSMIT_Write(1);
 430              		.loc 1 190 0
 431 0066 0120     		movs	r0, #1
 432 0068 FFF7FEFF 		bl	TRANSMIT_Write
 191:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 433              		.loc 1 191 0
 434 006c 394B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 12


 435 006e 1A68     		ldr	r2, [r3]
 436 0070 3F4B     		ldr	r3, .L28+32
 437 0072 1B68     		ldr	r3, [r3]
 438 0074 3F49     		ldr	r1, .L28+36
 439 0076 1201     		lsls	r2, r2, #4
 440 0078 0A44     		add	r2, r2, r1
 441 007a 1344     		add	r3, r3, r2
 442 007c 3122     		movs	r2, #49
 443 007e 1A70     		strb	r2, [r3]
 444 0080 41E0     		b	.L21
 445              	.L22:
 192:main.c        ****     		}else if(transmitBitCount%2 != 0){
 446              		.loc 1 192 0
 447 0082 3B4B     		ldr	r3, .L28+32
 448 0084 1B68     		ldr	r3, [r3]
 449 0086 03F00103 		and	r3, r3, #1
 450 008a 002B     		cmp	r3, #0
 451 008c 0DD0     		beq	.L23
 193:main.c        ****     			TRANSMIT_Write(0);
 452              		.loc 1 193 0
 453 008e 0020     		movs	r0, #0
 454 0090 FFF7FEFF 		bl	TRANSMIT_Write
 194:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 455              		.loc 1 194 0
 456 0094 2F4B     		ldr	r3, .L28+4
 457 0096 1A68     		ldr	r2, [r3]
 458 0098 354B     		ldr	r3, .L28+32
 459 009a 1B68     		ldr	r3, [r3]
 460 009c 3549     		ldr	r1, .L28+36
 461 009e 1201     		lsls	r2, r2, #4
 462 00a0 0A44     		add	r2, r2, r1
 463 00a2 1344     		add	r3, r3, r2
 464 00a4 3022     		movs	r2, #48
 465 00a6 1A70     		strb	r2, [r3]
 466 00a8 2DE0     		b	.L21
 467              	.L23:
 195:main.c        ****     		}else{
 196:main.c        ****     			if(currentChar & (1<<(6-idx))){
 468              		.loc 1 196 0
 469 00aa 2D4B     		ldr	r3, .L28+16
 470 00ac 1B78     		ldrb	r3, [r3]
 471 00ae DBB2     		uxtb	r3, r3
 472 00b0 1A46     		mov	r2, r3
 473 00b2 314B     		ldr	r3, .L28+40
 474 00b4 1B68     		ldr	r3, [r3]
 475 00b6 C3F10603 		rsb	r3, r3, #6
 476 00ba 42FA03F3 		asr	r3, r2, r3
 477 00be 03F00103 		and	r3, r3, #1
 478 00c2 002B     		cmp	r3, #0
 479 00c4 0DD0     		beq	.L24
 197:main.c        ****     				TRANSMIT_Write(1);
 480              		.loc 1 197 0
 481 00c6 0120     		movs	r0, #1
 482 00c8 FFF7FEFF 		bl	TRANSMIT_Write
 198:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 483              		.loc 1 198 0
 484 00cc 214B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 13


 485 00ce 1A68     		ldr	r2, [r3]
 486 00d0 274B     		ldr	r3, .L28+32
 487 00d2 1B68     		ldr	r3, [r3]
 488 00d4 2749     		ldr	r1, .L28+36
 489 00d6 1201     		lsls	r2, r2, #4
 490 00d8 0A44     		add	r2, r2, r1
 491 00da 1344     		add	r3, r3, r2
 492 00dc 3122     		movs	r2, #49
 493 00de 1A70     		strb	r2, [r3]
 494 00e0 0CE0     		b	.L25
 495              	.L24:
 199:main.c        ****     			}else{
 200:main.c        ****     				TRANSMIT_Write(0);
 496              		.loc 1 200 0
 497 00e2 0020     		movs	r0, #0
 498 00e4 FFF7FEFF 		bl	TRANSMIT_Write
 201:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 499              		.loc 1 201 0
 500 00e8 1A4B     		ldr	r3, .L28+4
 501 00ea 1A68     		ldr	r2, [r3]
 502 00ec 204B     		ldr	r3, .L28+32
 503 00ee 1B68     		ldr	r3, [r3]
 504 00f0 2049     		ldr	r1, .L28+36
 505 00f2 1201     		lsls	r2, r2, #4
 506 00f4 0A44     		add	r2, r2, r1
 507 00f6 1344     		add	r3, r3, r2
 508 00f8 3022     		movs	r2, #48
 509 00fa 1A70     		strb	r2, [r3]
 510              	.L25:
 202:main.c        ****     			}
 203:main.c        ****     				++idx;
 511              		.loc 1 203 0
 512 00fc 1E4B     		ldr	r3, .L28+40
 513 00fe 1B68     		ldr	r3, [r3]
 514 0100 0133     		adds	r3, r3, #1
 515 0102 1D4A     		ldr	r2, .L28+40
 516 0104 1360     		str	r3, [r2]
 517              	.L21:
 204:main.c        ****     		}
 205:main.c        ****         }
 206:main.c        ****         // CyDelayUs(495);
 207:main.c        ****         ++transmitBitCount;
 518              		.loc 1 207 0
 519 0106 1A4B     		ldr	r3, .L28+32
 520 0108 1B68     		ldr	r3, [r3]
 521 010a 0133     		adds	r3, r3, #1
 522 010c 184A     		ldr	r2, .L28+32
 523 010e 1360     		str	r3, [r2]
 208:main.c        ****         if(transmitBitCount >= 16){
 524              		.loc 1 208 0
 525 0110 174B     		ldr	r3, .L28+32
 526 0112 1B68     		ldr	r3, [r3]
 527 0114 0F2B     		cmp	r3, #15
 528 0116 19DD     		ble	.L15
 209:main.c        **** 		    ++position;
 529              		.loc 1 209 0
 530 0118 0E4B     		ldr	r3, .L28+4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 14


 531 011a 1B68     		ldr	r3, [r3]
 532 011c 0133     		adds	r3, r3, #1
 533 011e 0D4A     		ldr	r2, .L28+4
 534 0120 1360     		str	r3, [r2]
 210:main.c        **** 		    idx = 0;
 535              		.loc 1 210 0
 536 0122 154B     		ldr	r3, .L28+40
 537 0124 0022     		movs	r2, #0
 538 0126 1A60     		str	r2, [r3]
 211:main.c        **** 		    transmitBitCount = 0;
 539              		.loc 1 211 0
 540 0128 114B     		ldr	r3, .L28+32
 541 012a 0022     		movs	r2, #0
 542 012c 1A60     		str	r2, [r3]
 212:main.c        ****             transmitLock = 0;
 543              		.loc 1 212 0
 544 012e 0F4B     		ldr	r3, .L28+28
 545 0130 0022     		movs	r2, #0
 546 0132 1A60     		str	r2, [r3]
 213:main.c        ****             TRANSMIT_Write(0);
 547              		.loc 1 213 0
 548 0134 0020     		movs	r0, #0
 549 0136 FFF7FEFF 		bl	TRANSMIT_Write
 550 013a 07E0     		b	.L15
 551              	.L18:
 214:main.c        **** 
 215:main.c        ****         }
 216:main.c        ****     } else {
 217:main.c        ****         position = 0;
 552              		.loc 1 217 0
 553 013c 054B     		ldr	r3, .L28+4
 554 013e 0022     		movs	r2, #0
 555 0140 1A60     		str	r2, [r3]
 218:main.c        ****         transmitBitCount = 0;
 556              		.loc 1 218 0
 557 0142 0B4B     		ldr	r3, .L28+32
 558 0144 0022     		movs	r2, #0
 559 0146 1A60     		str	r2, [r3]
 560 0148 00E0     		b	.L15
 561              	.L27:
 183:main.c        ****     }
 562              		.loc 1 183 0
 563 014a 00BF     		nop
 564              	.L15:
 219:main.c        ****     }
 220:main.c        **** }
 565              		.loc 1 220 0
 566 014c 80BD     		pop	{r7, pc}
 567              	.L29:
 568 014e 00BF     		.align	2
 569              	.L28:
 570 0150 034F0040 		.word	1073762051
 571 0154 00000000 		.word	position
 572 0158 00000000 		.word	dataSize
 573 015c 00000000 		.word	buffer
 574 0160 00000000 		.word	currentChar
 575 0164 00000000 		.word	collisionLock
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 15


 576 0168 00000000 		.word	systemState
 577 016c 00000000 		.word	transmitLock
 578 0170 00000000 		.word	transmitBitCount
 579 0174 00000000 		.word	transmitData
 580 0178 00000000 		.word	idx
 581              		.cfi_endproc
 582              	.LFE66:
 583              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 584              		.global	__aeabi_i2f
 585              		.global	__aeabi_fdiv
 586              		.global	__aeabi_fmul
 587              		.global	__aeabi_f2uiz
 588              		.section	.text.TimerInterruptHandler,"ax",%progbits
 589              		.align	2
 590              		.global	TimerInterruptHandler
 591              		.thumb
 592              		.thumb_func
 593              		.type	TimerInterruptHandler, %function
 594              	TimerInterruptHandler:
 595              	.LFB67:
 221:main.c        **** 
 222:main.c        **** 
 223:main.c        ****  /**********************************************************
 224:main.c        ****  * function name: TimerInterruptHandler
 225:main.c        ****  * operation: When a node that is transmitting and detects 
 226:main.c        ****  *            a collision, the node shall stop transmitting
 227:main.c        ****  *            and wait a random amount of time between 0
 228:main.c        ****  *            and 1.000 second (s), and then determine if
 229:main.c        ****  *            the bus is idle and if so begin a retrans.
 230:main.c        ****  * inputs: none
 231:main.c        ****  * returns: none
 232:main.c        ****  * implemented: 14 Dec 2017
 233:main.c        ****  * edited:
 234:main.c        ****  *********************************************************/
 235:main.c        **** 
 236:main.c        **** //TODO: WORK ON THE TRYING REATTEMPT UP TO 10 TIMES
 237:main.c        **** CY_ISR(TimerInterruptHandler)
 238:main.c        **** {     
 596              		.loc 1 238 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 8
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 82B0     		sub	sp, sp, #8
 605              		.cfi_def_cfa_offset 16
 606 0004 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 239:main.c        ****    	Timer_STATUS; 
 608              		.loc 1 239 0
 609 0006 234B     		ldr	r3, .L34
 610 0008 1B78     		ldrb	r3, [r3]
 240:main.c        ****     
 241:main.c        ****     if (!RECEIVE_Read() ){
 611              		.loc 1 241 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 16


 612 000a FFF7FEFF 		bl	RECEIVE_Read
 613 000e 0346     		mov	r3, r0
 614 0010 002B     		cmp	r3, #0
 615 0012 06D1     		bne	.L31
 242:main.c        ****         systemState = IDLE;
 616              		.loc 1 242 0
 617 0014 204B     		ldr	r3, .L34+4
 618 0016 0022     		movs	r2, #0
 619 0018 1A70     		strb	r2, [r3]
 243:main.c        ****          transmitLock = 1;
 620              		.loc 1 243 0
 621 001a 204B     		ldr	r3, .L34+8
 622 001c 0122     		movs	r2, #1
 623 001e 1A60     		str	r2, [r3]
 244:main.c        ****     } else {
 245:main.c        ****         systemState = COLLISION;
 246:main.c        ****         TRANSMIT_Write(0); 
 247:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 248:main.c        ****         collisionLock = 1; // Collision
 249:main.c        ****         position = 0; // Start over entire packet.
 250:main.c        ****         receivePosition = 0;
 251:main.c        ****         
 252:main.c        ****         uint16_t randNum = (uint16_t)((float)rand() / RAND_MAX * 1000);
 253:main.c        ****         CollisionDelay_WritePeriod(randNum);
 254:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 255:main.c        ****         CollisionDelay_Start();
 256:main.c        ****     }
 257:main.c        **** }
 624              		.loc 1 257 0
 625 0020 34E0     		b	.L33
 626              	.L31:
 627              	.LBB3:
 245:main.c        ****         TRANSMIT_Write(0); 
 628              		.loc 1 245 0
 629 0022 1D4B     		ldr	r3, .L34+4
 630 0024 0122     		movs	r2, #1
 631 0026 1A70     		strb	r2, [r3]
 246:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 632              		.loc 1 246 0
 633 0028 0020     		movs	r0, #0
 634 002a FFF7FEFF 		bl	TRANSMIT_Write
 247:main.c        ****         collisionLock = 1; // Collision
 635              		.loc 1 247 0
 636 002e 1B4B     		ldr	r3, .L34+8
 637 0030 0022     		movs	r2, #0
 638 0032 1A60     		str	r2, [r3]
 248:main.c        ****         position = 0; // Start over entire packet.
 639              		.loc 1 248 0
 640 0034 1A4B     		ldr	r3, .L34+12
 641 0036 0122     		movs	r2, #1
 642 0038 1A70     		strb	r2, [r3]
 249:main.c        ****         receivePosition = 0;
 643              		.loc 1 249 0
 644 003a 1A4B     		ldr	r3, .L34+16
 645 003c 0022     		movs	r2, #0
 646 003e 1A60     		str	r2, [r3]
 250:main.c        ****         
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 17


 647              		.loc 1 250 0
 648 0040 194B     		ldr	r3, .L34+20
 649 0042 0022     		movs	r2, #0
 650 0044 1A60     		str	r2, [r3]
 252:main.c        ****         CollisionDelay_WritePeriod(randNum);
 651              		.loc 1 252 0
 652 0046 FFF7FEFF 		bl	rand
 653 004a 0346     		mov	r3, r0
 654 004c 1846     		mov	r0, r3
 655 004e FFF7FEFF 		bl	__aeabi_i2f
 656 0052 0346     		mov	r3, r0
 657 0054 4FF09E41 		mov	r1, #1325400064
 658 0058 1846     		mov	r0, r3
 659 005a FFF7FEFF 		bl	__aeabi_fdiv
 660 005e 0346     		mov	r3, r0
 661 0060 1249     		ldr	r1, .L34+24
 662 0062 1846     		mov	r0, r3
 663 0064 FFF7FEFF 		bl	__aeabi_fmul
 664 0068 0346     		mov	r3, r0
 665 006a 1846     		mov	r0, r3
 666 006c FFF7FEFF 		bl	__aeabi_f2uiz
 667 0070 0346     		mov	r3, r0
 668 0072 FB80     		strh	r3, [r7, #6]	@ movhi
 253:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 669              		.loc 1 253 0
 670 0074 FB88     		ldrh	r3, [r7, #6]
 671 0076 1846     		mov	r0, r3
 672 0078 FFF7FEFF 		bl	CollisionDelay_WritePeriod
 254:main.c        ****         CollisionDelay_Start();
 673              		.loc 1 254 0
 674 007c FB88     		ldrh	r3, [r7, #6]	@ movhi
 675 007e 013B     		subs	r3, r3, #1
 676 0080 9BB2     		uxth	r3, r3
 677 0082 1846     		mov	r0, r3
 678 0084 FFF7FEFF 		bl	CollisionDelay_WriteCounter
 255:main.c        ****     }
 679              		.loc 1 255 0
 680 0088 FFF7FEFF 		bl	CollisionDelay_Start
 681              	.L33:
 682              	.LBE3:
 683              		.loc 1 257 0
 684 008c 00BF     		nop
 685 008e 0837     		adds	r7, r7, #8
 686              		.cfi_def_cfa_offset 8
 687 0090 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0092 80BD     		pop	{r7, pc}
 691              	.L35:
 692              		.align	2
 693              	.L34:
 694 0094 65650040 		.word	1073767781
 695 0098 00000000 		.word	systemState
 696 009c 00000000 		.word	transmitLock
 697 00a0 00000000 		.word	collisionLock
 698 00a4 00000000 		.word	position
 699 00a8 00000000 		.word	receivePosition
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 18


 700 00ac 00007A44 		.word	1148846080
 701              		.cfi_endproc
 702              	.LFE67:
 703              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 704              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 705              		.align	2
 706              		.global	RisingEdgeInterruptHandler
 707              		.thumb
 708              		.thumb_func
 709              		.type	RisingEdgeInterruptHandler, %function
 710              	RisingEdgeInterruptHandler:
 711              	.LFB68:
 258:main.c        **** 
 259:main.c        **** 
 260:main.c        ****  /**********************************************************
 261:main.c        ****  * function name: RisingEdgeInterruptHandler
 262:main.c        ****  * operation: Handles interrupt for when a rising edge on 
 263:main.c        ****  *            the timer occurs. Triggers system to look for
 264:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 265:main.c        ****  *            interupt to occur in .6ms and sets state to 
 266:main.c        ****  *            busy
 267:main.c        ****  * inputs: none
 268:main.c        ****  * returns: none
 269:main.c        ****  * implemented: 14 Dec 2017
 270:main.c        ****  * edited:
 271:main.c        ****  *********************************************************/ 
 272:main.c        **** 
 273:main.c        **** // TODO Fix "race against time" between ReceiveInterruptHandler ant his.
 274:main.c        **** // If this wins the race, then RX_Bit_Counter doesn't increment properly.
 275:main.c        **** // This is the reason why code didn't work well at higher speeds.
 276:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 277:main.c        **** {
 712              		.loc 1 277 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716 0000 80B5     		push	{r7, lr}
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 278:main.c        ****     if (RECEIVE_Read()){
 722              		.loc 1 278 0
 723 0004 FFF7FEFF 		bl	RECEIVE_Read
 724 0008 0346     		mov	r3, r0
 725 000a 002B     		cmp	r3, #0
 726 000c 0DD0     		beq	.L37
 279:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 727              		.loc 1 279 0
 728 000e 3420     		movs	r0, #52
 729 0010 FFF7FEFF 		bl	Timer_WritePeriod
 280:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 730              		.loc 1 280 0
 731 0014 3320     		movs	r0, #51
 732 0016 FFF7FEFF 		bl	Timer_WriteCounter
 281:main.c        ****         Timer_Start();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 19


 733              		.loc 1 281 0
 734 001a FFF7FEFF 		bl	Timer_Start
 282:main.c        ****         lowFlag = 1;
 735              		.loc 1 282 0
 736 001e 0A4B     		ldr	r3, .L41
 737 0020 0122     		movs	r2, #1
 738 0022 1A70     		strb	r2, [r3]
 283:main.c        ****         systemState = BUSY;
 739              		.loc 1 283 0
 740 0024 094B     		ldr	r3, .L41+4
 741 0026 0222     		movs	r2, #2
 742 0028 1A70     		strb	r2, [r3]
 743              	.L37:
 284:main.c        ****     }
 285:main.c        ****     if(receiveLock == 0){
 744              		.loc 1 285 0
 745 002a 094B     		ldr	r3, .L41+8
 746 002c 1B68     		ldr	r3, [r3]
 747 002e 002B     		cmp	r3, #0
 748 0030 05D1     		bne	.L38
 286:main.c        ****         TimerRX_Start();
 749              		.loc 1 286 0
 750 0032 FFF7FEFF 		bl	TimerRX_Start
 287:main.c        ****         receiveLock = 1;
 751              		.loc 1 287 0
 752 0036 064B     		ldr	r3, .L41+8
 753 0038 0122     		movs	r2, #1
 754 003a 1A60     		str	r2, [r3]
 288:main.c        ****         
 289:main.c        ****     } else {
 290:main.c        ****         nothing();
 291:main.c        ****     }
 292:main.c        **** }
 755              		.loc 1 292 0
 756 003c 01E0     		b	.L40
 757              	.L38:
 290:main.c        ****     }
 758              		.loc 1 290 0
 759 003e FFF7FEFF 		bl	nothing
 760              	.L40:
 761              		.loc 1 292 0
 762 0042 00BF     		nop
 763 0044 80BD     		pop	{r7, pc}
 764              	.L42:
 765 0046 00BF     		.align	2
 766              	.L41:
 767 0048 00000000 		.word	lowFlag
 768 004c 00000000 		.word	systemState
 769 0050 00000000 		.word	receiveLock
 770              		.cfi_endproc
 771              	.LFE68:
 772              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 773              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 774              		.align	2
 775              		.global	FallingEdgeInterruptHandler
 776              		.thumb
 777              		.thumb_func
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 20


 778              		.type	FallingEdgeInterruptHandler, %function
 779              	FallingEdgeInterruptHandler:
 780              	.LFB69:
 293:main.c        ****  
 294:main.c        ****  /**********************************************************
 295:main.c        ****  * function name: FallingEdgeInterruptHandler
 296:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 297:main.c        ****  *            the timer occurs. Triggers system to look for
 298:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 299:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 300:main.c        ****  *            busy
 301:main.c        ****  * inputs: none
 302:main.c        ****  * returns: none
 303:main.c        ****  * implemented: 14 Dec 2017
 304:main.c        ****  * edited:
 305:main.c        ****  *********************************************************/ 
 306:main.c        **** // TODO This could also contribute to the "race against time" issue.
 307:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 308:main.c        **** {
 781              		.loc 1 308 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789 0002 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 309:main.c        ****     if (!RECEIVE_Read()){
 791              		.loc 1 309 0
 792 0004 FFF7FEFF 		bl	RECEIVE_Read
 793 0008 0346     		mov	r3, r0
 794 000a 002B     		cmp	r3, #0
 795 000c 0FD1     		bne	.L45
 310:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 796              		.loc 1 310 0
 797 000e 40F23E30 		movw	r0, #830
 798 0012 FFF7FEFF 		bl	Timer_WritePeriod
 311:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 799              		.loc 1 311 0
 800 0016 40F23D30 		movw	r0, #829
 801 001a FFF7FEFF 		bl	Timer_WriteCounter
 312:main.c        ****         Timer_Start();
 802              		.loc 1 312 0
 803 001e FFF7FEFF 		bl	Timer_Start
 313:main.c        ****         lowFlag = 0;
 804              		.loc 1 313 0
 805 0022 044B     		ldr	r3, .L46
 806 0024 0022     		movs	r2, #0
 807 0026 1A70     		strb	r2, [r3]
 314:main.c        ****         systemState = BUSY;
 808              		.loc 1 314 0
 809 0028 034B     		ldr	r3, .L46+4
 810 002a 0222     		movs	r2, #2
 811 002c 1A70     		strb	r2, [r3]
 812              	.L45:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 21


 315:main.c        ****     }
 316:main.c        **** }
 813              		.loc 1 316 0
 814 002e 00BF     		nop
 815 0030 80BD     		pop	{r7, pc}
 816              	.L47:
 817 0032 00BF     		.align	2
 818              	.L46:
 819 0034 00000000 		.word	lowFlag
 820 0038 00000000 		.word	systemState
 821              		.cfi_endproc
 822              	.LFE69:
 823              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 824              		.section	.text.CollisionDelayInterruptHandler,"ax",%progbits
 825              		.align	2
 826              		.global	CollisionDelayInterruptHandler
 827              		.thumb
 828              		.thumb_func
 829              		.type	CollisionDelayInterruptHandler, %function
 830              	CollisionDelayInterruptHandler:
 831              	.LFB70:
 317:main.c        **** 
 318:main.c        **** /**
 319:main.c        **** This interrupt should fire after the random delay period of the timer after
 320:main.c        **** a collision has expired. All this does is tells the transmitter that it has
 321:main.c        **** the green light to transmit.
 322:main.c        **** */
 323:main.c        **** CY_ISR(CollisionDelayInterruptHandler)
 324:main.c        **** {
 832              		.loc 1 324 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 0000 80B4     		push	{r7}
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
 325:main.c        ****     collisionLock = false;
 842              		.loc 1 325 0
 843 0004 034B     		ldr	r3, .L49
 844 0006 0022     		movs	r2, #0
 845 0008 1A70     		strb	r2, [r3]
 326:main.c        **** }
 846              		.loc 1 326 0
 847 000a 00BF     		nop
 848 000c BD46     		mov	sp, r7
 849              		.cfi_def_cfa_register 13
 850              		@ sp needed
 851 000e 80BC     		pop	{r7}
 852              		.cfi_restore 7
 853              		.cfi_def_cfa_offset 0
 854 0010 7047     		bx	lr
 855              	.L50:
 856 0012 00BF     		.align	2
 857              	.L49:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 22


 858 0014 00000000 		.word	collisionLock
 859              		.cfi_endproc
 860              	.LFE70:
 861              		.size	CollisionDelayInterruptHandler, .-CollisionDelayInterruptHandler
 862              		.section	.rodata
 863              		.align	2
 864              	.LC0:
 865 0000 456E7465 		.ascii	"Enter Address or press 'R' to switch to receive mod"
 865      72204164 
 865      64726573 
 865      73206F72 
 865      20707265 
 866 0033 653A2000 		.ascii	"e: \000"
 867 0037 00       		.align	2
 868              	.LC1:
 869 0038 50726573 		.ascii	"Press 'T' to switch to transmit mode.\015\012\000"
 869      73202754 
 869      2720746F 
 869      20737769 
 869      74636820 
 870              		.align	2
 871              	.LC2:
 872 0060 456E7465 		.ascii	"Enter message: \000"
 872      72206D65 
 872      73736167 
 872      653A2000 
 873              		.align	2
 874              	.LC3:
 875 0070 0D0A4D65 		.ascii	"\015\012Message must be no more than 44 bytes.\015\012"
 875      73736167 
 875      65206D75 
 875      73742062 
 875      65206E6F 
 876 009a 00       		.ascii	"\000"
 877              		.section	.text.main,"ax",%progbits
 878              		.align	2
 879              		.global	main
 880              		.thumb
 881              		.thumb_func
 882              		.type	main, %function
 883              	main:
 884              	.LFB71:
 327:main.c        **** 
 328:main.c        **** /**********************************************************
 329:main.c        ****  * function name: main
 330:main.c        ****  * operation: Handles the main state machine diagram for the
 331:main.c        ****  *            system. Changes  states when needed and calls
 332:main.c        ****  *            appropriate interrupt routines when triggered.                
 333:main.c        ****  * inputs: none
 334:main.c        ****  * returns: none
 335:main.c        ****  * implemented: 14 Dec 2017
 336:main.c        ****  * edited:
 337:main.c        ****  *********************************************************/ 
 338:main.c        **** int main(void)
 339:main.c        **** {
 885              		.loc 1 339 0
 886              		.cfi_startproc
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 23


 887              		@ args = 0, pretend = 0, frame = 8
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 340:main.c        **** 
 341:main.c        ****     //enable global interrupts
 342:main.c        ****     //start the interrupt handlers for the timers and other components
 343:main.c        ****     CyGlobalIntEnable; 
 897              		.loc 1 343 0
 898              		.syntax unified
 899              	@ 343 "main.c" 1
 900 0006 62B6     		CPSIE   i
 901              	@ 0 "" 2
 344:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 902              		.loc 1 344 0
 903              		.thumb
 904              		.syntax unified
 905 0008 B948     		ldr	r0, .L85
 906 000a FFF7FEFF 		bl	TimerISR_StartEx
 345:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 907              		.loc 1 345 0
 908 000e B948     		ldr	r0, .L85+4
 909 0010 FFF7FEFF 		bl	RisingEdgeISR_StartEx
 346:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 910              		.loc 1 346 0
 911 0014 B848     		ldr	r0, .L85+8
 912 0016 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 347:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 913              		.loc 1 347 0
 914 001a B848     		ldr	r0, .L85+12
 915 001c FFF7FEFF 		bl	ReceiveISR_StartEx
 348:main.c        **** 
 349:main.c        ****     // TimerTX_Start();
 350:main.c        ****     TimerTX_WritePeriod(TRANSMIT_PERIOD);
 916              		.loc 1 350 0
 917 0020 2F20     		movs	r0, #47
 918 0022 FFF7FEFF 		bl	TimerTX_WritePeriod
 351:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 919              		.loc 1 351 0
 920 0026 2E20     		movs	r0, #46
 921 0028 FFF7FEFF 		bl	TimerTX_WriteCounter
 352:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 922              		.loc 1 352 0
 923 002c B448     		ldr	r0, .L85+16
 924 002e FFF7FEFF 		bl	TransmitISR_StartEx
 353:main.c        ****     
 354:main.c        ****     TimerRX_WriteCounter(RECEIVE_COUNTER);
 925              		.loc 1 354 0
 926 0032 3320     		movs	r0, #51
 927 0034 FFF7FEFF 		bl	TimerRX_WriteCounter
 355:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 24


 928              		.loc 1 355 0
 929 0038 3420     		movs	r0, #52
 930 003a FFF7FEFF 		bl	TimerRX_WritePeriod
 356:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 931              		.loc 1 356 0
 932 003e AF48     		ldr	r0, .L85+12
 933 0040 FFF7FEFF 		bl	ReceiveISR_StartEx
 357:main.c        ****     
 358:main.c        ****     CollisionDelayISR_StartEx(CollisionDelayInterruptHandler);
 934              		.loc 1 358 0
 935 0044 AF48     		ldr	r0, .L85+20
 936 0046 FFF7FEFF 		bl	CollisionDelayISR_StartEx
 359:main.c        ****         
 360:main.c        ****     //configure usb to start
 361:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 937              		.loc 1 361 0
 938 004a AF4B     		ldr	r3, .L85+24
 939 004c 1B78     		ldrb	r3, [r3]
 940 004e DBB2     		uxtb	r3, r3
 941 0050 0121     		movs	r1, #1
 942 0052 1846     		mov	r0, r3
 943 0054 FFF7FEFF 		bl	USBUART_Start
 362:main.c        ****     
 363:main.c        ****     while (!USBUART_GetConfiguration());
 944              		.loc 1 363 0
 945 0058 00BF     		nop
 946              	.L52:
 947              		.loc 1 363 0 is_stmt 0 discriminator 1
 948 005a FFF7FEFF 		bl	USBUART_GetConfiguration
 949 005e 0346     		mov	r3, r0
 950 0060 002B     		cmp	r3, #0
 951 0062 FAD0     		beq	.L52
 364:main.c        ****     USBUART_CDC_Init();
 952              		.loc 1 364 0 is_stmt 1
 953 0064 FFF7FEFF 		bl	USBUART_CDC_Init
 365:main.c        ****     
 366:main.c        ****     //starting system in idle state
 367:main.c        ****     systemState = IDLE;
 954              		.loc 1 367 0
 955 0068 A84B     		ldr	r3, .L85+28
 956 006a 0022     		movs	r2, #0
 957 006c 1A70     		strb	r2, [r3]
 958              	.L83:
 368:main.c        **** 
 369:main.c        ****     while(1) {
 370:main.c        ****                 
 371:main.c        **** 		/** if (0 != USBUART_IsConfigurationChanged())
 372:main.c        **** 		{
 373:main.c        **** 			
 374:main.c        **** 			if (0 != USBUART_GetConfiguration())
 375:main.c        **** 			{				
 376:main.c        **** 				USBUART_CDC_Init();
 377:main.c        **** 			}
 378:main.c        **** 		} */
 379:main.c        ****         
 380:main.c        ****         
 381:main.c        ****         if(transmitMode){
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 25


 959              		.loc 1 381 0
 960 006e A84B     		ldr	r3, .L85+32
 961 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 962 0072 002B     		cmp	r3, #0
 963 0074 00F06081 		beq	.L53
 964              	.LBB4:
 382:main.c        ****             int inCount = 0;
 965              		.loc 1 382 0
 966 0078 0023     		movs	r3, #0
 967 007a 7B60     		str	r3, [r7, #4]
 383:main.c        ****             transmitAddress = 0;
 968              		.loc 1 383 0
 969 007c A54B     		ldr	r3, .L85+36
 970 007e 0022     		movs	r2, #0
 971 0080 1A70     		strb	r2, [r3]
 384:main.c        ****             char input = 0;
 972              		.loc 1 384 0
 973 0082 0023     		movs	r3, #0
 974 0084 FB70     		strb	r3, [r7, #3]
 385:main.c        ****             while(!USBUART_CDCIsReady());
 975              		.loc 1 385 0
 976 0086 00BF     		nop
 977              	.L54:
 978              		.loc 1 385 0 is_stmt 0 discriminator 1
 979 0088 FFF7FEFF 		bl	USBUART_CDCIsReady
 980 008c 0346     		mov	r3, r0
 981 008e 002B     		cmp	r3, #0
 982 0090 FAD0     		beq	.L54
 386:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 983              		.loc 1 386 0 is_stmt 1
 984 0092 A148     		ldr	r0, .L85+40
 985 0094 FFF7FEFF 		bl	USBUART_PutString
 387:main.c        ****             while(inCount < 3){
 986              		.loc 1 387 0
 987 0098 92E0     		b	.L55
 988              	.L57:
 388:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 389:main.c        ****                     stateDiagram();
 989              		.loc 1 389 0
 990 009a FFF7FEFF 		bl	stateDiagram
 991              	.L56:
 388:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 992              		.loc 1 388 0
 993 009e FFF7FEFF 		bl	USBUART_DataIsReady
 994 00a2 0346     		mov	r3, r0
 995 00a4 002B     		cmp	r3, #0
 996 00a6 F8D0     		beq	.L57
 390:main.c        ****                 }
 391:main.c        ****                 
 392:main.c        ****                 input = USBUART_GetChar();
 997              		.loc 1 392 0
 998 00a8 FFF7FEFF 		bl	USBUART_GetChar
 999 00ac 0346     		mov	r3, r0
 1000 00ae FB70     		strb	r3, [r7, #3]
 393:main.c        ****                 
 394:main.c        ****                 //get the transmitAddress entered in
 395:main.c        ****                 if(inCount == 0){
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 26


 1001              		.loc 1 395 0
 1002 00b0 7B68     		ldr	r3, [r7, #4]
 1003 00b2 002B     		cmp	r3, #0
 1004 00b4 56D1     		bne	.L58
 1005              	.LBB5:
 396:main.c        ****                     if (toupper(input) == 'R') {
 1006              		.loc 1 396 0
 1007 00b6 FB78     		ldrb	r3, [r7, #3]
 1008 00b8 3B70     		strb	r3, [r7]
 1009 00ba 984B     		ldr	r3, .L85+44
 1010 00bc 1A68     		ldr	r2, [r3]
 1011 00be 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1012 00c0 0133     		adds	r3, r3, #1
 1013 00c2 1344     		add	r3, r3, r2
 1014 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 00c6 03F00303 		and	r3, r3, #3
 1016 00ca 022B     		cmp	r3, #2
 1017 00cc 02D1     		bne	.L59
 1018              		.loc 1 396 0 is_stmt 0 discriminator 1
 1019 00ce 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1020 00d0 203B     		subs	r3, r3, #32
 1021 00d2 00E0     		b	.L60
 1022              	.L59:
 1023              		.loc 1 396 0 discriminator 2
 1024 00d4 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1025              	.L60:
 1026              	.LBE5:
 1027              		.loc 1 396 0 discriminator 4
 1028 00d6 522B     		cmp	r3, #82
 1029 00d8 28D1     		bne	.L61
 397:main.c        ****                         transmitMode = false;
 1030              		.loc 1 397 0 is_stmt 1
 1031 00da 8D4B     		ldr	r3, .L85+32
 1032 00dc 0022     		movs	r2, #0
 1033 00de 1A70     		strb	r2, [r3]
 398:main.c        ****                         // TimerRX_Start();
 399:main.c        ****                         while(!USBUART_CDCIsReady());
 1034              		.loc 1 399 0
 1035 00e0 00BF     		nop
 1036              	.L62:
 1037              		.loc 1 399 0 is_stmt 0 discriminator 1
 1038 00e2 FFF7FEFF 		bl	USBUART_CDCIsReady
 1039 00e6 0346     		mov	r3, r0
 1040 00e8 002B     		cmp	r3, #0
 1041 00ea FAD0     		beq	.L62
 400:main.c        ****                         USBUART_PutChar(input);
 1042              		.loc 1 400 0 is_stmt 1
 1043 00ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1044 00ee 1846     		mov	r0, r3
 1045 00f0 FFF7FEFF 		bl	USBUART_PutChar
 401:main.c        ****                         while(!USBUART_CDCIsReady());
 1046              		.loc 1 401 0
 1047 00f4 00BF     		nop
 1048              	.L63:
 1049              		.loc 1 401 0 is_stmt 0 discriminator 1
 1050 00f6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1051 00fa 0346     		mov	r3, r0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 27


 1052 00fc 002B     		cmp	r3, #0
 1053 00fe FAD0     		beq	.L63
 402:main.c        ****                         USBUART_PutCRLF();
 1054              		.loc 1 402 0 is_stmt 1
 1055 0100 FFF7FEFF 		bl	USBUART_PutCRLF
 403:main.c        ****                         while(!USBUART_CDCIsReady());
 1056              		.loc 1 403 0
 1057 0104 00BF     		nop
 1058              	.L64:
 1059              		.loc 1 403 0 is_stmt 0 discriminator 1
 1060 0106 FFF7FEFF 		bl	USBUART_CDCIsReady
 1061 010a 0346     		mov	r3, r0
 1062 010c 002B     		cmp	r3, #0
 1063 010e FAD0     		beq	.L64
 404:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 1064              		.loc 1 404 0 is_stmt 1
 1065 0110 8348     		ldr	r0, .L85+48
 1066 0112 FFF7FEFF 		bl	USBUART_PutString
 405:main.c        ****                         while(!USBUART_CDCIsReady());
 1067              		.loc 1 405 0
 1068 0116 00BF     		nop
 1069              	.L65:
 1070              		.loc 1 405 0 is_stmt 0 discriminator 1
 1071 0118 FFF7FEFF 		bl	USBUART_CDCIsReady
 1072 011c 0346     		mov	r3, r0
 1073 011e 002B     		cmp	r3, #0
 1074 0120 FAD0     		beq	.L65
 406:main.c        ****                         USBUART_PutCRLF();
 1075              		.loc 1 406 0 is_stmt 1
 1076 0122 FFF7FEFF 		bl	USBUART_PutCRLF
 407:main.c        ****                         inCount = 0;
 1077              		.loc 1 407 0
 1078 0126 0023     		movs	r3, #0
 1079 0128 7B60     		str	r3, [r7, #4]
 408:main.c        ****                         break;
 1080              		.loc 1 408 0
 1081 012a 4DE0     		b	.L66
 1082              	.L61:
 409:main.c        ****                     } else {
 410:main.c        ****                         transmitAddress  += 100*(input - (0x30));
 1083              		.loc 1 410 0
 1084 012c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1085 012e 303B     		subs	r3, r3, #48
 1086 0130 DBB2     		uxtb	r3, r3
 1087 0132 1A46     		mov	r2, r3
 1088 0134 9200     		lsls	r2, r2, #2
 1089 0136 1344     		add	r3, r3, r2
 1090 0138 1A46     		mov	r2, r3
 1091 013a 9100     		lsls	r1, r2, #2
 1092 013c 1A46     		mov	r2, r3
 1093 013e 0B46     		mov	r3, r1
 1094 0140 1344     		add	r3, r3, r2
 1095 0142 9B00     		lsls	r3, r3, #2
 1096 0144 DAB2     		uxtb	r2, r3
 1097 0146 734B     		ldr	r3, .L85+36
 1098 0148 1B78     		ldrb	r3, [r3]
 1099 014a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 28


 1100 014c 1344     		add	r3, r3, r2
 1101 014e DAB2     		uxtb	r2, r3
 1102 0150 704B     		ldr	r3, .L85+36
 1103 0152 1A70     		strb	r2, [r3]
 411:main.c        ****                         USBUART_PutChar(input);
 1104              		.loc 1 411 0
 1105 0154 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1106 0156 1846     		mov	r0, r3
 1107 0158 FFF7FEFF 		bl	USBUART_PutChar
 412:main.c        ****                         ++inCount;
 1108              		.loc 1 412 0
 1109 015c 7B68     		ldr	r3, [r7, #4]
 1110 015e 0133     		adds	r3, r3, #1
 1111 0160 7B60     		str	r3, [r7, #4]
 1112 0162 2DE0     		b	.L55
 1113              	.L58:
 413:main.c        ****                     }
 414:main.c        ****                 }else if(inCount == 1){
 1114              		.loc 1 414 0
 1115 0164 7B68     		ldr	r3, [r7, #4]
 1116 0166 012B     		cmp	r3, #1
 1117 0168 16D1     		bne	.L67
 415:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 1118              		.loc 1 415 0
 1119 016a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1120 016c 303B     		subs	r3, r3, #48
 1121 016e DBB2     		uxtb	r3, r3
 1122 0170 1A46     		mov	r2, r3
 1123 0172 9200     		lsls	r2, r2, #2
 1124 0174 1344     		add	r3, r3, r2
 1125 0176 5B00     		lsls	r3, r3, #1
 1126 0178 DAB2     		uxtb	r2, r3
 1127 017a 664B     		ldr	r3, .L85+36
 1128 017c 1B78     		ldrb	r3, [r3]
 1129 017e DBB2     		uxtb	r3, r3
 1130 0180 1344     		add	r3, r3, r2
 1131 0182 DAB2     		uxtb	r2, r3
 1132 0184 634B     		ldr	r3, .L85+36
 1133 0186 1A70     		strb	r2, [r3]
 416:main.c        ****                     USBUART_PutChar(input);
 1134              		.loc 1 416 0
 1135 0188 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1136 018a 1846     		mov	r0, r3
 1137 018c FFF7FEFF 		bl	USBUART_PutChar
 417:main.c        ****                     ++inCount;
 1138              		.loc 1 417 0
 1139 0190 7B68     		ldr	r3, [r7, #4]
 1140 0192 0133     		adds	r3, r3, #1
 1141 0194 7B60     		str	r3, [r7, #4]
 1142 0196 13E0     		b	.L55
 1143              	.L67:
 418:main.c        ****                 }else if (inCount == 2){
 1144              		.loc 1 418 0
 1145 0198 7B68     		ldr	r3, [r7, #4]
 1146 019a 022B     		cmp	r3, #2
 1147 019c 10D1     		bne	.L55
 419:main.c        ****                     transmitAddress  += input - (0x30);   
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 29


 1148              		.loc 1 419 0
 1149 019e 5D4B     		ldr	r3, .L85+36
 1150 01a0 1B78     		ldrb	r3, [r3]
 1151 01a2 DAB2     		uxtb	r2, r3
 1152 01a4 FB78     		ldrb	r3, [r7, #3]
 1153 01a6 1344     		add	r3, r3, r2
 1154 01a8 DBB2     		uxtb	r3, r3
 1155 01aa 303B     		subs	r3, r3, #48
 1156 01ac DAB2     		uxtb	r2, r3
 1157 01ae 594B     		ldr	r3, .L85+36
 1158 01b0 1A70     		strb	r2, [r3]
 420:main.c        ****                     USBUART_PutChar(input);
 1159              		.loc 1 420 0
 1160 01b2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1161 01b4 1846     		mov	r0, r3
 1162 01b6 FFF7FEFF 		bl	USBUART_PutChar
 421:main.c        ****                     ++inCount;
 1163              		.loc 1 421 0
 1164 01ba 7B68     		ldr	r3, [r7, #4]
 1165 01bc 0133     		adds	r3, r3, #1
 1166 01be 7B60     		str	r3, [r7, #4]
 1167              	.L55:
 387:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1168              		.loc 1 387 0
 1169 01c0 7B68     		ldr	r3, [r7, #4]
 1170 01c2 022B     		cmp	r3, #2
 1171 01c4 7FF76BAF 		ble	.L56
 1172              	.L66:
 422:main.c        ****                 }
 423:main.c        ****                 
 424:main.c        ****             }
 425:main.c        ****             if (!transmitMode) {
 1173              		.loc 1 425 0
 1174 01c8 514B     		ldr	r3, .L85+32
 1175 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 01cc 83F00103 		eor	r3, r3, #1
 1177 01d0 DBB2     		uxtb	r3, r3
 1178 01d2 002B     		cmp	r3, #0
 1179 01d4 40F0D580 		bne	.L84
 426:main.c        ****                 continue;
 427:main.c        ****             }
 428:main.c        **** 
 429:main.c        ****             while(!USBUART_CDCIsReady());
 1180              		.loc 1 429 0
 1181 01d8 00BF     		nop
 1182              	.L71:
 1183              		.loc 1 429 0 is_stmt 0 discriminator 1
 1184 01da FFF7FEFF 		bl	USBUART_CDCIsReady
 1185 01de 0346     		mov	r3, r0
 1186 01e0 002B     		cmp	r3, #0
 1187 01e2 FAD0     		beq	.L71
 430:main.c        ****             USBUART_PutCRLF();
 1188              		.loc 1 430 0 is_stmt 1
 1189 01e4 FFF7FEFF 		bl	USBUART_PutCRLF
 431:main.c        ****             while(!USBUART_CDCIsReady());
 1190              		.loc 1 431 0
 1191 01e8 00BF     		nop
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 30


 1192              	.L72:
 1193              		.loc 1 431 0 is_stmt 0 discriminator 1
 1194 01ea FFF7FEFF 		bl	USBUART_CDCIsReady
 1195 01ee 0346     		mov	r3, r0
 1196 01f0 002B     		cmp	r3, #0
 1197 01f2 FAD0     		beq	.L72
 432:main.c        ****             USBUART_PutString("Enter message: ");
 1198              		.loc 1 432 0 is_stmt 1
 1199 01f4 4B48     		ldr	r0, .L85+52
 1200 01f6 FFF7FEFF 		bl	USBUART_PutString
 433:main.c        ****             inCount = 7; 
 1201              		.loc 1 433 0
 1202 01fa 0723     		movs	r3, #7
 1203 01fc 7B60     		str	r3, [r7, #4]
 434:main.c        ****             input = 0; 
 1204              		.loc 1 434 0
 1205 01fe 0023     		movs	r3, #0
 1206 0200 FB70     		strb	r3, [r7, #3]
 435:main.c        **** 
 436:main.c        ****             
 437:main.c        ****             buffer[0] = 0x00; // Start of header
 1207              		.loc 1 437 0
 1208 0202 494B     		ldr	r3, .L85+56
 1209 0204 0022     		movs	r2, #0
 1210 0206 1A70     		strb	r2, [r3]
 438:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 1211              		.loc 1 438 0
 1212 0208 474B     		ldr	r3, .L85+56
 1213 020a 0122     		movs	r2, #1
 1214 020c 5A70     		strb	r2, [r3, #1]
 439:main.c        ****             buffer[2] = ADDR1Start; // Source address
 1215              		.loc 1 439 0
 1216 020e 464B     		ldr	r3, .L85+56
 1217 0210 2E22     		movs	r2, #46
 1218 0212 9A70     		strb	r2, [r3, #2]
 440:main.c        ****             buffer[3] = transmitAddress; // Destination address
 1219              		.loc 1 440 0
 1220 0214 3F4B     		ldr	r3, .L85+36
 1221 0216 1B78     		ldrb	r3, [r3]
 1222 0218 DAB2     		uxtb	r2, r3
 1223 021a 434B     		ldr	r3, .L85+56
 1224 021c DA70     		strb	r2, [r3, #3]
 441:main.c        ****             buffer[4] = 0x00; // CRC disabled
 1225              		.loc 1 441 0
 1226 021e 424B     		ldr	r3, .L85+56
 1227 0220 0022     		movs	r2, #0
 1228 0222 1A71     		strb	r2, [r3, #4]
 442:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 1229              		.loc 1 442 0
 1230 0224 404B     		ldr	r3, .L85+56
 1231 0226 8022     		movs	r2, #128
 1232 0228 5A71     		strb	r2, [r3, #5]
 443:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 1233              		.loc 1 443 0
 1234 022a 3F4B     		ldr	r3, .L85+56
 1235 022c 7722     		movs	r2, #119
 1236 022e 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 31


 444:main.c        ****             
 445:main.c        ****             //Enter = 0x0D (carriage return or \r)
 446:main.c        ****             while(input != 0x0D){
 1237              		.loc 1 446 0
 1238 0230 22E0     		b	.L73
 1239              	.L76:
 447:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1240              		.loc 1 447 0
 1241 0232 00BF     		nop
 1242              	.L74:
 1243              		.loc 1 447 0 is_stmt 0 discriminator 1
 1244 0234 FFF7FEFF 		bl	USBUART_DataIsReady
 1245 0238 0346     		mov	r3, r0
 1246 023a 002B     		cmp	r3, #0
 1247 023c FAD0     		beq	.L74
 448:main.c        ****                 input = USBUART_GetChar();
 1248              		.loc 1 448 0 is_stmt 1
 1249 023e FFF7FEFF 		bl	USBUART_GetChar
 1250 0242 0346     		mov	r3, r0
 1251 0244 FB70     		strb	r3, [r7, #3]
 449:main.c        ****                 if(input != 0x0D){
 1252              		.loc 1 449 0
 1253 0246 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1254 0248 0D2B     		cmp	r3, #13
 1255 024a 15D0     		beq	.L73
 450:main.c        ****                     buffer[inCount] = input;
 1256              		.loc 1 450 0
 1257 024c 364A     		ldr	r2, .L85+56
 1258 024e 7B68     		ldr	r3, [r7, #4]
 1259 0250 1344     		add	r3, r3, r2
 1260 0252 FA78     		ldrb	r2, [r7, #3]
 1261 0254 1A70     		strb	r2, [r3]
 451:main.c        ****                     while(!USBUART_CDCIsReady());
 1262              		.loc 1 451 0
 1263 0256 00BF     		nop
 1264              	.L75:
 1265              		.loc 1 451 0 is_stmt 0 discriminator 1
 1266 0258 FFF7FEFF 		bl	USBUART_CDCIsReady
 1267 025c 0346     		mov	r3, r0
 1268 025e 002B     		cmp	r3, #0
 1269 0260 FAD0     		beq	.L75
 452:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 1270              		.loc 1 452 0 is_stmt 1
 1271 0262 314A     		ldr	r2, .L85+56
 1272 0264 7B68     		ldr	r3, [r7, #4]
 1273 0266 1344     		add	r3, r3, r2
 1274 0268 1B78     		ldrb	r3, [r3]
 1275 026a DBB2     		uxtb	r3, r3
 1276 026c 1846     		mov	r0, r3
 1277 026e FFF7FEFF 		bl	USBUART_PutChar
 453:main.c        ****                     ++inCount;
 1278              		.loc 1 453 0
 1279 0272 7B68     		ldr	r3, [r7, #4]
 1280 0274 0133     		adds	r3, r3, #1
 1281 0276 7B60     		str	r3, [r7, #4]
 1282              	.L73:
 446:main.c        ****                 while(USBUART_DataIsReady() == 0); 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 32


 1283              		.loc 1 446 0
 1284 0278 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1285 027a 0D2B     		cmp	r3, #13
 1286 027c D9D1     		bne	.L76
 454:main.c        ****                 }
 455:main.c        ****             }
 456:main.c        ****             buffer[4] = inCount - 7; // Removes CR character.
 1287              		.loc 1 456 0
 1288 027e 7B68     		ldr	r3, [r7, #4]
 1289 0280 DBB2     		uxtb	r3, r3
 1290 0282 073B     		subs	r3, r3, #7
 1291 0284 DAB2     		uxtb	r2, r3
 1292 0286 284B     		ldr	r3, .L85+56
 1293 0288 1A71     		strb	r2, [r3, #4]
 457:main.c        ****             if (buffer[4] > 44) {
 1294              		.loc 1 457 0
 1295 028a 274B     		ldr	r3, .L85+56
 1296 028c 1B79     		ldrb	r3, [r3, #4]
 1297 028e DBB2     		uxtb	r3, r3
 1298 0290 2C2B     		cmp	r3, #44
 1299 0292 09D9     		bls	.L77
 458:main.c        ****                 while(!USBUART_CDCIsReady());
 1300              		.loc 1 458 0
 1301 0294 00BF     		nop
 1302              	.L78:
 1303              		.loc 1 458 0 is_stmt 0 discriminator 1
 1304 0296 FFF7FEFF 		bl	USBUART_CDCIsReady
 1305 029a 0346     		mov	r3, r0
 1306 029c 002B     		cmp	r3, #0
 1307 029e FAD0     		beq	.L78
 459:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 1308              		.loc 1 459 0 is_stmt 1
 1309 02a0 2248     		ldr	r0, .L85+60
 1310 02a2 FFF7FEFF 		bl	USBUART_PutString
 460:main.c        ****                 continue;
 1311              		.loc 1 460 0
 1312 02a6 6DE0     		b	.L70
 1313              	.L77:
 461:main.c        ****             }
 462:main.c        **** 
 463:main.c        ****             dataSize = inCount;
 1314              		.loc 1 463 0
 1315 02a8 214A     		ldr	r2, .L85+64
 1316 02aa 7B68     		ldr	r3, [r7, #4]
 1317 02ac 1360     		str	r3, [r2]
 464:main.c        ****             position = 0; // Reset position in transmit interrupt
 1318              		.loc 1 464 0
 1319 02ae 214B     		ldr	r3, .L85+68
 1320 02b0 0022     		movs	r2, #0
 1321 02b2 1A60     		str	r2, [r3]
 465:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 1322              		.loc 1 465 0
 1323 02b4 1C4A     		ldr	r2, .L85+56
 1324 02b6 7B68     		ldr	r3, [r7, #4]
 1325 02b8 1344     		add	r3, r3, r2
 1326 02ba 7722     		movs	r2, #119
 1327 02bc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 33


 466:main.c        ****             dataSize++;
 1328              		.loc 1 466 0
 1329 02be 1C4B     		ldr	r3, .L85+64
 1330 02c0 1B68     		ldr	r3, [r3]
 1331 02c2 0133     		adds	r3, r3, #1
 1332 02c4 1A4A     		ldr	r2, .L85+64
 1333 02c6 1360     		str	r3, [r2]
 467:main.c        ****             TimerTX_Start();
 1334              		.loc 1 467 0
 1335 02c8 FFF7FEFF 		bl	TimerTX_Start
 468:main.c        ****             while (position < dataSize);
 1336              		.loc 1 468 0
 1337 02cc 00BF     		nop
 1338              	.L79:
 1339              		.loc 1 468 0 is_stmt 0 discriminator 1
 1340 02ce 194B     		ldr	r3, .L85+68
 1341 02d0 1A68     		ldr	r2, [r3]
 1342 02d2 174B     		ldr	r3, .L85+64
 1343 02d4 1B68     		ldr	r3, [r3]
 1344 02d6 9A42     		cmp	r2, r3
 1345 02d8 F9DB     		blt	.L79
 469:main.c        ****             TimerTX_Stop();
 1346              		.loc 1 469 0 is_stmt 1
 1347 02da FFF7FEFF 		bl	TimerTX_Stop
 470:main.c        ****             while(!USBUART_CDCIsReady());
 1348              		.loc 1 470 0
 1349 02de 00BF     		nop
 1350              	.L80:
 1351              		.loc 1 470 0 is_stmt 0 discriminator 1
 1352 02e0 FFF7FEFF 		bl	USBUART_CDCIsReady
 1353 02e4 0346     		mov	r3, r0
 1354 02e6 002B     		cmp	r3, #0
 1355 02e8 FAD0     		beq	.L80
 471:main.c        ****             USBUART_PutCRLF(); 
 1356              		.loc 1 471 0 is_stmt 1
 1357 02ea FFF7FEFF 		bl	USBUART_PutCRLF
 1358              	.LBE4:
 1359 02ee BEE6     		b	.L83
 1360              	.L86:
 1361              		.align	2
 1362              	.L85:
 1363 02f0 00000000 		.word	TimerInterruptHandler
 1364 02f4 00000000 		.word	RisingEdgeInterruptHandler
 1365 02f8 00000000 		.word	FallingEdgeInterruptHandler
 1366 02fc 00000000 		.word	ReceiveInterruptHandler
 1367 0300 00000000 		.word	TransmitInterruptHandler
 1368 0304 00000000 		.word	CollisionDelayInterruptHandler
 1369 0308 00000000 		.word	USBUART_device
 1370 030c 00000000 		.word	systemState
 1371 0310 00000000 		.word	transmitMode
 1372 0314 00000000 		.word	transmitAddress
 1373 0318 00000000 		.word	.LC0
 1374 031c 00000000 		.word	__ctype_ptr__
 1375 0320 38000000 		.word	.LC1
 1376 0324 60000000 		.word	.LC2
 1377 0328 00000000 		.word	buffer
 1378 032c 70000000 		.word	.LC3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 34


 1379 0330 00000000 		.word	dataSize
 1380 0334 00000000 		.word	position
 1381              	.L53:
 472:main.c        ****             
 473:main.c        ****         } else { // Receive mode
 474:main.c        ****             checkForNewData();
 1382              		.loc 1 474 0
 1383 0338 FFF7FEFF 		bl	checkForNewData
 475:main.c        ****             stateDiagram();
 1384              		.loc 1 475 0
 1385 033c FFF7FEFF 		bl	stateDiagram
 476:main.c        ****             if (USBUART_DataIsReady()) { 
 1386              		.loc 1 476 0
 1387 0340 FFF7FEFF 		bl	USBUART_DataIsReady
 1388 0344 0346     		mov	r3, r0
 1389 0346 002B     		cmp	r3, #0
 1390 0348 3FF491AE 		beq	.L83
 1391              	.LBB6:
 477:main.c        ****                 char input;
 478:main.c        ****                 input = USBUART_GetChar();
 1392              		.loc 1 478 0
 1393 034c FFF7FEFF 		bl	USBUART_GetChar
 1394 0350 0346     		mov	r3, r0
 1395 0352 BB70     		strb	r3, [r7, #2]
 1396              	.LBB7:
 479:main.c        ****                 if (toupper(input) == 'T') {
 1397              		.loc 1 479 0
 1398 0354 BB78     		ldrb	r3, [r7, #2]
 1399 0356 7B70     		strb	r3, [r7, #1]
 1400 0358 0B4B     		ldr	r3, .L87
 1401 035a 1A68     		ldr	r2, [r3]
 1402 035c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1403 035e 0133     		adds	r3, r3, #1
 1404 0360 1344     		add	r3, r3, r2
 1405 0362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1406 0364 03F00303 		and	r3, r3, #3
 1407 0368 022B     		cmp	r3, #2
 1408 036a 02D1     		bne	.L81
 1409              		.loc 1 479 0 is_stmt 0 discriminator 1
 1410 036c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1411 036e 203B     		subs	r3, r3, #32
 1412 0370 00E0     		b	.L82
 1413              	.L81:
 1414              		.loc 1 479 0 discriminator 2
 1415 0372 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1416              	.L82:
 1417              	.LBE7:
 1418              		.loc 1 479 0 discriminator 4
 1419 0374 542B     		cmp	r3, #84
 1420 0376 7FF47AAE 		bne	.L83
 480:main.c        ****                     transmitMode = true;
 1421              		.loc 1 480 0 is_stmt 1
 1422 037a 044B     		ldr	r3, .L87+4
 1423 037c 0122     		movs	r2, #1
 1424 037e 1A70     		strb	r2, [r3]
 1425 0380 75E6     		b	.L83
 1426              	.L84:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 35


 1427              	.LBE6:
 1428              	.LBB8:
 426:main.c        ****             }
 1429              		.loc 1 426 0
 1430 0382 00BF     		nop
 1431              	.L70:
 1432              	.LBE8:
 481:main.c        ****                 }
 482:main.c        ****             }
 483:main.c        ****         }
 484:main.c        ****     }
 1433              		.loc 1 484 0
 1434 0384 73E6     		b	.L83
 1435              	.L88:
 1436 0386 00BF     		.align	2
 1437              	.L87:
 1438 0388 00000000 		.word	__ctype_ptr__
 1439 038c 00000000 		.word	transmitMode
 1440              		.cfi_endproc
 1441              	.LFE71:
 1442              		.size	main, .-main
 1443              		.section	.text.stateDiagram,"ax",%progbits
 1444              		.align	2
 1445              		.global	stateDiagram
 1446              		.thumb
 1447              		.thumb_func
 1448              		.type	stateDiagram, %function
 1449              	stateDiagram:
 1450              	.LFB72:
 485:main.c        **** }
 486:main.c        **** 
 487:main.c        **** void stateDiagram(){
 1451              		.loc 1 487 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 0
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455 0000 80B5     		push	{r7, lr}
 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 7, -8
 1458              		.cfi_offset 14, -4
 1459 0002 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 488:main.c        ****     switch(systemState){      
 1461              		.loc 1 488 0
 1462 0004 314B     		ldr	r3, .L95
 1463 0006 1B78     		ldrb	r3, [r3]
 1464 0008 DBB2     		uxtb	r3, r3
 1465 000a 012B     		cmp	r3, #1
 1466 000c 41D0     		beq	.L91
 1467 000e 022B     		cmp	r3, #2
 1468 0010 25D0     		beq	.L92
 1469 0012 002B     		cmp	r3, #0
 1470 0014 00D0     		beq	.L93
 489:main.c        ****         case IDLE :;
 490:main.c        ****             IDLE_Write(1);
 491:main.c        ****             BUSY_Write(!IDLE_Read());
 492:main.c        ****             COLLISION_Write(!IDLE_Read());
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 36


 493:main.c        ****             
 494:main.c        ****             dataBitsRead = 0;
 495:main.c        ****             receivePosition = 0;
 496:main.c        ****             addressZeroReceive = 0;
 497:main.c        ****         break;
 498:main.c        **** 
 499:main.c        ****         case BUSY:
 500:main.c        ****             BUSY_Write(1);
 501:main.c        ****             IDLE_Write(!BUSY_Read());
 502:main.c        ****             COLLISION_Write(!BUSY_Read());
 503:main.c        ****         break;
 504:main.c        **** 
 505:main.c        ****         case COLLISION:;
 506:main.c        ****             COLLISION_Write(1);
 507:main.c        ****             IDLE_Write(!COLLISION_Read());
 508:main.c        ****             BUSY_Write(!COLLISION_Read());
 509:main.c        ****         break;
 510:main.c        ****     }   
 511:main.c        **** }
 1471              		.loc 1 511 0
 1472 0016 56E0     		b	.L94
 1473              	.L93:
 490:main.c        ****             BUSY_Write(!IDLE_Read());
 1474              		.loc 1 490 0
 1475 0018 0120     		movs	r0, #1
 1476 001a FFF7FEFF 		bl	IDLE_Write
 491:main.c        ****             COLLISION_Write(!IDLE_Read());
 1477              		.loc 1 491 0
 1478 001e FFF7FEFF 		bl	IDLE_Read
 1479 0022 0346     		mov	r3, r0
 1480 0024 002B     		cmp	r3, #0
 1481 0026 0CBF     		ite	eq
 1482 0028 0123     		moveq	r3, #1
 1483 002a 0023     		movne	r3, #0
 1484 002c DBB2     		uxtb	r3, r3
 1485 002e 1846     		mov	r0, r3
 1486 0030 FFF7FEFF 		bl	BUSY_Write
 492:main.c        ****             
 1487              		.loc 1 492 0
 1488 0034 FFF7FEFF 		bl	IDLE_Read
 1489 0038 0346     		mov	r3, r0
 1490 003a 002B     		cmp	r3, #0
 1491 003c 0CBF     		ite	eq
 1492 003e 0123     		moveq	r3, #1
 1493 0040 0023     		movne	r3, #0
 1494 0042 DBB2     		uxtb	r3, r3
 1495 0044 1846     		mov	r0, r3
 1496 0046 FFF7FEFF 		bl	COLLISION_Write
 494:main.c        ****             receivePosition = 0;
 1497              		.loc 1 494 0
 1498 004a 214B     		ldr	r3, .L95+4
 1499 004c 0022     		movs	r2, #0
 1500 004e 1A60     		str	r2, [r3]
 495:main.c        ****             addressZeroReceive = 0;
 1501              		.loc 1 495 0
 1502 0050 204B     		ldr	r3, .L95+8
 1503 0052 0022     		movs	r2, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 37


 1504 0054 1A60     		str	r2, [r3]
 496:main.c        ****         break;
 1505              		.loc 1 496 0
 1506 0056 204B     		ldr	r3, .L95+12
 1507 0058 0022     		movs	r2, #0
 1508 005a 1A60     		str	r2, [r3]
 497:main.c        **** 
 1509              		.loc 1 497 0
 1510 005c 33E0     		b	.L90
 1511              	.L92:
 500:main.c        ****             IDLE_Write(!BUSY_Read());
 1512              		.loc 1 500 0
 1513 005e 0120     		movs	r0, #1
 1514 0060 FFF7FEFF 		bl	BUSY_Write
 501:main.c        ****             COLLISION_Write(!BUSY_Read());
 1515              		.loc 1 501 0
 1516 0064 FFF7FEFF 		bl	BUSY_Read
 1517 0068 0346     		mov	r3, r0
 1518 006a 002B     		cmp	r3, #0
 1519 006c 0CBF     		ite	eq
 1520 006e 0123     		moveq	r3, #1
 1521 0070 0023     		movne	r3, #0
 1522 0072 DBB2     		uxtb	r3, r3
 1523 0074 1846     		mov	r0, r3
 1524 0076 FFF7FEFF 		bl	IDLE_Write
 502:main.c        ****         break;
 1525              		.loc 1 502 0
 1526 007a FFF7FEFF 		bl	BUSY_Read
 1527 007e 0346     		mov	r3, r0
 1528 0080 002B     		cmp	r3, #0
 1529 0082 0CBF     		ite	eq
 1530 0084 0123     		moveq	r3, #1
 1531 0086 0023     		movne	r3, #0
 1532 0088 DBB2     		uxtb	r3, r3
 1533 008a 1846     		mov	r0, r3
 1534 008c FFF7FEFF 		bl	COLLISION_Write
 503:main.c        **** 
 1535              		.loc 1 503 0
 1536 0090 19E0     		b	.L90
 1537              	.L91:
 506:main.c        ****             IDLE_Write(!COLLISION_Read());
 1538              		.loc 1 506 0
 1539 0092 0120     		movs	r0, #1
 1540 0094 FFF7FEFF 		bl	COLLISION_Write
 507:main.c        ****             BUSY_Write(!COLLISION_Read());
 1541              		.loc 1 507 0
 1542 0098 FFF7FEFF 		bl	COLLISION_Read
 1543 009c 0346     		mov	r3, r0
 1544 009e 002B     		cmp	r3, #0
 1545 00a0 0CBF     		ite	eq
 1546 00a2 0123     		moveq	r3, #1
 1547 00a4 0023     		movne	r3, #0
 1548 00a6 DBB2     		uxtb	r3, r3
 1549 00a8 1846     		mov	r0, r3
 1550 00aa FFF7FEFF 		bl	IDLE_Write
 508:main.c        ****         break;
 1551              		.loc 1 508 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 38


 1552 00ae FFF7FEFF 		bl	COLLISION_Read
 1553 00b2 0346     		mov	r3, r0
 1554 00b4 002B     		cmp	r3, #0
 1555 00b6 0CBF     		ite	eq
 1556 00b8 0123     		moveq	r3, #1
 1557 00ba 0023     		movne	r3, #0
 1558 00bc DBB2     		uxtb	r3, r3
 1559 00be 1846     		mov	r0, r3
 1560 00c0 FFF7FEFF 		bl	BUSY_Write
 509:main.c        ****     }   
 1561              		.loc 1 509 0
 1562 00c4 00BF     		nop
 1563              	.L90:
 1564              	.L94:
 1565              		.loc 1 511 0
 1566 00c6 00BF     		nop
 1567 00c8 80BD     		pop	{r7, pc}
 1568              	.L96:
 1569 00ca 00BF     		.align	2
 1570              	.L95:
 1571 00cc 00000000 		.word	systemState
 1572 00d0 00000000 		.word	dataBitsRead
 1573 00d4 00000000 		.word	receivePosition
 1574 00d8 00000000 		.word	addressZeroReceive
 1575              		.cfi_endproc
 1576              	.LFE72:
 1577              		.size	stateDiagram, .-stateDiagram
 1578              		.section	.rodata
 1579 009b 00       		.align	2
 1580              	.LC4:
 1581 009c 4D657373 		.ascii	"Message From: \000"
 1581      61676520 
 1581      46726F6D 
 1581      3A2000
 1582 00ab 00       		.align	2
 1583              	.LC5:
 1584 00ac 53656E74 		.ascii	"Sent To: \000"
 1584      20546F3A 
 1584      2000
 1585 00b6 0000     		.align	2
 1586              	.LC6:
 1587 00b8 42435354 		.ascii	"BCST \000"
 1587      2000
 1588 00be 0000     		.align	2
 1589              	.LC7:
 1590 00c0 53697A65 		.ascii	"Size: \000"
 1590      3A2000
 1591 00c7 00       		.align	2
 1592              	.LC8:
 1593 00c8 4D657373 		.ascii	"Message: \000"
 1593      6167653A 
 1593      2000
 1594              		.section	.text.checkForNewData,"ax",%progbits
 1595              		.align	2
 1596              		.global	checkForNewData
 1597              		.thumb
 1598              		.thumb_func
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 39


 1599              		.type	checkForNewData, %function
 1600              	checkForNewData:
 1601              	.LFB73:
 512:main.c        **** 
 513:main.c        **** /**
 514:main.c        **** */
 515:main.c        **** void checkForNewData(){
 1602              		.loc 1 515 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606 0000 80B5     		push	{r7, lr}
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 7, -8
 1609              		.cfi_offset 14, -4
 1610 0002 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
 516:main.c        ****     if(USBUART_CDCIsReady() != 0){
 1612              		.loc 1 516 0
 1613 0004 FFF7FEFF 		bl	USBUART_CDCIsReady
 1614 0008 0346     		mov	r3, r0
 1615 000a 002B     		cmp	r3, #0
 1616 000c 00F0F081 		beq	.L131
 517:main.c        ****         while(dataBitsRead < receivePosition){
 1617              		.loc 1 517 0
 1618 0010 E7E1     		b	.L99
 1619              	.L130:
 518:main.c        ****             if(dataBitsRead <= 6){
 1620              		.loc 1 518 0
 1621 0012 724B     		ldr	r3, .L134
 1622 0014 1B68     		ldr	r3, [r3]
 1623 0016 062B     		cmp	r3, #6
 1624 0018 1ADC     		bgt	.L100
 519:main.c        ****     //            if(receiveBuffer[0] == 0x00){
 520:main.c        ****     //                startHeaderReceieved = 1;
 521:main.c        ****     //            }
 522:main.c        ****     //            if(receiveBuffer[1] == 0x01){
 523:main.c        ****     //                    verNumMatch = 1;
 524:main.c        ****     //           }
 525:main.c        ****                 sourceAddress = receiveBuffer[2];
 1625              		.loc 1 525 0
 1626 001a 714B     		ldr	r3, .L134+4
 1627 001c 9B78     		ldrb	r3, [r3, #2]
 1628 001e DAB2     		uxtb	r2, r3
 1629 0020 704B     		ldr	r3, .L134+8
 1630 0022 1A70     		strb	r2, [r3]
 526:main.c        ****                 destinationAddress = receiveBuffer[3];
 1631              		.loc 1 526 0
 1632 0024 6E4B     		ldr	r3, .L134+4
 1633 0026 DB78     		ldrb	r3, [r3, #3]
 1634 0028 DAB2     		uxtb	r2, r3
 1635 002a 6F4B     		ldr	r3, .L134+12
 1636 002c 1A70     		strb	r2, [r3]
 527:main.c        ****                 messageLength = receiveBuffer[4];
 1637              		.loc 1 527 0
 1638 002e 6C4B     		ldr	r3, .L134+4
 1639 0030 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 40


 1640 0032 DBB2     		uxtb	r3, r3
 1641 0034 1A46     		mov	r2, r3
 1642 0036 6D4B     		ldr	r3, .L134+16
 1643 0038 1A60     		str	r2, [r3]
 528:main.c        ****                 crcUsage = receiveBuffer[5];
 1644              		.loc 1 528 0
 1645 003a 694B     		ldr	r3, .L134+4
 1646 003c 5B79     		ldrb	r3, [r3, #5]
 1647 003e DAB2     		uxtb	r2, r3
 1648 0040 6B4B     		ldr	r3, .L134+20
 1649 0042 1A70     		strb	r2, [r3]
 529:main.c        ****                 headerCRC = receiveBuffer[6];            
 1650              		.loc 1 529 0
 1651 0044 664B     		ldr	r3, .L134+4
 1652 0046 9B79     		ldrb	r3, [r3, #6]
 1653 0048 DAB2     		uxtb	r2, r3
 1654 004a 6A4B     		ldr	r3, .L134+24
 1655 004c 1A70     		strb	r2, [r3]
 1656 004e C3E1     		b	.L101
 1657              	.L100:
 530:main.c        ****             } else {
 531:main.c        **** //                if (true) {
 532:main.c        ****                 if(destinationAddress == BROADCAST_ADDRESS || 
 1658              		.loc 1 532 0
 1659 0050 654B     		ldr	r3, .L134+12
 1660 0052 1B78     		ldrb	r3, [r3]
 1661 0054 DBB2     		uxtb	r3, r3
 1662 0056 002B     		cmp	r3, #0
 1663 0058 1FD0     		beq	.L102
 533:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1664              		.loc 1 533 0 discriminator 1
 1665 005a 634B     		ldr	r3, .L134+12
 1666 005c 1B78     		ldrb	r3, [r3]
 1667 005e DBB2     		uxtb	r3, r3
 532:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1668              		.loc 1 532 0 discriminator 1
 1669 0060 2D2B     		cmp	r3, #45
 1670 0062 04D9     		bls	.L103
 1671              		.loc 1 533 0
 1672 0064 604B     		ldr	r3, .L134+12
 1673 0066 1B78     		ldrb	r3, [r3]
 1674 0068 DBB2     		uxtb	r3, r3
 1675 006a 302B     		cmp	r3, #48
 1676 006c 15D9     		bls	.L102
 1677              	.L103:
 534:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 1678              		.loc 1 534 0 discriminator 1
 1679 006e 5E4B     		ldr	r3, .L134+12
 1680 0070 1B78     		ldrb	r3, [r3]
 1681 0072 DBB2     		uxtb	r3, r3
 533:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 1682              		.loc 1 533 0 discriminator 1
 1683 0074 362B     		cmp	r3, #54
 1684 0076 04D9     		bls	.L104
 1685              		.loc 1 534 0
 1686 0078 5B4B     		ldr	r3, .L134+12
 1687 007a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 41


 1688 007c DBB2     		uxtb	r3, r3
 1689 007e 392B     		cmp	r3, #57
 1690 0080 0BD9     		bls	.L102
 1691              	.L104:
 535:main.c        ****                 ((destinationAddress >= ADDR3Start) && (destinationAddress <= ADDR3Start+ADDRLength
 1692              		.loc 1 535 0 discriminator 1
 1693 0082 594B     		ldr	r3, .L134+12
 1694 0084 1B78     		ldrb	r3, [r3]
 1695 0086 DBB2     		uxtb	r3, r3
 534:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 1696              		.loc 1 534 0 discriminator 1
 1697 0088 7B2B     		cmp	r3, #123
 1698 008a 40F2A581 		bls	.L101
 1699              		.loc 1 535 0
 1700 008e 564B     		ldr	r3, .L134+12
 1701 0090 1B78     		ldrb	r3, [r3]
 1702 0092 DBB2     		uxtb	r3, r3
 1703 0094 7E2B     		cmp	r3, #126
 1704 0096 00F29F81 		bhi	.L101
 1705              	.L102:
 536:main.c        ****                    if(addressZeroReceive == 0){
 1706              		.loc 1 536 0
 1707 009a 574B     		ldr	r3, .L134+28
 1708 009c 1B68     		ldr	r3, [r3]
 1709 009e 002B     		cmp	r3, #0
 1710 00a0 40F08A81 		bne	.L105
 537:main.c        ****                         while(!USBUART_CDCIsReady());
 1711              		.loc 1 537 0
 1712 00a4 00BF     		nop
 1713              	.L106:
 1714              		.loc 1 537 0 is_stmt 0 discriminator 1
 1715 00a6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1716 00aa 0346     		mov	r3, r0
 1717 00ac 002B     		cmp	r3, #0
 1718 00ae FAD0     		beq	.L106
 538:main.c        ****                         USBUART_PutCRLF();
 1719              		.loc 1 538 0 is_stmt 1
 1720 00b0 FFF7FEFF 		bl	USBUART_PutCRLF
 539:main.c        ****                         while(!USBUART_CDCIsReady());
 1721              		.loc 1 539 0
 1722 00b4 00BF     		nop
 1723              	.L107:
 1724              		.loc 1 539 0 is_stmt 0 discriminator 1
 1725 00b6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1726 00ba 0346     		mov	r3, r0
 1727 00bc 002B     		cmp	r3, #0
 1728 00be FAD0     		beq	.L107
 540:main.c        ****                         USBUART_PutCRLF();
 1729              		.loc 1 540 0 is_stmt 1
 1730 00c0 FFF7FEFF 		bl	USBUART_PutCRLF
 541:main.c        ****                         while(!USBUART_CDCIsReady());
 1731              		.loc 1 541 0
 1732 00c4 00BF     		nop
 1733              	.L108:
 1734              		.loc 1 541 0 is_stmt 0 discriminator 1
 1735 00c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1736 00ca 0346     		mov	r3, r0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 42


 1737 00cc 002B     		cmp	r3, #0
 1738 00ce FAD0     		beq	.L108
 542:main.c        ****                         USBUART_PutCRLF(); 
 1739              		.loc 1 542 0 is_stmt 1
 1740 00d0 FFF7FEFF 		bl	USBUART_PutCRLF
 543:main.c        ****                         while(!USBUART_CDCIsReady());
 1741              		.loc 1 543 0
 1742 00d4 00BF     		nop
 1743              	.L109:
 1744              		.loc 1 543 0 is_stmt 0 discriminator 1
 1745 00d6 FFF7FEFF 		bl	USBUART_CDCIsReady
 1746 00da 0346     		mov	r3, r0
 1747 00dc 002B     		cmp	r3, #0
 1748 00de FAD0     		beq	.L109
 544:main.c        ****                         USBUART_PutString("Message From: ");
 1749              		.loc 1 544 0 is_stmt 1
 1750 00e0 4648     		ldr	r0, .L134+32
 1751 00e2 FFF7FEFF 		bl	USBUART_PutString
 545:main.c        ****                         while(!USBUART_CDCIsReady());
 1752              		.loc 1 545 0
 1753 00e6 00BF     		nop
 1754              	.L110:
 1755              		.loc 1 545 0 is_stmt 0 discriminator 1
 1756 00e8 FFF7FEFF 		bl	USBUART_CDCIsReady
 1757 00ec 0346     		mov	r3, r0
 1758 00ee 002B     		cmp	r3, #0
 1759 00f0 FAD0     		beq	.L110
 546:main.c        **** 
 547:main.c        ****                         USBUART_PutChar(((sourceAddress)/100)+0x30);
 1760              		.loc 1 547 0 is_stmt 1
 1761 00f2 3C4B     		ldr	r3, .L134+8
 1762 00f4 1B78     		ldrb	r3, [r3]
 1763 00f6 DBB2     		uxtb	r3, r3
 1764 00f8 414A     		ldr	r2, .L134+36
 1765 00fa A2FB0323 		umull	r2, r3, r2, r3
 1766 00fe 5B09     		lsrs	r3, r3, #5
 1767 0100 DBB2     		uxtb	r3, r3
 1768 0102 3033     		adds	r3, r3, #48
 1769 0104 DBB2     		uxtb	r3, r3
 1770 0106 1846     		mov	r0, r3
 1771 0108 FFF7FEFF 		bl	USBUART_PutChar
 548:main.c        **** 
 549:main.c        ****                         while(!USBUART_CDCIsReady());
 1772              		.loc 1 549 0
 1773 010c 00BF     		nop
 1774              	.L111:
 1775              		.loc 1 549 0 is_stmt 0 discriminator 1
 1776 010e FFF7FEFF 		bl	USBUART_CDCIsReady
 1777 0112 0346     		mov	r3, r0
 1778 0114 002B     		cmp	r3, #0
 1779 0116 FAD0     		beq	.L111
 550:main.c        ****                         USBUART_PutChar(((sourceAddress/10)%10)+0x30);
 1780              		.loc 1 550 0 is_stmt 1
 1781 0118 324B     		ldr	r3, .L134+8
 1782 011a 1B78     		ldrb	r3, [r3]
 1783 011c DBB2     		uxtb	r3, r3
 1784 011e 394A     		ldr	r2, .L134+40
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 43


 1785 0120 A2FB0323 		umull	r2, r3, r2, r3
 1786 0124 DB08     		lsrs	r3, r3, #3
 1787 0126 DAB2     		uxtb	r2, r3
 1788 0128 364B     		ldr	r3, .L134+40
 1789 012a A3FB0213 		umull	r1, r3, r3, r2
 1790 012e D908     		lsrs	r1, r3, #3
 1791 0130 0B46     		mov	r3, r1
 1792 0132 9B00     		lsls	r3, r3, #2
 1793 0134 0B44     		add	r3, r3, r1
 1794 0136 5B00     		lsls	r3, r3, #1
 1795 0138 D31A     		subs	r3, r2, r3
 1796 013a DBB2     		uxtb	r3, r3
 1797 013c 3033     		adds	r3, r3, #48
 1798 013e DBB2     		uxtb	r3, r3
 1799 0140 1846     		mov	r0, r3
 1800 0142 FFF7FEFF 		bl	USBUART_PutChar
 551:main.c        ****                         while(!USBUART_CDCIsReady());
 1801              		.loc 1 551 0
 1802 0146 00BF     		nop
 1803              	.L112:
 1804              		.loc 1 551 0 is_stmt 0 discriminator 1
 1805 0148 FFF7FEFF 		bl	USBUART_CDCIsReady
 1806 014c 0346     		mov	r3, r0
 1807 014e 002B     		cmp	r3, #0
 1808 0150 FAD0     		beq	.L112
 552:main.c        ****              
 553:main.c        ****                         USBUART_PutChar(((sourceAddress%10)%10)+0x30);
 1809              		.loc 1 553 0 is_stmt 1
 1810 0152 244B     		ldr	r3, .L134+8
 1811 0154 1B78     		ldrb	r3, [r3]
 1812 0156 DAB2     		uxtb	r2, r3
 1813 0158 2A4B     		ldr	r3, .L134+40
 1814 015a A3FB0213 		umull	r1, r3, r3, r2
 1815 015e D908     		lsrs	r1, r3, #3
 1816 0160 0B46     		mov	r3, r1
 1817 0162 9B00     		lsls	r3, r3, #2
 1818 0164 0B44     		add	r3, r3, r1
 1819 0166 5B00     		lsls	r3, r3, #1
 1820 0168 D31A     		subs	r3, r2, r3
 1821 016a DAB2     		uxtb	r2, r3
 1822 016c 254B     		ldr	r3, .L134+40
 1823 016e A3FB0213 		umull	r1, r3, r3, r2
 1824 0172 D908     		lsrs	r1, r3, #3
 1825 0174 0B46     		mov	r3, r1
 1826 0176 9B00     		lsls	r3, r3, #2
 1827 0178 0B44     		add	r3, r3, r1
 1828 017a 5B00     		lsls	r3, r3, #1
 1829 017c D31A     		subs	r3, r2, r3
 1830 017e DBB2     		uxtb	r3, r3
 1831 0180 3033     		adds	r3, r3, #48
 1832 0182 DBB2     		uxtb	r3, r3
 1833 0184 1846     		mov	r0, r3
 1834 0186 FFF7FEFF 		bl	USBUART_PutChar
 554:main.c        ****                         while(!USBUART_CDCIsReady());
 1835              		.loc 1 554 0
 1836 018a 00BF     		nop
 1837              	.L113:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 44


 1838              		.loc 1 554 0 is_stmt 0 discriminator 1
 1839 018c FFF7FEFF 		bl	USBUART_CDCIsReady
 1840 0190 0346     		mov	r3, r0
 1841 0192 002B     		cmp	r3, #0
 1842 0194 FAD0     		beq	.L113
 555:main.c        ****                         USBUART_PutCRLF();
 1843              		.loc 1 555 0 is_stmt 1
 1844 0196 FFF7FEFF 		bl	USBUART_PutCRLF
 556:main.c        ****                         while(!USBUART_CDCIsReady());
 1845              		.loc 1 556 0
 1846 019a 00BF     		nop
 1847              	.L114:
 1848              		.loc 1 556 0 is_stmt 0 discriminator 1
 1849 019c FFF7FEFF 		bl	USBUART_CDCIsReady
 1850 01a0 0346     		mov	r3, r0
 1851 01a2 002B     		cmp	r3, #0
 1852 01a4 FAD0     		beq	.L114
 557:main.c        ****                         USBUART_PutString("Sent To: ");
 1853              		.loc 1 557 0 is_stmt 1
 1854 01a6 1848     		ldr	r0, .L134+44
 1855 01a8 FFF7FEFF 		bl	USBUART_PutString
 558:main.c        ****                         if(destinationAddress == BROADCAST_ADDRESS){
 1856              		.loc 1 558 0
 1857 01ac 0E4B     		ldr	r3, .L134+12
 1858 01ae 1B78     		ldrb	r3, [r3]
 1859 01b0 DBB2     		uxtb	r3, r3
 1860 01b2 002B     		cmp	r3, #0
 1861 01b4 2CD1     		bne	.L132
 559:main.c        ****                             while(!USBUART_CDCIsReady());
 1862              		.loc 1 559 0
 1863 01b6 00BF     		nop
 1864              	.L116:
 1865              		.loc 1 559 0 is_stmt 0 discriminator 1
 1866 01b8 FFF7FEFF 		bl	USBUART_CDCIsReady
 1867 01bc 0346     		mov	r3, r0
 1868 01be 002B     		cmp	r3, #0
 1869 01c0 FAD0     		beq	.L116
 560:main.c        ****                             USBUART_PutString("BCST ");
 1870              		.loc 1 560 0 is_stmt 1
 1871 01c2 1248     		ldr	r0, .L134+48
 1872 01c4 FFF7FEFF 		bl	USBUART_PutString
 561:main.c        ****                             while(!USBUART_CDCIsReady());
 1873              		.loc 1 561 0
 1874 01c8 00BF     		nop
 1875              	.L117:
 1876              		.loc 1 561 0 is_stmt 0 discriminator 1
 1877 01ca FFF7FEFF 		bl	USBUART_CDCIsReady
 1878 01ce 0346     		mov	r3, r0
 1879 01d0 002B     		cmp	r3, #0
 1880 01d2 FAD0     		beq	.L117
 562:main.c        ****                             USBUART_PutCRLF();
 1881              		.loc 1 562 0 is_stmt 1
 1882 01d4 FFF7FEFF 		bl	USBUART_PutCRLF
 1883 01d8 74E0     		b	.L133
 1884              	.L135:
 1885 01da 00BF     		.align	2
 1886              	.L134:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 45


 1887 01dc 00000000 		.word	dataBitsRead
 1888 01e0 00000000 		.word	receiveBuffer
 1889 01e4 00000000 		.word	sourceAddress
 1890 01e8 00000000 		.word	destinationAddress
 1891 01ec 00000000 		.word	messageLength
 1892 01f0 00000000 		.word	crcUsage
 1893 01f4 00000000 		.word	headerCRC
 1894 01f8 00000000 		.word	addressZeroReceive
 1895 01fc 9C000000 		.word	.LC4
 1896 0200 1F85EB51 		.word	1374389535
 1897 0204 CDCCCCCC 		.word	-858993459
 1898 0208 AC000000 		.word	.LC5
 1899 020c B8000000 		.word	.LC6
 1900              	.L132:
 563:main.c        ****                         }else{
 564:main.c        ****                             while(!USBUART_CDCIsReady());
 1901              		.loc 1 564 0
 1902 0210 00BF     		nop
 1903              	.L119:
 1904              		.loc 1 564 0 is_stmt 0 discriminator 1
 1905 0212 FFF7FEFF 		bl	USBUART_CDCIsReady
 1906 0216 0346     		mov	r3, r0
 1907 0218 002B     		cmp	r3, #0
 1908 021a FAD0     		beq	.L119
 565:main.c        ****              
 566:main.c        ****                             USBUART_PutChar(((destinationAddress)/100)+0x30);
 1909              		.loc 1 566 0 is_stmt 1
 1910 021c 754B     		ldr	r3, .L136
 1911 021e 1B78     		ldrb	r3, [r3]
 1912 0220 DBB2     		uxtb	r3, r3
 1913 0222 754A     		ldr	r2, .L136+4
 1914 0224 A2FB0323 		umull	r2, r3, r2, r3
 1915 0228 5B09     		lsrs	r3, r3, #5
 1916 022a DBB2     		uxtb	r3, r3
 1917 022c 3033     		adds	r3, r3, #48
 1918 022e DBB2     		uxtb	r3, r3
 1919 0230 1846     		mov	r0, r3
 1920 0232 FFF7FEFF 		bl	USBUART_PutChar
 567:main.c        **** 
 568:main.c        ****                             while(!USBUART_CDCIsReady());
 1921              		.loc 1 568 0
 1922 0236 00BF     		nop
 1923              	.L120:
 1924              		.loc 1 568 0 is_stmt 0 discriminator 1
 1925 0238 FFF7FEFF 		bl	USBUART_CDCIsReady
 1926 023c 0346     		mov	r3, r0
 1927 023e 002B     		cmp	r3, #0
 1928 0240 FAD0     		beq	.L120
 569:main.c        ****                             USBUART_PutChar(((destinationAddress/10)%10)+0x30);
 1929              		.loc 1 569 0 is_stmt 1
 1930 0242 6C4B     		ldr	r3, .L136
 1931 0244 1B78     		ldrb	r3, [r3]
 1932 0246 DBB2     		uxtb	r3, r3
 1933 0248 6C4A     		ldr	r2, .L136+8
 1934 024a A2FB0323 		umull	r2, r3, r2, r3
 1935 024e DB08     		lsrs	r3, r3, #3
 1936 0250 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 46


 1937 0252 6A4B     		ldr	r3, .L136+8
 1938 0254 A3FB0213 		umull	r1, r3, r3, r2
 1939 0258 D908     		lsrs	r1, r3, #3
 1940 025a 0B46     		mov	r3, r1
 1941 025c 9B00     		lsls	r3, r3, #2
 1942 025e 0B44     		add	r3, r3, r1
 1943 0260 5B00     		lsls	r3, r3, #1
 1944 0262 D31A     		subs	r3, r2, r3
 1945 0264 DBB2     		uxtb	r3, r3
 1946 0266 3033     		adds	r3, r3, #48
 1947 0268 DBB2     		uxtb	r3, r3
 1948 026a 1846     		mov	r0, r3
 1949 026c FFF7FEFF 		bl	USBUART_PutChar
 570:main.c        ****                             while(!USBUART_CDCIsReady());
 1950              		.loc 1 570 0
 1951 0270 00BF     		nop
 1952              	.L121:
 1953              		.loc 1 570 0 is_stmt 0 discriminator 1
 1954 0272 FFF7FEFF 		bl	USBUART_CDCIsReady
 1955 0276 0346     		mov	r3, r0
 1956 0278 002B     		cmp	r3, #0
 1957 027a FAD0     		beq	.L121
 571:main.c        ****                
 572:main.c        ****                             USBUART_PutChar(((destinationAddress%10)%10)+0x30);
 1958              		.loc 1 572 0 is_stmt 1
 1959 027c 5D4B     		ldr	r3, .L136
 1960 027e 1B78     		ldrb	r3, [r3]
 1961 0280 DAB2     		uxtb	r2, r3
 1962 0282 5E4B     		ldr	r3, .L136+8
 1963 0284 A3FB0213 		umull	r1, r3, r3, r2
 1964 0288 D908     		lsrs	r1, r3, #3
 1965 028a 0B46     		mov	r3, r1
 1966 028c 9B00     		lsls	r3, r3, #2
 1967 028e 0B44     		add	r3, r3, r1
 1968 0290 5B00     		lsls	r3, r3, #1
 1969 0292 D31A     		subs	r3, r2, r3
 1970 0294 DAB2     		uxtb	r2, r3
 1971 0296 594B     		ldr	r3, .L136+8
 1972 0298 A3FB0213 		umull	r1, r3, r3, r2
 1973 029c D908     		lsrs	r1, r3, #3
 1974 029e 0B46     		mov	r3, r1
 1975 02a0 9B00     		lsls	r3, r3, #2
 1976 02a2 0B44     		add	r3, r3, r1
 1977 02a4 5B00     		lsls	r3, r3, #1
 1978 02a6 D31A     		subs	r3, r2, r3
 1979 02a8 DBB2     		uxtb	r3, r3
 1980 02aa 3033     		adds	r3, r3, #48
 1981 02ac DBB2     		uxtb	r3, r3
 1982 02ae 1846     		mov	r0, r3
 1983 02b0 FFF7FEFF 		bl	USBUART_PutChar
 573:main.c        ****                             USBUART_PutCRLF();
 1984              		.loc 1 573 0
 1985 02b4 FFF7FEFF 		bl	USBUART_PutCRLF
 574:main.c        ****                             while(!USBUART_CDCIsReady());
 1986              		.loc 1 574 0
 1987 02b8 00BF     		nop
 1988              	.L122:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 47


 1989              		.loc 1 574 0 is_stmt 0 discriminator 1
 1990 02ba FFF7FEFF 		bl	USBUART_CDCIsReady
 1991 02be 0346     		mov	r3, r0
 1992 02c0 002B     		cmp	r3, #0
 1993 02c2 FAD0     		beq	.L122
 1994              	.L133:
 575:main.c        ****                         }
 576:main.c        ****                         while(!USBUART_CDCIsReady());
 1995              		.loc 1 576 0 is_stmt 1
 1996 02c4 00BF     		nop
 1997              	.L123:
 1998              		.loc 1 576 0 is_stmt 0 discriminator 1
 1999 02c6 FFF7FEFF 		bl	USBUART_CDCIsReady
 2000 02ca 0346     		mov	r3, r0
 2001 02cc 002B     		cmp	r3, #0
 2002 02ce FAD0     		beq	.L123
 577:main.c        ****                         USBUART_PutString("Size: ");
 2003              		.loc 1 577 0 is_stmt 1
 2004 02d0 4B48     		ldr	r0, .L136+12
 2005 02d2 FFF7FEFF 		bl	USBUART_PutString
 578:main.c        ****                         while(!USBUART_CDCIsReady());
 2006              		.loc 1 578 0
 2007 02d6 00BF     		nop
 2008              	.L124:
 2009              		.loc 1 578 0 is_stmt 0 discriminator 1
 2010 02d8 FFF7FEFF 		bl	USBUART_CDCIsReady
 2011 02dc 0346     		mov	r3, r0
 2012 02de 002B     		cmp	r3, #0
 2013 02e0 FAD0     		beq	.L124
 579:main.c        ****                         USBUART_PutChar(((messageLength)/100)+0x30);
 2014              		.loc 1 579 0 is_stmt 1
 2015 02e2 484B     		ldr	r3, .L136+16
 2016 02e4 1B68     		ldr	r3, [r3]
 2017 02e6 444A     		ldr	r2, .L136+4
 2018 02e8 82FB0312 		smull	r1, r2, r2, r3
 2019 02ec 5211     		asrs	r2, r2, #5
 2020 02ee DB17     		asrs	r3, r3, #31
 2021 02f0 D31A     		subs	r3, r2, r3
 2022 02f2 DBB2     		uxtb	r3, r3
 2023 02f4 3033     		adds	r3, r3, #48
 2024 02f6 DBB2     		uxtb	r3, r3
 2025 02f8 1846     		mov	r0, r3
 2026 02fa FFF7FEFF 		bl	USBUART_PutChar
 580:main.c        ****                         while(!USBUART_CDCIsReady());
 2027              		.loc 1 580 0
 2028 02fe 00BF     		nop
 2029              	.L125:
 2030              		.loc 1 580 0 is_stmt 0 discriminator 1
 2031 0300 FFF7FEFF 		bl	USBUART_CDCIsReady
 2032 0304 0346     		mov	r3, r0
 2033 0306 002B     		cmp	r3, #0
 2034 0308 FAD0     		beq	.L125
 581:main.c        ****                         USBUART_PutChar(((messageLength/10)%10)+0x30);
 2035              		.loc 1 581 0 is_stmt 1
 2036 030a 3E4B     		ldr	r3, .L136+16
 2037 030c 1B68     		ldr	r3, [r3]
 2038 030e 3E4A     		ldr	r2, .L136+20
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 48


 2039 0310 82FB0312 		smull	r1, r2, r2, r3
 2040 0314 9210     		asrs	r2, r2, #2
 2041 0316 DB17     		asrs	r3, r3, #31
 2042 0318 D21A     		subs	r2, r2, r3
 2043 031a 3B4B     		ldr	r3, .L136+20
 2044 031c 83FB0213 		smull	r1, r3, r3, r2
 2045 0320 9910     		asrs	r1, r3, #2
 2046 0322 D317     		asrs	r3, r2, #31
 2047 0324 C91A     		subs	r1, r1, r3
 2048 0326 0B46     		mov	r3, r1
 2049 0328 9B00     		lsls	r3, r3, #2
 2050 032a 0B44     		add	r3, r3, r1
 2051 032c 5B00     		lsls	r3, r3, #1
 2052 032e D11A     		subs	r1, r2, r3
 2053 0330 CBB2     		uxtb	r3, r1
 2054 0332 3033     		adds	r3, r3, #48
 2055 0334 DBB2     		uxtb	r3, r3
 2056 0336 1846     		mov	r0, r3
 2057 0338 FFF7FEFF 		bl	USBUART_PutChar
 582:main.c        ****                         while(!USBUART_CDCIsReady());
 2058              		.loc 1 582 0
 2059 033c 00BF     		nop
 2060              	.L126:
 2061              		.loc 1 582 0 is_stmt 0 discriminator 1
 2062 033e FFF7FEFF 		bl	USBUART_CDCIsReady
 2063 0342 0346     		mov	r3, r0
 2064 0344 002B     		cmp	r3, #0
 2065 0346 FAD0     		beq	.L126
 583:main.c        ****                         USBUART_PutChar(((messageLength%10)%10)+0x30);
 2066              		.loc 1 583 0 is_stmt 1
 2067 0348 2E4B     		ldr	r3, .L136+16
 2068 034a 1968     		ldr	r1, [r3]
 2069 034c 2E4B     		ldr	r3, .L136+20
 2070 034e 83FB0123 		smull	r2, r3, r3, r1
 2071 0352 9A10     		asrs	r2, r3, #2
 2072 0354 CB17     		asrs	r3, r1, #31
 2073 0356 D21A     		subs	r2, r2, r3
 2074 0358 1346     		mov	r3, r2
 2075 035a 9B00     		lsls	r3, r3, #2
 2076 035c 1344     		add	r3, r3, r2
 2077 035e 5B00     		lsls	r3, r3, #1
 2078 0360 CA1A     		subs	r2, r1, r3
 2079 0362 294B     		ldr	r3, .L136+20
 2080 0364 83FB0213 		smull	r1, r3, r3, r2
 2081 0368 9910     		asrs	r1, r3, #2
 2082 036a D317     		asrs	r3, r2, #31
 2083 036c C91A     		subs	r1, r1, r3
 2084 036e 0B46     		mov	r3, r1
 2085 0370 9B00     		lsls	r3, r3, #2
 2086 0372 0B44     		add	r3, r3, r1
 2087 0374 5B00     		lsls	r3, r3, #1
 2088 0376 D11A     		subs	r1, r2, r3
 2089 0378 CBB2     		uxtb	r3, r1
 2090 037a 3033     		adds	r3, r3, #48
 2091 037c DBB2     		uxtb	r3, r3
 2092 037e 1846     		mov	r0, r3
 2093 0380 FFF7FEFF 		bl	USBUART_PutChar
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 49


 584:main.c        ****                         while(!USBUART_CDCIsReady());
 2094              		.loc 1 584 0
 2095 0384 00BF     		nop
 2096              	.L127:
 2097              		.loc 1 584 0 is_stmt 0 discriminator 1
 2098 0386 FFF7FEFF 		bl	USBUART_CDCIsReady
 2099 038a 0346     		mov	r3, r0
 2100 038c 002B     		cmp	r3, #0
 2101 038e FAD0     		beq	.L127
 585:main.c        ****                         USBUART_PutCRLF();
 2102              		.loc 1 585 0 is_stmt 1
 2103 0390 FFF7FEFF 		bl	USBUART_PutCRLF
 586:main.c        ****                         while(!USBUART_CDCIsReady());
 2104              		.loc 1 586 0
 2105 0394 00BF     		nop
 2106              	.L128:
 2107              		.loc 1 586 0 is_stmt 0 discriminator 1
 2108 0396 FFF7FEFF 		bl	USBUART_CDCIsReady
 2109 039a 0346     		mov	r3, r0
 2110 039c 002B     		cmp	r3, #0
 2111 039e FAD0     		beq	.L128
 587:main.c        ****                         USBUART_PutString("Message: ");
 2112              		.loc 1 587 0 is_stmt 1
 2113 03a0 1A48     		ldr	r0, .L136+24
 2114 03a2 FFF7FEFF 		bl	USBUART_PutString
 588:main.c        ****                         while(!USBUART_CDCIsReady());
 2115              		.loc 1 588 0
 2116 03a6 00BF     		nop
 2117              	.L129:
 2118              		.loc 1 588 0 is_stmt 0 discriminator 1
 2119 03a8 FFF7FEFF 		bl	USBUART_CDCIsReady
 2120 03ac 0346     		mov	r3, r0
 2121 03ae 002B     		cmp	r3, #0
 2122 03b0 FAD0     		beq	.L129
 589:main.c        ****                         addressZeroReceive = 1;
 2123              		.loc 1 589 0 is_stmt 1
 2124 03b2 174B     		ldr	r3, .L136+28
 2125 03b4 0122     		movs	r2, #1
 2126 03b6 1A60     		str	r2, [r3]
 2127              	.L105:
 590:main.c        ****                     }
 591:main.c        ****                     if(
 592:main.c        ****                         6 && dataBitsRead < receiveBuffer[4] + 7){
 2128              		.loc 1 592 0
 2129 03b8 164B     		ldr	r3, .L136+32
 2130 03ba 1B79     		ldrb	r3, [r3, #4]
 2131 03bc DBB2     		uxtb	r3, r3
 2132 03be DA1D     		adds	r2, r3, #7
 2133 03c0 154B     		ldr	r3, .L136+36
 2134 03c2 1B68     		ldr	r3, [r3]
 591:main.c        ****                         6 && dataBitsRead < receiveBuffer[4] + 7){
 2135              		.loc 1 591 0
 2136 03c4 9A42     		cmp	r2, r3
 2137 03c6 07DD     		ble	.L101
 593:main.c        ****                         USBUART_PutChar(receiveBuffer[dataBitsRead]);
 2138              		.loc 1 593 0
 2139 03c8 134B     		ldr	r3, .L136+36
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 50


 2140 03ca 1B68     		ldr	r3, [r3]
 2141 03cc 114A     		ldr	r2, .L136+32
 2142 03ce D35C     		ldrb	r3, [r2, r3]
 2143 03d0 DBB2     		uxtb	r3, r3
 2144 03d2 1846     		mov	r0, r3
 2145 03d4 FFF7FEFF 		bl	USBUART_PutChar
 2146              	.L101:
 594:main.c        ****                     }
 595:main.c        ****                     
 596:main.c        ****                 }
 597:main.c        ****             }
 598:main.c        ****             ++dataBitsRead;
 2147              		.loc 1 598 0
 2148 03d8 0F4B     		ldr	r3, .L136+36
 2149 03da 1B68     		ldr	r3, [r3]
 2150 03dc 0133     		adds	r3, r3, #1
 2151 03de 0E4A     		ldr	r2, .L136+36
 2152 03e0 1360     		str	r3, [r2]
 2153              	.L99:
 517:main.c        ****             if(dataBitsRead <= 6){
 2154              		.loc 1 517 0
 2155 03e2 0D4B     		ldr	r3, .L136+36
 2156 03e4 1A68     		ldr	r2, [r3]
 2157 03e6 0D4B     		ldr	r3, .L136+40
 2158 03e8 1B68     		ldr	r3, [r3]
 2159 03ea 9A42     		cmp	r2, r3
 2160 03ec FFF611AE 		blt	.L130
 2161              	.L131:
 599:main.c        ****         }
 600:main.c        ****     }
 601:main.c        **** }
 2162              		.loc 1 601 0
 2163 03f0 00BF     		nop
 2164 03f2 80BD     		pop	{r7, pc}
 2165              	.L137:
 2166              		.align	2
 2167              	.L136:
 2168 03f4 00000000 		.word	destinationAddress
 2169 03f8 1F85EB51 		.word	1374389535
 2170 03fc CDCCCCCC 		.word	-858993459
 2171 0400 C0000000 		.word	.LC7
 2172 0404 00000000 		.word	messageLength
 2173 0408 67666666 		.word	1717986919
 2174 040c C8000000 		.word	.LC8
 2175 0410 00000000 		.word	addressZeroReceive
 2176 0414 00000000 		.word	receiveBuffer
 2177 0418 00000000 		.word	dataBitsRead
 2178 041c 00000000 		.word	receivePosition
 2179              		.cfi_endproc
 2180              	.LFE73:
 2181              		.size	checkForNewData, .-checkForNewData
 2182              		.text
 2183              	.Letext0:
 2184              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2185              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2186              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2187              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 51


 2188              		.file 6 "Generated_Source\\PSoC5/USBUART.h"
 2189              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2190              		.section	.debug_info,"",%progbits
 2191              	.Ldebug_info0:
 2192 0000 FA040000 		.4byte	0x4fa
 2193 0004 0400     		.2byte	0x4
 2194 0006 00000000 		.4byte	.Ldebug_abbrev0
 2195 000a 04       		.byte	0x4
 2196 000b 01       		.uleb128 0x1
 2197 000c 73000000 		.4byte	.LASF66
 2198 0010 0C       		.byte	0xc
 2199 0011 5B030000 		.4byte	.LASF67
 2200 0015 84020000 		.4byte	.LASF68
 2201 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2202 001d 00000000 		.4byte	0
 2203 0021 00000000 		.4byte	.Ldebug_line0
 2204 0025 02       		.uleb128 0x2
 2205 0026 01       		.byte	0x1
 2206 0027 06       		.byte	0x6
 2207 0028 53020000 		.4byte	.LASF0
 2208 002c 02       		.uleb128 0x2
 2209 002d 01       		.byte	0x1
 2210 002e 08       		.byte	0x8
 2211 002f 39020000 		.4byte	.LASF1
 2212 0033 02       		.uleb128 0x2
 2213 0034 02       		.byte	0x2
 2214 0035 05       		.byte	0x5
 2215 0036 4C000000 		.4byte	.LASF2
 2216 003a 03       		.uleb128 0x3
 2217 003b 0F010000 		.4byte	.LASF4
 2218 003f 02       		.byte	0x2
 2219 0040 2B       		.byte	0x2b
 2220 0041 45000000 		.4byte	0x45
 2221 0045 02       		.uleb128 0x2
 2222 0046 02       		.byte	0x2
 2223 0047 07       		.byte	0x7
 2224 0048 33030000 		.4byte	.LASF3
 2225 004c 03       		.uleb128 0x3
 2226 004d A6030000 		.4byte	.LASF5
 2227 0051 02       		.byte	0x2
 2228 0052 3F       		.byte	0x3f
 2229 0053 57000000 		.4byte	0x57
 2230 0057 02       		.uleb128 0x2
 2231 0058 04       		.byte	0x4
 2232 0059 05       		.byte	0x5
 2233 005a 86010000 		.4byte	.LASF6
 2234 005e 02       		.uleb128 0x2
 2235 005f 04       		.byte	0x4
 2236 0060 07       		.byte	0x7
 2237 0061 F7020000 		.4byte	.LASF7
 2238 0065 02       		.uleb128 0x2
 2239 0066 08       		.byte	0x8
 2240 0067 05       		.byte	0x5
 2241 0068 5F010000 		.4byte	.LASF8
 2242 006c 02       		.uleb128 0x2
 2243 006d 08       		.byte	0x8
 2244 006e 07       		.byte	0x7
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 52


 2245 006f 6D020000 		.4byte	.LASF9
 2246 0073 04       		.uleb128 0x4
 2247 0074 04       		.byte	0x4
 2248 0075 05       		.byte	0x5
 2249 0076 696E7400 		.ascii	"int\000"
 2250 007a 02       		.uleb128 0x2
 2251 007b 04       		.byte	0x4
 2252 007c 07       		.byte	0x7
 2253 007d E1020000 		.4byte	.LASF10
 2254 0081 03       		.uleb128 0x3
 2255 0082 EE020000 		.4byte	.LASF11
 2256 0086 03       		.byte	0x3
 2257 0087 24       		.byte	0x24
 2258 0088 3A000000 		.4byte	0x3a
 2259 008c 03       		.uleb128 0x3
 2260 008d 2B030000 		.4byte	.LASF12
 2261 0091 03       		.byte	0x3
 2262 0092 2C       		.byte	0x2c
 2263 0093 4C000000 		.4byte	0x4c
 2264 0097 05       		.uleb128 0x5
 2265 0098 23010000 		.4byte	.LASF13
 2266 009c 04       		.byte	0x4
 2267 009d 9201     		.2byte	0x192
 2268 009f 2C000000 		.4byte	0x2c
 2269 00a3 02       		.uleb128 0x2
 2270 00a4 04       		.byte	0x4
 2271 00a5 04       		.byte	0x4
 2272 00a6 59010000 		.4byte	.LASF14
 2273 00aa 02       		.uleb128 0x2
 2274 00ab 08       		.byte	0x8
 2275 00ac 04       		.byte	0x4
 2276 00ad 81030000 		.4byte	.LASF15
 2277 00b1 02       		.uleb128 0x2
 2278 00b2 01       		.byte	0x1
 2279 00b3 08       		.byte	0x8
 2280 00b4 26030000 		.4byte	.LASF16
 2281 00b8 05       		.uleb128 0x5
 2282 00b9 62030000 		.4byte	.LASF17
 2283 00bd 04       		.byte	0x4
 2284 00be 3C02     		.2byte	0x23c
 2285 00c0 C4000000 		.4byte	0xc4
 2286 00c4 06       		.uleb128 0x6
 2287 00c5 97000000 		.4byte	0x97
 2288 00c9 02       		.uleb128 0x2
 2289 00ca 08       		.byte	0x8
 2290 00cb 04       		.byte	0x4
 2291 00cc 0F020000 		.4byte	.LASF18
 2292 00d0 02       		.uleb128 0x2
 2293 00d1 04       		.byte	0x4
 2294 00d2 07       		.byte	0x7
 2295 00d3 5C000000 		.4byte	.LASF19
 2296 00d7 07       		.uleb128 0x7
 2297 00d8 04       		.byte	0x4
 2298 00d9 DD000000 		.4byte	0xdd
 2299 00dd 08       		.uleb128 0x8
 2300 00de B1000000 		.4byte	0xb1
 2301 00e2 09       		.uleb128 0x9
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 53


 2302 00e3 F2010000 		.4byte	.LASF69
 2303 00e7 01       		.byte	0x1
 2304 00e8 2C000000 		.4byte	0x2c
 2305 00ec 01       		.byte	0x1
 2306 00ed 39       		.byte	0x39
 2307 00ee 05010000 		.4byte	0x105
 2308 00f2 0A       		.uleb128 0xa
 2309 00f3 21000000 		.4byte	.LASF20
 2310 00f7 00       		.byte	0
 2311 00f8 0A       		.uleb128 0xa
 2312 00f9 F8010000 		.4byte	.LASF21
 2313 00fd 01       		.byte	0x1
 2314 00fe 0A       		.uleb128 0xa
 2315 00ff 21030000 		.4byte	.LASF22
 2316 0103 02       		.byte	0x2
 2317 0104 00       		.byte	0
 2318 0105 0B       		.uleb128 0xb
 2319 0106 4C030000 		.4byte	.LASF70
 2320 010a 01       		.byte	0x1
 2321 010b 5C       		.byte	0x5c
 2322 010c 00000000 		.4byte	.LFB64
 2323 0110 14000000 		.4byte	.LFE64-.LFB64
 2324 0114 01       		.uleb128 0x1
 2325 0115 9C       		.byte	0x9c
 2326 0116 29010000 		.4byte	0x129
 2327 011a 0C       		.uleb128 0xc
 2328 011b BB010000 		.4byte	.LASF23
 2329 011f 01       		.byte	0x1
 2330 0120 5D       		.byte	0x5d
 2331 0121 73000000 		.4byte	0x73
 2332 0125 02       		.uleb128 0x2
 2333 0126 91       		.byte	0x91
 2334 0127 74       		.sleb128 -12
 2335 0128 00       		.byte	0
 2336 0129 0D       		.uleb128 0xd
 2337 012a 34000000 		.4byte	.LASF26
 2338 012e 01       		.byte	0x1
 2339 012f 7B       		.byte	0x7b
 2340 0130 00000000 		.4byte	.LFB65
 2341 0134 08010000 		.4byte	.LFE65-.LFB65
 2342 0138 01       		.uleb128 0x1
 2343 0139 9C       		.byte	0x9c
 2344 013a 71010000 		.4byte	0x171
 2345 013e 0C       		.uleb128 0xc
 2346 013f 00000000 		.4byte	.LASF24
 2347 0143 01       		.byte	0x1
 2348 0144 7C       		.byte	0x7c
 2349 0145 73000000 		.4byte	0x73
 2350 0149 02       		.uleb128 0x2
 2351 014a 91       		.byte	0x91
 2352 014b 6C       		.sleb128 -20
 2353 014c 0C       		.uleb128 0xc
 2354 014d D5030000 		.4byte	.LASF25
 2355 0151 01       		.byte	0x1
 2356 0152 7D       		.byte	0x7d
 2357 0153 B1000000 		.4byte	0xb1
 2358 0157 02       		.uleb128 0x2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 54


 2359 0158 91       		.byte	0x91
 2360 0159 6B       		.sleb128 -21
 2361 015a 0E       		.uleb128 0xe
 2362 015b 80000000 		.4byte	.LBB2
 2363 015f 4C000000 		.4byte	.LBE2-.LBB2
 2364 0163 0F       		.uleb128 0xf
 2365 0164 7800     		.ascii	"x\000"
 2366 0166 01       		.byte	0x1
 2367 0167 9B       		.byte	0x9b
 2368 0168 73000000 		.4byte	0x73
 2369 016c 02       		.uleb128 0x2
 2370 016d 91       		.byte	0x91
 2371 016e 64       		.sleb128 -28
 2372 016f 00       		.byte	0
 2373 0170 00       		.byte	0
 2374 0171 10       		.uleb128 0x10
 2375 0172 6D010000 		.4byte	.LASF29
 2376 0176 01       		.byte	0x1
 2377 0177 B3       		.byte	0xb3
 2378 0178 00000000 		.4byte	.LFB66
 2379 017c 7C010000 		.4byte	.LFE66-.LFB66
 2380 0180 01       		.uleb128 0x1
 2381 0181 9C       		.byte	0x9c
 2382 0182 0D       		.uleb128 0xd
 2383 0183 DC010000 		.4byte	.LASF27
 2384 0187 01       		.byte	0x1
 2385 0188 ED       		.byte	0xed
 2386 0189 00000000 		.4byte	.LFB67
 2387 018d B0000000 		.4byte	.LFE67-.LFB67
 2388 0191 01       		.uleb128 0x1
 2389 0192 9C       		.byte	0x9c
 2390 0193 B0010000 		.4byte	0x1b0
 2391 0197 0E       		.uleb128 0xe
 2392 0198 22000000 		.4byte	.LBB3
 2393 019c 6A000000 		.4byte	.LBE3-.LBB3
 2394 01a0 0C       		.uleb128 0xc
 2395 01a1 B0030000 		.4byte	.LASF28
 2396 01a5 01       		.byte	0x1
 2397 01a6 FC       		.byte	0xfc
 2398 01a7 81000000 		.4byte	0x81
 2399 01ab 02       		.uleb128 0x2
 2400 01ac 91       		.byte	0x91
 2401 01ad 76       		.sleb128 -10
 2402 01ae 00       		.byte	0
 2403 01af 00       		.byte	0
 2404 01b0 11       		.uleb128 0x11
 2405 01b1 F7030000 		.4byte	.LASF30
 2406 01b5 01       		.byte	0x1
 2407 01b6 1401     		.2byte	0x114
 2408 01b8 00000000 		.4byte	.LFB68
 2409 01bc 54000000 		.4byte	.LFE68-.LFB68
 2410 01c0 01       		.uleb128 0x1
 2411 01c1 9C       		.byte	0x9c
 2412 01c2 11       		.uleb128 0x11
 2413 01c3 C0010000 		.4byte	.LASF31
 2414 01c7 01       		.byte	0x1
 2415 01c8 3301     		.2byte	0x133
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 55


 2416 01ca 00000000 		.4byte	.LFB69
 2417 01ce 3C000000 		.4byte	.LFE69-.LFB69
 2418 01d2 01       		.uleb128 0x1
 2419 01d3 9C       		.byte	0x9c
 2420 01d4 12       		.uleb128 0x12
 2421 01d5 32040000 		.4byte	.LASF32
 2422 01d9 01       		.byte	0x1
 2423 01da 4301     		.2byte	0x143
 2424 01dc 00000000 		.4byte	.LFB70
 2425 01e0 18000000 		.4byte	.LFE70-.LFB70
 2426 01e4 01       		.uleb128 0x1
 2427 01e5 9C       		.byte	0x9c
 2428 01e6 13       		.uleb128 0x13
 2429 01e7 0A010000 		.4byte	.LASF71
 2430 01eb 01       		.byte	0x1
 2431 01ec 5201     		.2byte	0x152
 2432 01ee 73000000 		.4byte	0x73
 2433 01f2 00000000 		.4byte	.LFB71
 2434 01f6 90030000 		.4byte	.LFE71-.LFB71
 2435 01fa 01       		.uleb128 0x1
 2436 01fb 9C       		.byte	0x9c
 2437 01fc 74020000 		.4byte	0x274
 2438 0200 14       		.uleb128 0x14
 2439 0201 00000000 		.4byte	.Ldebug_ranges0+0
 2440 0205 41020000 		.4byte	0x241
 2441 0209 15       		.uleb128 0x15
 2442 020a 35010000 		.4byte	.LASF33
 2443 020e 01       		.byte	0x1
 2444 020f 7E01     		.2byte	0x17e
 2445 0211 73000000 		.4byte	0x73
 2446 0215 02       		.uleb128 0x2
 2447 0216 91       		.byte	0x91
 2448 0217 74       		.sleb128 -12
 2449 0218 15       		.uleb128 0x15
 2450 0219 56000000 		.4byte	.LASF34
 2451 021d 01       		.byte	0x1
 2452 021e 8001     		.2byte	0x180
 2453 0220 B1000000 		.4byte	0xb1
 2454 0224 02       		.uleb128 0x2
 2455 0225 91       		.byte	0x91
 2456 0226 73       		.sleb128 -13
 2457 0227 0E       		.uleb128 0xe
 2458 0228 B6000000 		.4byte	.LBB5
 2459 022c 20000000 		.4byte	.LBE5-.LBB5
 2460 0230 16       		.uleb128 0x16
 2461 0231 5F5F7800 		.ascii	"__x\000"
 2462 0235 01       		.byte	0x1
 2463 0236 8C01     		.2byte	0x18c
 2464 0238 B1000000 		.4byte	0xb1
 2465 023c 02       		.uleb128 0x2
 2466 023d 91       		.byte	0x91
 2467 023e 70       		.sleb128 -16
 2468 023f 00       		.byte	0
 2469 0240 00       		.byte	0
 2470 0241 0E       		.uleb128 0xe
 2471 0242 4C030000 		.4byte	.LBB6
 2472 0246 36000000 		.4byte	.LBE6-.LBB6
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 56


 2473 024a 15       		.uleb128 0x15
 2474 024b 56000000 		.4byte	.LASF34
 2475 024f 01       		.byte	0x1
 2476 0250 DD01     		.2byte	0x1dd
 2477 0252 B1000000 		.4byte	0xb1
 2478 0256 02       		.uleb128 0x2
 2479 0257 91       		.byte	0x91
 2480 0258 72       		.sleb128 -14
 2481 0259 0E       		.uleb128 0xe
 2482 025a 54030000 		.4byte	.LBB7
 2483 025e 20000000 		.4byte	.LBE7-.LBB7
 2484 0262 16       		.uleb128 0x16
 2485 0263 5F5F7800 		.ascii	"__x\000"
 2486 0267 01       		.byte	0x1
 2487 0268 DF01     		.2byte	0x1df
 2488 026a B1000000 		.4byte	0xb1
 2489 026e 02       		.uleb128 0x2
 2490 026f 91       		.byte	0x91
 2491 0270 71       		.sleb128 -15
 2492 0271 00       		.byte	0
 2493 0272 00       		.byte	0
 2494 0273 00       		.byte	0
 2495 0274 17       		.uleb128 0x17
 2496 0275 8F010000 		.4byte	.LASF35
 2497 0279 01       		.byte	0x1
 2498 027a E701     		.2byte	0x1e7
 2499 027c 00000000 		.4byte	.LFB72
 2500 0280 DC000000 		.4byte	.LFE72-.LFB72
 2501 0284 01       		.uleb128 0x1
 2502 0285 9C       		.byte	0x9c
 2503 0286 17       		.uleb128 0x17
 2504 0287 88030000 		.4byte	.LASF36
 2505 028b 01       		.byte	0x1
 2506 028c 0302     		.2byte	0x203
 2507 028e 00000000 		.4byte	.LFB73
 2508 0292 20040000 		.4byte	.LFE73-.LFB73
 2509 0296 01       		.uleb128 0x1
 2510 0297 9C       		.byte	0x9c
 2511 0298 18       		.uleb128 0x18
 2512 0299 65000000 		.4byte	.LASF37
 2513 029d 05       		.byte	0x5
 2514 029e 2E       		.byte	0x2e
 2515 029f D7000000 		.4byte	0xd7
 2516 02a3 19       		.uleb128 0x19
 2517 02a4 AC010000 		.4byte	.LASF38
 2518 02a8 06       		.byte	0x6
 2519 02a9 D602     		.2byte	0x2d6
 2520 02ab C4000000 		.4byte	0xc4
 2521 02af 19       		.uleb128 0x19
 2522 02b0 EA030000 		.4byte	.LASF39
 2523 02b4 07       		.byte	0x7
 2524 02b5 1207     		.2byte	0x712
 2525 02b7 BB020000 		.4byte	0x2bb
 2526 02bb 06       		.uleb128 0x6
 2527 02bc 8C000000 		.4byte	0x8c
 2528 02c0 1A       		.uleb128 0x1a
 2529 02c1 47020000 		.4byte	.LASF40
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 57


 2530 02c5 01       		.byte	0x1
 2531 02c6 39       		.byte	0x39
 2532 02c7 D1020000 		.4byte	0x2d1
 2533 02cb 05       		.uleb128 0x5
 2534 02cc 03       		.byte	0x3
 2535 02cd 00000000 		.4byte	systemState
 2536 02d1 06       		.uleb128 0x6
 2537 02d2 E2000000 		.4byte	0xe2
 2538 02d6 1A       		.uleb128 0x1a
 2539 02d7 19000000 		.4byte	.LASF41
 2540 02db 01       		.byte	0x1
 2541 02dc 3C       		.byte	0x3c
 2542 02dd EE020000 		.4byte	0x2ee
 2543 02e1 05       		.uleb128 0x5
 2544 02e2 03       		.byte	0x3
 2545 02e3 00000000 		.4byte	lowFlag
 2546 02e7 02       		.uleb128 0x2
 2547 02e8 01       		.byte	0x1
 2548 02e9 02       		.byte	0x2
 2549 02ea 46030000 		.4byte	.LASF42
 2550 02ee 06       		.uleb128 0x6
 2551 02ef E7020000 		.4byte	0x2e7
 2552 02f3 1B       		.uleb128 0x1b
 2553 02f4 0A030000 		.4byte	0x30a
 2554 02f8 0A030000 		.4byte	0x30a
 2555 02fc 1C       		.uleb128 0x1c
 2556 02fd D0000000 		.4byte	0xd0
 2557 0301 F301     		.2byte	0x1f3
 2558 0303 1D       		.uleb128 0x1d
 2559 0304 D0000000 		.4byte	0xd0
 2560 0308 0F       		.byte	0xf
 2561 0309 00       		.byte	0
 2562 030a 06       		.uleb128 0x6
 2563 030b 2C000000 		.4byte	0x2c
 2564 030f 1A       		.uleb128 0x1a
 2565 0310 0C000000 		.4byte	.LASF43
 2566 0314 01       		.byte	0x1
 2567 0315 3E       		.byte	0x3e
 2568 0316 20030000 		.4byte	0x320
 2569 031a 05       		.uleb128 0x5
 2570 031b 03       		.byte	0x3
 2571 031c 00000000 		.4byte	transmitData
 2572 0320 06       		.uleb128 0x6
 2573 0321 F3020000 		.4byte	0x2f3
 2574 0325 1B       		.uleb128 0x1b
 2575 0326 0A030000 		.4byte	0x30a
 2576 032a 36030000 		.4byte	0x336
 2577 032e 1C       		.uleb128 0x1c
 2578 032f D0000000 		.4byte	0xd0
 2579 0333 F301     		.2byte	0x1f3
 2580 0335 00       		.byte	0
 2581 0336 1A       		.uleb128 0x1a
 2582 0337 54030000 		.4byte	.LASF44
 2583 033b 01       		.byte	0x1
 2584 033c 3F       		.byte	0x3f
 2585 033d 47030000 		.4byte	0x347
 2586 0341 05       		.uleb128 0x5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 58


 2587 0342 03       		.byte	0x3
 2588 0343 00000000 		.4byte	buffer
 2589 0347 06       		.uleb128 0x6
 2590 0348 25030000 		.4byte	0x325
 2591 034c 1A       		.uleb128 0x1a
 2592 034d 73030000 		.4byte	.LASF45
 2593 0351 01       		.byte	0x1
 2594 0352 40       		.byte	0x40
 2595 0353 5D030000 		.4byte	0x35d
 2596 0357 05       		.uleb128 0x5
 2597 0358 03       		.byte	0x3
 2598 0359 00000000 		.4byte	receiveBuffer
 2599 035d 06       		.uleb128 0x6
 2600 035e 25030000 		.4byte	0x325
 2601 0362 1B       		.uleb128 0x1b
 2602 0363 0A030000 		.4byte	0x30a
 2603 0367 72030000 		.4byte	0x372
 2604 036b 1D       		.uleb128 0x1d
 2605 036c D0000000 		.4byte	0xd0
 2606 0370 0F       		.byte	0xf
 2607 0371 00       		.byte	0
 2608 0372 1A       		.uleb128 0x1a
 2609 0373 4D010000 		.4byte	.LASF46
 2610 0377 01       		.byte	0x1
 2611 0378 41       		.byte	0x41
 2612 0379 83030000 		.4byte	0x383
 2613 037d 05       		.uleb128 0x5
 2614 037e 03       		.byte	0x3
 2615 037f 00000000 		.4byte	receiveData
 2616 0383 06       		.uleb128 0x6
 2617 0384 62030000 		.4byte	0x362
 2618 0388 1A       		.uleb128 0x1a
 2619 0389 E1030000 		.4byte	.LASF47
 2620 038d 01       		.byte	0x1
 2621 038e 42       		.byte	0x42
 2622 038f 99030000 		.4byte	0x399
 2623 0393 05       		.uleb128 0x5
 2624 0394 03       		.byte	0x3
 2625 0395 00000000 		.4byte	position
 2626 0399 06       		.uleb128 0x6
 2627 039a 73000000 		.4byte	0x73
 2628 039e 1A       		.uleb128 0x1a
 2629 039f 11030000 		.4byte	.LASF48
 2630 03a3 01       		.byte	0x1
 2631 03a4 43       		.byte	0x43
 2632 03a5 99030000 		.4byte	0x399
 2633 03a9 05       		.uleb128 0x5
 2634 03aa 03       		.byte	0x3
 2635 03ab 00000000 		.4byte	receivePosition
 2636 03af 1A       		.uleb128 0x1a
 2637 03b0 02020000 		.4byte	.LASF49
 2638 03b4 01       		.byte	0x1
 2639 03b5 44       		.byte	0x44
 2640 03b6 99030000 		.4byte	0x399
 2641 03ba 05       		.uleb128 0x5
 2642 03bb 03       		.byte	0x3
 2643 03bc 00000000 		.4byte	dataBitsRead
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 59


 2644 03c0 1E       		.uleb128 0x1e
 2645 03c1 69647800 		.ascii	"idx\000"
 2646 03c5 01       		.byte	0x1
 2647 03c6 45       		.byte	0x45
 2648 03c7 99030000 		.4byte	0x399
 2649 03cb 05       		.uleb128 0x5
 2650 03cc 03       		.byte	0x3
 2651 03cd 00000000 		.4byte	idx
 2652 03d1 1A       		.uleb128 0x1a
 2653 03d2 09030000 		.4byte	.LASF50
 2654 03d6 01       		.byte	0x1
 2655 03d7 46       		.byte	0x46
 2656 03d8 E2030000 		.4byte	0x3e2
 2657 03dc 05       		.uleb128 0x5
 2658 03dd 03       		.byte	0x3
 2659 03de 00000000 		.4byte	dataPtr
 2660 03e2 07       		.uleb128 0x7
 2661 03e3 04       		.byte	0x4
 2662 03e4 E8030000 		.4byte	0x3e8
 2663 03e8 06       		.uleb128 0x6
 2664 03e9 B1000000 		.4byte	0xb1
 2665 03ed 1A       		.uleb128 0x1a
 2666 03ee 25040000 		.4byte	.LASF51
 2667 03f2 01       		.byte	0x1
 2668 03f3 47       		.byte	0x47
 2669 03f4 99030000 		.4byte	0x399
 2670 03f8 05       		.uleb128 0x5
 2671 03f9 03       		.byte	0x3
 2672 03fa 00000000 		.4byte	transmitLock
 2673 03fe 1A       		.uleb128 0x1a
 2674 03ff 29010000 		.4byte	.LASF52
 2675 0403 01       		.byte	0x1
 2676 0404 48       		.byte	0x48
 2677 0405 99030000 		.4byte	0x399
 2678 0409 05       		.uleb128 0x5
 2679 040a 03       		.byte	0x3
 2680 040b 00000000 		.4byte	receiveLock
 2681 040f 1A       		.uleb128 0x1a
 2682 0410 26000000 		.4byte	.LASF53
 2683 0414 01       		.byte	0x1
 2684 0415 49       		.byte	0x49
 2685 0416 EE020000 		.4byte	0x2ee
 2686 041a 05       		.uleb128 0x5
 2687 041b 03       		.byte	0x3
 2688 041c 00000000 		.4byte	collisionLock
 2689 0420 1A       		.uleb128 0x1a
 2690 0421 5F020000 		.4byte	.LASF54
 2691 0425 01       		.byte	0x1
 2692 0426 4B       		.byte	0x4b
 2693 0427 E8030000 		.4byte	0x3e8
 2694 042b 05       		.uleb128 0x5
 2695 042c 03       		.byte	0x3
 2696 042d 00000000 		.4byte	sourceAddress
 2697 0431 1A       		.uleb128 0x1a
 2698 0432 12040000 		.4byte	.LASF55
 2699 0436 01       		.byte	0x1
 2700 0437 4C       		.byte	0x4c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 60


 2701 0438 E8030000 		.4byte	0x3e8
 2702 043c 05       		.uleb128 0x5
 2703 043d 03       		.byte	0x3
 2704 043e 00000000 		.4byte	destinationAddress
 2705 0442 1A       		.uleb128 0x1a
 2706 0443 98030000 		.4byte	.LASF56
 2707 0447 01       		.byte	0x1
 2708 0448 4D       		.byte	0x4d
 2709 0449 99030000 		.4byte	0x399
 2710 044d 05       		.uleb128 0x5
 2711 044e 03       		.byte	0x3
 2712 044f 00000000 		.4byte	messageLength
 2713 0453 1A       		.uleb128 0x1a
 2714 0454 01010000 		.4byte	.LASF57
 2715 0458 01       		.byte	0x1
 2716 0459 4E       		.byte	0x4e
 2717 045a E8030000 		.4byte	0x3e8
 2718 045e 05       		.uleb128 0x5
 2719 045f 03       		.byte	0x3
 2720 0460 00000000 		.4byte	crcUsage
 2721 0464 1A       		.uleb128 0x1a
 2722 0465 B8030000 		.4byte	.LASF58
 2723 0469 01       		.byte	0x1
 2724 046a 4F       		.byte	0x4f
 2725 046b E8030000 		.4byte	0x3e8
 2726 046f 05       		.uleb128 0x5
 2727 0470 03       		.byte	0x3
 2728 0471 00000000 		.4byte	headerCRC
 2729 0475 1A       		.uleb128 0x1a
 2730 0476 C2030000 		.4byte	.LASF59
 2731 047a 01       		.byte	0x1
 2732 047b 50       		.byte	0x50
 2733 047c 99030000 		.4byte	0x399
 2734 0480 05       		.uleb128 0x5
 2735 0481 03       		.byte	0x3
 2736 0482 00000000 		.4byte	addressZeroReceive
 2737 0486 1A       		.uleb128 0x1a
 2738 0487 67030000 		.4byte	.LASF60
 2739 048b 01       		.byte	0x1
 2740 048c 51       		.byte	0x51
 2741 048d E8030000 		.4byte	0x3e8
 2742 0491 05       		.uleb128 0x5
 2743 0492 03       		.byte	0x3
 2744 0493 00000000 		.4byte	currentChar
 2745 0497 1A       		.uleb128 0x1a
 2746 0498 1A010000 		.4byte	.LASF61
 2747 049c 01       		.byte	0x1
 2748 049d 52       		.byte	0x52
 2749 049e 99030000 		.4byte	0x399
 2750 04a2 05       		.uleb128 0x5
 2751 04a3 03       		.byte	0x3
 2752 04a4 00000000 		.4byte	dataSize
 2753 04a8 1A       		.uleb128 0x1a
 2754 04a9 1B020000 		.4byte	.LASF62
 2755 04ad 01       		.byte	0x1
 2756 04ae 53       		.byte	0x53
 2757 04af 99030000 		.4byte	0x399
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 61


 2758 04b3 05       		.uleb128 0x5
 2759 04b4 03       		.byte	0x3
 2760 04b5 00000000 		.4byte	transmitBitCount
 2761 04b9 1A       		.uleb128 0x1a
 2762 04ba 3D010000 		.4byte	.LASF63
 2763 04be 01       		.byte	0x1
 2764 04bf 54       		.byte	0x54
 2765 04c0 99030000 		.4byte	0x399
 2766 04c4 05       		.uleb128 0x5
 2767 04c5 03       		.byte	0x3
 2768 04c6 00000000 		.4byte	receiveBitCount
 2769 04ca 1A       		.uleb128 0x1a
 2770 04cb 00000000 		.4byte	.LASF24
 2771 04cf 01       		.byte	0x1
 2772 04d0 55       		.byte	0x55
 2773 04d1 99030000 		.4byte	0x399
 2774 04d5 05       		.uleb128 0x5
 2775 04d6 03       		.byte	0x3
 2776 04d7 00000000 		.4byte	concatCount
 2777 04db 1A       		.uleb128 0x1a
 2778 04dc 9C010000 		.4byte	.LASF64
 2779 04e0 01       		.byte	0x1
 2780 04e1 56       		.byte	0x56
 2781 04e2 0A030000 		.4byte	0x30a
 2782 04e6 05       		.uleb128 0x5
 2783 04e7 03       		.byte	0x3
 2784 04e8 00000000 		.4byte	transmitAddress
 2785 04ec 1A       		.uleb128 0x1a
 2786 04ed 2C020000 		.4byte	.LASF65
 2787 04f1 01       		.byte	0x1
 2788 04f2 58       		.byte	0x58
 2789 04f3 E7020000 		.4byte	0x2e7
 2790 04f7 05       		.uleb128 0x5
 2791 04f8 03       		.byte	0x3
 2792 04f9 00000000 		.4byte	transmitMode
 2793 04fd 00       		.byte	0
 2794              		.section	.debug_abbrev,"",%progbits
 2795              	.Ldebug_abbrev0:
 2796 0000 01       		.uleb128 0x1
 2797 0001 11       		.uleb128 0x11
 2798 0002 01       		.byte	0x1
 2799 0003 25       		.uleb128 0x25
 2800 0004 0E       		.uleb128 0xe
 2801 0005 13       		.uleb128 0x13
 2802 0006 0B       		.uleb128 0xb
 2803 0007 03       		.uleb128 0x3
 2804 0008 0E       		.uleb128 0xe
 2805 0009 1B       		.uleb128 0x1b
 2806 000a 0E       		.uleb128 0xe
 2807 000b 55       		.uleb128 0x55
 2808 000c 17       		.uleb128 0x17
 2809 000d 11       		.uleb128 0x11
 2810 000e 01       		.uleb128 0x1
 2811 000f 10       		.uleb128 0x10
 2812 0010 17       		.uleb128 0x17
 2813 0011 00       		.byte	0
 2814 0012 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 62


 2815 0013 02       		.uleb128 0x2
 2816 0014 24       		.uleb128 0x24
 2817 0015 00       		.byte	0
 2818 0016 0B       		.uleb128 0xb
 2819 0017 0B       		.uleb128 0xb
 2820 0018 3E       		.uleb128 0x3e
 2821 0019 0B       		.uleb128 0xb
 2822 001a 03       		.uleb128 0x3
 2823 001b 0E       		.uleb128 0xe
 2824 001c 00       		.byte	0
 2825 001d 00       		.byte	0
 2826 001e 03       		.uleb128 0x3
 2827 001f 16       		.uleb128 0x16
 2828 0020 00       		.byte	0
 2829 0021 03       		.uleb128 0x3
 2830 0022 0E       		.uleb128 0xe
 2831 0023 3A       		.uleb128 0x3a
 2832 0024 0B       		.uleb128 0xb
 2833 0025 3B       		.uleb128 0x3b
 2834 0026 0B       		.uleb128 0xb
 2835 0027 49       		.uleb128 0x49
 2836 0028 13       		.uleb128 0x13
 2837 0029 00       		.byte	0
 2838 002a 00       		.byte	0
 2839 002b 04       		.uleb128 0x4
 2840 002c 24       		.uleb128 0x24
 2841 002d 00       		.byte	0
 2842 002e 0B       		.uleb128 0xb
 2843 002f 0B       		.uleb128 0xb
 2844 0030 3E       		.uleb128 0x3e
 2845 0031 0B       		.uleb128 0xb
 2846 0032 03       		.uleb128 0x3
 2847 0033 08       		.uleb128 0x8
 2848 0034 00       		.byte	0
 2849 0035 00       		.byte	0
 2850 0036 05       		.uleb128 0x5
 2851 0037 16       		.uleb128 0x16
 2852 0038 00       		.byte	0
 2853 0039 03       		.uleb128 0x3
 2854 003a 0E       		.uleb128 0xe
 2855 003b 3A       		.uleb128 0x3a
 2856 003c 0B       		.uleb128 0xb
 2857 003d 3B       		.uleb128 0x3b
 2858 003e 05       		.uleb128 0x5
 2859 003f 49       		.uleb128 0x49
 2860 0040 13       		.uleb128 0x13
 2861 0041 00       		.byte	0
 2862 0042 00       		.byte	0
 2863 0043 06       		.uleb128 0x6
 2864 0044 35       		.uleb128 0x35
 2865 0045 00       		.byte	0
 2866 0046 49       		.uleb128 0x49
 2867 0047 13       		.uleb128 0x13
 2868 0048 00       		.byte	0
 2869 0049 00       		.byte	0
 2870 004a 07       		.uleb128 0x7
 2871 004b 0F       		.uleb128 0xf
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 63


 2872 004c 00       		.byte	0
 2873 004d 0B       		.uleb128 0xb
 2874 004e 0B       		.uleb128 0xb
 2875 004f 49       		.uleb128 0x49
 2876 0050 13       		.uleb128 0x13
 2877 0051 00       		.byte	0
 2878 0052 00       		.byte	0
 2879 0053 08       		.uleb128 0x8
 2880 0054 26       		.uleb128 0x26
 2881 0055 00       		.byte	0
 2882 0056 49       		.uleb128 0x49
 2883 0057 13       		.uleb128 0x13
 2884 0058 00       		.byte	0
 2885 0059 00       		.byte	0
 2886 005a 09       		.uleb128 0x9
 2887 005b 04       		.uleb128 0x4
 2888 005c 01       		.byte	0x1
 2889 005d 03       		.uleb128 0x3
 2890 005e 0E       		.uleb128 0xe
 2891 005f 0B       		.uleb128 0xb
 2892 0060 0B       		.uleb128 0xb
 2893 0061 49       		.uleb128 0x49
 2894 0062 13       		.uleb128 0x13
 2895 0063 3A       		.uleb128 0x3a
 2896 0064 0B       		.uleb128 0xb
 2897 0065 3B       		.uleb128 0x3b
 2898 0066 0B       		.uleb128 0xb
 2899 0067 01       		.uleb128 0x1
 2900 0068 13       		.uleb128 0x13
 2901 0069 00       		.byte	0
 2902 006a 00       		.byte	0
 2903 006b 0A       		.uleb128 0xa
 2904 006c 28       		.uleb128 0x28
 2905 006d 00       		.byte	0
 2906 006e 03       		.uleb128 0x3
 2907 006f 0E       		.uleb128 0xe
 2908 0070 1C       		.uleb128 0x1c
 2909 0071 0B       		.uleb128 0xb
 2910 0072 00       		.byte	0
 2911 0073 00       		.byte	0
 2912 0074 0B       		.uleb128 0xb
 2913 0075 2E       		.uleb128 0x2e
 2914 0076 01       		.byte	0x1
 2915 0077 3F       		.uleb128 0x3f
 2916 0078 19       		.uleb128 0x19
 2917 0079 03       		.uleb128 0x3
 2918 007a 0E       		.uleb128 0xe
 2919 007b 3A       		.uleb128 0x3a
 2920 007c 0B       		.uleb128 0xb
 2921 007d 3B       		.uleb128 0x3b
 2922 007e 0B       		.uleb128 0xb
 2923 007f 11       		.uleb128 0x11
 2924 0080 01       		.uleb128 0x1
 2925 0081 12       		.uleb128 0x12
 2926 0082 06       		.uleb128 0x6
 2927 0083 40       		.uleb128 0x40
 2928 0084 18       		.uleb128 0x18
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 64


 2929 0085 9742     		.uleb128 0x2117
 2930 0087 19       		.uleb128 0x19
 2931 0088 01       		.uleb128 0x1
 2932 0089 13       		.uleb128 0x13
 2933 008a 00       		.byte	0
 2934 008b 00       		.byte	0
 2935 008c 0C       		.uleb128 0xc
 2936 008d 34       		.uleb128 0x34
 2937 008e 00       		.byte	0
 2938 008f 03       		.uleb128 0x3
 2939 0090 0E       		.uleb128 0xe
 2940 0091 3A       		.uleb128 0x3a
 2941 0092 0B       		.uleb128 0xb
 2942 0093 3B       		.uleb128 0x3b
 2943 0094 0B       		.uleb128 0xb
 2944 0095 49       		.uleb128 0x49
 2945 0096 13       		.uleb128 0x13
 2946 0097 02       		.uleb128 0x2
 2947 0098 18       		.uleb128 0x18
 2948 0099 00       		.byte	0
 2949 009a 00       		.byte	0
 2950 009b 0D       		.uleb128 0xd
 2951 009c 2E       		.uleb128 0x2e
 2952 009d 01       		.byte	0x1
 2953 009e 3F       		.uleb128 0x3f
 2954 009f 19       		.uleb128 0x19
 2955 00a0 03       		.uleb128 0x3
 2956 00a1 0E       		.uleb128 0xe
 2957 00a2 3A       		.uleb128 0x3a
 2958 00a3 0B       		.uleb128 0xb
 2959 00a4 3B       		.uleb128 0x3b
 2960 00a5 0B       		.uleb128 0xb
 2961 00a6 27       		.uleb128 0x27
 2962 00a7 19       		.uleb128 0x19
 2963 00a8 11       		.uleb128 0x11
 2964 00a9 01       		.uleb128 0x1
 2965 00aa 12       		.uleb128 0x12
 2966 00ab 06       		.uleb128 0x6
 2967 00ac 40       		.uleb128 0x40
 2968 00ad 18       		.uleb128 0x18
 2969 00ae 9642     		.uleb128 0x2116
 2970 00b0 19       		.uleb128 0x19
 2971 00b1 01       		.uleb128 0x1
 2972 00b2 13       		.uleb128 0x13
 2973 00b3 00       		.byte	0
 2974 00b4 00       		.byte	0
 2975 00b5 0E       		.uleb128 0xe
 2976 00b6 0B       		.uleb128 0xb
 2977 00b7 01       		.byte	0x1
 2978 00b8 11       		.uleb128 0x11
 2979 00b9 01       		.uleb128 0x1
 2980 00ba 12       		.uleb128 0x12
 2981 00bb 06       		.uleb128 0x6
 2982 00bc 00       		.byte	0
 2983 00bd 00       		.byte	0
 2984 00be 0F       		.uleb128 0xf
 2985 00bf 34       		.uleb128 0x34
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 65


 2986 00c0 00       		.byte	0
 2987 00c1 03       		.uleb128 0x3
 2988 00c2 08       		.uleb128 0x8
 2989 00c3 3A       		.uleb128 0x3a
 2990 00c4 0B       		.uleb128 0xb
 2991 00c5 3B       		.uleb128 0x3b
 2992 00c6 0B       		.uleb128 0xb
 2993 00c7 49       		.uleb128 0x49
 2994 00c8 13       		.uleb128 0x13
 2995 00c9 02       		.uleb128 0x2
 2996 00ca 18       		.uleb128 0x18
 2997 00cb 00       		.byte	0
 2998 00cc 00       		.byte	0
 2999 00cd 10       		.uleb128 0x10
 3000 00ce 2E       		.uleb128 0x2e
 3001 00cf 00       		.byte	0
 3002 00d0 3F       		.uleb128 0x3f
 3003 00d1 19       		.uleb128 0x19
 3004 00d2 03       		.uleb128 0x3
 3005 00d3 0E       		.uleb128 0xe
 3006 00d4 3A       		.uleb128 0x3a
 3007 00d5 0B       		.uleb128 0xb
 3008 00d6 3B       		.uleb128 0x3b
 3009 00d7 0B       		.uleb128 0xb
 3010 00d8 27       		.uleb128 0x27
 3011 00d9 19       		.uleb128 0x19
 3012 00da 11       		.uleb128 0x11
 3013 00db 01       		.uleb128 0x1
 3014 00dc 12       		.uleb128 0x12
 3015 00dd 06       		.uleb128 0x6
 3016 00de 40       		.uleb128 0x40
 3017 00df 18       		.uleb128 0x18
 3018 00e0 9642     		.uleb128 0x2116
 3019 00e2 19       		.uleb128 0x19
 3020 00e3 00       		.byte	0
 3021 00e4 00       		.byte	0
 3022 00e5 11       		.uleb128 0x11
 3023 00e6 2E       		.uleb128 0x2e
 3024 00e7 00       		.byte	0
 3025 00e8 3F       		.uleb128 0x3f
 3026 00e9 19       		.uleb128 0x19
 3027 00ea 03       		.uleb128 0x3
 3028 00eb 0E       		.uleb128 0xe
 3029 00ec 3A       		.uleb128 0x3a
 3030 00ed 0B       		.uleb128 0xb
 3031 00ee 3B       		.uleb128 0x3b
 3032 00ef 05       		.uleb128 0x5
 3033 00f0 27       		.uleb128 0x27
 3034 00f1 19       		.uleb128 0x19
 3035 00f2 11       		.uleb128 0x11
 3036 00f3 01       		.uleb128 0x1
 3037 00f4 12       		.uleb128 0x12
 3038 00f5 06       		.uleb128 0x6
 3039 00f6 40       		.uleb128 0x40
 3040 00f7 18       		.uleb128 0x18
 3041 00f8 9642     		.uleb128 0x2116
 3042 00fa 19       		.uleb128 0x19
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 66


 3043 00fb 00       		.byte	0
 3044 00fc 00       		.byte	0
 3045 00fd 12       		.uleb128 0x12
 3046 00fe 2E       		.uleb128 0x2e
 3047 00ff 00       		.byte	0
 3048 0100 3F       		.uleb128 0x3f
 3049 0101 19       		.uleb128 0x19
 3050 0102 03       		.uleb128 0x3
 3051 0103 0E       		.uleb128 0xe
 3052 0104 3A       		.uleb128 0x3a
 3053 0105 0B       		.uleb128 0xb
 3054 0106 3B       		.uleb128 0x3b
 3055 0107 05       		.uleb128 0x5
 3056 0108 27       		.uleb128 0x27
 3057 0109 19       		.uleb128 0x19
 3058 010a 11       		.uleb128 0x11
 3059 010b 01       		.uleb128 0x1
 3060 010c 12       		.uleb128 0x12
 3061 010d 06       		.uleb128 0x6
 3062 010e 40       		.uleb128 0x40
 3063 010f 18       		.uleb128 0x18
 3064 0110 9742     		.uleb128 0x2117
 3065 0112 19       		.uleb128 0x19
 3066 0113 00       		.byte	0
 3067 0114 00       		.byte	0
 3068 0115 13       		.uleb128 0x13
 3069 0116 2E       		.uleb128 0x2e
 3070 0117 01       		.byte	0x1
 3071 0118 3F       		.uleb128 0x3f
 3072 0119 19       		.uleb128 0x19
 3073 011a 03       		.uleb128 0x3
 3074 011b 0E       		.uleb128 0xe
 3075 011c 3A       		.uleb128 0x3a
 3076 011d 0B       		.uleb128 0xb
 3077 011e 3B       		.uleb128 0x3b
 3078 011f 05       		.uleb128 0x5
 3079 0120 27       		.uleb128 0x27
 3080 0121 19       		.uleb128 0x19
 3081 0122 49       		.uleb128 0x49
 3082 0123 13       		.uleb128 0x13
 3083 0124 11       		.uleb128 0x11
 3084 0125 01       		.uleb128 0x1
 3085 0126 12       		.uleb128 0x12
 3086 0127 06       		.uleb128 0x6
 3087 0128 40       		.uleb128 0x40
 3088 0129 18       		.uleb128 0x18
 3089 012a 9642     		.uleb128 0x2116
 3090 012c 19       		.uleb128 0x19
 3091 012d 01       		.uleb128 0x1
 3092 012e 13       		.uleb128 0x13
 3093 012f 00       		.byte	0
 3094 0130 00       		.byte	0
 3095 0131 14       		.uleb128 0x14
 3096 0132 0B       		.uleb128 0xb
 3097 0133 01       		.byte	0x1
 3098 0134 55       		.uleb128 0x55
 3099 0135 17       		.uleb128 0x17
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 67


 3100 0136 01       		.uleb128 0x1
 3101 0137 13       		.uleb128 0x13
 3102 0138 00       		.byte	0
 3103 0139 00       		.byte	0
 3104 013a 15       		.uleb128 0x15
 3105 013b 34       		.uleb128 0x34
 3106 013c 00       		.byte	0
 3107 013d 03       		.uleb128 0x3
 3108 013e 0E       		.uleb128 0xe
 3109 013f 3A       		.uleb128 0x3a
 3110 0140 0B       		.uleb128 0xb
 3111 0141 3B       		.uleb128 0x3b
 3112 0142 05       		.uleb128 0x5
 3113 0143 49       		.uleb128 0x49
 3114 0144 13       		.uleb128 0x13
 3115 0145 02       		.uleb128 0x2
 3116 0146 18       		.uleb128 0x18
 3117 0147 00       		.byte	0
 3118 0148 00       		.byte	0
 3119 0149 16       		.uleb128 0x16
 3120 014a 34       		.uleb128 0x34
 3121 014b 00       		.byte	0
 3122 014c 03       		.uleb128 0x3
 3123 014d 08       		.uleb128 0x8
 3124 014e 3A       		.uleb128 0x3a
 3125 014f 0B       		.uleb128 0xb
 3126 0150 3B       		.uleb128 0x3b
 3127 0151 05       		.uleb128 0x5
 3128 0152 49       		.uleb128 0x49
 3129 0153 13       		.uleb128 0x13
 3130 0154 02       		.uleb128 0x2
 3131 0155 18       		.uleb128 0x18
 3132 0156 00       		.byte	0
 3133 0157 00       		.byte	0
 3134 0158 17       		.uleb128 0x17
 3135 0159 2E       		.uleb128 0x2e
 3136 015a 00       		.byte	0
 3137 015b 3F       		.uleb128 0x3f
 3138 015c 19       		.uleb128 0x19
 3139 015d 03       		.uleb128 0x3
 3140 015e 0E       		.uleb128 0xe
 3141 015f 3A       		.uleb128 0x3a
 3142 0160 0B       		.uleb128 0xb
 3143 0161 3B       		.uleb128 0x3b
 3144 0162 05       		.uleb128 0x5
 3145 0163 11       		.uleb128 0x11
 3146 0164 01       		.uleb128 0x1
 3147 0165 12       		.uleb128 0x12
 3148 0166 06       		.uleb128 0x6
 3149 0167 40       		.uleb128 0x40
 3150 0168 18       		.uleb128 0x18
 3151 0169 9642     		.uleb128 0x2116
 3152 016b 19       		.uleb128 0x19
 3153 016c 00       		.byte	0
 3154 016d 00       		.byte	0
 3155 016e 18       		.uleb128 0x18
 3156 016f 34       		.uleb128 0x34
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 68


 3157 0170 00       		.byte	0
 3158 0171 03       		.uleb128 0x3
 3159 0172 0E       		.uleb128 0xe
 3160 0173 3A       		.uleb128 0x3a
 3161 0174 0B       		.uleb128 0xb
 3162 0175 3B       		.uleb128 0x3b
 3163 0176 0B       		.uleb128 0xb
 3164 0177 49       		.uleb128 0x49
 3165 0178 13       		.uleb128 0x13
 3166 0179 3F       		.uleb128 0x3f
 3167 017a 19       		.uleb128 0x19
 3168 017b 3C       		.uleb128 0x3c
 3169 017c 19       		.uleb128 0x19
 3170 017d 00       		.byte	0
 3171 017e 00       		.byte	0
 3172 017f 19       		.uleb128 0x19
 3173 0180 34       		.uleb128 0x34
 3174 0181 00       		.byte	0
 3175 0182 03       		.uleb128 0x3
 3176 0183 0E       		.uleb128 0xe
 3177 0184 3A       		.uleb128 0x3a
 3178 0185 0B       		.uleb128 0xb
 3179 0186 3B       		.uleb128 0x3b
 3180 0187 05       		.uleb128 0x5
 3181 0188 49       		.uleb128 0x49
 3182 0189 13       		.uleb128 0x13
 3183 018a 3F       		.uleb128 0x3f
 3184 018b 19       		.uleb128 0x19
 3185 018c 3C       		.uleb128 0x3c
 3186 018d 19       		.uleb128 0x19
 3187 018e 00       		.byte	0
 3188 018f 00       		.byte	0
 3189 0190 1A       		.uleb128 0x1a
 3190 0191 34       		.uleb128 0x34
 3191 0192 00       		.byte	0
 3192 0193 03       		.uleb128 0x3
 3193 0194 0E       		.uleb128 0xe
 3194 0195 3A       		.uleb128 0x3a
 3195 0196 0B       		.uleb128 0xb
 3196 0197 3B       		.uleb128 0x3b
 3197 0198 0B       		.uleb128 0xb
 3198 0199 49       		.uleb128 0x49
 3199 019a 13       		.uleb128 0x13
 3200 019b 3F       		.uleb128 0x3f
 3201 019c 19       		.uleb128 0x19
 3202 019d 02       		.uleb128 0x2
 3203 019e 18       		.uleb128 0x18
 3204 019f 00       		.byte	0
 3205 01a0 00       		.byte	0
 3206 01a1 1B       		.uleb128 0x1b
 3207 01a2 01       		.uleb128 0x1
 3208 01a3 01       		.byte	0x1
 3209 01a4 49       		.uleb128 0x49
 3210 01a5 13       		.uleb128 0x13
 3211 01a6 01       		.uleb128 0x1
 3212 01a7 13       		.uleb128 0x13
 3213 01a8 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 69


 3214 01a9 00       		.byte	0
 3215 01aa 1C       		.uleb128 0x1c
 3216 01ab 21       		.uleb128 0x21
 3217 01ac 00       		.byte	0
 3218 01ad 49       		.uleb128 0x49
 3219 01ae 13       		.uleb128 0x13
 3220 01af 2F       		.uleb128 0x2f
 3221 01b0 05       		.uleb128 0x5
 3222 01b1 00       		.byte	0
 3223 01b2 00       		.byte	0
 3224 01b3 1D       		.uleb128 0x1d
 3225 01b4 21       		.uleb128 0x21
 3226 01b5 00       		.byte	0
 3227 01b6 49       		.uleb128 0x49
 3228 01b7 13       		.uleb128 0x13
 3229 01b8 2F       		.uleb128 0x2f
 3230 01b9 0B       		.uleb128 0xb
 3231 01ba 00       		.byte	0
 3232 01bb 00       		.byte	0
 3233 01bc 1E       		.uleb128 0x1e
 3234 01bd 34       		.uleb128 0x34
 3235 01be 00       		.byte	0
 3236 01bf 03       		.uleb128 0x3
 3237 01c0 08       		.uleb128 0x8
 3238 01c1 3A       		.uleb128 0x3a
 3239 01c2 0B       		.uleb128 0xb
 3240 01c3 3B       		.uleb128 0x3b
 3241 01c4 0B       		.uleb128 0xb
 3242 01c5 49       		.uleb128 0x49
 3243 01c6 13       		.uleb128 0x13
 3244 01c7 3F       		.uleb128 0x3f
 3245 01c8 19       		.uleb128 0x19
 3246 01c9 02       		.uleb128 0x2
 3247 01ca 18       		.uleb128 0x18
 3248 01cb 00       		.byte	0
 3249 01cc 00       		.byte	0
 3250 01cd 00       		.byte	0
 3251              		.section	.debug_aranges,"",%progbits
 3252 0000 64000000 		.4byte	0x64
 3253 0004 0200     		.2byte	0x2
 3254 0006 00000000 		.4byte	.Ldebug_info0
 3255 000a 04       		.byte	0x4
 3256 000b 00       		.byte	0
 3257 000c 0000     		.2byte	0
 3258 000e 0000     		.2byte	0
 3259 0010 00000000 		.4byte	.LFB64
 3260 0014 14000000 		.4byte	.LFE64-.LFB64
 3261 0018 00000000 		.4byte	.LFB65
 3262 001c 08010000 		.4byte	.LFE65-.LFB65
 3263 0020 00000000 		.4byte	.LFB66
 3264 0024 7C010000 		.4byte	.LFE66-.LFB66
 3265 0028 00000000 		.4byte	.LFB67
 3266 002c B0000000 		.4byte	.LFE67-.LFB67
 3267 0030 00000000 		.4byte	.LFB68
 3268 0034 54000000 		.4byte	.LFE68-.LFB68
 3269 0038 00000000 		.4byte	.LFB69
 3270 003c 3C000000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 70


 3271 0040 00000000 		.4byte	.LFB70
 3272 0044 18000000 		.4byte	.LFE70-.LFB70
 3273 0048 00000000 		.4byte	.LFB71
 3274 004c 90030000 		.4byte	.LFE71-.LFB71
 3275 0050 00000000 		.4byte	.LFB72
 3276 0054 DC000000 		.4byte	.LFE72-.LFB72
 3277 0058 00000000 		.4byte	.LFB73
 3278 005c 20040000 		.4byte	.LFE73-.LFB73
 3279 0060 00000000 		.4byte	0
 3280 0064 00000000 		.4byte	0
 3281              		.section	.debug_ranges,"",%progbits
 3282              	.Ldebug_ranges0:
 3283 0000 78000000 		.4byte	.LBB4
 3284 0004 EE020000 		.4byte	.LBE4
 3285 0008 82030000 		.4byte	.LBB8
 3286 000c 84030000 		.4byte	.LBE8
 3287 0010 00000000 		.4byte	0
 3288 0014 00000000 		.4byte	0
 3289 0018 00000000 		.4byte	.LFB64
 3290 001c 14000000 		.4byte	.LFE64
 3291 0020 00000000 		.4byte	.LFB65
 3292 0024 08010000 		.4byte	.LFE65
 3293 0028 00000000 		.4byte	.LFB66
 3294 002c 7C010000 		.4byte	.LFE66
 3295 0030 00000000 		.4byte	.LFB67
 3296 0034 B0000000 		.4byte	.LFE67
 3297 0038 00000000 		.4byte	.LFB68
 3298 003c 54000000 		.4byte	.LFE68
 3299 0040 00000000 		.4byte	.LFB69
 3300 0044 3C000000 		.4byte	.LFE69
 3301 0048 00000000 		.4byte	.LFB70
 3302 004c 18000000 		.4byte	.LFE70
 3303 0050 00000000 		.4byte	.LFB71
 3304 0054 90030000 		.4byte	.LFE71
 3305 0058 00000000 		.4byte	.LFB72
 3306 005c DC000000 		.4byte	.LFE72
 3307 0060 00000000 		.4byte	.LFB73
 3308 0064 20040000 		.4byte	.LFE73
 3309 0068 00000000 		.4byte	0
 3310 006c 00000000 		.4byte	0
 3311              		.section	.debug_line,"",%progbits
 3312              	.Ldebug_line0:
 3313 0000 04050000 		.section	.debug_str,"MS",%progbits,1
 3313      0200CC01 
 3313      00000201 
 3313      FB0E0D00 
 3313      01010101 
 3314              	.LASF24:
 3315 0000 636F6E63 		.ascii	"concatCount\000"
 3315      6174436F 
 3315      756E7400 
 3316              	.LASF43:
 3317 000c 7472616E 		.ascii	"transmitData\000"
 3317      736D6974 
 3317      44617461 
 3317      00
 3318              	.LASF41:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 71


 3319 0019 6C6F7746 		.ascii	"lowFlag\000"
 3319      6C616700 
 3320              	.LASF20:
 3321 0021 49444C45 		.ascii	"IDLE\000"
 3321      00
 3322              	.LASF53:
 3323 0026 636F6C6C 		.ascii	"collisionLock\000"
 3323      6973696F 
 3323      6E4C6F63 
 3323      6B00
 3324              	.LASF26:
 3325 0034 52656365 		.ascii	"ReceiveInterruptHandler\000"
 3325      69766549 
 3325      6E746572 
 3325      72757074 
 3325      48616E64 
 3326              	.LASF2:
 3327 004c 73686F72 		.ascii	"short int\000"
 3327      7420696E 
 3327      7400
 3328              	.LASF34:
 3329 0056 696E7075 		.ascii	"input\000"
 3329      7400
 3330              	.LASF19:
 3331 005c 73697A65 		.ascii	"sizetype\000"
 3331      74797065 
 3331      00
 3332              	.LASF37:
 3333 0065 5F5F6374 		.ascii	"__ctype_ptr__\000"
 3333      7970655F 
 3333      7074725F 
 3333      5F00
 3334              	.LASF66:
 3335 0073 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3335      43313120 
 3335      352E342E 
 3335      31203230 
 3335      31363036 
 3336 00a6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3336      20726576 
 3336      6973696F 
 3336      6E203233 
 3336      37373135 
 3337 00d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3337      66756E63 
 3337      74696F6E 
 3337      2D736563 
 3337      74696F6E 
 3338              	.LASF57:
 3339 0101 63726355 		.ascii	"crcUsage\000"
 3339      73616765 
 3339      00
 3340              	.LASF71:
 3341 010a 6D61696E 		.ascii	"main\000"
 3341      00
 3342              	.LASF4:
 3343 010f 5F5F7569 		.ascii	"__uint16_t\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 72


 3343      6E743136 
 3343      5F7400
 3344              	.LASF61:
 3345 011a 64617461 		.ascii	"dataSize\000"
 3345      53697A65 
 3345      00
 3346              	.LASF13:
 3347 0123 75696E74 		.ascii	"uint8\000"
 3347      3800
 3348              	.LASF52:
 3349 0129 72656365 		.ascii	"receiveLock\000"
 3349      6976654C 
 3349      6F636B00 
 3350              	.LASF33:
 3351 0135 696E436F 		.ascii	"inCount\000"
 3351      756E7400 
 3352              	.LASF63:
 3353 013d 72656365 		.ascii	"receiveBitCount\000"
 3353      69766542 
 3353      6974436F 
 3353      756E7400 
 3354              	.LASF46:
 3355 014d 72656365 		.ascii	"receiveData\000"
 3355      69766544 
 3355      61746100 
 3356              	.LASF14:
 3357 0159 666C6F61 		.ascii	"float\000"
 3357      7400
 3358              	.LASF8:
 3359 015f 6C6F6E67 		.ascii	"long long int\000"
 3359      206C6F6E 
 3359      6720696E 
 3359      7400
 3360              	.LASF29:
 3361 016d 5472616E 		.ascii	"TransmitInterruptHandler\000"
 3361      736D6974 
 3361      496E7465 
 3361      72727570 
 3361      7448616E 
 3362              	.LASF6:
 3363 0186 6C6F6E67 		.ascii	"long int\000"
 3363      20696E74 
 3363      00
 3364              	.LASF35:
 3365 018f 73746174 		.ascii	"stateDiagram\000"
 3365      65446961 
 3365      6772616D 
 3365      00
 3366              	.LASF64:
 3367 019c 7472616E 		.ascii	"transmitAddress\000"
 3367      736D6974 
 3367      41646472 
 3367      65737300 
 3368              	.LASF38:
 3369 01ac 55534255 		.ascii	"USBUART_device\000"
 3369      4152545F 
 3369      64657669 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 73


 3369      636500
 3370              	.LASF23:
 3371 01bb 6A756E6B 		.ascii	"junk\000"
 3371      00
 3372              	.LASF31:
 3373 01c0 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 3373      696E6745 
 3373      64676549 
 3373      6E746572 
 3373      72757074 
 3374              	.LASF27:
 3375 01dc 54696D65 		.ascii	"TimerInterruptHandler\000"
 3375      72496E74 
 3375      65727275 
 3375      70744861 
 3375      6E646C65 
 3376              	.LASF69:
 3377 01f2 73746174 		.ascii	"state\000"
 3377      6500
 3378              	.LASF21:
 3379 01f8 434F4C4C 		.ascii	"COLLISION\000"
 3379      4953494F 
 3379      4E00
 3380              	.LASF49:
 3381 0202 64617461 		.ascii	"dataBitsRead\000"
 3381      42697473 
 3381      52656164 
 3381      00
 3382              	.LASF18:
 3383 020f 6C6F6E67 		.ascii	"long double\000"
 3383      20646F75 
 3383      626C6500 
 3384              	.LASF62:
 3385 021b 7472616E 		.ascii	"transmitBitCount\000"
 3385      736D6974 
 3385      42697443 
 3385      6F756E74 
 3385      00
 3386              	.LASF65:
 3387 022c 7472616E 		.ascii	"transmitMode\000"
 3387      736D6974 
 3387      4D6F6465 
 3387      00
 3388              	.LASF1:
 3389 0239 756E7369 		.ascii	"unsigned char\000"
 3389      676E6564 
 3389      20636861 
 3389      7200
 3390              	.LASF40:
 3391 0247 73797374 		.ascii	"systemState\000"
 3391      656D5374 
 3391      61746500 
 3392              	.LASF0:
 3393 0253 7369676E 		.ascii	"signed char\000"
 3393      65642063 
 3393      68617200 
 3394              	.LASF54:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 74


 3395 025f 736F7572 		.ascii	"sourceAddress\000"
 3395      63654164 
 3395      64726573 
 3395      7300
 3396              	.LASF9:
 3397 026d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3397      206C6F6E 
 3397      6720756E 
 3397      7369676E 
 3397      65642069 
 3398              	.LASF68:
 3399 0284 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 3399      73657273 
 3399      5C77696E 
 3399      73746F6E 
 3399      615C446F 
 3400 02b2 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 3400      726B696E 
 3400      6720495C 
 3400      63653439 
 3400      35306C61 
 3401              	.LASF10:
 3402 02e1 756E7369 		.ascii	"unsigned int\000"
 3402      676E6564 
 3402      20696E74 
 3402      00
 3403              	.LASF11:
 3404 02ee 75696E74 		.ascii	"uint16_t\000"
 3404      31365F74 
 3404      00
 3405              	.LASF7:
 3406 02f7 6C6F6E67 		.ascii	"long unsigned int\000"
 3406      20756E73 
 3406      69676E65 
 3406      6420696E 
 3406      7400
 3407              	.LASF50:
 3408 0309 64617461 		.ascii	"dataPtr\000"
 3408      50747200 
 3409              	.LASF48:
 3410 0311 72656365 		.ascii	"receivePosition\000"
 3410      69766550 
 3410      6F736974 
 3410      696F6E00 
 3411              	.LASF22:
 3412 0321 42555359 		.ascii	"BUSY\000"
 3412      00
 3413              	.LASF16:
 3414 0326 63686172 		.ascii	"char\000"
 3414      00
 3415              	.LASF12:
 3416 032b 696E7433 		.ascii	"int32_t\000"
 3416      325F7400 
 3417              	.LASF3:
 3418 0333 73686F72 		.ascii	"short unsigned int\000"
 3418      7420756E 
 3418      7369676E 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 75


 3418      65642069 
 3418      6E7400
 3419              	.LASF42:
 3420 0346 5F426F6F 		.ascii	"_Bool\000"
 3420      6C00
 3421              	.LASF70:
 3422 034c 6E6F7468 		.ascii	"nothing\000"
 3422      696E6700 
 3423              	.LASF44:
 3424 0354 62756666 		.ascii	"buffer\000"
 3424      657200
 3425              	.LASF67:
 3426 035b 6D61696E 		.ascii	"main.c\000"
 3426      2E6300
 3427              	.LASF17:
 3428 0362 72656738 		.ascii	"reg8\000"
 3428      00
 3429              	.LASF60:
 3430 0367 63757272 		.ascii	"currentChar\000"
 3430      656E7443 
 3430      68617200 
 3431              	.LASF45:
 3432 0373 72656365 		.ascii	"receiveBuffer\000"
 3432      69766542 
 3432      75666665 
 3432      7200
 3433              	.LASF15:
 3434 0381 646F7562 		.ascii	"double\000"
 3434      6C6500
 3435              	.LASF36:
 3436 0388 63686563 		.ascii	"checkForNewData\000"
 3436      6B466F72 
 3436      4E657744 
 3436      61746100 
 3437              	.LASF56:
 3438 0398 6D657373 		.ascii	"messageLength\000"
 3438      6167654C 
 3438      656E6774 
 3438      6800
 3439              	.LASF5:
 3440 03a6 5F5F696E 		.ascii	"__int32_t\000"
 3440      7433325F 
 3440      7400
 3441              	.LASF28:
 3442 03b0 72616E64 		.ascii	"randNum\000"
 3442      4E756D00 
 3443              	.LASF58:
 3444 03b8 68656164 		.ascii	"headerCRC\000"
 3444      65724352 
 3444      4300
 3445              	.LASF59:
 3446 03c2 61646472 		.ascii	"addressZeroReceive\000"
 3446      6573735A 
 3446      65726F52 
 3446      65636569 
 3446      766500
 3447              	.LASF25:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccsVzv21.s 			page 76


 3448 03d5 63686172 		.ascii	"characterRX\000"
 3448      61637465 
 3448      72525800 
 3449              	.LASF47:
 3450 03e1 706F7369 		.ascii	"position\000"
 3450      74696F6E 
 3450      00
 3451              	.LASF39:
 3452 03ea 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3452      52784275 
 3452      66666572 
 3452      00
 3453              	.LASF30:
 3454 03f7 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 3454      6E674564 
 3454      6765496E 
 3454      74657272 
 3454      75707448 
 3455              	.LASF55:
 3456 0412 64657374 		.ascii	"destinationAddress\000"
 3456      696E6174 
 3456      696F6E41 
 3456      64647265 
 3456      737300
 3457              	.LASF51:
 3458 0425 7472616E 		.ascii	"transmitLock\000"
 3458      736D6974 
 3458      4C6F636B 
 3458      00
 3459              	.LASF32:
 3460 0432 436F6C6C 		.ascii	"CollisionDelayInterruptHandler\000"
 3460      6973696F 
 3460      6E44656C 
 3460      6179496E 
 3460      74657272 
 3461              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
