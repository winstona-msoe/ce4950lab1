ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CollisionDelayInterruptHandler,"ax",%progbits
  20              		.align	2
  21              		.global	CollisionDelayInterruptHandler
  22              		.thumb
  23              		.thumb_func
  24              		.type	CollisionDelayInterruptHandler, %function
  25              	CollisionDelayInterruptHandler:
  26              	.LFB69:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * FILENAME: main.c
   3:main.c        ****  * AUTHORS: Tyler Wells, Andy Winston, 
   4:main.c        ****             Kamith Mirissage
   5:main.c        ****  * DATE: 11 DEC 2017
   6:main.c        ****  * PROVIDES:
   7:main.c        ****  * - A PSOC implementation of a system 
   8:main.c        ****  *   that fucntions as a message-exchange 
   9:main.c        ****  *   on CSMA/CD bus using unipolar return
  10:main.c        ****  *   to zero (RZ) line coding 
  11:main.c        ****  * - systemState machine with  channel monitor
  12:main.c        ****  *   implementation (BUSY/IDLE/COLLISION)
  13:main.c        ****  * - Software pushbutton debouncing used 
  14:main.c        ****  * - LED to signal different states
  15:main.c        ****  * - Interrupt handling for rising and 
  16:main.c        ****   *  edge triggers of a timer
  17:main.c        ****  * ========================================
  18:main.c        **** */
  19:main.c        **** 
  20:main.c        **** 
  21:main.c        **** 
  22:main.c        **** #include "project.h"
  23:main.c        **** #include <stdio.h>
  24:main.c        **** #include <stdlib.h>
  25:main.c        **** #include <stdbool.h>
  26:main.c        **** 
  27:main.c        **** //States include: 
  28:main.c        **** //Busy - signals that the channel monitor is busy
  29:main.c        **** //       and in either line high or line low 
  30:main.c        **** //Collision - collision detected, line high
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 2


  31:main.c        **** //Idle - initialized state looking for rising
  32:main.c        **** //       edge to occur
  33:main.c        **** enum state {IDLE, COLLISION, BUSY} systemState;
  34:main.c        **** 
  35:main.c        **** //flag to help determine if signal level is low or high
  36:main.c        **** _Bool lowFlag = 0;
  37:main.c        **** 
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** 
  41:main.c        **** #define BROADCAST_ADDRESS 0
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        **** #define VERSION_NUMBER 0x01
  45:main.c        **** #define CRC 128 //CRCs are not being used
  46:main.c        **** #define HEADER 0b1110111 //header CRC not being used 
  47:main.c        **** #define BLANK_MESSAGE_CRC 0x77
  48:main.c        **** #define COLLISION_PERIOD     52
  49:main.c        **** #define COLLISION_COUNTER    51
  50:main.c        **** #define IDLE_PERIOD     830
  51:main.c        **** #define IDLE_COUNTER    829
  52:main.c        **** #define RECEIVE_PERIOD   52
  53:main.c        **** #define RECEIVE_COUNTER  51
  54:main.c        **** #define TRANSMIT_PERIOD     47
  55:main.c        **** #define TRANSMIT_COUNTER    46 
  56:main.c        **** #define BUFFER_SIZE 500
  57:main.c        **** //student assigned addressses
  58:main.c        **** #define ADDR1Start 0x60 //46
  59:main.c        **** #define ADDR2Start 55
  60:main.c        **** #define ADDR3Start 124 //Kamith didn't have one listed so gave him 124
  61:main.c        **** #define ADDRLength 2
  62:main.c        **** 
  63:main.c        **** #define MESSAGE_POS 7
  64:main.c        **** #define HEADER_SIZE
  65:main.c        **** 
  66:main.c        **** 
  67:main.c        **** unsigned char transmitData[BUFFER_SIZE][16];
  68:main.c        **** unsigned char buffer[BUFFER_SIZE];
  69:main.c        **** unsigned char receiveBuffer[BUFFER_SIZE];
  70:main.c        **** unsigned char receiveData[16]; 
  71:main.c        **** volatile int position = 0;
  72:main.c        **** int receivePosition = 0;
  73:main.c        **** int dataBitsRead = 0;
  74:main.c        **** int idx = 0;
  75:main.c        **** char* dataPtr;
  76:main.c        **** int transmitLock = 0; // High when transmitting
  77:main.c        **** int receiveLock = 0;
  78:main.c        **** bool collisionLock = false; // High when collision should not.
  79:main.c        **** //int startHeaderReceieved = 0;
  80:main.c        **** //int verNumMatch = 0;
  81:main.c        **** char sourceAddress = 0x00;
  82:main.c        **** char destinationAddress = 0x00;
  83:main.c        **** int  messageLength = 0;
  84:main.c        **** char crcUsage = 0x00;
  85:main.c        **** char headerCRC = 0x00;
  86:main.c        **** int addressZeroReceive = 0;
  87:main.c        **** char currentChar;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 3


  88:main.c        **** int dataSize;
  89:main.c        **** int transmitBitCount = 0;
  90:main.c        **** int receiveBitCount = 0;
  91:main.c        **** int concatCount = 0;
  92:main.c        **** unsigned char transmitAddress = 0; 
  93:main.c        **** 
  94:main.c        **** bool transmitMode = true; // Whether currently transmitting or receiving
  95:main.c        **** 
  96:main.c        **** void checkForNewData(); 
  97:main.c        **** void stateDiagram(); 
  98:main.c        **** 
  99:main.c        **** /*******************************************************************************
 100:main.c        **** * Define Interrupt service routine and allocate an vector to the Interrupt
 101:main.c        **** ********************************************************************************/
 102:main.c        **** 
 103:main.c        ****  /**********************************************************
 104:main.c        ****  * function name: ReceiveInterruptHandler
 105:main.c        ****  * operation: Handles interrupt timer if the timer expires
 106:main.c        ****  *            indicates an idle condition or colllision
 107:main.c        ****  *            reads the logic levon the input pin/signal
 108:main.c        ****  *            high -> collision set
 109:main.c        ****  *            low -> idle set
 110:main.c        ****  * inputs: none
 111:main.c        ****  * returns: none
 112:main.c        ****  * implemented: 14 Dec 2017
 113:main.c        ****  * edited:
 114:main.c        ****  *********************************************************/ 
 115:main.c        **** 
 116:main.c        **** // TODO Code needs to be added to accept signals at
 117:main.c        **** // various speeds. The documentation states that the signal
 118:main.c        **** // MUST be tolerated at speeds of ±1.32%, and MUST NOT be
 119:main.c        **** // tolerated at speeds of ±8% or so. See standard specification
 120:main.c        **** // for more details.
 121:main.c        **** 
 122:main.c        **** // TODO Move characterRX logic into RX_Bit_Counter
 123:main.c        **** // incrementation section of code. This will make
 124:main.c        **** // this ISR more efficient.
 125:main.c        **** CY_ISR(ReceiveInterruptHandler){
 126:main.c        ****     int concatCount = 0;
 127:main.c        ****     char characterRX = 0;
 128:main.c        ****     
 129:main.c        ****     TimerRX_STATUS; 
 130:main.c        ****     
 131:main.c        ****     if(systemState != COLLISION){
 132:main.c        ****         TimerRX_Start();
 133:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
 134:main.c        ****         ++receiveBitCount;
 135:main.c        ****         
 136:main.c        ****     }else{
 137:main.c        ****         
 138:main.c        ****         receiveBitCount = 0;   
 139:main.c        ****         receivePosition = 0;
 140:main.c        ****         dataBitsRead = 0;
 141:main.c        ****         TimerRX_Stop();
 142:main.c        ****         receiveLock = 0;
 143:main.c        ****     }
 144:main.c        ****     
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 4


 145:main.c        ****     if(receiveBitCount >= 15 ){
 146:main.c        ****         receiveBitCount = 0;
 147:main.c        ****         TimerRX_Stop();
 148:main.c        ****         receiveLock = 0;
 149:main.c        ****         
 150:main.c        ****         
 151:main.c        ****         for(int x = 15; x >= 0; x--){
 152:main.c        ****             if(x == 15){
 153:main.c        ****              characterRX = 0x00;    
 154:main.c        ****             }
 155:main.c        ****             if(x % 2 != 0){
 156:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 157:main.c        ****                 ++concatCount;
 158:main.c        ****             }
 159:main.c        ****         }
 160:main.c        ****         receiveBuffer[receivePosition] = characterRX;
 161:main.c        ****         ++receivePosition;
 162:main.c        ****        
 163:main.c        ****     }
 164:main.c        **** }
 165:main.c        **** 
 166:main.c        ****  /**********************************************************
 167:main.c        ****  * function name: ReceiveInterruptHandler
 168:main.c        ****  * operation: Handles the transmit interrupt.
 169:main.c        **** Fires each time we need to transmit.
 170:main.c        ****  * inputs: none
 171:main.c        ****  * returns: none
 172:main.c        ****  * implemented: 14 Dec 2017
 173:main.c        ****  * edited:
 174:main.c        ****  *********************************************************/ 
 175:main.c        **** CY_ISR(TransmitInterruptHandler)
 176:main.c        **** {
 177:main.c        **** 	TimerTX_STATUS; 
 178:main.c        ****     if (position >= dataSize) {
 179:main.c        ****         return;
 180:main.c        ****     }
 181:main.c        **** 	currentChar = buffer[position];
 182:main.c        **** 
 183:main.c        ****     if (!collisionLock) {
 184:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 185:main.c        ****     		if(transmitBitCount == 0){
 186:main.c        ****     			TRANSMIT_Write(1);
 187:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 188:main.c        ****     		}else if(transmitBitCount%2 != 0){
 189:main.c        ****     			TRANSMIT_Write(0);
 190:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 191:main.c        ****     		}else{
 192:main.c        ****     			if(currentChar & (1<<(6-idx))){
 193:main.c        ****     				TRANSMIT_Write(1);
 194:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 195:main.c        ****     			}else{
 196:main.c        ****     				TRANSMIT_Write(0);
 197:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 198:main.c        ****     			}
 199:main.c        ****     				++idx;
 200:main.c        ****     		}
 201:main.c        ****         }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 5


 202:main.c        ****         // CyDelayUs(495);
 203:main.c        ****         ++transmitBitCount;
 204:main.c        ****         if(transmitBitCount >= 16){
 205:main.c        **** 		    ++position;
 206:main.c        **** 		    idx = 0;
 207:main.c        **** 		    transmitBitCount = 0;
 208:main.c        ****             transmitLock = 0;
 209:main.c        ****             TRANSMIT_Write(0);
 210:main.c        **** 
 211:main.c        ****         }
 212:main.c        ****     } else {
 213:main.c        ****         position = 0;
 214:main.c        ****         transmitBitCount = 0;
 215:main.c        ****     }
 216:main.c        **** }
 217:main.c        **** 
 218:main.c        **** 
 219:main.c        ****  /**********************************************************
 220:main.c        ****  * function name: TimerInterruptHandler
 221:main.c        ****  * operation: When a node that is transmitting and detects 
 222:main.c        ****  *            a collision, the node shall stop transmitting
 223:main.c        ****  *            and wait a random amount of time between 0
 224:main.c        ****  *            and 1.000 second (s), and then determine if
 225:main.c        ****  *            the bus is idle and if so begin a retrans.
 226:main.c        ****  * inputs: none
 227:main.c        ****  * returns: none
 228:main.c        ****  * implemented: 14 Dec 2017
 229:main.c        ****  * edited:
 230:main.c        ****  *********************************************************/
 231:main.c        **** 
 232:main.c        **** //TODO: WORK ON THE TRYING REATTEMPT UP TO 10 TIMES
 233:main.c        **** CY_ISR(TimerInterruptHandler)
 234:main.c        **** {     
 235:main.c        ****    	Timer_STATUS; 
 236:main.c        ****     
 237:main.c        ****     if (!(lowFlag) ){
 238:main.c        ****         systemState = IDLE;
 239:main.c        ****          transmitLock = 1;
 240:main.c        ****     } else {
 241:main.c        ****         systemState = COLLISION;
 242:main.c        ****         TRANSMIT_Write(0); 
 243:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 244:main.c        ****         collisionLock = 1; // Collision
 245:main.c        ****         position = 0; // Start over entire packet.
 246:main.c        ****         receivePosition = 0;
 247:main.c        ****         
 248:main.c        ****         uint16_t randNum = (uint16_t)((float)rand() / RAND_MAX * 1000);
 249:main.c        ****         CollisionDelay_WritePeriod(randNum);
 250:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 251:main.c        ****         CollisionDelay_Start();
 252:main.c        ****     }
 253:main.c        **** }
 254:main.c        **** 
 255:main.c        **** 
 256:main.c        ****  /**********************************************************
 257:main.c        ****  * function name: RisingEdgeInterruptHandler
 258:main.c        ****  * operation: Handles interrupt for when a rising edge on 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 6


 259:main.c        ****  *            the timer occurs. Triggers system to look for
 260:main.c        ****  *            falling edge (1 -> 0). Schedules a timer
 261:main.c        ****  *            interupt to occur in .6ms and sets state to 
 262:main.c        ****  *            busy
 263:main.c        ****  * inputs: none
 264:main.c        ****  * returns: none
 265:main.c        ****  * implemented: 14 Dec 2017
 266:main.c        ****  * edited:
 267:main.c        ****  *********************************************************/ 
 268:main.c        **** 
 269:main.c        **** // TODO Fix "race against time" between ReceiveInterruptHandler ant his.
 270:main.c        **** // If this wins the race, then RX_Bit_Counter doesn't increment properly.
 271:main.c        **** // This is the reason why code didn't work well at higher speeds.
 272:main.c        **** CY_ISR(RisingEdgeInterruptHandler)
 273:main.c        **** {
 274:main.c        ****     if ((!lowFlag)){
 275:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 276:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 277:main.c        ****         Timer_Start();
 278:main.c        ****         lowFlag = 1;
 279:main.c        ****         systemState = BUSY;
 280:main.c        ****     }
 281:main.c        ****     if(receiveLock == 0){
 282:main.c        ****         TimerRX_Start();
 283:main.c        ****         receiveLock = 1;
 284:main.c        ****         
 285:main.c        ****     }
 286:main.c        **** }
 287:main.c        ****  
 288:main.c        ****  /**********************************************************
 289:main.c        ****  * function name: FallingEdgeInterruptHandler
 290:main.c        ****  * operation: Handles interrupt for when a falling edge on 
 291:main.c        ****  *            the timer occurs. Triggers system to look for
 292:main.c        ****  *            rising edge (0 -> 1). Schedules a timer
 293:main.c        ****  *            interupt to occur in 7.7 ms and sets state to 
 294:main.c        ****  *            busy
 295:main.c        ****  * inputs: none
 296:main.c        ****  * returns: none
 297:main.c        ****  * implemented: 14 Dec 2017
 298:main.c        ****  * edited:
 299:main.c        ****  *********************************************************/ 
 300:main.c        **** // TODO This could also contribute to the "race against time" issue.
 301:main.c        **** CY_ISR(FallingEdgeInterruptHandler)
 302:main.c        **** {
 303:main.c        ****     if (lowFlag){
 304:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 305:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 306:main.c        ****         Timer_Start();
 307:main.c        ****         lowFlag = 0;
 308:main.c        ****         systemState = BUSY;
 309:main.c        ****     }
 310:main.c        **** }
 311:main.c        **** 
 312:main.c        **** /**
 313:main.c        **** This interrupt should fire after the random delay period of the timer after
 314:main.c        **** a collision has expired. All this does is tells the transmitter that it has
 315:main.c        **** the green light to transmit.
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 7


 316:main.c        **** */
 317:main.c        **** CY_ISR(CollisionDelayInterruptHandler)
 318:main.c        **** {
  28              		.loc 1 318 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 319:main.c        ****     collisionLock = false;
  33              		.loc 1 319 0
  34 0000 0022     		movs	r2, #0
  35 0002 014B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
  37 0006 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0008 00000000 		.word	.LANCHOR0
  42              		.cfi_endproc
  43              	.LFE69:
  44              		.size	CollisionDelayInterruptHandler, .-CollisionDelayInterruptHandler
  45              		.section	.text.ReceiveInterruptHandler,"ax",%progbits
  46              		.align	2
  47              		.global	ReceiveInterruptHandler
  48              		.thumb
  49              		.thumb_func
  50              		.type	ReceiveInterruptHandler, %function
  51              	ReceiveInterruptHandler:
  52              	.LFB64:
 125:main.c        ****     int concatCount = 0;
  53              		.loc 1 125 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 0000 38B5     		push	{r3, r4, r5, lr}
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 3, -16
  60              		.cfi_offset 4, -12
  61              		.cfi_offset 5, -8
  62              		.cfi_offset 14, -4
  63              	.LVL0:
 129:main.c        ****     
  64              		.loc 1 129 0
  65 0002 1F4B     		ldr	r3, .L14
  66 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131:main.c        ****         TimerRX_Start();
  67              		.loc 1 131 0
  68 0006 1F4B     		ldr	r3, .L14+4
  69 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 000a 012B     		cmp	r3, #1
  71 000c 0BD0     		beq	.L5
 132:main.c        ****         receiveData[receiveBitCount] = RECEIVE_Read(); 
  72              		.loc 1 132 0
  73 000e FFF7FEFF 		bl	TimerRX_Start
  74              	.LVL1:
 133:main.c        ****         ++receiveBitCount;
  75              		.loc 1 133 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 8


  76 0012 1D4C     		ldr	r4, .L14+8
  77 0014 6568     		ldr	r5, [r4, #4]
  78 0016 FFF7FEFF 		bl	RECEIVE_Read
  79              	.LVL2:
  80 001a 1C4B     		ldr	r3, .L14+12
  81 001c 5855     		strb	r0, [r3, r5]
 134:main.c        ****         
  82              		.loc 1 134 0
  83 001e 6368     		ldr	r3, [r4, #4]
  84 0020 0133     		adds	r3, r3, #1
  85 0022 6360     		str	r3, [r4, #4]
  86 0024 07E0     		b	.L6
  87              	.L5:
 138:main.c        ****         receivePosition = 0;
  88              		.loc 1 138 0
  89 0026 184C     		ldr	r4, .L14+8
  90 0028 0025     		movs	r5, #0
  91 002a 6560     		str	r5, [r4, #4]
 139:main.c        ****         dataBitsRead = 0;
  92              		.loc 1 139 0
  93 002c A560     		str	r5, [r4, #8]
 140:main.c        ****         TimerRX_Stop();
  94              		.loc 1 140 0
  95 002e E560     		str	r5, [r4, #12]
 141:main.c        ****         receiveLock = 0;
  96              		.loc 1 141 0
  97 0030 FFF7FEFF 		bl	TimerRX_Stop
  98              	.LVL3:
 142:main.c        ****     }
  99              		.loc 1 142 0
 100 0034 2561     		str	r5, [r4, #16]
 101              	.L6:
 145:main.c        ****         receiveBitCount = 0;
 102              		.loc 1 145 0
 103 0036 144B     		ldr	r3, .L14+8
 104 0038 5B68     		ldr	r3, [r3, #4]
 105 003a 0E2B     		cmp	r3, #14
 106 003c 1FDD     		ble	.L4
 146:main.c        ****         TimerRX_Stop();
 107              		.loc 1 146 0
 108 003e 124D     		ldr	r5, .L14+8
 109 0040 0024     		movs	r4, #0
 110 0042 6C60     		str	r4, [r5, #4]
 147:main.c        ****         receiveLock = 0;
 111              		.loc 1 147 0
 112 0044 FFF7FEFF 		bl	TimerRX_Stop
 113              	.LVL4:
 148:main.c        ****         
 114              		.loc 1 148 0
 115 0048 2C61     		str	r4, [r5, #16]
 116              	.LVL5:
 117              	.LBB2:
 151:main.c        ****             if(x == 15){
 118              		.loc 1 151 0
 119 004a 0F23     		movs	r3, #15
 120              	.LBE2:
 127:main.c        ****     
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 9


 121              		.loc 1 127 0
 122 004c 2246     		mov	r2, r4
 126:main.c        ****     char characterRX = 0;
 123              		.loc 1 126 0
 124 004e 2046     		mov	r0, r4
 125              	.LBB3:
 151:main.c        ****             if(x == 15){
 126              		.loc 1 151 0
 127 0050 0DE0     		b	.L8
 128              	.LVL6:
 129              	.L11:
 152:main.c        ****              characterRX = 0x00;    
 130              		.loc 1 152 0
 131 0052 0F2B     		cmp	r3, #15
 132 0054 00D1     		bne	.L9
 153:main.c        ****             }
 133              		.loc 1 153 0
 134 0056 0022     		movs	r2, #0
 135              	.LVL7:
 136              	.L9:
 155:main.c        ****                 characterRX = (characterRX | (receiveData[x] << (concatCount-1)));              
 137              		.loc 1 155 0
 138 0058 13F0010F 		tst	r3, #1
 139 005c 06D0     		beq	.L10
 156:main.c        ****                 ++concatCount;
 140              		.loc 1 156 0
 141 005e 0B49     		ldr	r1, .L14+12
 142 0060 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 143 0062 441E     		subs	r4, r0, #1
 144 0064 A140     		lsls	r1, r1, r4
 145 0066 0A43     		orrs	r2, r2, r1
 146              	.LVL8:
 147 0068 D2B2     		uxtb	r2, r2
 148              	.LVL9:
 157:main.c        ****             }
 149              		.loc 1 157 0
 150 006a 0130     		adds	r0, r0, #1
 151              	.LVL10:
 152              	.L10:
 151:main.c        ****             if(x == 15){
 153              		.loc 1 151 0 discriminator 2
 154 006c 013B     		subs	r3, r3, #1
 155              	.LVL11:
 156              	.L8:
 151:main.c        ****             if(x == 15){
 157              		.loc 1 151 0 is_stmt 0 discriminator 1
 158 006e 002B     		cmp	r3, #0
 159 0070 EFDA     		bge	.L11
 160              	.LBE3:
 160:main.c        ****         ++receivePosition;
 161              		.loc 1 160 0 is_stmt 1
 162 0072 0549     		ldr	r1, .L14+8
 163 0074 8B68     		ldr	r3, [r1, #8]
 164              	.LVL12:
 165 0076 0648     		ldr	r0, .L14+16
 166              	.LVL13:
 167 0078 C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 10


 161:main.c        ****        
 168              		.loc 1 161 0
 169 007a 0133     		adds	r3, r3, #1
 170 007c 8B60     		str	r3, [r1, #8]
 171              	.LVL14:
 172              	.L4:
 173 007e 38BD     		pop	{r3, r4, r5, pc}
 174              	.L15:
 175              		.align	2
 176              	.L14:
 177 0080 67650040 		.word	1073767783
 178 0084 00000000 		.word	systemState
 179 0088 00000000 		.word	.LANCHOR0
 180 008c 00000000 		.word	receiveData
 181 0090 00000000 		.word	receiveBuffer
 182              		.cfi_endproc
 183              	.LFE64:
 184              		.size	ReceiveInterruptHandler, .-ReceiveInterruptHandler
 185              		.section	.text.TransmitInterruptHandler,"ax",%progbits
 186              		.align	2
 187              		.global	TransmitInterruptHandler
 188              		.thumb
 189              		.thumb_func
 190              		.type	TransmitInterruptHandler, %function
 191              	TransmitInterruptHandler:
 192              	.LFB65:
 176:main.c        **** 	TimerTX_STATUS; 
 193              		.loc 1 176 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 177:main.c        ****     if (position >= dataSize) {
 201              		.loc 1 177 0
 202 0002 3B4B     		ldr	r3, .L27
 203 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 178:main.c        ****         return;
 204              		.loc 1 178 0
 205 0006 3B4B     		ldr	r3, .L27+4
 206 0008 5A69     		ldr	r2, [r3, #20]
 207 000a 3B4B     		ldr	r3, .L27+8
 208 000c 1B68     		ldr	r3, [r3]
 209 000e 9A42     		cmp	r2, r3
 210 0010 6DDA     		bge	.L16
 181:main.c        **** 
 211              		.loc 1 181 0
 212 0012 384A     		ldr	r2, .L27+4
 213 0014 5169     		ldr	r1, [r2, #20]
 214 0016 3948     		ldr	r0, .L27+12
 215 0018 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 216 001a 3948     		ldr	r0, .L27+16
 217 001c 0170     		strb	r1, [r0]
 183:main.c        ****     	if(((position < dataSize) && (systemState == IDLE)) || ((transmitLock) && (systemState == BUSY
 218              		.loc 1 183 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 11


 219 001e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 220 0020 002A     		cmp	r2, #0
 221 0022 60D1     		bne	.L18
 184:main.c        ****     		if(transmitBitCount == 0){
 222              		.loc 1 184 0
 223 0024 334A     		ldr	r2, .L27+4
 224 0026 5269     		ldr	r2, [r2, #20]
 225 0028 9342     		cmp	r3, r2
 226 002a 02DD     		ble	.L19
 184:main.c        ****     		if(transmitBitCount == 0){
 227              		.loc 1 184 0 is_stmt 0 discriminator 1
 228 002c 354B     		ldr	r3, .L27+20
 229 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230 0030 3BB1     		cbz	r3, .L20
 231              	.L19:
 184:main.c        ****     		if(transmitBitCount == 0){
 232              		.loc 1 184 0 discriminator 3
 233 0032 304B     		ldr	r3, .L27+4
 234 0034 9B69     		ldr	r3, [r3, #24]
 235 0036 002B     		cmp	r3, #0
 236 0038 44D0     		beq	.L21
 184:main.c        ****     		if(transmitBitCount == 0){
 237              		.loc 1 184 0 discriminator 4
 238 003a 324B     		ldr	r3, .L27+20
 239 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 003e 022B     		cmp	r3, #2
 241 0040 40D1     		bne	.L21
 242              	.L20:
 185:main.c        ****     			TRANSMIT_Write(1);
 243              		.loc 1 185 0 is_stmt 1
 244 0042 2C4B     		ldr	r3, .L27+4
 245 0044 DB69     		ldr	r3, [r3, #28]
 246 0046 5BB9     		cbnz	r3, .L22
 186:main.c        ****     			transmitData[position][transmitBitCount] = 0x31;
 247              		.loc 1 186 0
 248 0048 0120     		movs	r0, #1
 249 004a FFF7FEFF 		bl	TRANSMIT_Write
 250              	.LVL15:
 187:main.c        ****     		}else if(transmitBitCount%2 != 0){
 251              		.loc 1 187 0
 252 004e 294A     		ldr	r2, .L27+4
 253 0050 5169     		ldr	r1, [r2, #20]
 254 0052 D269     		ldr	r2, [r2, #28]
 255 0054 2C4B     		ldr	r3, .L27+24
 256 0056 03EB0113 		add	r3, r3, r1, lsl #4
 257 005a 3121     		movs	r1, #49
 258 005c 9954     		strb	r1, [r3, r2]
 259 005e 31E0     		b	.L21
 260              	.L22:
 188:main.c        ****     			TRANSMIT_Write(0);
 261              		.loc 1 188 0
 262 0060 13F0010F 		tst	r3, #1
 263 0064 0BD0     		beq	.L23
 189:main.c        ****     			transmitData[position][transmitBitCount] = 0x30;
 264              		.loc 1 189 0
 265 0066 0020     		movs	r0, #0
 266 0068 FFF7FEFF 		bl	TRANSMIT_Write
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 12


 267              	.LVL16:
 190:main.c        ****     		}else{
 268              		.loc 1 190 0
 269 006c 214A     		ldr	r2, .L27+4
 270 006e 5169     		ldr	r1, [r2, #20]
 271 0070 D269     		ldr	r2, [r2, #28]
 272 0072 254B     		ldr	r3, .L27+24
 273 0074 03EB0113 		add	r3, r3, r1, lsl #4
 274 0078 3021     		movs	r1, #48
 275 007a 9954     		strb	r1, [r3, r2]
 276 007c 22E0     		b	.L21
 277              	.L23:
 192:main.c        ****     				TRANSMIT_Write(1);
 278              		.loc 1 192 0
 279 007e 1D4B     		ldr	r3, .L27+4
 280 0080 1B6A     		ldr	r3, [r3, #32]
 281 0082 C3F10603 		rsb	r3, r3, #6
 282 0086 1941     		asrs	r1, r1, r3
 283 0088 11F0010F 		tst	r1, #1
 284 008c 0BD0     		beq	.L24
 193:main.c        ****     				transmitData[position][transmitBitCount] = 0x31;
 285              		.loc 1 193 0
 286 008e 0120     		movs	r0, #1
 287 0090 FFF7FEFF 		bl	TRANSMIT_Write
 288              	.LVL17:
 194:main.c        ****     			}else{
 289              		.loc 1 194 0
 290 0094 174A     		ldr	r2, .L27+4
 291 0096 5169     		ldr	r1, [r2, #20]
 292 0098 D269     		ldr	r2, [r2, #28]
 293 009a 1B4B     		ldr	r3, .L27+24
 294 009c 03EB0113 		add	r3, r3, r1, lsl #4
 295 00a0 3121     		movs	r1, #49
 296 00a2 9954     		strb	r1, [r3, r2]
 297 00a4 0AE0     		b	.L25
 298              	.L24:
 196:main.c        ****     				transmitData[position][transmitBitCount] = 0x30;   
 299              		.loc 1 196 0
 300 00a6 0020     		movs	r0, #0
 301 00a8 FFF7FEFF 		bl	TRANSMIT_Write
 302              	.LVL18:
 197:main.c        ****     			}
 303              		.loc 1 197 0
 304 00ac 114A     		ldr	r2, .L27+4
 305 00ae 5169     		ldr	r1, [r2, #20]
 306 00b0 D269     		ldr	r2, [r2, #28]
 307 00b2 154B     		ldr	r3, .L27+24
 308 00b4 03EB0113 		add	r3, r3, r1, lsl #4
 309 00b8 3021     		movs	r1, #48
 310 00ba 9954     		strb	r1, [r3, r2]
 311              	.L25:
 199:main.c        ****     		}
 312              		.loc 1 199 0
 313 00bc 0D4A     		ldr	r2, .L27+4
 314 00be 136A     		ldr	r3, [r2, #32]
 315 00c0 0133     		adds	r3, r3, #1
 316 00c2 1362     		str	r3, [r2, #32]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 13


 317              	.L21:
 203:main.c        ****         if(transmitBitCount >= 16){
 318              		.loc 1 203 0
 319 00c4 0B4A     		ldr	r2, .L27+4
 320 00c6 D369     		ldr	r3, [r2, #28]
 321 00c8 0133     		adds	r3, r3, #1
 322 00ca D361     		str	r3, [r2, #28]
 204:main.c        **** 		    ++position;
 323              		.loc 1 204 0
 324 00cc 0F2B     		cmp	r3, #15
 325 00ce 0EDD     		ble	.L16
 205:main.c        **** 		    idx = 0;
 326              		.loc 1 205 0
 327 00d0 1346     		mov	r3, r2
 328 00d2 5269     		ldr	r2, [r2, #20]
 329 00d4 0132     		adds	r2, r2, #1
 330 00d6 5A61     		str	r2, [r3, #20]
 206:main.c        **** 		    transmitBitCount = 0;
 331              		.loc 1 206 0
 332 00d8 0020     		movs	r0, #0
 333 00da 1862     		str	r0, [r3, #32]
 207:main.c        ****             transmitLock = 0;
 334              		.loc 1 207 0
 335 00dc D861     		str	r0, [r3, #28]
 208:main.c        ****             TRANSMIT_Write(0);
 336              		.loc 1 208 0
 337 00de 9861     		str	r0, [r3, #24]
 209:main.c        **** 
 338              		.loc 1 209 0
 339 00e0 FFF7FEFF 		bl	TRANSMIT_Write
 340              	.LVL19:
 341 00e4 08BD     		pop	{r3, pc}
 342              	.L18:
 213:main.c        ****         transmitBitCount = 0;
 343              		.loc 1 213 0
 344 00e6 034B     		ldr	r3, .L27+4
 345 00e8 0022     		movs	r2, #0
 346 00ea 5A61     		str	r2, [r3, #20]
 214:main.c        ****     }
 347              		.loc 1 214 0
 348 00ec DA61     		str	r2, [r3, #28]
 349              	.L16:
 350 00ee 08BD     		pop	{r3, pc}
 351              	.L28:
 352              		.align	2
 353              	.L27:
 354 00f0 034F0040 		.word	1073762051
 355 00f4 00000000 		.word	.LANCHOR0
 356 00f8 00000000 		.word	dataSize
 357 00fc 00000000 		.word	buffer
 358 0100 00000000 		.word	currentChar
 359 0104 00000000 		.word	systemState
 360 0108 00000000 		.word	transmitData
 361              		.cfi_endproc
 362              	.LFE65:
 363              		.size	TransmitInterruptHandler, .-TransmitInterruptHandler
 364              		.global	__aeabi_i2f
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 14


 365              		.global	__aeabi_fmul
 366              		.global	__aeabi_f2uiz
 367              		.section	.text.TimerInterruptHandler,"ax",%progbits
 368              		.align	2
 369              		.global	TimerInterruptHandler
 370              		.thumb
 371              		.thumb_func
 372              		.type	TimerInterruptHandler, %function
 373              	TimerInterruptHandler:
 374              	.LFB66:
 234:main.c        ****    	Timer_STATUS; 
 375              		.loc 1 234 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 235:main.c        ****     
 379              		.loc 1 235 0
 380 0000 184B     		ldr	r3, .L33
 381 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 237:main.c        ****         systemState = IDLE;
 382              		.loc 1 237 0
 383 0004 184B     		ldr	r3, .L33+4
 384 0006 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 385 000a 33B9     		cbnz	r3, .L30
 238:main.c        ****          transmitLock = 1;
 386              		.loc 1 238 0
 387 000c 0022     		movs	r2, #0
 388 000e 174B     		ldr	r3, .L33+8
 389 0010 1A70     		strb	r2, [r3]
 239:main.c        ****     } else {
 390              		.loc 1 239 0
 391 0012 0122     		movs	r2, #1
 392 0014 144B     		ldr	r3, .L33+4
 393 0016 9A61     		str	r2, [r3, #24]
 394 0018 7047     		bx	lr
 395              	.L30:
 234:main.c        ****    	Timer_STATUS; 
 396              		.loc 1 234 0
 397 001a 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 401              	.LBB4:
 241:main.c        ****         TRANSMIT_Write(0); 
 402              		.loc 1 241 0
 403 001c 0124     		movs	r4, #1
 404 001e 134B     		ldr	r3, .L33+8
 405 0020 1C70     		strb	r4, [r3]
 242:main.c        ****         transmitLock = 0; // Don't transmit anymore.
 406              		.loc 1 242 0
 407 0022 0020     		movs	r0, #0
 408 0024 FFF7FEFF 		bl	TRANSMIT_Write
 409              	.LVL20:
 243:main.c        ****         collisionLock = 1; // Collision
 410              		.loc 1 243 0
 411 0028 0F4B     		ldr	r3, .L33+4
 412 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 15


 413 002c 9A61     		str	r2, [r3, #24]
 244:main.c        ****         position = 0; // Start over entire packet.
 414              		.loc 1 244 0
 415 002e 1C70     		strb	r4, [r3]
 245:main.c        ****         receivePosition = 0;
 416              		.loc 1 245 0
 417 0030 5A61     		str	r2, [r3, #20]
 246:main.c        ****         
 418              		.loc 1 246 0
 419 0032 9A60     		str	r2, [r3, #8]
 248:main.c        ****         CollisionDelay_WritePeriod(randNum);
 420              		.loc 1 248 0
 421 0034 FFF7FEFF 		bl	rand
 422              	.LVL21:
 423 0038 FFF7FEFF 		bl	__aeabi_i2f
 424              	.LVL22:
 425 003c 4FF04051 		mov	r1, #805306368
 426 0040 FFF7FEFF 		bl	__aeabi_fmul
 427              	.LVL23:
 428 0044 0A49     		ldr	r1, .L33+12
 429 0046 FFF7FEFF 		bl	__aeabi_fmul
 430              	.LVL24:
 431 004a FFF7FEFF 		bl	__aeabi_f2uiz
 432              	.LVL25:
 433 004e 84B2     		uxth	r4, r0
 434              	.LVL26:
 249:main.c        ****         CollisionDelay_WriteCounter(randNum - 1);
 435              		.loc 1 249 0
 436 0050 2046     		mov	r0, r4
 437 0052 FFF7FEFF 		bl	CollisionDelay_WritePeriod
 438              	.LVL27:
 250:main.c        ****         CollisionDelay_Start();
 439              		.loc 1 250 0
 440 0056 601E     		subs	r0, r4, #1
 441 0058 80B2     		uxth	r0, r0
 442 005a FFF7FEFF 		bl	CollisionDelay_WriteCounter
 443              	.LVL28:
 251:main.c        ****     }
 444              		.loc 1 251 0
 445 005e FFF7FEFF 		bl	CollisionDelay_Start
 446              	.LVL29:
 447 0062 10BD     		pop	{r4, pc}
 448              	.LVL30:
 449              	.L34:
 450              		.align	2
 451              	.L33:
 452 0064 65650040 		.word	1073767781
 453 0068 00000000 		.word	.LANCHOR0
 454 006c 00000000 		.word	systemState
 455 0070 00007A44 		.word	1148846080
 456              	.LBE4:
 457              		.cfi_endproc
 458              	.LFE66:
 459              		.size	TimerInterruptHandler, .-TimerInterruptHandler
 460              		.section	.text.RisingEdgeInterruptHandler,"ax",%progbits
 461              		.align	2
 462              		.global	RisingEdgeInterruptHandler
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 16


 463              		.thumb
 464              		.thumb_func
 465              		.type	RisingEdgeInterruptHandler, %function
 466              	RisingEdgeInterruptHandler:
 467              	.LFB67:
 273:main.c        ****     if ((!lowFlag)){
 468              		.loc 1 273 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 274:main.c        ****         Timer_WritePeriod(COLLISION_PERIOD);
 476              		.loc 1 274 0
 477 0002 0E4B     		ldr	r3, .L39
 478 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 479 0008 73B9     		cbnz	r3, .L36
 275:main.c        ****         Timer_WriteCounter(COLLISION_COUNTER);
 480              		.loc 1 275 0
 481 000a 3420     		movs	r0, #52
 482 000c FFF7FEFF 		bl	Timer_WritePeriod
 483              	.LVL31:
 276:main.c        ****         Timer_Start();
 484              		.loc 1 276 0
 485 0010 3320     		movs	r0, #51
 486 0012 FFF7FEFF 		bl	Timer_WriteCounter
 487              	.LVL32:
 277:main.c        ****         lowFlag = 1;
 488              		.loc 1 277 0
 489 0016 FFF7FEFF 		bl	Timer_Start
 490              	.LVL33:
 278:main.c        ****         systemState = BUSY;
 491              		.loc 1 278 0
 492 001a 0122     		movs	r2, #1
 493 001c 074B     		ldr	r3, .L39
 494 001e 83F82420 		strb	r2, [r3, #36]
 279:main.c        ****     }
 495              		.loc 1 279 0
 496 0022 0222     		movs	r2, #2
 497 0024 064B     		ldr	r3, .L39+4
 498 0026 1A70     		strb	r2, [r3]
 499              	.L36:
 281:main.c        ****         TimerRX_Start();
 500              		.loc 1 281 0
 501 0028 044B     		ldr	r3, .L39
 502 002a 1B69     		ldr	r3, [r3, #16]
 503 002c 23B9     		cbnz	r3, .L35
 282:main.c        ****         receiveLock = 1;
 504              		.loc 1 282 0
 505 002e FFF7FEFF 		bl	TimerRX_Start
 506              	.LVL34:
 283:main.c        ****         
 507              		.loc 1 283 0
 508 0032 0122     		movs	r2, #1
 509 0034 014B     		ldr	r3, .L39
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 17


 510 0036 1A61     		str	r2, [r3, #16]
 511              	.L35:
 512 0038 08BD     		pop	{r3, pc}
 513              	.L40:
 514 003a 00BF     		.align	2
 515              	.L39:
 516 003c 00000000 		.word	.LANCHOR0
 517 0040 00000000 		.word	systemState
 518              		.cfi_endproc
 519              	.LFE67:
 520              		.size	RisingEdgeInterruptHandler, .-RisingEdgeInterruptHandler
 521              		.section	.text.FallingEdgeInterruptHandler,"ax",%progbits
 522              		.align	2
 523              		.global	FallingEdgeInterruptHandler
 524              		.thumb
 525              		.thumb_func
 526              		.type	FallingEdgeInterruptHandler, %function
 527              	FallingEdgeInterruptHandler:
 528              	.LFB68:
 302:main.c        ****     if (lowFlag){
 529              		.loc 1 302 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 3, -8
 536              		.cfi_offset 14, -4
 303:main.c        ****         Timer_WritePeriod(IDLE_PERIOD);
 537              		.loc 1 303 0
 538 0002 0B4B     		ldr	r3, .L44
 539 0004 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 540 0008 83B1     		cbz	r3, .L41
 304:main.c        ****         Timer_WriteCounter(IDLE_COUNTER);
 541              		.loc 1 304 0
 542 000a 40F23E30 		movw	r0, #830
 543 000e FFF7FEFF 		bl	Timer_WritePeriod
 544              	.LVL35:
 305:main.c        ****         Timer_Start();
 545              		.loc 1 305 0
 546 0012 40F23D30 		movw	r0, #829
 547 0016 FFF7FEFF 		bl	Timer_WriteCounter
 548              	.LVL36:
 306:main.c        ****         lowFlag = 0;
 549              		.loc 1 306 0
 550 001a FFF7FEFF 		bl	Timer_Start
 551              	.LVL37:
 307:main.c        ****         systemState = BUSY;
 552              		.loc 1 307 0
 553 001e 0022     		movs	r2, #0
 554 0020 034B     		ldr	r3, .L44
 555 0022 83F82420 		strb	r2, [r3, #36]
 308:main.c        ****     }
 556              		.loc 1 308 0
 557 0026 0222     		movs	r2, #2
 558 0028 024B     		ldr	r3, .L44+4
 559 002a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 18


 560              	.L41:
 561 002c 08BD     		pop	{r3, pc}
 562              	.L45:
 563 002e 00BF     		.align	2
 564              	.L44:
 565 0030 00000000 		.word	.LANCHOR0
 566 0034 00000000 		.word	systemState
 567              		.cfi_endproc
 568              	.LFE68:
 569              		.size	FallingEdgeInterruptHandler, .-FallingEdgeInterruptHandler
 570              		.section	.text.stateDiagram,"ax",%progbits
 571              		.align	2
 572              		.global	stateDiagram
 573              		.thumb
 574              		.thumb_func
 575              		.type	stateDiagram, %function
 576              	stateDiagram:
 577              	.LFB71:
 320:main.c        **** }
 321:main.c        **** 
 322:main.c        **** /**********************************************************
 323:main.c        ****  * function name: main
 324:main.c        ****  * operation: Handles the main state machine diagram for the
 325:main.c        ****  *            system. Changes  states when needed and calls
 326:main.c        ****  *            appropriate interrupt routines when triggered.                
 327:main.c        ****  * inputs: none
 328:main.c        ****  * returns: none
 329:main.c        ****  * implemented: 14 Dec 2017
 330:main.c        ****  * edited:
 331:main.c        ****  *********************************************************/ 
 332:main.c        **** int main(void)
 333:main.c        **** {
 334:main.c        **** 
 335:main.c        ****     //enable global interrupts
 336:main.c        ****     //start the interrupt handlers for the timers and other components
 337:main.c        ****     CyGlobalIntEnable; 
 338:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 339:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 340:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 341:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 342:main.c        **** 
 343:main.c        ****     // TimerTX_Start();
 344:main.c        ****     TimerTX_WritePeriod(TRANSMIT_PERIOD);
 345:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 346:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 347:main.c        ****     
 348:main.c        ****     TimerRX_WriteCounter(RECEIVE_COUNTER);
 349:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 350:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 351:main.c        ****     
 352:main.c        ****     CollisionDelayISR_StartEx(CollisionDelayInterruptHandler);
 353:main.c        ****         
 354:main.c        ****     //configure usb to start
 355:main.c        ****     USBUART_Start(USBUART_device,USBUART_5V_OPERATION);
 356:main.c        ****     
 357:main.c        ****     while (!USBUART_GetConfiguration());
 358:main.c        ****     USBUART_CDC_Init();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 19


 359:main.c        ****     
 360:main.c        ****     //starting system in idle state
 361:main.c        ****     systemState = IDLE;
 362:main.c        **** 
 363:main.c        ****     while(1) {
 364:main.c        ****                 
 365:main.c        **** 		/** if (0 != USBUART_IsConfigurationChanged())
 366:main.c        **** 		{
 367:main.c        **** 			
 368:main.c        **** 			if (0 != USBUART_GetConfiguration())
 369:main.c        **** 			{				
 370:main.c        **** 				USBUART_CDC_Init();
 371:main.c        **** 			}
 372:main.c        **** 		} */
 373:main.c        ****         
 374:main.c        ****         
 375:main.c        ****         if(transmitMode){
 376:main.c        ****             int inCount = 0;
 377:main.c        ****             transmitAddress = 0;
 378:main.c        ****             char input = 0;
 379:main.c        ****             while(!USBUART_CDCIsReady());
 380:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 381:main.c        ****             while(inCount < 3){
 382:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 383:main.c        ****                     stateDiagram();
 384:main.c        ****                 }
 385:main.c        ****                 
 386:main.c        ****                 input = USBUART_GetChar();
 387:main.c        ****                 
 388:main.c        ****                 //get the transmitAddress entered in
 389:main.c        ****                 if(inCount == 0){
 390:main.c        ****                     if (toupper(input) == 'R') {
 391:main.c        ****                         transmitMode = false;
 392:main.c        ****                         TimerRX_Start();
 393:main.c        ****                         USBUART_PutChar(input);
 394:main.c        ****                         
 395:main.c        ****                         USBUART_PutCRLF();
 396:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 397:main.c        ****                         USBUART_PutCRLF();
 398:main.c        ****                         inCount = 0;
 399:main.c        ****                         break;
 400:main.c        ****                     } else {
 401:main.c        ****                         transmitAddress  += 100*(input - (0x30));
 402:main.c        ****                         USBUART_PutChar(input);
 403:main.c        ****                         ++inCount;
 404:main.c        ****                     }
 405:main.c        ****                 }else if(inCount == 1){
 406:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 407:main.c        ****                     USBUART_PutChar(input);
 408:main.c        ****                     ++inCount;
 409:main.c        ****                 }else if (inCount == 2){
 410:main.c        ****                     transmitAddress  += input - (0x30);   
 411:main.c        ****                     USBUART_PutChar(input);
 412:main.c        ****                     ++inCount;
 413:main.c        ****                 }
 414:main.c        ****                 
 415:main.c        ****             }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 20


 416:main.c        ****             if (!transmitMode) {
 417:main.c        ****                 continue;
 418:main.c        ****             }
 419:main.c        **** 
 420:main.c        ****             while(!USBUART_CDCIsReady());
 421:main.c        ****             USBUART_PutCRLF();
 422:main.c        ****             while(!USBUART_CDCIsReady());
 423:main.c        ****             USBUART_PutString("Enter message: ");
 424:main.c        ****             inCount = 7; 
 425:main.c        ****             input = 0; 
 426:main.c        **** 
 427:main.c        ****             
 428:main.c        ****             buffer[0] = 0x00; // Start of header
 429:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
 430:main.c        ****             buffer[2] = ADDR1Start; // Source address
 431:main.c        ****             buffer[3] = transmitAddress; // Destination address
 432:main.c        ****             buffer[4] = 0x00; // CRC disabled
 433:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 434:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 435:main.c        ****             
 436:main.c        ****             //Enter = 0x0D (carriage return or \r)
 437:main.c        ****             while(input != 0x0D){
 438:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 439:main.c        ****                 input = USBUART_GetChar();
 440:main.c        ****                 if(input != 0x0D){
 441:main.c        ****                     buffer[inCount] = input;
 442:main.c        ****                     while(!USBUART_CDCIsReady());
 443:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 444:main.c        ****                     ++inCount;
 445:main.c        ****                 }
 446:main.c        ****             }
 447:main.c        ****             buffer[4] = inCount - 7; // Removes CR character.
 448:main.c        ****             if (buffer[4] > 44) {
 449:main.c        ****                 while(!USBUART_CDCIsReady());
 450:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 451:main.c        ****                 continue;
 452:main.c        ****             }
 453:main.c        **** 
 454:main.c        ****             dataSize = inCount;
 455:main.c        ****             position = 0; // Reset position in transmit interrupt
 456:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 457:main.c        ****             dataSize++;
 458:main.c        ****             TimerTX_Start();
 459:main.c        ****             while (position < dataSize);
 460:main.c        ****             TimerTX_Stop();
 461:main.c        ****             while(!USBUART_CDCIsReady());
 462:main.c        ****             USBUART_PutCRLF(); 
 463:main.c        ****             
 464:main.c        ****         } else { // Receive mode
 465:main.c        ****             checkForNewData();
 466:main.c        ****             stateDiagram();
 467:main.c        ****             if (USBUART_DataIsReady()) { 
 468:main.c        ****                 char input;
 469:main.c        ****                 input = USBUART_GetChar();
 470:main.c        ****                 if (toupper(input) == 'T') {
 471:main.c        ****                     transmitMode = true;
 472:main.c        ****                 }
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 21


 473:main.c        ****             }
 474:main.c        ****         }
 475:main.c        ****     }
 476:main.c        **** }
 477:main.c        **** 
 478:main.c        **** void stateDiagram(){
 578              		.loc 1 478 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582 0000 08B5     		push	{r3, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 3, -8
 585              		.cfi_offset 14, -4
 479:main.c        ****     switch(systemState){      
 586              		.loc 1 479 0
 587 0002 214B     		ldr	r3, .L52
 588 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589 0006 012B     		cmp	r3, #1
 590 0008 2CD0     		beq	.L48
 591 000a 13B1     		cbz	r3, .L49
 592 000c 022B     		cmp	r3, #2
 593 000e 17D0     		beq	.L50
 594 0010 08BD     		pop	{r3, pc}
 595              	.L49:
 480:main.c        ****         case IDLE :;
 481:main.c        ****             IDLE_Write(1);
 596              		.loc 1 481 0
 597 0012 0120     		movs	r0, #1
 598 0014 FFF7FEFF 		bl	IDLE_Write
 599              	.LVL38:
 482:main.c        ****             BUSY_Write(!IDLE_Read());
 600              		.loc 1 482 0
 601 0018 FFF7FEFF 		bl	IDLE_Read
 602              	.LVL39:
 603 001c B0FA80F0 		clz	r0, r0
 604 0020 4009     		lsrs	r0, r0, #5
 605 0022 FFF7FEFF 		bl	BUSY_Write
 606              	.LVL40:
 483:main.c        ****             COLLISION_Write(!IDLE_Read());
 607              		.loc 1 483 0
 608 0026 FFF7FEFF 		bl	IDLE_Read
 609              	.LVL41:
 610 002a B0FA80F0 		clz	r0, r0
 611 002e 4009     		lsrs	r0, r0, #5
 612 0030 FFF7FEFF 		bl	COLLISION_Write
 613              	.LVL42:
 484:main.c        ****             
 485:main.c        ****             dataBitsRead = 0;
 614              		.loc 1 485 0
 615 0034 154B     		ldr	r3, .L52+4
 616 0036 0022     		movs	r2, #0
 617 0038 DA60     		str	r2, [r3, #12]
 486:main.c        ****             receivePosition = 0;
 618              		.loc 1 486 0
 619 003a 9A60     		str	r2, [r3, #8]
 487:main.c        ****             addressZeroReceive = 0;
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 22


 620              		.loc 1 487 0
 621 003c 9A62     		str	r2, [r3, #40]
 488:main.c        ****         break;
 622              		.loc 1 488 0
 623 003e 08BD     		pop	{r3, pc}
 624              	.L50:
 489:main.c        **** 
 490:main.c        ****         case BUSY:
 491:main.c        ****             BUSY_Write(1);
 625              		.loc 1 491 0
 626 0040 0120     		movs	r0, #1
 627 0042 FFF7FEFF 		bl	BUSY_Write
 628              	.LVL43:
 492:main.c        ****             IDLE_Write(!BUSY_Read());
 629              		.loc 1 492 0
 630 0046 FFF7FEFF 		bl	BUSY_Read
 631              	.LVL44:
 632 004a B0FA80F0 		clz	r0, r0
 633 004e 4009     		lsrs	r0, r0, #5
 634 0050 FFF7FEFF 		bl	IDLE_Write
 635              	.LVL45:
 493:main.c        ****             COLLISION_Write(!BUSY_Read());
 636              		.loc 1 493 0
 637 0054 FFF7FEFF 		bl	BUSY_Read
 638              	.LVL46:
 639 0058 B0FA80F0 		clz	r0, r0
 640 005c 4009     		lsrs	r0, r0, #5
 641 005e FFF7FEFF 		bl	COLLISION_Write
 642              	.LVL47:
 494:main.c        ****         break;
 643              		.loc 1 494 0
 644 0062 08BD     		pop	{r3, pc}
 645              	.L48:
 495:main.c        **** 
 496:main.c        ****         case COLLISION:;
 497:main.c        ****             COLLISION_Write(1);
 646              		.loc 1 497 0
 647 0064 0120     		movs	r0, #1
 648 0066 FFF7FEFF 		bl	COLLISION_Write
 649              	.LVL48:
 498:main.c        ****             IDLE_Write(!COLLISION_Read());
 650              		.loc 1 498 0
 651 006a FFF7FEFF 		bl	COLLISION_Read
 652              	.LVL49:
 653 006e B0FA80F0 		clz	r0, r0
 654 0072 4009     		lsrs	r0, r0, #5
 655 0074 FFF7FEFF 		bl	IDLE_Write
 656              	.LVL50:
 499:main.c        ****             BUSY_Write(!COLLISION_Read());
 657              		.loc 1 499 0
 658 0078 FFF7FEFF 		bl	COLLISION_Read
 659              	.LVL51:
 660 007c B0FA80F0 		clz	r0, r0
 661 0080 4009     		lsrs	r0, r0, #5
 662 0082 FFF7FEFF 		bl	BUSY_Write
 663              	.LVL52:
 664 0086 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 23


 665              	.L53:
 666              		.align	2
 667              	.L52:
 668 0088 00000000 		.word	systemState
 669 008c 00000000 		.word	.LANCHOR0
 670              		.cfi_endproc
 671              	.LFE71:
 672              		.size	stateDiagram, .-stateDiagram
 673              		.section	.text.checkForNewData,"ax",%progbits
 674              		.align	2
 675              		.global	checkForNewData
 676              		.thumb
 677              		.thumb_func
 678              		.type	checkForNewData, %function
 679              	checkForNewData:
 680              	.LFB72:
 500:main.c        ****         break;
 501:main.c        ****     }   
 502:main.c        **** }
 503:main.c        **** 
 504:main.c        **** /**
 505:main.c        **** */
 506:main.c        **** void checkForNewData(){
 681              		.loc 1 506 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685 0000 08B5     		push	{r3, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 3, -8
 688              		.cfi_offset 14, -4
 507:main.c        ****     if(USBUART_CDCIsReady() != 0){
 689              		.loc 1 507 0
 690 0002 FFF7FEFF 		bl	USBUART_CDCIsReady
 691              	.LVL53:
 692 0006 0028     		cmp	r0, #0
 693 0008 40F05C81 		bne	.L55
 694 000c 08BD     		pop	{r3, pc}
 695              	.L84:
 508:main.c        ****         while(dataBitsRead != receivePosition){
 509:main.c        ****             if(dataBitsRead <= 6){
 696              		.loc 1 509 0
 697 000e 062A     		cmp	r2, #6
 698 0010 10DC     		bgt	.L57
 510:main.c        ****     //            if(receiveBuffer[0] == 0x00){
 511:main.c        ****     //                startHeaderReceieved = 1;
 512:main.c        ****     //            }
 513:main.c        ****     //            if(receiveBuffer[1] == 0x01){
 514:main.c        ****     //                    verNumMatch = 1;
 515:main.c        ****     //           }
 516:main.c        ****                 sourceAddress = receiveBuffer[2];
 699              		.loc 1 516 0
 700 0012 B04A     		ldr	r2, .L86
 701 0014 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 702 0016 B04B     		ldr	r3, .L86+4
 703 0018 83F82C10 		strb	r1, [r3, #44]
 517:main.c        ****                 destinationAddress = receiveBuffer[3];
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 24


 704              		.loc 1 517 0
 705 001c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 706 001e 83F82D10 		strb	r1, [r3, #45]
 518:main.c        ****                 messageLength = receiveBuffer[4];
 707              		.loc 1 518 0
 708 0022 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 709 0024 1963     		str	r1, [r3, #48]
 519:main.c        ****                 crcUsage = receiveBuffer[5];
 710              		.loc 1 519 0
 711 0026 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 712 0028 83F83410 		strb	r1, [r3, #52]
 520:main.c        ****                 headerCRC = receiveBuffer[6];            
 713              		.loc 1 520 0
 714 002c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 715 002e 83F83520 		strb	r2, [r3, #53]
 716 0032 43E1     		b	.L58
 717              	.L57:
 521:main.c        ****             } else {
 522:main.c        ****                 if(destinationAddress == BROADCAST_ADDRESS || 
 718              		.loc 1 522 0
 719 0034 A84B     		ldr	r3, .L86+4
 720 0036 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 721 003a 73B1     		cbz	r3, .L59
 523:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 722              		.loc 1 523 0 discriminator 1
 723 003c A3F16002 		sub	r2, r3, #96
 724 0040 D2B2     		uxtb	r2, r2
 522:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 725              		.loc 1 522 0 discriminator 1
 726 0042 022A     		cmp	r2, #2
 727 0044 09D9     		bls	.L59
 524:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 728              		.loc 1 524 0
 729 0046 A3F13702 		sub	r2, r3, #55
 730 004a D2B2     		uxtb	r2, r2
 523:main.c        ****                 ((destinationAddress >= ADDR1Start) && (destinationAddress <= ADDR1Start+ADDRLength
 731              		.loc 1 523 0
 732 004c 022A     		cmp	r2, #2
 733 004e 04D9     		bls	.L59
 525:main.c        ****                 ((destinationAddress >= ADDR3Start) && (destinationAddress <= ADDR3Start+ADDRLength
 734              		.loc 1 525 0
 735 0050 7C3B     		subs	r3, r3, #124
 736 0052 DBB2     		uxtb	r3, r3
 524:main.c        ****                 ((destinationAddress >= ADDR2Start) && (destinationAddress <= ADDR2Start+ADDRLength
 737              		.loc 1 524 0
 738 0054 022B     		cmp	r3, #2
 739 0056 00F23181 		bhi	.L58
 740              	.L59:
 526:main.c        ****                     if(addressZeroReceive == 0){
 741              		.loc 1 526 0
 742 005a 9F4B     		ldr	r3, .L86+4
 743 005c 9B6A     		ldr	r3, [r3, #40]
 744 005e 002B     		cmp	r3, #0
 745 0060 40F01F81 		bne	.L60
 746              	.L61:
 527:main.c        ****                         while(!USBUART_CDCIsReady());
 747              		.loc 1 527 0 discriminator 1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 25


 748 0064 FFF7FEFF 		bl	USBUART_CDCIsReady
 749              	.LVL54:
 750 0068 0028     		cmp	r0, #0
 751 006a FBD0     		beq	.L61
 528:main.c        ****                         USBUART_PutCRLF();
 752              		.loc 1 528 0
 753 006c FFF7FEFF 		bl	USBUART_PutCRLF
 754              	.LVL55:
 755              	.L62:
 529:main.c        ****                         while(!USBUART_CDCIsReady());
 756              		.loc 1 529 0 discriminator 1
 757 0070 FFF7FEFF 		bl	USBUART_CDCIsReady
 758              	.LVL56:
 759 0074 0028     		cmp	r0, #0
 760 0076 FBD0     		beq	.L62
 530:main.c        ****                         USBUART_PutCRLF();
 761              		.loc 1 530 0
 762 0078 FFF7FEFF 		bl	USBUART_PutCRLF
 763              	.LVL57:
 764              	.L63:
 531:main.c        ****                         while(!USBUART_CDCIsReady());
 765              		.loc 1 531 0 discriminator 1
 766 007c FFF7FEFF 		bl	USBUART_CDCIsReady
 767              	.LVL58:
 768 0080 0028     		cmp	r0, #0
 769 0082 FBD0     		beq	.L63
 532:main.c        ****                         USBUART_PutCRLF(); 
 770              		.loc 1 532 0
 771 0084 FFF7FEFF 		bl	USBUART_PutCRLF
 772              	.LVL59:
 773              	.L64:
 533:main.c        ****                         while(!USBUART_CDCIsReady());
 774              		.loc 1 533 0 discriminator 1
 775 0088 FFF7FEFF 		bl	USBUART_CDCIsReady
 776              	.LVL60:
 777 008c 0028     		cmp	r0, #0
 778 008e FBD0     		beq	.L64
 534:main.c        ****                         USBUART_PutString("Message From: ");
 779              		.loc 1 534 0
 780 0090 9248     		ldr	r0, .L86+8
 781 0092 FFF7FEFF 		bl	USBUART_PutString
 782              	.LVL61:
 783              	.L65:
 535:main.c        ****                         while(!USBUART_CDCIsReady());
 784              		.loc 1 535 0 discriminator 1
 785 0096 FFF7FEFF 		bl	USBUART_CDCIsReady
 786              	.LVL62:
 787 009a 0028     		cmp	r0, #0
 788 009c FBD0     		beq	.L65
 536:main.c        **** 
 537:main.c        ****                         USBUART_PutChar(((sourceAddress)/100)+0x30);
 789              		.loc 1 537 0
 790 009e 8E4B     		ldr	r3, .L86+4
 791 00a0 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 792 00a4 8E48     		ldr	r0, .L86+12
 793 00a6 A0FB0330 		umull	r3, r0, r0, r3
 794 00aa 4009     		lsrs	r0, r0, #5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 26


 795 00ac 3030     		adds	r0, r0, #48
 796 00ae FFF7FEFF 		bl	USBUART_PutChar
 797              	.LVL63:
 798              	.L66:
 538:main.c        **** 
 539:main.c        ****                         while(!USBUART_CDCIsReady());
 799              		.loc 1 539 0 discriminator 1
 800 00b2 FFF7FEFF 		bl	USBUART_CDCIsReady
 801              	.LVL64:
 802 00b6 0028     		cmp	r0, #0
 803 00b8 FBD0     		beq	.L66
 540:main.c        ****                         USBUART_PutChar(((sourceAddress/10)%10)+0x30);
 804              		.loc 1 540 0
 805 00ba 874B     		ldr	r3, .L86+4
 806 00bc 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 807 00c0 884A     		ldr	r2, .L86+16
 808 00c2 A2FB0313 		umull	r1, r3, r2, r3
 809 00c6 DB08     		lsrs	r3, r3, #3
 810 00c8 A2FB0312 		umull	r1, r2, r2, r3
 811 00cc D208     		lsrs	r2, r2, #3
 812 00ce 02EB8202 		add	r2, r2, r2, lsl #2
 813 00d2 5000     		lsls	r0, r2, #1
 814 00d4 181A     		subs	r0, r3, r0
 815 00d6 3030     		adds	r0, r0, #48
 816 00d8 C0B2     		uxtb	r0, r0
 817 00da FFF7FEFF 		bl	USBUART_PutChar
 818              	.LVL65:
 819              	.L67:
 541:main.c        ****                         while(!USBUART_CDCIsReady());
 820              		.loc 1 541 0 discriminator 1
 821 00de FFF7FEFF 		bl	USBUART_CDCIsReady
 822              	.LVL66:
 823 00e2 0028     		cmp	r0, #0
 824 00e4 FBD0     		beq	.L67
 542:main.c        ****              
 543:main.c        ****                         USBUART_PutChar(((sourceAddress%10)%10)+0x30);
 825              		.loc 1 543 0
 826 00e6 7C4B     		ldr	r3, .L86+4
 827 00e8 93F82C30 		ldrb	r3, [r3, #44]	@ zero_extendqisi2
 828 00ec 7D4A     		ldr	r2, .L86+16
 829 00ee A2FB0301 		umull	r0, r1, r2, r3
 830 00f2 C908     		lsrs	r1, r1, #3
 831 00f4 01EB8101 		add	r1, r1, r1, lsl #2
 832 00f8 4800     		lsls	r0, r1, #1
 833 00fa 1B1A     		subs	r3, r3, r0
 834 00fc DBB2     		uxtb	r3, r3
 835 00fe A2FB0312 		umull	r1, r2, r2, r3
 836 0102 D208     		lsrs	r2, r2, #3
 837 0104 02EB8202 		add	r2, r2, r2, lsl #2
 838 0108 5000     		lsls	r0, r2, #1
 839 010a 181A     		subs	r0, r3, r0
 840 010c 3030     		adds	r0, r0, #48
 841 010e C0B2     		uxtb	r0, r0
 842 0110 FFF7FEFF 		bl	USBUART_PutChar
 843              	.LVL67:
 844              	.L68:
 544:main.c        ****                         while(!USBUART_CDCIsReady());
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 27


 845              		.loc 1 544 0 discriminator 1
 846 0114 FFF7FEFF 		bl	USBUART_CDCIsReady
 847              	.LVL68:
 848 0118 0028     		cmp	r0, #0
 849 011a FBD0     		beq	.L68
 545:main.c        ****                         USBUART_PutCRLF();
 850              		.loc 1 545 0
 851 011c FFF7FEFF 		bl	USBUART_PutCRLF
 852              	.LVL69:
 853              	.L69:
 546:main.c        ****                         while(!USBUART_CDCIsReady());
 854              		.loc 1 546 0 discriminator 1
 855 0120 FFF7FEFF 		bl	USBUART_CDCIsReady
 856              	.LVL70:
 857 0124 0028     		cmp	r0, #0
 858 0126 FBD0     		beq	.L69
 547:main.c        ****                         USBUART_PutString("Sent To: ");
 859              		.loc 1 547 0
 860 0128 6F48     		ldr	r0, .L86+20
 861 012a FFF7FEFF 		bl	USBUART_PutString
 862              	.LVL71:
 548:main.c        ****                         if(destinationAddress == BROADCAST_ADDRESS){
 863              		.loc 1 548 0
 864 012e 6A4B     		ldr	r3, .L86+4
 865 0130 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 866 0134 6BB9     		cbnz	r3, .L70
 867              	.L71:
 549:main.c        ****                             while(!USBUART_CDCIsReady());
 868              		.loc 1 549 0 discriminator 1
 869 0136 FFF7FEFF 		bl	USBUART_CDCIsReady
 870              	.LVL72:
 871 013a 0028     		cmp	r0, #0
 872 013c FBD0     		beq	.L71
 550:main.c        ****                             USBUART_PutString("BCST ");
 873              		.loc 1 550 0
 874 013e 6B48     		ldr	r0, .L86+24
 875 0140 FFF7FEFF 		bl	USBUART_PutString
 876              	.LVL73:
 877              	.L72:
 551:main.c        ****                             while(!USBUART_CDCIsReady());
 878              		.loc 1 551 0 discriminator 1
 879 0144 FFF7FEFF 		bl	USBUART_CDCIsReady
 880              	.LVL74:
 881 0148 0028     		cmp	r0, #0
 882 014a FBD0     		beq	.L72
 552:main.c        ****                             USBUART_PutCRLF();
 883              		.loc 1 552 0
 884 014c FFF7FEFF 		bl	USBUART_PutCRLF
 885              	.LVL75:
 886 0150 46E0     		b	.L77
 887              	.L70:
 553:main.c        ****                         }else{
 554:main.c        ****                             while(!USBUART_CDCIsReady());
 888              		.loc 1 554 0 discriminator 1
 889 0152 FFF7FEFF 		bl	USBUART_CDCIsReady
 890              	.LVL76:
 891 0156 0028     		cmp	r0, #0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 28


 892 0158 FBD0     		beq	.L70
 555:main.c        ****              
 556:main.c        ****                             USBUART_PutChar(((destinationAddress)/100)+0x30);
 893              		.loc 1 556 0
 894 015a 5F4B     		ldr	r3, .L86+4
 895 015c 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 896 0160 5F48     		ldr	r0, .L86+12
 897 0162 A0FB0330 		umull	r3, r0, r0, r3
 898 0166 4009     		lsrs	r0, r0, #5
 899 0168 3030     		adds	r0, r0, #48
 900 016a FFF7FEFF 		bl	USBUART_PutChar
 901              	.LVL77:
 902              	.L74:
 557:main.c        **** 
 558:main.c        ****                             while(!USBUART_CDCIsReady());
 903              		.loc 1 558 0 discriminator 1
 904 016e FFF7FEFF 		bl	USBUART_CDCIsReady
 905              	.LVL78:
 906 0172 0028     		cmp	r0, #0
 907 0174 FBD0     		beq	.L74
 559:main.c        ****                             USBUART_PutChar(((destinationAddress/10)%10)+0x30);
 908              		.loc 1 559 0
 909 0176 584B     		ldr	r3, .L86+4
 910 0178 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 911 017c 594A     		ldr	r2, .L86+16
 912 017e A2FB0313 		umull	r1, r3, r2, r3
 913 0182 DB08     		lsrs	r3, r3, #3
 914 0184 A2FB0312 		umull	r1, r2, r2, r3
 915 0188 D208     		lsrs	r2, r2, #3
 916 018a 02EB8202 		add	r2, r2, r2, lsl #2
 917 018e 5000     		lsls	r0, r2, #1
 918 0190 1B1A     		subs	r3, r3, r0
 919 0192 03F13000 		add	r0, r3, #48
 920 0196 C0B2     		uxtb	r0, r0
 921 0198 FFF7FEFF 		bl	USBUART_PutChar
 922              	.LVL79:
 923              	.L75:
 560:main.c        ****                             while(!USBUART_CDCIsReady());
 924              		.loc 1 560 0 discriminator 1
 925 019c FFF7FEFF 		bl	USBUART_CDCIsReady
 926              	.LVL80:
 927 01a0 0028     		cmp	r0, #0
 928 01a2 FBD0     		beq	.L75
 561:main.c        ****                
 562:main.c        ****                             USBUART_PutChar(((destinationAddress%10)%10)+0x30);
 929              		.loc 1 562 0
 930 01a4 4C4B     		ldr	r3, .L86+4
 931 01a6 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 932 01aa 4E4A     		ldr	r2, .L86+16
 933 01ac A2FB0301 		umull	r0, r1, r2, r3
 934 01b0 C908     		lsrs	r1, r1, #3
 935 01b2 01EB8101 		add	r1, r1, r1, lsl #2
 936 01b6 4800     		lsls	r0, r1, #1
 937 01b8 1B1A     		subs	r3, r3, r0
 938 01ba DBB2     		uxtb	r3, r3
 939 01bc A2FB0312 		umull	r1, r2, r2, r3
 940 01c0 D208     		lsrs	r2, r2, #3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 29


 941 01c2 02EB8202 		add	r2, r2, r2, lsl #2
 942 01c6 5000     		lsls	r0, r2, #1
 943 01c8 1B1A     		subs	r3, r3, r0
 944 01ca 03F13000 		add	r0, r3, #48
 945 01ce C0B2     		uxtb	r0, r0
 946 01d0 FFF7FEFF 		bl	USBUART_PutChar
 947              	.LVL81:
 563:main.c        ****                             USBUART_PutCRLF();
 948              		.loc 1 563 0
 949 01d4 FFF7FEFF 		bl	USBUART_PutCRLF
 950              	.LVL82:
 951              	.L76:
 564:main.c        ****                             while(!USBUART_CDCIsReady());
 952              		.loc 1 564 0 discriminator 1
 953 01d8 FFF7FEFF 		bl	USBUART_CDCIsReady
 954              	.LVL83:
 955 01dc 0028     		cmp	r0, #0
 956 01de FBD0     		beq	.L76
 957              	.L77:
 565:main.c        ****                         }
 566:main.c        ****                         while(!USBUART_CDCIsReady());
 958              		.loc 1 566 0 discriminator 1
 959 01e0 FFF7FEFF 		bl	USBUART_CDCIsReady
 960              	.LVL84:
 961 01e4 0028     		cmp	r0, #0
 962 01e6 FBD0     		beq	.L77
 567:main.c        ****                         USBUART_PutString("Size: ");
 963              		.loc 1 567 0
 964 01e8 4148     		ldr	r0, .L86+28
 965 01ea FFF7FEFF 		bl	USBUART_PutString
 966              	.LVL85:
 967              	.L78:
 568:main.c        ****                         while(!USBUART_CDCIsReady());
 968              		.loc 1 568 0 discriminator 1
 969 01ee FFF7FEFF 		bl	USBUART_CDCIsReady
 970              	.LVL86:
 971 01f2 0028     		cmp	r0, #0
 972 01f4 FBD0     		beq	.L78
 569:main.c        ****                         USBUART_PutChar(((messageLength)/100)+0x30);
 973              		.loc 1 569 0
 974 01f6 384B     		ldr	r3, .L86+4
 975 01f8 1B6B     		ldr	r3, [r3, #48]
 976 01fa 3948     		ldr	r0, .L86+12
 977 01fc 80FB0320 		smull	r2, r0, r0, r3
 978 0200 DB17     		asrs	r3, r3, #31
 979 0202 C3EB6010 		rsb	r0, r3, r0, asr #5
 980 0206 3030     		adds	r0, r0, #48
 981 0208 C0B2     		uxtb	r0, r0
 982 020a FFF7FEFF 		bl	USBUART_PutChar
 983              	.LVL87:
 984              	.L79:
 570:main.c        ****                         while(!USBUART_CDCIsReady());
 985              		.loc 1 570 0 discriminator 1
 986 020e FFF7FEFF 		bl	USBUART_CDCIsReady
 987              	.LVL88:
 988 0212 0028     		cmp	r0, #0
 989 0214 FBD0     		beq	.L79
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 30


 571:main.c        ****                         USBUART_PutChar(((messageLength/10)%10)+0x30);
 990              		.loc 1 571 0
 991 0216 304B     		ldr	r3, .L86+4
 992 0218 1B6B     		ldr	r3, [r3, #48]
 993 021a 3648     		ldr	r0, .L86+32
 994 021c 80FB0312 		smull	r1, r2, r0, r3
 995 0220 DB17     		asrs	r3, r3, #31
 996 0222 C3EBA202 		rsb	r2, r3, r2, asr #2
 997 0226 80FB0230 		smull	r3, r0, r0, r2
 998 022a D317     		asrs	r3, r2, #31
 999 022c C3EBA000 		rsb	r0, r3, r0, asr #2
 1000 0230 00EB8000 		add	r0, r0, r0, lsl #2
 1001 0234 4300     		lsls	r3, r0, #1
 1002 0236 D01A     		subs	r0, r2, r3
 1003 0238 3030     		adds	r0, r0, #48
 1004 023a C0B2     		uxtb	r0, r0
 1005 023c FFF7FEFF 		bl	USBUART_PutChar
 1006              	.LVL89:
 1007              	.L80:
 572:main.c        ****                         while(!USBUART_CDCIsReady());
 1008              		.loc 1 572 0 discriminator 1
 1009 0240 FFF7FEFF 		bl	USBUART_CDCIsReady
 1010              	.LVL90:
 1011 0244 0028     		cmp	r0, #0
 1012 0246 FBD0     		beq	.L80
 573:main.c        ****                         USBUART_PutChar(((messageLength%10)%10)+0x30);
 1013              		.loc 1 573 0
 1014 0248 234B     		ldr	r3, .L86+4
 1015 024a 196B     		ldr	r1, [r3, #48]
 1016 024c 2948     		ldr	r0, .L86+32
 1017 024e 80FB0132 		smull	r3, r2, r0, r1
 1018 0252 CB17     		asrs	r3, r1, #31
 1019 0254 C3EBA202 		rsb	r2, r3, r2, asr #2
 1020 0258 02EB8202 		add	r2, r2, r2, lsl #2
 1021 025c 5300     		lsls	r3, r2, #1
 1022 025e CA1A     		subs	r2, r1, r3
 1023 0260 80FB0230 		smull	r3, r0, r0, r2
 1024 0264 D317     		asrs	r3, r2, #31
 1025 0266 C3EBA000 		rsb	r0, r3, r0, asr #2
 1026 026a 00EB8000 		add	r0, r0, r0, lsl #2
 1027 026e 4300     		lsls	r3, r0, #1
 1028 0270 D01A     		subs	r0, r2, r3
 1029 0272 3030     		adds	r0, r0, #48
 1030 0274 C0B2     		uxtb	r0, r0
 1031 0276 FFF7FEFF 		bl	USBUART_PutChar
 1032              	.LVL91:
 1033              	.L81:
 574:main.c        ****                         while(!USBUART_CDCIsReady());
 1034              		.loc 1 574 0 discriminator 1
 1035 027a FFF7FEFF 		bl	USBUART_CDCIsReady
 1036              	.LVL92:
 1037 027e 0028     		cmp	r0, #0
 1038 0280 FBD0     		beq	.L81
 575:main.c        ****                         USBUART_PutCRLF();
 1039              		.loc 1 575 0
 1040 0282 FFF7FEFF 		bl	USBUART_PutCRLF
 1041              	.LVL93:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 31


 1042              	.L82:
 576:main.c        ****                         while(!USBUART_CDCIsReady());
 1043              		.loc 1 576 0 discriminator 1
 1044 0286 FFF7FEFF 		bl	USBUART_CDCIsReady
 1045              	.LVL94:
 1046 028a 0028     		cmp	r0, #0
 1047 028c FBD0     		beq	.L82
 577:main.c        ****                         USBUART_PutString("Message: ");
 1048              		.loc 1 577 0
 1049 028e 1A48     		ldr	r0, .L86+36
 1050 0290 FFF7FEFF 		bl	USBUART_PutString
 1051              	.LVL95:
 1052              	.L83:
 578:main.c        ****                         while(!USBUART_CDCIsReady());
 1053              		.loc 1 578 0 discriminator 1
 1054 0294 FFF7FEFF 		bl	USBUART_CDCIsReady
 1055              	.LVL96:
 1056 0298 0028     		cmp	r0, #0
 1057 029a FBD0     		beq	.L83
 579:main.c        ****                         addressZeroReceive = 1;
 1058              		.loc 1 579 0
 1059 029c 0122     		movs	r2, #1
 1060 029e 0E4B     		ldr	r3, .L86+4
 1061 02a0 9A62     		str	r2, [r3, #40]
 1062              	.L60:
 580:main.c        ****                     }
 581:main.c        ****                     if(dataBitsRead > 6 && dataBitsRead < receiveBuffer[4] + 7){
 1063              		.loc 1 581 0
 1064 02a2 0D4B     		ldr	r3, .L86+4
 1065 02a4 DB68     		ldr	r3, [r3, #12]
 1066 02a6 062B     		cmp	r3, #6
 1067 02a8 08DD     		ble	.L58
 1068              		.loc 1 581 0 is_stmt 0 discriminator 1
 1069 02aa 0A4A     		ldr	r2, .L86
 1070 02ac 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 1071 02ae 0732     		adds	r2, r2, #7
 1072 02b0 9342     		cmp	r3, r2
 1073 02b2 03DA     		bge	.L58
 582:main.c        ****                         USBUART_PutChar(receiveBuffer[dataBitsRead]);
 1074              		.loc 1 582 0 is_stmt 1
 1075 02b4 074A     		ldr	r2, .L86
 1076 02b6 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1077 02b8 FFF7FEFF 		bl	USBUART_PutChar
 1078              	.LVL97:
 1079              	.L58:
 583:main.c        ****                     }
 584:main.c        ****                     
 585:main.c        ****                 }
 586:main.c        ****             }
 587:main.c        ****             ++dataBitsRead;
 1080              		.loc 1 587 0
 1081 02bc 064A     		ldr	r2, .L86+4
 1082 02be D368     		ldr	r3, [r2, #12]
 1083 02c0 0133     		adds	r3, r3, #1
 1084 02c2 D360     		str	r3, [r2, #12]
 1085              	.L55:
 508:main.c        ****             if(dataBitsRead <= 6){
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 32


 1086              		.loc 1 508 0
 1087 02c4 044B     		ldr	r3, .L86+4
 1088 02c6 DA68     		ldr	r2, [r3, #12]
 1089 02c8 9B68     		ldr	r3, [r3, #8]
 1090 02ca 9A42     		cmp	r2, r3
 1091 02cc 7FF49FAE 		bne	.L84
 1092 02d0 08BD     		pop	{r3, pc}
 1093              	.L87:
 1094 02d2 00BF     		.align	2
 1095              	.L86:
 1096 02d4 00000000 		.word	receiveBuffer
 1097 02d8 00000000 		.word	.LANCHOR0
 1098 02dc 00000000 		.word	.LC0
 1099 02e0 1F85EB51 		.word	1374389535
 1100 02e4 CDCCCCCC 		.word	-858993459
 1101 02e8 10000000 		.word	.LC1
 1102 02ec 1C000000 		.word	.LC2
 1103 02f0 24000000 		.word	.LC3
 1104 02f4 67666666 		.word	1717986919
 1105 02f8 2C000000 		.word	.LC4
 1106              		.cfi_endproc
 1107              	.LFE72:
 1108              		.size	checkForNewData, .-checkForNewData
 1109              		.section	.text.main,"ax",%progbits
 1110              		.align	2
 1111              		.global	main
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	main, %function
 1115              	main:
 1116              	.LFB70:
 333:main.c        **** 
 1117              		.loc 1 333 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121 0000 38B5     		push	{r3, r4, r5, lr}
 1122              		.cfi_def_cfa_offset 16
 1123              		.cfi_offset 3, -16
 1124              		.cfi_offset 4, -12
 1125              		.cfi_offset 5, -8
 1126              		.cfi_offset 14, -4
 337:main.c        ****     TimerISR_StartEx(TimerInterruptHandler);
 1127              		.loc 1 337 0
 1128              		.syntax unified
 1129              	@ 337 "main.c" 1
 1130 0002 62B6     		CPSIE   i
 1131              	@ 0 "" 2
 338:main.c        ****     RisingEdgeISR_StartEx(RisingEdgeInterruptHandler);
 1132              		.loc 1 338 0
 1133              		.thumb
 1134              		.syntax unified
 1135 0004 8B48     		ldr	r0, .L117
 1136 0006 FFF7FEFF 		bl	TimerISR_StartEx
 1137              	.LVL98:
 339:main.c        ****     FallingEdgeISR_StartEx(FallingEdgeInterruptHandler);
 1138              		.loc 1 339 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 33


 1139 000a 8B48     		ldr	r0, .L117+4
 1140 000c FFF7FEFF 		bl	RisingEdgeISR_StartEx
 1141              	.LVL99:
 340:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);  
 1142              		.loc 1 340 0
 1143 0010 8A48     		ldr	r0, .L117+8
 1144 0012 FFF7FEFF 		bl	FallingEdgeISR_StartEx
 1145              	.LVL100:
 341:main.c        **** 
 1146              		.loc 1 341 0
 1147 0016 8A4C     		ldr	r4, .L117+12
 1148 0018 2046     		mov	r0, r4
 1149 001a FFF7FEFF 		bl	ReceiveISR_StartEx
 1150              	.LVL101:
 344:main.c        ****     TimerTX_WriteCounter(TRANSMIT_COUNTER);
 1151              		.loc 1 344 0
 1152 001e 2F20     		movs	r0, #47
 1153 0020 FFF7FEFF 		bl	TimerTX_WritePeriod
 1154              	.LVL102:
 345:main.c        ****     TransmitISR_StartEx(TransmitInterruptHandler);
 1155              		.loc 1 345 0
 1156 0024 2E20     		movs	r0, #46
 1157 0026 FFF7FEFF 		bl	TimerTX_WriteCounter
 1158              	.LVL103:
 346:main.c        ****     
 1159              		.loc 1 346 0
 1160 002a 8648     		ldr	r0, .L117+16
 1161 002c FFF7FEFF 		bl	TransmitISR_StartEx
 1162              	.LVL104:
 348:main.c        ****     TimerRX_WritePeriod(RECEIVE_PERIOD);
 1163              		.loc 1 348 0
 1164 0030 3320     		movs	r0, #51
 1165 0032 FFF7FEFF 		bl	TimerRX_WriteCounter
 1166              	.LVL105:
 349:main.c        ****     ReceiveISR_StartEx(ReceiveInterruptHandler);
 1167              		.loc 1 349 0
 1168 0036 3420     		movs	r0, #52
 1169 0038 FFF7FEFF 		bl	TimerRX_WritePeriod
 1170              	.LVL106:
 350:main.c        ****     
 1171              		.loc 1 350 0
 1172 003c 2046     		mov	r0, r4
 1173 003e FFF7FEFF 		bl	ReceiveISR_StartEx
 1174              	.LVL107:
 352:main.c        ****         
 1175              		.loc 1 352 0
 1176 0042 8148     		ldr	r0, .L117+20
 1177 0044 FFF7FEFF 		bl	CollisionDelayISR_StartEx
 1178              	.LVL108:
 355:main.c        ****     
 1179              		.loc 1 355 0
 1180 0048 804B     		ldr	r3, .L117+24
 1181 004a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1182 004c 0121     		movs	r1, #1
 1183 004e FFF7FEFF 		bl	USBUART_Start
 1184              	.LVL109:
 1185              	.L89:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 34


 357:main.c        ****     USBUART_CDC_Init();
 1186              		.loc 1 357 0 discriminator 1
 1187 0052 FFF7FEFF 		bl	USBUART_GetConfiguration
 1188              	.LVL110:
 1189 0056 0028     		cmp	r0, #0
 1190 0058 FBD0     		beq	.L89
 358:main.c        ****     
 1191              		.loc 1 358 0
 1192 005a FFF7FEFF 		bl	USBUART_CDC_Init
 1193              	.LVL111:
 361:main.c        **** 
 1194              		.loc 1 361 0
 1195 005e 0022     		movs	r2, #0
 1196 0060 7B4B     		ldr	r3, .L117+28
 1197 0062 1A70     		strb	r2, [r3]
 1198              	.L90:
 375:main.c        ****             int inCount = 0;
 1199              		.loc 1 375 0
 1200 0064 7B4B     		ldr	r3, .L117+32
 1201 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 0068 002B     		cmp	r3, #0
 1203 006a 00F0C780 		beq	.L91
 1204              	.LVL112:
 1205              	.LBB5:
 377:main.c        ****             char input = 0;
 1206              		.loc 1 377 0
 1207 006e 0022     		movs	r2, #0
 1208 0070 794B     		ldr	r3, .L117+36
 1209 0072 83F83620 		strb	r2, [r3, #54]
 1210              	.LVL113:
 1211              	.L92:
 379:main.c        ****             USBUART_PutString("Enter Address or press 'R' to switch to receive mode: ");
 1212              		.loc 1 379 0 discriminator 1
 1213 0076 FFF7FEFF 		bl	USBUART_CDCIsReady
 1214              	.LVL114:
 1215 007a 0028     		cmp	r0, #0
 1216 007c FBD0     		beq	.L92
 380:main.c        ****             while(inCount < 3){
 1217              		.loc 1 380 0
 1218 007e 7748     		ldr	r0, .L117+40
 1219 0080 FFF7FEFF 		bl	USBUART_PutString
 1220              	.LVL115:
 376:main.c        ****             transmitAddress = 0;
 1221              		.loc 1 376 0
 1222 0084 0024     		movs	r4, #0
 381:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1223              		.loc 1 381 0
 1224 0086 56E0     		b	.L93
 1225              	.LVL116:
 1226              	.L94:
 383:main.c        ****                 }
 1227              		.loc 1 383 0
 1228 0088 FFF7FEFF 		bl	stateDiagram
 1229              	.LVL117:
 1230              	.L102:
 382:main.c        ****                     stateDiagram();
 1231              		.loc 1 382 0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 35


 1232 008c FFF7FEFF 		bl	USBUART_DataIsReady
 1233              	.LVL118:
 1234 0090 0028     		cmp	r0, #0
 1235 0092 F9D0     		beq	.L94
 386:main.c        ****                 
 1236              		.loc 1 386 0
 1237 0094 FFF7FEFF 		bl	USBUART_GetChar
 1238              	.LVL119:
 1239 0098 0546     		mov	r5, r0
 1240              	.LVL120:
 389:main.c        ****                     if (toupper(input) == 'R') {
 1241              		.loc 1 389 0
 1242 009a 7CBB     		cbnz	r4, .L95
 1243              	.LVL121:
 1244              	.LBB6:
 390:main.c        ****                         transmitMode = false;
 1245              		.loc 1 390 0
 1246 009c 704B     		ldr	r3, .L117+44
 1247 009e 1B68     		ldr	r3, [r3]
 1248 00a0 0344     		add	r3, r3, r0
 1249 00a2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1250 00a4 03F00303 		and	r3, r3, #3
 1251 00a8 022B     		cmp	r3, #2
 1252 00aa 02D1     		bne	.L96
 390:main.c        ****                         transmitMode = false;
 1253              		.loc 1 390 0 is_stmt 0 discriminator 1
 1254 00ac A0F12003 		sub	r3, r0, #32
 1255 00b0 00E0     		b	.L97
 1256              	.L96:
 390:main.c        ****                         transmitMode = false;
 1257              		.loc 1 390 0 discriminator 2
 1258 00b2 0346     		mov	r3, r0
 1259              	.L97:
 1260              	.LBE6:
 390:main.c        ****                         transmitMode = false;
 1261              		.loc 1 390 0 discriminator 4
 1262 00b4 522B     		cmp	r3, #82
 1263 00b6 0FD1     		bne	.L98
 391:main.c        ****                         TimerRX_Start();
 1264              		.loc 1 391 0 is_stmt 1
 1265 00b8 0022     		movs	r2, #0
 1266 00ba 664B     		ldr	r3, .L117+32
 1267 00bc 1A70     		strb	r2, [r3]
 392:main.c        ****                         USBUART_PutChar(input);
 1268              		.loc 1 392 0
 1269 00be FFF7FEFF 		bl	TimerRX_Start
 1270              	.LVL122:
 393:main.c        ****                         
 1271              		.loc 1 393 0
 1272 00c2 2846     		mov	r0, r5
 1273 00c4 FFF7FEFF 		bl	USBUART_PutChar
 1274              	.LVL123:
 395:main.c        ****                         USBUART_PutString("Press 'T' to switch to transmit mode.\r\n");
 1275              		.loc 1 395 0
 1276 00c8 FFF7FEFF 		bl	USBUART_PutCRLF
 1277              	.LVL124:
 396:main.c        ****                         USBUART_PutCRLF();
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 36


 1278              		.loc 1 396 0
 1279 00cc 6548     		ldr	r0, .L117+48
 1280 00ce FFF7FEFF 		bl	USBUART_PutString
 1281              	.LVL125:
 397:main.c        ****                         inCount = 0;
 1282              		.loc 1 397 0
 1283 00d2 FFF7FEFF 		bl	USBUART_PutCRLF
 1284              	.LVL126:
 399:main.c        ****                     } else {
 1285              		.loc 1 399 0
 1286 00d6 30E0     		b	.L99
 1287              	.LVL127:
 1288              	.L98:
 401:main.c        ****                         USBUART_PutChar(input);
 1289              		.loc 1 401 0
 1290 00d8 A5F13003 		sub	r3, r5, #48
 1291 00dc 5E49     		ldr	r1, .L117+36
 1292 00de 03EB8303 		add	r3, r3, r3, lsl #2
 1293 00e2 03EB8303 		add	r3, r3, r3, lsl #2
 1294 00e6 91F83620 		ldrb	r2, [r1, #54]	@ zero_extendqisi2
 1295 00ea 02EB8303 		add	r3, r2, r3, lsl #2
 1296 00ee 81F83630 		strb	r3, [r1, #54]
 402:main.c        ****                         ++inCount;
 1297              		.loc 1 402 0
 1298 00f2 2846     		mov	r0, r5
 1299              	.LVL128:
 1300 00f4 FFF7FEFF 		bl	USBUART_PutChar
 1301              	.LVL129:
 403:main.c        ****                     }
 1302              		.loc 1 403 0
 1303 00f8 0134     		adds	r4, r4, #1
 1304              	.LVL130:
 1305 00fa 1CE0     		b	.L93
 1306              	.LVL131:
 1307              	.L95:
 405:main.c        ****                     transmitAddress  += 10*(input - (0x30));
 1308              		.loc 1 405 0
 1309 00fc 012C     		cmp	r4, #1
 1310 00fe 0ED1     		bne	.L101
 406:main.c        ****                     USBUART_PutChar(input);
 1311              		.loc 1 406 0
 1312 0100 A0F13003 		sub	r3, r0, #48
 1313 0104 5449     		ldr	r1, .L117+36
 1314 0106 03EB8303 		add	r3, r3, r3, lsl #2
 1315 010a 91F83620 		ldrb	r2, [r1, #54]	@ zero_extendqisi2
 1316 010e 02EB4303 		add	r3, r2, r3, lsl #1
 1317 0112 81F83630 		strb	r3, [r1, #54]
 407:main.c        ****                     ++inCount;
 1318              		.loc 1 407 0
 1319 0116 FFF7FEFF 		bl	USBUART_PutChar
 1320              	.LVL132:
 408:main.c        ****                 }else if (inCount == 2){
 1321              		.loc 1 408 0
 1322 011a 0134     		adds	r4, r4, #1
 1323              	.LVL133:
 1324 011c 0BE0     		b	.L93
 1325              	.LVL134:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 37


 1326              	.L101:
 409:main.c        ****                     transmitAddress  += input - (0x30);   
 1327              		.loc 1 409 0
 1328 011e 022C     		cmp	r4, #2
 1329 0120 09D1     		bne	.L93
 410:main.c        ****                     USBUART_PutChar(input);
 1330              		.loc 1 410 0
 1331 0122 4D4A     		ldr	r2, .L117+36
 1332 0124 92F83630 		ldrb	r3, [r2, #54]	@ zero_extendqisi2
 1333 0128 0344     		add	r3, r3, r0
 1334 012a 303B     		subs	r3, r3, #48
 1335 012c 82F83630 		strb	r3, [r2, #54]
 411:main.c        ****                     ++inCount;
 1336              		.loc 1 411 0
 1337 0130 FFF7FEFF 		bl	USBUART_PutChar
 1338              	.LVL135:
 412:main.c        ****                 }
 1339              		.loc 1 412 0
 1340 0134 0134     		adds	r4, r4, #1
 1341              	.LVL136:
 1342              	.L93:
 381:main.c        ****                 while(USBUART_DataIsReady() == 0) { 
 1343              		.loc 1 381 0
 1344 0136 022C     		cmp	r4, #2
 1345 0138 A8DD     		ble	.L102
 1346              	.LVL137:
 1347              	.L99:
 416:main.c        ****                 continue;
 1348              		.loc 1 416 0
 1349 013a 464B     		ldr	r3, .L117+32
 1350 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 013e 002B     		cmp	r3, #0
 1352 0140 90D0     		beq	.L90
 1353              	.L104:
 420:main.c        ****             USBUART_PutCRLF();
 1354              		.loc 1 420 0 discriminator 1
 1355 0142 FFF7FEFF 		bl	USBUART_CDCIsReady
 1356              	.LVL138:
 1357 0146 0028     		cmp	r0, #0
 1358 0148 FBD0     		beq	.L104
 421:main.c        ****             while(!USBUART_CDCIsReady());
 1359              		.loc 1 421 0
 1360 014a FFF7FEFF 		bl	USBUART_PutCRLF
 1361              	.LVL139:
 1362              	.L105:
 422:main.c        ****             USBUART_PutString("Enter message: ");
 1363              		.loc 1 422 0 discriminator 1
 1364 014e FFF7FEFF 		bl	USBUART_CDCIsReady
 1365              	.LVL140:
 1366 0152 0028     		cmp	r0, #0
 1367 0154 FBD0     		beq	.L105
 423:main.c        ****             inCount = 7; 
 1368              		.loc 1 423 0
 1369 0156 4448     		ldr	r0, .L117+52
 1370 0158 FFF7FEFF 		bl	USBUART_PutString
 1371              	.LVL141:
 428:main.c        ****             buffer[1] = VERSION_NUMBER; // Verison number
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 38


 1372              		.loc 1 428 0
 1373 015c 434B     		ldr	r3, .L117+56
 1374 015e 0024     		movs	r4, #0
 1375 0160 1C70     		strb	r4, [r3]
 429:main.c        ****             buffer[2] = ADDR1Start; // Source address
 1376              		.loc 1 429 0
 1377 0162 0122     		movs	r2, #1
 1378 0164 5A70     		strb	r2, [r3, #1]
 430:main.c        ****             buffer[3] = transmitAddress; // Destination address
 1379              		.loc 1 430 0
 1380 0166 6022     		movs	r2, #96
 1381 0168 9A70     		strb	r2, [r3, #2]
 431:main.c        ****             buffer[4] = 0x00; // CRC disabled
 1382              		.loc 1 431 0
 1383 016a 3B4A     		ldr	r2, .L117+36
 1384 016c 92F83620 		ldrb	r2, [r2, #54]	@ zero_extendqisi2
 1385 0170 DA70     		strb	r2, [r3, #3]
 432:main.c        ****             buffer[5] = CRC; // CRC (is 0x77 when disabled)
 1386              		.loc 1 432 0
 1387 0172 1C71     		strb	r4, [r3, #4]
 433:main.c        ****             buffer[6] = HEADER; // Header CRC (0x77 when disabled)
 1388              		.loc 1 433 0
 1389 0174 8022     		movs	r2, #128
 1390 0176 5A71     		strb	r2, [r3, #5]
 434:main.c        ****             
 1391              		.loc 1 434 0
 1392 0178 7722     		movs	r2, #119
 1393 017a 9A71     		strb	r2, [r3, #6]
 424:main.c        ****             input = 0; 
 1394              		.loc 1 424 0
 1395 017c 0725     		movs	r5, #7
 437:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1396              		.loc 1 437 0
 1397 017e 13E0     		b	.L106
 1398              	.LVL142:
 1399              	.L107:
 438:main.c        ****                 input = USBUART_GetChar();
 1400              		.loc 1 438 0 discriminator 1
 1401 0180 FFF7FEFF 		bl	USBUART_DataIsReady
 1402              	.LVL143:
 1403 0184 0028     		cmp	r0, #0
 1404 0186 FBD0     		beq	.L107
 439:main.c        ****                 if(input != 0x0D){
 1405              		.loc 1 439 0
 1406 0188 FFF7FEFF 		bl	USBUART_GetChar
 1407              	.LVL144:
 1408 018c 0446     		mov	r4, r0
 1409              	.LVL145:
 440:main.c        ****                     buffer[inCount] = input;
 1410              		.loc 1 440 0
 1411 018e 0D28     		cmp	r0, #13
 1412 0190 0AD0     		beq	.L106
 441:main.c        ****                     while(!USBUART_CDCIsReady());
 1413              		.loc 1 441 0
 1414 0192 364B     		ldr	r3, .L117+56
 1415 0194 5855     		strb	r0, [r3, r5]
 1416              	.LVL146:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 39


 1417              	.L109:
 442:main.c        ****                     USBUART_PutChar(buffer[inCount]);
 1418              		.loc 1 442 0 discriminator 1
 1419 0196 FFF7FEFF 		bl	USBUART_CDCIsReady
 1420              	.LVL147:
 1421 019a 0028     		cmp	r0, #0
 1422 019c FBD0     		beq	.L109
 443:main.c        ****                     ++inCount;
 1423              		.loc 1 443 0
 1424 019e 334B     		ldr	r3, .L117+56
 1425 01a0 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1426 01a2 FFF7FEFF 		bl	USBUART_PutChar
 1427              	.LVL148:
 444:main.c        ****                 }
 1428              		.loc 1 444 0
 1429 01a6 0135     		adds	r5, r5, #1
 1430              	.LVL149:
 1431              	.L106:
 437:main.c        ****                 while(USBUART_DataIsReady() == 0); 
 1432              		.loc 1 437 0
 1433 01a8 0D2C     		cmp	r4, #13
 1434 01aa E9D1     		bne	.L107
 447:main.c        ****             if (buffer[4] > 44) {
 1435              		.loc 1 447 0
 1436 01ac EB1F     		subs	r3, r5, #7
 1437 01ae DBB2     		uxtb	r3, r3
 1438 01b0 2E4A     		ldr	r2, .L117+56
 1439 01b2 1371     		strb	r3, [r2, #4]
 448:main.c        ****                 while(!USBUART_CDCIsReady());
 1440              		.loc 1 448 0
 1441 01b4 2C2B     		cmp	r3, #44
 1442 01b6 07D9     		bls	.L110
 1443              	.L111:
 449:main.c        ****                 USBUART_PutString("\r\nMessage must be no more than 44 bytes.\r\n");
 1444              		.loc 1 449 0 discriminator 1
 1445 01b8 FFF7FEFF 		bl	USBUART_CDCIsReady
 1446              	.LVL150:
 1447 01bc 0028     		cmp	r0, #0
 1448 01be FBD0     		beq	.L111
 450:main.c        ****                 continue;
 1449              		.loc 1 450 0
 1450 01c0 2B48     		ldr	r0, .L117+60
 1451 01c2 FFF7FEFF 		bl	USBUART_PutString
 1452              	.LVL151:
 451:main.c        ****             }
 1453              		.loc 1 451 0
 1454 01c6 4DE7     		b	.L90
 1455              	.L110:
 455:main.c        ****             buffer[inCount] = BLANK_MESSAGE_CRC;
 1456              		.loc 1 455 0
 1457 01c8 0022     		movs	r2, #0
 1458 01ca 234B     		ldr	r3, .L117+36
 1459 01cc 5A61     		str	r2, [r3, #20]
 456:main.c        ****             dataSize++;
 1460              		.loc 1 456 0
 1461 01ce 7722     		movs	r2, #119
 1462 01d0 264B     		ldr	r3, .L117+56
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 40


 1463 01d2 5A55     		strb	r2, [r3, r5]
 457:main.c        ****             TimerTX_Start();
 1464              		.loc 1 457 0
 1465 01d4 0135     		adds	r5, r5, #1
 1466              	.LVL152:
 1467 01d6 274B     		ldr	r3, .L117+64
 1468 01d8 1D60     		str	r5, [r3]
 458:main.c        ****             while (position < dataSize);
 1469              		.loc 1 458 0
 1470 01da FFF7FEFF 		bl	TimerTX_Start
 1471              	.LVL153:
 1472              	.L112:
 459:main.c        ****             TimerTX_Stop();
 1473              		.loc 1 459 0 discriminator 1
 1474 01de 1E4B     		ldr	r3, .L117+36
 1475 01e0 5A69     		ldr	r2, [r3, #20]
 1476 01e2 244B     		ldr	r3, .L117+64
 1477 01e4 1B68     		ldr	r3, [r3]
 1478 01e6 9A42     		cmp	r2, r3
 1479 01e8 F9DB     		blt	.L112
 460:main.c        ****             while(!USBUART_CDCIsReady());
 1480              		.loc 1 460 0
 1481 01ea FFF7FEFF 		bl	TimerTX_Stop
 1482              	.LVL154:
 1483              	.L113:
 461:main.c        ****             USBUART_PutCRLF(); 
 1484              		.loc 1 461 0 discriminator 1
 1485 01ee FFF7FEFF 		bl	USBUART_CDCIsReady
 1486              	.LVL155:
 1487 01f2 0028     		cmp	r0, #0
 1488 01f4 FBD0     		beq	.L113
 462:main.c        ****             
 1489              		.loc 1 462 0
 1490 01f6 FFF7FEFF 		bl	USBUART_PutCRLF
 1491              	.LVL156:
 1492              	.LBE5:
 1493 01fa 33E7     		b	.L90
 1494              	.LVL157:
 1495              	.L91:
 465:main.c        ****             stateDiagram();
 1496              		.loc 1 465 0
 1497 01fc FFF7FEFF 		bl	checkForNewData
 1498              	.LVL158:
 466:main.c        ****             if (USBUART_DataIsReady()) { 
 1499              		.loc 1 466 0
 1500 0200 FFF7FEFF 		bl	stateDiagram
 1501              	.LVL159:
 467:main.c        ****                 char input;
 1502              		.loc 1 467 0
 1503 0204 FFF7FEFF 		bl	USBUART_DataIsReady
 1504              	.LVL160:
 1505 0208 0028     		cmp	r0, #0
 1506 020a 3FF42BAF 		beq	.L90
 1507              	.LBB7:
 469:main.c        ****                 if (toupper(input) == 'T') {
 1508              		.loc 1 469 0
 1509 020e FFF7FEFF 		bl	USBUART_GetChar
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 41


 1510              	.LVL161:
 1511              	.LBB8:
 470:main.c        ****                     transmitMode = true;
 1512              		.loc 1 470 0
 1513 0212 134B     		ldr	r3, .L117+44
 1514 0214 1B68     		ldr	r3, [r3]
 1515 0216 0344     		add	r3, r3, r0
 1516 0218 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1517 021a 03F00303 		and	r3, r3, #3
 1518 021e 022B     		cmp	r3, #2
 1519 0220 00D1     		bne	.L115
 470:main.c        ****                     transmitMode = true;
 1520              		.loc 1 470 0 is_stmt 0 discriminator 1
 1521 0222 2038     		subs	r0, r0, #32
 1522              	.LVL162:
 1523              	.L115:
 1524              	.LBE8:
 470:main.c        ****                     transmitMode = true;
 1525              		.loc 1 470 0 discriminator 4
 1526 0224 5428     		cmp	r0, #84
 1527 0226 7FF41DAF 		bne	.L90
 471:main.c        ****                 }
 1528              		.loc 1 471 0 is_stmt 1
 1529 022a 0122     		movs	r2, #1
 1530 022c 094B     		ldr	r3, .L117+32
 1531 022e 1A70     		strb	r2, [r3]
 1532 0230 18E7     		b	.L90
 1533              	.L118:
 1534 0232 00BF     		.align	2
 1535              	.L117:
 1536 0234 00000000 		.word	TimerInterruptHandler
 1537 0238 00000000 		.word	RisingEdgeInterruptHandler
 1538 023c 00000000 		.word	FallingEdgeInterruptHandler
 1539 0240 00000000 		.word	ReceiveInterruptHandler
 1540 0244 00000000 		.word	TransmitInterruptHandler
 1541 0248 00000000 		.word	CollisionDelayInterruptHandler
 1542 024c 00000000 		.word	USBUART_device
 1543 0250 00000000 		.word	systemState
 1544 0254 00000000 		.word	.LANCHOR1
 1545 0258 00000000 		.word	.LANCHOR0
 1546 025c 38000000 		.word	.LC5
 1547 0260 00000000 		.word	__ctype_ptr__
 1548 0264 70000000 		.word	.LC6
 1549 0268 98000000 		.word	.LC7
 1550 026c 00000000 		.word	buffer
 1551 0270 A8000000 		.word	.LC8
 1552 0274 00000000 		.word	dataSize
 1553              	.LBE7:
 1554              		.cfi_endproc
 1555              	.LFE70:
 1556              		.size	main, .-main
 1557              		.global	transmitMode
 1558              		.global	transmitAddress
 1559              		.global	concatCount
 1560              		.global	receiveBitCount
 1561              		.global	transmitBitCount
 1562              		.comm	dataSize,4,4
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 42


 1563              		.comm	currentChar,1,1
 1564              		.global	addressZeroReceive
 1565              		.global	headerCRC
 1566              		.global	crcUsage
 1567              		.global	messageLength
 1568              		.global	destinationAddress
 1569              		.global	sourceAddress
 1570              		.global	collisionLock
 1571              		.global	receiveLock
 1572              		.global	transmitLock
 1573              		.comm	dataPtr,4,4
 1574              		.global	idx
 1575              		.global	dataBitsRead
 1576              		.global	receivePosition
 1577              		.global	position
 1578              		.comm	receiveData,16,4
 1579              		.comm	receiveBuffer,500,4
 1580              		.comm	buffer,500,4
 1581              		.comm	transmitData,8000,4
 1582              		.global	lowFlag
 1583              		.comm	systemState,1,1
 1584              		.data
 1585              		.set	.LANCHOR1,. + 0
 1586              		.type	transmitMode, %object
 1587              		.size	transmitMode, 1
 1588              	transmitMode:
 1589 0000 01       		.byte	1
 1590              		.section	.rodata.str1.4,"aMS",%progbits,1
 1591              		.align	2
 1592              	.LC0:
 1593 0000 4D657373 		.ascii	"Message From: \000"
 1593      61676520 
 1593      46726F6D 
 1593      3A2000
 1594 000f 00       		.space	1
 1595              	.LC1:
 1596 0010 53656E74 		.ascii	"Sent To: \000"
 1596      20546F3A 
 1596      2000
 1597 001a 0000     		.space	2
 1598              	.LC2:
 1599 001c 42435354 		.ascii	"BCST \000"
 1599      2000
 1600 0022 0000     		.space	2
 1601              	.LC3:
 1602 0024 53697A65 		.ascii	"Size: \000"
 1602      3A2000
 1603 002b 00       		.space	1
 1604              	.LC4:
 1605 002c 4D657373 		.ascii	"Message: \000"
 1605      6167653A 
 1605      2000
 1606 0036 0000     		.space	2
 1607              	.LC5:
 1608 0038 456E7465 		.ascii	"Enter Address or press 'R' to switch to receive mod"
 1608      72204164 
 1608      64726573 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 43


 1608      73206F72 
 1608      20707265 
 1609 006b 653A2000 		.ascii	"e: \000"
 1610 006f 00       		.space	1
 1611              	.LC6:
 1612 0070 50726573 		.ascii	"Press 'T' to switch to transmit mode.\015\012\000"
 1612      73202754 
 1612      2720746F 
 1612      20737769 
 1612      74636820 
 1613              	.LC7:
 1614 0098 456E7465 		.ascii	"Enter message: \000"
 1614      72206D65 
 1614      73736167 
 1614      653A2000 
 1615              	.LC8:
 1616 00a8 0D0A4D65 		.ascii	"\015\012Message must be no more than 44 bytes.\015\012"
 1616      73736167 
 1616      65206D75 
 1616      73742062 
 1616      65206E6F 
 1617 00d2 00       		.ascii	"\000"
 1618              		.bss
 1619              		.align	2
 1620              		.set	.LANCHOR0,. + 0
 1621              		.type	collisionLock, %object
 1622              		.size	collisionLock, 1
 1623              	collisionLock:
 1624 0000 00       		.space	1
 1625 0001 000000   		.space	3
 1626              		.type	receiveBitCount, %object
 1627              		.size	receiveBitCount, 4
 1628              	receiveBitCount:
 1629 0004 00000000 		.space	4
 1630              		.type	receivePosition, %object
 1631              		.size	receivePosition, 4
 1632              	receivePosition:
 1633 0008 00000000 		.space	4
 1634              		.type	dataBitsRead, %object
 1635              		.size	dataBitsRead, 4
 1636              	dataBitsRead:
 1637 000c 00000000 		.space	4
 1638              		.type	receiveLock, %object
 1639              		.size	receiveLock, 4
 1640              	receiveLock:
 1641 0010 00000000 		.space	4
 1642              		.type	position, %object
 1643              		.size	position, 4
 1644              	position:
 1645 0014 00000000 		.space	4
 1646              		.type	transmitLock, %object
 1647              		.size	transmitLock, 4
 1648              	transmitLock:
 1649 0018 00000000 		.space	4
 1650              		.type	transmitBitCount, %object
 1651              		.size	transmitBitCount, 4
 1652              	transmitBitCount:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 44


 1653 001c 00000000 		.space	4
 1654              		.type	idx, %object
 1655              		.size	idx, 4
 1656              	idx:
 1657 0020 00000000 		.space	4
 1658              		.type	lowFlag, %object
 1659              		.size	lowFlag, 1
 1660              	lowFlag:
 1661 0024 00       		.space	1
 1662 0025 000000   		.space	3
 1663              		.type	addressZeroReceive, %object
 1664              		.size	addressZeroReceive, 4
 1665              	addressZeroReceive:
 1666 0028 00000000 		.space	4
 1667              		.type	sourceAddress, %object
 1668              		.size	sourceAddress, 1
 1669              	sourceAddress:
 1670 002c 00       		.space	1
 1671              		.type	destinationAddress, %object
 1672              		.size	destinationAddress, 1
 1673              	destinationAddress:
 1674 002d 00       		.space	1
 1675 002e 0000     		.space	2
 1676              		.type	messageLength, %object
 1677              		.size	messageLength, 4
 1678              	messageLength:
 1679 0030 00000000 		.space	4
 1680              		.type	crcUsage, %object
 1681              		.size	crcUsage, 1
 1682              	crcUsage:
 1683 0034 00       		.space	1
 1684              		.type	headerCRC, %object
 1685              		.size	headerCRC, 1
 1686              	headerCRC:
 1687 0035 00       		.space	1
 1688              		.type	transmitAddress, %object
 1689              		.size	transmitAddress, 1
 1690              	transmitAddress:
 1691 0036 00       		.space	1
 1692 0037 00       		.space	1
 1693              		.type	concatCount, %object
 1694              		.size	concatCount, 4
 1695              	concatCount:
 1696 0038 00000000 		.space	4
 1697              		.text
 1698              	.Letext0:
 1699              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1700              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1701              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1702              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 1703              		.file 6 "Generated_Source\\PSoC5/USBUART.h"
 1704              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1705              		.file 8 "Generated_Source\\PSoC5/TimerRX.h"
 1706              		.file 9 "Generated_Source\\PSoC5/RECEIVE.h"
 1707              		.file 10 "Generated_Source\\PSoC5/TRANSMIT.h"
 1708              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4
 1709              		.file 12 "Generated_Source\\PSoC5/CollisionDelay.h"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 45


 1710              		.file 13 "Generated_Source\\PSoC5/Timer.h"
 1711              		.file 14 "Generated_Source\\PSoC5/IDLE.h"
 1712              		.file 15 "Generated_Source\\PSoC5/BUSY.h"
 1713              		.file 16 "Generated_Source\\PSoC5/COLLISION.h"
 1714              		.file 17 "Generated_Source\\PSoC5/USBUART_cdc.h"
 1715              		.file 18 "Generated_Source\\PSoC5/TimerTX.h"
 1716              		.file 19 "Generated_Source\\PSoC5/TimerISR.h"
 1717              		.file 20 "Generated_Source\\PSoC5/RisingEdgeISR.h"
 1718              		.file 21 "Generated_Source\\PSoC5/FallingEdgeISR.h"
 1719              		.file 22 "Generated_Source\\PSoC5/ReceiveISR.h"
 1720              		.file 23 "Generated_Source\\PSoC5/TransmitISR.h"
 1721              		.file 24 "Generated_Source\\PSoC5/CollisionDelayISR.h"
 1722              		.section	.debug_info,"",%progbits
 1723              	.Ldebug_info0:
 1724 0000 C80C0000 		.4byte	0xcc8
 1725 0004 0400     		.2byte	0x4
 1726 0006 00000000 		.4byte	.Ldebug_abbrev0
 1727 000a 04       		.byte	0x4
 1728 000b 01       		.uleb128 0x1
 1729 000c C6050000 		.4byte	.LASF102
 1730 0010 0C       		.byte	0xc
 1731 0011 B3040000 		.4byte	.LASF103
 1732 0015 57030000 		.4byte	.LASF104
 1733 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1734 001d 00000000 		.4byte	0
 1735 0021 00000000 		.4byte	.Ldebug_line0
 1736 0025 02       		.uleb128 0x2
 1737 0026 01       		.byte	0x1
 1738 0027 06       		.byte	0x6
 1739 0028 26030000 		.4byte	.LASF0
 1740 002c 02       		.uleb128 0x2
 1741 002d 01       		.byte	0x1
 1742 002e 08       		.byte	0x8
 1743 002f F7020000 		.4byte	.LASF1
 1744 0033 02       		.uleb128 0x2
 1745 0034 02       		.byte	0x2
 1746 0035 05       		.byte	0x5
 1747 0036 9B000000 		.4byte	.LASF2
 1748 003a 03       		.uleb128 0x3
 1749 003b FD000000 		.4byte	.LASF4
 1750 003f 02       		.byte	0x2
 1751 0040 2B       		.byte	0x2b
 1752 0041 45000000 		.4byte	0x45
 1753 0045 02       		.uleb128 0x2
 1754 0046 02       		.byte	0x2
 1755 0047 07       		.byte	0x7
 1756 0048 41040000 		.4byte	.LASF3
 1757 004c 03       		.uleb128 0x3
 1758 004d 15050000 		.4byte	.LASF5
 1759 0051 02       		.byte	0x2
 1760 0052 3F       		.byte	0x3f
 1761 0053 57000000 		.4byte	0x57
 1762 0057 02       		.uleb128 0x2
 1763 0058 04       		.byte	0x4
 1764 0059 05       		.byte	0x5
 1765 005a 35020000 		.4byte	.LASF6
 1766 005e 02       		.uleb128 0x2
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 46


 1767 005f 04       		.byte	0x4
 1768 0060 07       		.byte	0x7
 1769 0061 CA030000 		.4byte	.LASF7
 1770 0065 02       		.uleb128 0x2
 1771 0066 08       		.byte	0x8
 1772 0067 05       		.byte	0x5
 1773 0068 1B020000 		.4byte	.LASF8
 1774 006c 02       		.uleb128 0x2
 1775 006d 08       		.byte	0x8
 1776 006e 07       		.byte	0x7
 1777 006f 40030000 		.4byte	.LASF9
 1778 0073 04       		.uleb128 0x4
 1779 0074 04       		.byte	0x4
 1780 0075 05       		.byte	0x5
 1781 0076 696E7400 		.ascii	"int\000"
 1782 007a 02       		.uleb128 0x2
 1783 007b 04       		.byte	0x4
 1784 007c 07       		.byte	0x7
 1785 007d B4030000 		.4byte	.LASF10
 1786 0081 03       		.uleb128 0x3
 1787 0082 C1030000 		.4byte	.LASF11
 1788 0086 03       		.byte	0x3
 1789 0087 24       		.byte	0x24
 1790 0088 3A000000 		.4byte	0x3a
 1791 008c 03       		.uleb128 0x3
 1792 008d 39040000 		.4byte	.LASF12
 1793 0091 03       		.byte	0x3
 1794 0092 2C       		.byte	0x2c
 1795 0093 4C000000 		.4byte	0x4c
 1796 0097 05       		.uleb128 0x5
 1797 0098 68010000 		.4byte	.LASF13
 1798 009c 04       		.byte	0x4
 1799 009d 9201     		.2byte	0x192
 1800 009f 2C000000 		.4byte	0x2c
 1801 00a3 02       		.uleb128 0x2
 1802 00a4 04       		.byte	0x4
 1803 00a5 04       		.byte	0x4
 1804 00a6 E0010000 		.4byte	.LASF14
 1805 00aa 02       		.uleb128 0x2
 1806 00ab 08       		.byte	0x8
 1807 00ac 04       		.byte	0x4
 1808 00ad D9040000 		.4byte	.LASF15
 1809 00b1 02       		.uleb128 0x2
 1810 00b2 01       		.byte	0x1
 1811 00b3 08       		.byte	0x8
 1812 00b4 2E040000 		.4byte	.LASF16
 1813 00b8 05       		.uleb128 0x5
 1814 00b9 BA040000 		.4byte	.LASF17
 1815 00bd 04       		.byte	0x4
 1816 00be 3C02     		.2byte	0x23c
 1817 00c0 C4000000 		.4byte	0xc4
 1818 00c4 06       		.uleb128 0x6
 1819 00c5 97000000 		.4byte	0x97
 1820 00c9 02       		.uleb128 0x2
 1821 00ca 08       		.byte	0x8
 1822 00cb 04       		.byte	0x4
 1823 00cc CD020000 		.4byte	.LASF18
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 47


 1824 00d0 02       		.uleb128 0x2
 1825 00d1 04       		.byte	0x4
 1826 00d2 07       		.byte	0x7
 1827 00d3 AB000000 		.4byte	.LASF19
 1828 00d7 07       		.uleb128 0x7
 1829 00d8 04       		.byte	0x4
 1830 00d9 B1000000 		.4byte	0xb1
 1831 00dd 07       		.uleb128 0x7
 1832 00de 04       		.byte	0x4
 1833 00df E3000000 		.4byte	0xe3
 1834 00e3 08       		.uleb128 0x8
 1835 00e4 B1000000 		.4byte	0xb1
 1836 00e8 09       		.uleb128 0x9
 1837 00e9 B0020000 		.4byte	.LASF105
 1838 00ed 01       		.byte	0x1
 1839 00ee 2C000000 		.4byte	0x2c
 1840 00f2 01       		.byte	0x1
 1841 00f3 21       		.byte	0x21
 1842 00f4 0B010000 		.4byte	0x10b
 1843 00f8 0A       		.uleb128 0xa
 1844 00f9 70000000 		.4byte	.LASF20
 1845 00fd 00       		.byte	0
 1846 00fe 0A       		.uleb128 0xa
 1847 00ff B6020000 		.4byte	.LASF21
 1848 0103 01       		.byte	0x1
 1849 0104 0A       		.uleb128 0xa
 1850 0105 15040000 		.4byte	.LASF22
 1851 0109 02       		.byte	0x2
 1852 010a 00       		.byte	0
 1853 010b 0B       		.uleb128 0xb
 1854 010c B4060000 		.4byte	.LASF106
 1855 0110 01       		.byte	0x1
 1856 0111 3D01     		.2byte	0x13d
 1857 0113 00000000 		.4byte	.LFB69
 1858 0117 0C000000 		.4byte	.LFE69-.LFB69
 1859 011b 01       		.uleb128 0x1
 1860 011c 9C       		.byte	0x9c
 1861 011d 0C       		.uleb128 0xc
 1862 011e 83000000 		.4byte	.LASF25
 1863 0122 01       		.byte	0x1
 1864 0123 7D       		.byte	0x7d
 1865 0124 00000000 		.4byte	.LFB64
 1866 0128 94000000 		.4byte	.LFE64-.LFB64
 1867 012c 01       		.uleb128 0x1
 1868 012d 9C       		.byte	0x9c
 1869 012e 8C010000 		.4byte	0x18c
 1870 0132 0D       		.uleb128 0xd
 1871 0133 13000000 		.4byte	.LASF23
 1872 0137 01       		.byte	0x1
 1873 0138 7E       		.byte	0x7e
 1874 0139 73000000 		.4byte	0x73
 1875 013d 00000000 		.4byte	.LLST0
 1876 0141 0D       		.uleb128 0xd
 1877 0142 50050000 		.4byte	.LASF24
 1878 0146 01       		.byte	0x1
 1879 0147 7F       		.byte	0x7f
 1880 0148 B1000000 		.4byte	0xb1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 48


 1881 014c 1F000000 		.4byte	.LLST1
 1882 0150 0E       		.uleb128 0xe
 1883 0151 00000000 		.4byte	.Ldebug_ranges0+0
 1884 0155 67010000 		.4byte	0x167
 1885 0159 0F       		.uleb128 0xf
 1886 015a 7800     		.ascii	"x\000"
 1887 015c 01       		.byte	0x1
 1888 015d 97       		.byte	0x97
 1889 015e 73000000 		.4byte	0x73
 1890 0162 49000000 		.4byte	.LLST2
 1891 0166 00       		.byte	0
 1892 0167 10       		.uleb128 0x10
 1893 0168 12000000 		.4byte	.LVL1
 1894 016c 270B0000 		.4byte	0xb27
 1895 0170 10       		.uleb128 0x10
 1896 0171 1A000000 		.4byte	.LVL2
 1897 0175 320B0000 		.4byte	0xb32
 1898 0179 10       		.uleb128 0x10
 1899 017a 34000000 		.4byte	.LVL3
 1900 017e 3D0B0000 		.4byte	0xb3d
 1901 0182 10       		.uleb128 0x10
 1902 0183 48000000 		.4byte	.LVL4
 1903 0187 3D0B0000 		.4byte	0xb3d
 1904 018b 00       		.byte	0
 1905 018c 0C       		.uleb128 0xc
 1906 018d 83040000 		.4byte	.LASF26
 1907 0191 01       		.byte	0x1
 1908 0192 AF       		.byte	0xaf
 1909 0193 00000000 		.4byte	.LFB65
 1910 0197 0C010000 		.4byte	.LFE65-.LFB65
 1911 019b 01       		.uleb128 0x1
 1912 019c 9C       		.byte	0x9c
 1913 019d FD010000 		.4byte	0x1fd
 1914 01a1 11       		.uleb128 0x11
 1915 01a2 4E000000 		.4byte	.LVL15
 1916 01a6 480B0000 		.4byte	0xb48
 1917 01aa B4010000 		.4byte	0x1b4
 1918 01ae 12       		.uleb128 0x12
 1919 01af 01       		.uleb128 0x1
 1920 01b0 50       		.byte	0x50
 1921 01b1 01       		.uleb128 0x1
 1922 01b2 31       		.byte	0x31
 1923 01b3 00       		.byte	0
 1924 01b4 11       		.uleb128 0x11
 1925 01b5 6C000000 		.4byte	.LVL16
 1926 01b9 480B0000 		.4byte	0xb48
 1927 01bd C7010000 		.4byte	0x1c7
 1928 01c1 12       		.uleb128 0x12
 1929 01c2 01       		.uleb128 0x1
 1930 01c3 50       		.byte	0x50
 1931 01c4 01       		.uleb128 0x1
 1932 01c5 30       		.byte	0x30
 1933 01c6 00       		.byte	0
 1934 01c7 11       		.uleb128 0x11
 1935 01c8 94000000 		.4byte	.LVL17
 1936 01cc 480B0000 		.4byte	0xb48
 1937 01d0 DA010000 		.4byte	0x1da
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 49


 1938 01d4 12       		.uleb128 0x12
 1939 01d5 01       		.uleb128 0x1
 1940 01d6 50       		.byte	0x50
 1941 01d7 01       		.uleb128 0x1
 1942 01d8 31       		.byte	0x31
 1943 01d9 00       		.byte	0
 1944 01da 11       		.uleb128 0x11
 1945 01db AC000000 		.4byte	.LVL18
 1946 01df 480B0000 		.4byte	0xb48
 1947 01e3 ED010000 		.4byte	0x1ed
 1948 01e7 12       		.uleb128 0x12
 1949 01e8 01       		.uleb128 0x1
 1950 01e9 50       		.byte	0x50
 1951 01ea 01       		.uleb128 0x1
 1952 01eb 30       		.byte	0x30
 1953 01ec 00       		.byte	0
 1954 01ed 13       		.uleb128 0x13
 1955 01ee E4000000 		.4byte	.LVL19
 1956 01f2 480B0000 		.4byte	0xb48
 1957 01f6 12       		.uleb128 0x12
 1958 01f7 01       		.uleb128 0x1
 1959 01f8 50       		.byte	0x50
 1960 01f9 01       		.uleb128 0x1
 1961 01fa 30       		.byte	0x30
 1962 01fb 00       		.byte	0
 1963 01fc 00       		.byte	0
 1964 01fd 14       		.uleb128 0x14
 1965 01fe 9A020000 		.4byte	.LASF27
 1966 0202 01       		.byte	0x1
 1967 0203 E9       		.byte	0xe9
 1968 0204 00000000 		.4byte	.LFB66
 1969 0208 74000000 		.4byte	.LFE66-.LFB66
 1970 020c 01       		.uleb128 0x1
 1971 020d 9C       		.byte	0x9c
 1972 020e 79020000 		.4byte	0x279
 1973 0212 15       		.uleb128 0x15
 1974 0213 1C000000 		.4byte	.LBB4
 1975 0217 58000000 		.4byte	.LBE4-.LBB4
 1976 021b 0D       		.uleb128 0xd
 1977 021c B4000000 		.4byte	.LASF28
 1978 0220 01       		.byte	0x1
 1979 0221 F8       		.byte	0xf8
 1980 0222 81000000 		.4byte	0x81
 1981 0226 68000000 		.4byte	.LLST3
 1982 022a 11       		.uleb128 0x11
 1983 022b 28000000 		.4byte	.LVL20
 1984 022f 480B0000 		.4byte	0xb48
 1985 0233 3D020000 		.4byte	0x23d
 1986 0237 12       		.uleb128 0x12
 1987 0238 01       		.uleb128 0x1
 1988 0239 50       		.byte	0x50
 1989 023a 01       		.uleb128 0x1
 1990 023b 30       		.byte	0x30
 1991 023c 00       		.byte	0
 1992 023d 10       		.uleb128 0x10
 1993 023e 38000000 		.4byte	.LVL21
 1994 0242 530B0000 		.4byte	0xb53
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 50


 1995 0246 11       		.uleb128 0x11
 1996 0247 56000000 		.4byte	.LVL27
 1997 024b 5E0B0000 		.4byte	0xb5e
 1998 024f 5A020000 		.4byte	0x25a
 1999 0253 12       		.uleb128 0x12
 2000 0254 01       		.uleb128 0x1
 2001 0255 50       		.byte	0x50
 2002 0256 02       		.uleb128 0x2
 2003 0257 74       		.byte	0x74
 2004 0258 00       		.sleb128 0
 2005 0259 00       		.byte	0
 2006 025a 11       		.uleb128 0x11
 2007 025b 5E000000 		.4byte	.LVL28
 2008 025f 690B0000 		.4byte	0xb69
 2009 0263 6E020000 		.4byte	0x26e
 2010 0267 12       		.uleb128 0x12
 2011 0268 01       		.uleb128 0x1
 2012 0269 50       		.byte	0x50
 2013 026a 02       		.uleb128 0x2
 2014 026b 74       		.byte	0x74
 2015 026c 7F       		.sleb128 -1
 2016 026d 00       		.byte	0
 2017 026e 10       		.uleb128 0x10
 2018 026f 62000000 		.4byte	.LVL29
 2019 0273 740B0000 		.4byte	0xb74
 2020 0277 00       		.byte	0
 2021 0278 00       		.byte	0
 2022 0279 16       		.uleb128 0x16
 2023 027a 65060000 		.4byte	.LASF29
 2024 027e 01       		.byte	0x1
 2025 027f 1001     		.2byte	0x110
 2026 0281 00000000 		.4byte	.LFB67
 2027 0285 44000000 		.4byte	.LFE67-.LFB67
 2028 0289 01       		.uleb128 0x1
 2029 028a 9C       		.byte	0x9c
 2030 028b CA020000 		.4byte	0x2ca
 2031 028f 11       		.uleb128 0x11
 2032 0290 10000000 		.4byte	.LVL31
 2033 0294 7F0B0000 		.4byte	0xb7f
 2034 0298 A3020000 		.4byte	0x2a3
 2035 029c 12       		.uleb128 0x12
 2036 029d 01       		.uleb128 0x1
 2037 029e 50       		.byte	0x50
 2038 029f 02       		.uleb128 0x2
 2039 02a0 08       		.byte	0x8
 2040 02a1 34       		.byte	0x34
 2041 02a2 00       		.byte	0
 2042 02a3 11       		.uleb128 0x11
 2043 02a4 16000000 		.4byte	.LVL32
 2044 02a8 8A0B0000 		.4byte	0xb8a
 2045 02ac B7020000 		.4byte	0x2b7
 2046 02b0 12       		.uleb128 0x12
 2047 02b1 01       		.uleb128 0x1
 2048 02b2 50       		.byte	0x50
 2049 02b3 02       		.uleb128 0x2
 2050 02b4 08       		.byte	0x8
 2051 02b5 33       		.byte	0x33
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 51


 2052 02b6 00       		.byte	0
 2053 02b7 10       		.uleb128 0x10
 2054 02b8 1A000000 		.4byte	.LVL33
 2055 02bc 950B0000 		.4byte	0xb95
 2056 02c0 10       		.uleb128 0x10
 2057 02c1 32000000 		.4byte	.LVL34
 2058 02c5 270B0000 		.4byte	0xb27
 2059 02c9 00       		.byte	0
 2060 02ca 16       		.uleb128 0x16
 2061 02cb 7E020000 		.4byte	.LASF30
 2062 02cf 01       		.byte	0x1
 2063 02d0 2D01     		.2byte	0x12d
 2064 02d2 00000000 		.4byte	.LFB68
 2065 02d6 38000000 		.4byte	.LFE68-.LFB68
 2066 02da 01       		.uleb128 0x1
 2067 02db 9C       		.byte	0x9c
 2068 02dc 14030000 		.4byte	0x314
 2069 02e0 11       		.uleb128 0x11
 2070 02e1 12000000 		.4byte	.LVL35
 2071 02e5 7F0B0000 		.4byte	0xb7f
 2072 02e9 F5020000 		.4byte	0x2f5
 2073 02ed 12       		.uleb128 0x12
 2074 02ee 01       		.uleb128 0x1
 2075 02ef 50       		.byte	0x50
 2076 02f0 03       		.uleb128 0x3
 2077 02f1 0A       		.byte	0xa
 2078 02f2 3E03     		.2byte	0x33e
 2079 02f4 00       		.byte	0
 2080 02f5 11       		.uleb128 0x11
 2081 02f6 1A000000 		.4byte	.LVL36
 2082 02fa 8A0B0000 		.4byte	0xb8a
 2083 02fe 0A030000 		.4byte	0x30a
 2084 0302 12       		.uleb128 0x12
 2085 0303 01       		.uleb128 0x1
 2086 0304 50       		.byte	0x50
 2087 0305 03       		.uleb128 0x3
 2088 0306 0A       		.byte	0xa
 2089 0307 3D03     		.2byte	0x33d
 2090 0309 00       		.byte	0
 2091 030a 10       		.uleb128 0x10
 2092 030b 1E000000 		.4byte	.LVL37
 2093 030f 950B0000 		.4byte	0xb95
 2094 0313 00       		.byte	0
 2095 0314 17       		.uleb128 0x17
 2096 0315 3E020000 		.4byte	.LASF31
 2097 0319 01       		.byte	0x1
 2098 031a DE01     		.2byte	0x1de
 2099 031c 00000000 		.4byte	.LFB71
 2100 0320 90000000 		.4byte	.LFE71-.LFB71
 2101 0324 01       		.uleb128 0x1
 2102 0325 9C       		.byte	0x9c
 2103 0326 D0030000 		.4byte	0x3d0
 2104 032a 11       		.uleb128 0x11
 2105 032b 18000000 		.4byte	.LVL38
 2106 032f A00B0000 		.4byte	0xba0
 2107 0333 3D030000 		.4byte	0x33d
 2108 0337 12       		.uleb128 0x12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 52


 2109 0338 01       		.uleb128 0x1
 2110 0339 50       		.byte	0x50
 2111 033a 01       		.uleb128 0x1
 2112 033b 31       		.byte	0x31
 2113 033c 00       		.byte	0
 2114 033d 10       		.uleb128 0x10
 2115 033e 1C000000 		.4byte	.LVL39
 2116 0342 AB0B0000 		.4byte	0xbab
 2117 0346 10       		.uleb128 0x10
 2118 0347 26000000 		.4byte	.LVL40
 2119 034b B60B0000 		.4byte	0xbb6
 2120 034f 10       		.uleb128 0x10
 2121 0350 2A000000 		.4byte	.LVL41
 2122 0354 AB0B0000 		.4byte	0xbab
 2123 0358 10       		.uleb128 0x10
 2124 0359 34000000 		.4byte	.LVL42
 2125 035d C10B0000 		.4byte	0xbc1
 2126 0361 11       		.uleb128 0x11
 2127 0362 46000000 		.4byte	.LVL43
 2128 0366 B60B0000 		.4byte	0xbb6
 2129 036a 74030000 		.4byte	0x374
 2130 036e 12       		.uleb128 0x12
 2131 036f 01       		.uleb128 0x1
 2132 0370 50       		.byte	0x50
 2133 0371 01       		.uleb128 0x1
 2134 0372 31       		.byte	0x31
 2135 0373 00       		.byte	0
 2136 0374 10       		.uleb128 0x10
 2137 0375 4A000000 		.4byte	.LVL44
 2138 0379 CC0B0000 		.4byte	0xbcc
 2139 037d 10       		.uleb128 0x10
 2140 037e 54000000 		.4byte	.LVL45
 2141 0382 A00B0000 		.4byte	0xba0
 2142 0386 10       		.uleb128 0x10
 2143 0387 58000000 		.4byte	.LVL46
 2144 038b CC0B0000 		.4byte	0xbcc
 2145 038f 10       		.uleb128 0x10
 2146 0390 62000000 		.4byte	.LVL47
 2147 0394 C10B0000 		.4byte	0xbc1
 2148 0398 11       		.uleb128 0x11
 2149 0399 6A000000 		.4byte	.LVL48
 2150 039d C10B0000 		.4byte	0xbc1
 2151 03a1 AB030000 		.4byte	0x3ab
 2152 03a5 12       		.uleb128 0x12
 2153 03a6 01       		.uleb128 0x1
 2154 03a7 50       		.byte	0x50
 2155 03a8 01       		.uleb128 0x1
 2156 03a9 31       		.byte	0x31
 2157 03aa 00       		.byte	0
 2158 03ab 10       		.uleb128 0x10
 2159 03ac 6E000000 		.4byte	.LVL49
 2160 03b0 D70B0000 		.4byte	0xbd7
 2161 03b4 10       		.uleb128 0x10
 2162 03b5 78000000 		.4byte	.LVL50
 2163 03b9 A00B0000 		.4byte	0xba0
 2164 03bd 10       		.uleb128 0x10
 2165 03be 7C000000 		.4byte	.LVL51
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 53


 2166 03c2 D70B0000 		.4byte	0xbd7
 2167 03c6 10       		.uleb128 0x10
 2168 03c7 86000000 		.4byte	.LVL52
 2169 03cb B60B0000 		.4byte	0xbb6
 2170 03cf 00       		.byte	0
 2171 03d0 17       		.uleb128 0x17
 2172 03d1 ED040000 		.4byte	.LASF32
 2173 03d5 01       		.byte	0x1
 2174 03d6 FA01     		.2byte	0x1fa
 2175 03d8 00000000 		.4byte	.LFB72
 2176 03dc FC020000 		.4byte	.LFE72-.LFB72
 2177 03e0 01       		.uleb128 0x1
 2178 03e1 9C       		.byte	0x9c
 2179 03e2 C2050000 		.4byte	0x5c2
 2180 03e6 10       		.uleb128 0x10
 2181 03e7 06000000 		.4byte	.LVL53
 2182 03eb E20B0000 		.4byte	0xbe2
 2183 03ef 10       		.uleb128 0x10
 2184 03f0 68000000 		.4byte	.LVL54
 2185 03f4 E20B0000 		.4byte	0xbe2
 2186 03f8 10       		.uleb128 0x10
 2187 03f9 70000000 		.4byte	.LVL55
 2188 03fd ED0B0000 		.4byte	0xbed
 2189 0401 10       		.uleb128 0x10
 2190 0402 74000000 		.4byte	.LVL56
 2191 0406 E20B0000 		.4byte	0xbe2
 2192 040a 10       		.uleb128 0x10
 2193 040b 7C000000 		.4byte	.LVL57
 2194 040f ED0B0000 		.4byte	0xbed
 2195 0413 10       		.uleb128 0x10
 2196 0414 80000000 		.4byte	.LVL58
 2197 0418 E20B0000 		.4byte	0xbe2
 2198 041c 10       		.uleb128 0x10
 2199 041d 88000000 		.4byte	.LVL59
 2200 0421 ED0B0000 		.4byte	0xbed
 2201 0425 10       		.uleb128 0x10
 2202 0426 8C000000 		.4byte	.LVL60
 2203 042a E20B0000 		.4byte	0xbe2
 2204 042e 11       		.uleb128 0x11
 2205 042f 96000000 		.4byte	.LVL61
 2206 0433 F80B0000 		.4byte	0xbf8
 2207 0437 45040000 		.4byte	0x445
 2208 043b 12       		.uleb128 0x12
 2209 043c 01       		.uleb128 0x1
 2210 043d 50       		.byte	0x50
 2211 043e 05       		.uleb128 0x5
 2212 043f 03       		.byte	0x3
 2213 0440 00000000 		.4byte	.LC0
 2214 0444 00       		.byte	0
 2215 0445 10       		.uleb128 0x10
 2216 0446 9A000000 		.4byte	.LVL62
 2217 044a E20B0000 		.4byte	0xbe2
 2218 044e 10       		.uleb128 0x10
 2219 044f B2000000 		.4byte	.LVL63
 2220 0453 030C0000 		.4byte	0xc03
 2221 0457 10       		.uleb128 0x10
 2222 0458 B6000000 		.4byte	.LVL64
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 54


 2223 045c E20B0000 		.4byte	0xbe2
 2224 0460 10       		.uleb128 0x10
 2225 0461 DE000000 		.4byte	.LVL65
 2226 0465 030C0000 		.4byte	0xc03
 2227 0469 10       		.uleb128 0x10
 2228 046a E2000000 		.4byte	.LVL66
 2229 046e E20B0000 		.4byte	0xbe2
 2230 0472 10       		.uleb128 0x10
 2231 0473 14010000 		.4byte	.LVL67
 2232 0477 030C0000 		.4byte	0xc03
 2233 047b 10       		.uleb128 0x10
 2234 047c 18010000 		.4byte	.LVL68
 2235 0480 E20B0000 		.4byte	0xbe2
 2236 0484 10       		.uleb128 0x10
 2237 0485 20010000 		.4byte	.LVL69
 2238 0489 ED0B0000 		.4byte	0xbed
 2239 048d 10       		.uleb128 0x10
 2240 048e 24010000 		.4byte	.LVL70
 2241 0492 E20B0000 		.4byte	0xbe2
 2242 0496 11       		.uleb128 0x11
 2243 0497 2E010000 		.4byte	.LVL71
 2244 049b F80B0000 		.4byte	0xbf8
 2245 049f AD040000 		.4byte	0x4ad
 2246 04a3 12       		.uleb128 0x12
 2247 04a4 01       		.uleb128 0x1
 2248 04a5 50       		.byte	0x50
 2249 04a6 05       		.uleb128 0x5
 2250 04a7 03       		.byte	0x3
 2251 04a8 10000000 		.4byte	.LC1
 2252 04ac 00       		.byte	0
 2253 04ad 10       		.uleb128 0x10
 2254 04ae 3A010000 		.4byte	.LVL72
 2255 04b2 E20B0000 		.4byte	0xbe2
 2256 04b6 11       		.uleb128 0x11
 2257 04b7 44010000 		.4byte	.LVL73
 2258 04bb F80B0000 		.4byte	0xbf8
 2259 04bf CD040000 		.4byte	0x4cd
 2260 04c3 12       		.uleb128 0x12
 2261 04c4 01       		.uleb128 0x1
 2262 04c5 50       		.byte	0x50
 2263 04c6 05       		.uleb128 0x5
 2264 04c7 03       		.byte	0x3
 2265 04c8 1C000000 		.4byte	.LC2
 2266 04cc 00       		.byte	0
 2267 04cd 10       		.uleb128 0x10
 2268 04ce 48010000 		.4byte	.LVL74
 2269 04d2 E20B0000 		.4byte	0xbe2
 2270 04d6 10       		.uleb128 0x10
 2271 04d7 50010000 		.4byte	.LVL75
 2272 04db ED0B0000 		.4byte	0xbed
 2273 04df 10       		.uleb128 0x10
 2274 04e0 56010000 		.4byte	.LVL76
 2275 04e4 E20B0000 		.4byte	0xbe2
 2276 04e8 10       		.uleb128 0x10
 2277 04e9 6E010000 		.4byte	.LVL77
 2278 04ed 030C0000 		.4byte	0xc03
 2279 04f1 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 55


 2280 04f2 72010000 		.4byte	.LVL78
 2281 04f6 E20B0000 		.4byte	0xbe2
 2282 04fa 10       		.uleb128 0x10
 2283 04fb 9C010000 		.4byte	.LVL79
 2284 04ff 030C0000 		.4byte	0xc03
 2285 0503 10       		.uleb128 0x10
 2286 0504 A0010000 		.4byte	.LVL80
 2287 0508 E20B0000 		.4byte	0xbe2
 2288 050c 10       		.uleb128 0x10
 2289 050d D4010000 		.4byte	.LVL81
 2290 0511 030C0000 		.4byte	0xc03
 2291 0515 10       		.uleb128 0x10
 2292 0516 D8010000 		.4byte	.LVL82
 2293 051a ED0B0000 		.4byte	0xbed
 2294 051e 10       		.uleb128 0x10
 2295 051f DC010000 		.4byte	.LVL83
 2296 0523 E20B0000 		.4byte	0xbe2
 2297 0527 10       		.uleb128 0x10
 2298 0528 E4010000 		.4byte	.LVL84
 2299 052c E20B0000 		.4byte	0xbe2
 2300 0530 11       		.uleb128 0x11
 2301 0531 EE010000 		.4byte	.LVL85
 2302 0535 F80B0000 		.4byte	0xbf8
 2303 0539 47050000 		.4byte	0x547
 2304 053d 12       		.uleb128 0x12
 2305 053e 01       		.uleb128 0x1
 2306 053f 50       		.byte	0x50
 2307 0540 05       		.uleb128 0x5
 2308 0541 03       		.byte	0x3
 2309 0542 24000000 		.4byte	.LC3
 2310 0546 00       		.byte	0
 2311 0547 10       		.uleb128 0x10
 2312 0548 F2010000 		.4byte	.LVL86
 2313 054c E20B0000 		.4byte	0xbe2
 2314 0550 10       		.uleb128 0x10
 2315 0551 0E020000 		.4byte	.LVL87
 2316 0555 030C0000 		.4byte	0xc03
 2317 0559 10       		.uleb128 0x10
 2318 055a 12020000 		.4byte	.LVL88
 2319 055e E20B0000 		.4byte	0xbe2
 2320 0562 10       		.uleb128 0x10
 2321 0563 40020000 		.4byte	.LVL89
 2322 0567 030C0000 		.4byte	0xc03
 2323 056b 10       		.uleb128 0x10
 2324 056c 44020000 		.4byte	.LVL90
 2325 0570 E20B0000 		.4byte	0xbe2
 2326 0574 10       		.uleb128 0x10
 2327 0575 7A020000 		.4byte	.LVL91
 2328 0579 030C0000 		.4byte	0xc03
 2329 057d 10       		.uleb128 0x10
 2330 057e 7E020000 		.4byte	.LVL92
 2331 0582 E20B0000 		.4byte	0xbe2
 2332 0586 10       		.uleb128 0x10
 2333 0587 86020000 		.4byte	.LVL93
 2334 058b ED0B0000 		.4byte	0xbed
 2335 058f 10       		.uleb128 0x10
 2336 0590 8A020000 		.4byte	.LVL94
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 56


 2337 0594 E20B0000 		.4byte	0xbe2
 2338 0598 11       		.uleb128 0x11
 2339 0599 94020000 		.4byte	.LVL95
 2340 059d F80B0000 		.4byte	0xbf8
 2341 05a1 AF050000 		.4byte	0x5af
 2342 05a5 12       		.uleb128 0x12
 2343 05a6 01       		.uleb128 0x1
 2344 05a7 50       		.byte	0x50
 2345 05a8 05       		.uleb128 0x5
 2346 05a9 03       		.byte	0x3
 2347 05aa 2C000000 		.4byte	.LC4
 2348 05ae 00       		.byte	0
 2349 05af 10       		.uleb128 0x10
 2350 05b0 98020000 		.4byte	.LVL96
 2351 05b4 E20B0000 		.4byte	0xbe2
 2352 05b8 10       		.uleb128 0x10
 2353 05b9 BC020000 		.4byte	.LVL97
 2354 05bd 030C0000 		.4byte	0xc03
 2355 05c1 00       		.byte	0
 2356 05c2 18       		.uleb128 0x18
 2357 05c3 E5000000 		.4byte	.LASF107
 2358 05c7 01       		.byte	0x1
 2359 05c8 4C01     		.2byte	0x14c
 2360 05ca 73000000 		.4byte	0x73
 2361 05ce 00000000 		.4byte	.LFB70
 2362 05d2 78020000 		.4byte	.LFE70-.LFB70
 2363 05d6 01       		.uleb128 0x1
 2364 05d7 9C       		.byte	0x9c
 2365 05d8 F0080000 		.4byte	0x8f0
 2366 05dc 19       		.uleb128 0x19
 2367 05dd 6E000000 		.4byte	.LBB5
 2368 05e1 8C010000 		.4byte	.LBE5-.LBB5
 2369 05e5 7F070000 		.4byte	0x77f
 2370 05e9 1A       		.uleb128 0x1a
 2371 05ea 95010000 		.4byte	.LASF33
 2372 05ee 01       		.byte	0x1
 2373 05ef 7801     		.2byte	0x178
 2374 05f1 73000000 		.4byte	0x73
 2375 05f5 7B000000 		.4byte	.LLST4
 2376 05f9 1A       		.uleb128 0x1a
 2377 05fa A5000000 		.4byte	.LASF34
 2378 05fe 01       		.byte	0x1
 2379 05ff 7A01     		.2byte	0x17a
 2380 0601 B1000000 		.4byte	0xb1
 2381 0605 D5000000 		.4byte	.LLST5
 2382 0609 19       		.uleb128 0x19
 2383 060a 9C000000 		.4byte	.LBB6
 2384 060e 18000000 		.4byte	.LBE6-.LBB6
 2385 0612 27060000 		.4byte	0x627
 2386 0616 1B       		.uleb128 0x1b
 2387 0617 5F5F7800 		.ascii	"__x\000"
 2388 061b 01       		.byte	0x1
 2389 061c 8601     		.2byte	0x186
 2390 061e B1000000 		.4byte	0xb1
 2391 0622 42010000 		.4byte	.LLST6
 2392 0626 00       		.byte	0
 2393 0627 10       		.uleb128 0x10
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 57


 2394 0628 7A000000 		.4byte	.LVL114
 2395 062c E20B0000 		.4byte	0xbe2
 2396 0630 11       		.uleb128 0x11
 2397 0631 84000000 		.4byte	.LVL115
 2398 0635 F80B0000 		.4byte	0xbf8
 2399 0639 47060000 		.4byte	0x647
 2400 063d 12       		.uleb128 0x12
 2401 063e 01       		.uleb128 0x1
 2402 063f 50       		.byte	0x50
 2403 0640 05       		.uleb128 0x5
 2404 0641 03       		.byte	0x3
 2405 0642 38000000 		.4byte	.LC5
 2406 0646 00       		.byte	0
 2407 0647 10       		.uleb128 0x10
 2408 0648 8C000000 		.4byte	.LVL117
 2409 064c 14030000 		.4byte	0x314
 2410 0650 10       		.uleb128 0x10
 2411 0651 90000000 		.4byte	.LVL118
 2412 0655 0E0C0000 		.4byte	0xc0e
 2413 0659 10       		.uleb128 0x10
 2414 065a 98000000 		.4byte	.LVL119
 2415 065e 190C0000 		.4byte	0xc19
 2416 0662 10       		.uleb128 0x10
 2417 0663 C2000000 		.4byte	.LVL122
 2418 0667 270B0000 		.4byte	0xb27
 2419 066b 11       		.uleb128 0x11
 2420 066c C8000000 		.4byte	.LVL123
 2421 0670 030C0000 		.4byte	0xc03
 2422 0674 7F060000 		.4byte	0x67f
 2423 0678 12       		.uleb128 0x12
 2424 0679 01       		.uleb128 0x1
 2425 067a 50       		.byte	0x50
 2426 067b 02       		.uleb128 0x2
 2427 067c 75       		.byte	0x75
 2428 067d 00       		.sleb128 0
 2429 067e 00       		.byte	0
 2430 067f 10       		.uleb128 0x10
 2431 0680 CC000000 		.4byte	.LVL124
 2432 0684 ED0B0000 		.4byte	0xbed
 2433 0688 11       		.uleb128 0x11
 2434 0689 D2000000 		.4byte	.LVL125
 2435 068d F80B0000 		.4byte	0xbf8
 2436 0691 9F060000 		.4byte	0x69f
 2437 0695 12       		.uleb128 0x12
 2438 0696 01       		.uleb128 0x1
 2439 0697 50       		.byte	0x50
 2440 0698 05       		.uleb128 0x5
 2441 0699 03       		.byte	0x3
 2442 069a 70000000 		.4byte	.LC6
 2443 069e 00       		.byte	0
 2444 069f 10       		.uleb128 0x10
 2445 06a0 D6000000 		.4byte	.LVL126
 2446 06a4 ED0B0000 		.4byte	0xbed
 2447 06a8 11       		.uleb128 0x11
 2448 06a9 F8000000 		.4byte	.LVL129
 2449 06ad 030C0000 		.4byte	0xc03
 2450 06b1 BC060000 		.4byte	0x6bc
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 58


 2451 06b5 12       		.uleb128 0x12
 2452 06b6 01       		.uleb128 0x1
 2453 06b7 50       		.byte	0x50
 2454 06b8 02       		.uleb128 0x2
 2455 06b9 75       		.byte	0x75
 2456 06ba 00       		.sleb128 0
 2457 06bb 00       		.byte	0
 2458 06bc 11       		.uleb128 0x11
 2459 06bd 1A010000 		.4byte	.LVL132
 2460 06c1 030C0000 		.4byte	0xc03
 2461 06c5 D0060000 		.4byte	0x6d0
 2462 06c9 12       		.uleb128 0x12
 2463 06ca 01       		.uleb128 0x1
 2464 06cb 50       		.byte	0x50
 2465 06cc 02       		.uleb128 0x2
 2466 06cd 75       		.byte	0x75
 2467 06ce 00       		.sleb128 0
 2468 06cf 00       		.byte	0
 2469 06d0 11       		.uleb128 0x11
 2470 06d1 34010000 		.4byte	.LVL135
 2471 06d5 030C0000 		.4byte	0xc03
 2472 06d9 E4060000 		.4byte	0x6e4
 2473 06dd 12       		.uleb128 0x12
 2474 06de 01       		.uleb128 0x1
 2475 06df 50       		.byte	0x50
 2476 06e0 02       		.uleb128 0x2
 2477 06e1 75       		.byte	0x75
 2478 06e2 00       		.sleb128 0
 2479 06e3 00       		.byte	0
 2480 06e4 10       		.uleb128 0x10
 2481 06e5 46010000 		.4byte	.LVL138
 2482 06e9 E20B0000 		.4byte	0xbe2
 2483 06ed 10       		.uleb128 0x10
 2484 06ee 4E010000 		.4byte	.LVL139
 2485 06f2 ED0B0000 		.4byte	0xbed
 2486 06f6 10       		.uleb128 0x10
 2487 06f7 52010000 		.4byte	.LVL140
 2488 06fb E20B0000 		.4byte	0xbe2
 2489 06ff 11       		.uleb128 0x11
 2490 0700 5C010000 		.4byte	.LVL141
 2491 0704 F80B0000 		.4byte	0xbf8
 2492 0708 16070000 		.4byte	0x716
 2493 070c 12       		.uleb128 0x12
 2494 070d 01       		.uleb128 0x1
 2495 070e 50       		.byte	0x50
 2496 070f 05       		.uleb128 0x5
 2497 0710 03       		.byte	0x3
 2498 0711 98000000 		.4byte	.LC7
 2499 0715 00       		.byte	0
 2500 0716 10       		.uleb128 0x10
 2501 0717 84010000 		.4byte	.LVL143
 2502 071b 0E0C0000 		.4byte	0xc0e
 2503 071f 10       		.uleb128 0x10
 2504 0720 8C010000 		.4byte	.LVL144
 2505 0724 190C0000 		.4byte	0xc19
 2506 0728 10       		.uleb128 0x10
 2507 0729 9A010000 		.4byte	.LVL147
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 59


 2508 072d E20B0000 		.4byte	0xbe2
 2509 0731 10       		.uleb128 0x10
 2510 0732 A6010000 		.4byte	.LVL148
 2511 0736 030C0000 		.4byte	0xc03
 2512 073a 10       		.uleb128 0x10
 2513 073b BC010000 		.4byte	.LVL150
 2514 073f E20B0000 		.4byte	0xbe2
 2515 0743 11       		.uleb128 0x11
 2516 0744 C6010000 		.4byte	.LVL151
 2517 0748 F80B0000 		.4byte	0xbf8
 2518 074c 5A070000 		.4byte	0x75a
 2519 0750 12       		.uleb128 0x12
 2520 0751 01       		.uleb128 0x1
 2521 0752 50       		.byte	0x50
 2522 0753 05       		.uleb128 0x5
 2523 0754 03       		.byte	0x3
 2524 0755 A8000000 		.4byte	.LC8
 2525 0759 00       		.byte	0
 2526 075a 10       		.uleb128 0x10
 2527 075b DE010000 		.4byte	.LVL153
 2528 075f 240C0000 		.4byte	0xc24
 2529 0763 10       		.uleb128 0x10
 2530 0764 EE010000 		.4byte	.LVL154
 2531 0768 2F0C0000 		.4byte	0xc2f
 2532 076c 10       		.uleb128 0x10
 2533 076d F2010000 		.4byte	.LVL155
 2534 0771 E20B0000 		.4byte	0xbe2
 2535 0775 10       		.uleb128 0x10
 2536 0776 FA010000 		.4byte	.LVL156
 2537 077a ED0B0000 		.4byte	0xbed
 2538 077e 00       		.byte	0
 2539 077f 19       		.uleb128 0x19
 2540 0780 0E020000 		.4byte	.LBB7
 2541 0784 6A000000 		.4byte	.LBE7-.LBB7
 2542 0788 C4070000 		.4byte	0x7c4
 2543 078c 1A       		.uleb128 0x1a
 2544 078d A5000000 		.4byte	.LASF34
 2545 0791 01       		.byte	0x1
 2546 0792 D401     		.2byte	0x1d4
 2547 0794 B1000000 		.4byte	0xb1
 2548 0798 60010000 		.4byte	.LLST7
 2549 079c 19       		.uleb128 0x19
 2550 079d 12020000 		.4byte	.LBB8
 2551 07a1 12000000 		.4byte	.LBE8-.LBB8
 2552 07a5 BA070000 		.4byte	0x7ba
 2553 07a9 1B       		.uleb128 0x1b
 2554 07aa 5F5F7800 		.ascii	"__x\000"
 2555 07ae 01       		.byte	0x1
 2556 07af D601     		.2byte	0x1d6
 2557 07b1 B1000000 		.4byte	0xb1
 2558 07b5 60010000 		.4byte	.LLST7
 2559 07b9 00       		.byte	0
 2560 07ba 10       		.uleb128 0x10
 2561 07bb 12020000 		.4byte	.LVL161
 2562 07bf 190C0000 		.4byte	0xc19
 2563 07c3 00       		.byte	0
 2564 07c4 11       		.uleb128 0x11
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 60


 2565 07c5 0A000000 		.4byte	.LVL98
 2566 07c9 3A0C0000 		.4byte	0xc3a
 2567 07cd DB070000 		.4byte	0x7db
 2568 07d1 12       		.uleb128 0x12
 2569 07d2 01       		.uleb128 0x1
 2570 07d3 50       		.byte	0x50
 2571 07d4 05       		.uleb128 0x5
 2572 07d5 03       		.byte	0x3
 2573 07d6 00000000 		.4byte	TimerInterruptHandler
 2574 07da 00       		.byte	0
 2575 07db 11       		.uleb128 0x11
 2576 07dc 10000000 		.4byte	.LVL99
 2577 07e0 450C0000 		.4byte	0xc45
 2578 07e4 F2070000 		.4byte	0x7f2
 2579 07e8 12       		.uleb128 0x12
 2580 07e9 01       		.uleb128 0x1
 2581 07ea 50       		.byte	0x50
 2582 07eb 05       		.uleb128 0x5
 2583 07ec 03       		.byte	0x3
 2584 07ed 00000000 		.4byte	RisingEdgeInterruptHandler
 2585 07f1 00       		.byte	0
 2586 07f2 11       		.uleb128 0x11
 2587 07f3 16000000 		.4byte	.LVL100
 2588 07f7 500C0000 		.4byte	0xc50
 2589 07fb 09080000 		.4byte	0x809
 2590 07ff 12       		.uleb128 0x12
 2591 0800 01       		.uleb128 0x1
 2592 0801 50       		.byte	0x50
 2593 0802 05       		.uleb128 0x5
 2594 0803 03       		.byte	0x3
 2595 0804 00000000 		.4byte	FallingEdgeInterruptHandler
 2596 0808 00       		.byte	0
 2597 0809 11       		.uleb128 0x11
 2598 080a 1E000000 		.4byte	.LVL101
 2599 080e 5B0C0000 		.4byte	0xc5b
 2600 0812 1D080000 		.4byte	0x81d
 2601 0816 12       		.uleb128 0x12
 2602 0817 01       		.uleb128 0x1
 2603 0818 50       		.byte	0x50
 2604 0819 02       		.uleb128 0x2
 2605 081a 74       		.byte	0x74
 2606 081b 00       		.sleb128 0
 2607 081c 00       		.byte	0
 2608 081d 11       		.uleb128 0x11
 2609 081e 24000000 		.4byte	.LVL102
 2610 0822 660C0000 		.4byte	0xc66
 2611 0826 31080000 		.4byte	0x831
 2612 082a 12       		.uleb128 0x12
 2613 082b 01       		.uleb128 0x1
 2614 082c 50       		.byte	0x50
 2615 082d 02       		.uleb128 0x2
 2616 082e 08       		.byte	0x8
 2617 082f 2F       		.byte	0x2f
 2618 0830 00       		.byte	0
 2619 0831 11       		.uleb128 0x11
 2620 0832 2A000000 		.4byte	.LVL103
 2621 0836 710C0000 		.4byte	0xc71
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 61


 2622 083a 45080000 		.4byte	0x845
 2623 083e 12       		.uleb128 0x12
 2624 083f 01       		.uleb128 0x1
 2625 0840 50       		.byte	0x50
 2626 0841 02       		.uleb128 0x2
 2627 0842 08       		.byte	0x8
 2628 0843 2E       		.byte	0x2e
 2629 0844 00       		.byte	0
 2630 0845 11       		.uleb128 0x11
 2631 0846 30000000 		.4byte	.LVL104
 2632 084a 7C0C0000 		.4byte	0xc7c
 2633 084e 5C080000 		.4byte	0x85c
 2634 0852 12       		.uleb128 0x12
 2635 0853 01       		.uleb128 0x1
 2636 0854 50       		.byte	0x50
 2637 0855 05       		.uleb128 0x5
 2638 0856 03       		.byte	0x3
 2639 0857 00000000 		.4byte	TransmitInterruptHandler
 2640 085b 00       		.byte	0
 2641 085c 11       		.uleb128 0x11
 2642 085d 36000000 		.4byte	.LVL105
 2643 0861 870C0000 		.4byte	0xc87
 2644 0865 70080000 		.4byte	0x870
 2645 0869 12       		.uleb128 0x12
 2646 086a 01       		.uleb128 0x1
 2647 086b 50       		.byte	0x50
 2648 086c 02       		.uleb128 0x2
 2649 086d 08       		.byte	0x8
 2650 086e 33       		.byte	0x33
 2651 086f 00       		.byte	0
 2652 0870 11       		.uleb128 0x11
 2653 0871 3C000000 		.4byte	.LVL106
 2654 0875 920C0000 		.4byte	0xc92
 2655 0879 84080000 		.4byte	0x884
 2656 087d 12       		.uleb128 0x12
 2657 087e 01       		.uleb128 0x1
 2658 087f 50       		.byte	0x50
 2659 0880 02       		.uleb128 0x2
 2660 0881 08       		.byte	0x8
 2661 0882 34       		.byte	0x34
 2662 0883 00       		.byte	0
 2663 0884 11       		.uleb128 0x11
 2664 0885 42000000 		.4byte	.LVL107
 2665 0889 5B0C0000 		.4byte	0xc5b
 2666 088d 98080000 		.4byte	0x898
 2667 0891 12       		.uleb128 0x12
 2668 0892 01       		.uleb128 0x1
 2669 0893 50       		.byte	0x50
 2670 0894 02       		.uleb128 0x2
 2671 0895 74       		.byte	0x74
 2672 0896 00       		.sleb128 0
 2673 0897 00       		.byte	0
 2674 0898 11       		.uleb128 0x11
 2675 0899 48000000 		.4byte	.LVL108
 2676 089d 9D0C0000 		.4byte	0xc9d
 2677 08a1 AF080000 		.4byte	0x8af
 2678 08a5 12       		.uleb128 0x12
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 62


 2679 08a6 01       		.uleb128 0x1
 2680 08a7 50       		.byte	0x50
 2681 08a8 05       		.uleb128 0x5
 2682 08a9 03       		.byte	0x3
 2683 08aa 00000000 		.4byte	CollisionDelayInterruptHandler
 2684 08ae 00       		.byte	0
 2685 08af 11       		.uleb128 0x11
 2686 08b0 52000000 		.4byte	.LVL109
 2687 08b4 A80C0000 		.4byte	0xca8
 2688 08b8 C2080000 		.4byte	0x8c2
 2689 08bc 12       		.uleb128 0x12
 2690 08bd 01       		.uleb128 0x1
 2691 08be 51       		.byte	0x51
 2692 08bf 01       		.uleb128 0x1
 2693 08c0 31       		.byte	0x31
 2694 08c1 00       		.byte	0
 2695 08c2 10       		.uleb128 0x10
 2696 08c3 56000000 		.4byte	.LVL110
 2697 08c7 B40C0000 		.4byte	0xcb4
 2698 08cb 10       		.uleb128 0x10
 2699 08cc 5E000000 		.4byte	.LVL111
 2700 08d0 C00C0000 		.4byte	0xcc0
 2701 08d4 10       		.uleb128 0x10
 2702 08d5 00020000 		.4byte	.LVL158
 2703 08d9 D0030000 		.4byte	0x3d0
 2704 08dd 10       		.uleb128 0x10
 2705 08de 04020000 		.4byte	.LVL159
 2706 08e2 14030000 		.4byte	0x314
 2707 08e6 10       		.uleb128 0x10
 2708 08e7 08020000 		.4byte	.LVL160
 2709 08eb 0E0C0000 		.4byte	0xc0e
 2710 08ef 00       		.byte	0
 2711 08f0 1C       		.uleb128 0x1c
 2712 08f1 BC000000 		.4byte	.LASF35
 2713 08f5 05       		.byte	0x5
 2714 08f6 2E       		.byte	0x2e
 2715 08f7 DD000000 		.4byte	0xdd
 2716 08fb 1D       		.uleb128 0x1d
 2717 08fc 5B020000 		.4byte	.LASF36
 2718 0900 06       		.byte	0x6
 2719 0901 D602     		.2byte	0x2d6
 2720 0903 C4000000 		.4byte	0xc4
 2721 0907 1D       		.uleb128 0x1d
 2722 0908 B9050000 		.4byte	.LASF37
 2723 090c 07       		.byte	0x7
 2724 090d 1207     		.2byte	0x712
 2725 090f 13090000 		.4byte	0x913
 2726 0913 06       		.uleb128 0x6
 2727 0914 8C000000 		.4byte	0x8c
 2728 0918 1E       		.uleb128 0x1e
 2729 0919 05030000 		.4byte	.LASF38
 2730 091d 01       		.byte	0x1
 2731 091e 21       		.byte	0x21
 2732 091f E8000000 		.4byte	0xe8
 2733 0923 05       		.uleb128 0x5
 2734 0924 03       		.byte	0x3
 2735 0925 00000000 		.4byte	systemState
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 63


 2736 0929 1E       		.uleb128 0x1e
 2737 092a 2C000000 		.4byte	.LASF39
 2738 092e 01       		.byte	0x1
 2739 092f 24       		.byte	0x24
 2740 0930 3A090000 		.4byte	0x93a
 2741 0934 05       		.uleb128 0x5
 2742 0935 03       		.byte	0x3
 2743 0936 00000000 		.4byte	lowFlag
 2744 093a 02       		.uleb128 0x2
 2745 093b 01       		.byte	0x1
 2746 093c 02       		.byte	0x2
 2747 093d 33040000 		.4byte	.LASF40
 2748 0941 1F       		.uleb128 0x1f
 2749 0942 2C000000 		.4byte	0x2c
 2750 0946 58090000 		.4byte	0x958
 2751 094a 20       		.uleb128 0x20
 2752 094b D0000000 		.4byte	0xd0
 2753 094f F301     		.2byte	0x1f3
 2754 0951 21       		.uleb128 0x21
 2755 0952 D0000000 		.4byte	0xd0
 2756 0956 0F       		.byte	0xf
 2757 0957 00       		.byte	0
 2758 0958 1E       		.uleb128 0x1e
 2759 0959 1F000000 		.4byte	.LASF41
 2760 095d 01       		.byte	0x1
 2761 095e 43       		.byte	0x43
 2762 095f 41090000 		.4byte	0x941
 2763 0963 05       		.uleb128 0x5
 2764 0964 03       		.byte	0x3
 2765 0965 00000000 		.4byte	transmitData
 2766 0969 1F       		.uleb128 0x1f
 2767 096a 2C000000 		.4byte	0x2c
 2768 096e 7A090000 		.4byte	0x97a
 2769 0972 20       		.uleb128 0x20
 2770 0973 D0000000 		.4byte	0xd0
 2771 0977 F301     		.2byte	0x1f3
 2772 0979 00       		.byte	0
 2773 097a 1E       		.uleb128 0x1e
 2774 097b 9C040000 		.4byte	.LASF42
 2775 097f 01       		.byte	0x1
 2776 0980 44       		.byte	0x44
 2777 0981 69090000 		.4byte	0x969
 2778 0985 05       		.uleb128 0x5
 2779 0986 03       		.byte	0x3
 2780 0987 00000000 		.4byte	buffer
 2781 098b 1E       		.uleb128 0x1e
 2782 098c CB040000 		.4byte	.LASF43
 2783 0990 01       		.byte	0x1
 2784 0991 45       		.byte	0x45
 2785 0992 69090000 		.4byte	0x969
 2786 0996 05       		.uleb128 0x5
 2787 0997 03       		.byte	0x3
 2788 0998 00000000 		.4byte	receiveBuffer
 2789 099c 1F       		.uleb128 0x1f
 2790 099d 2C000000 		.4byte	0x2c
 2791 09a1 AC090000 		.4byte	0x9ac
 2792 09a5 21       		.uleb128 0x21
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 64


 2793 09a6 D0000000 		.4byte	0xd0
 2794 09aa 0F       		.byte	0xf
 2795 09ab 00       		.byte	0
 2796 09ac 1E       		.uleb128 0x1e
 2797 09ad D4010000 		.4byte	.LASF44
 2798 09b1 01       		.byte	0x1
 2799 09b2 46       		.byte	0x46
 2800 09b3 9C090000 		.4byte	0x99c
 2801 09b7 05       		.uleb128 0x5
 2802 09b8 03       		.byte	0x3
 2803 09b9 00000000 		.4byte	receiveData
 2804 09bd 1E       		.uleb128 0x1e
 2805 09be 7A050000 		.4byte	.LASF45
 2806 09c2 01       		.byte	0x1
 2807 09c3 47       		.byte	0x47
 2808 09c4 CE090000 		.4byte	0x9ce
 2809 09c8 05       		.uleb128 0x5
 2810 09c9 03       		.byte	0x3
 2811 09ca 00000000 		.4byte	position
 2812 09ce 06       		.uleb128 0x6
 2813 09cf 73000000 		.4byte	0x73
 2814 09d3 1E       		.uleb128 0x1e
 2815 09d4 05040000 		.4byte	.LASF46
 2816 09d8 01       		.byte	0x1
 2817 09d9 48       		.byte	0x48
 2818 09da 73000000 		.4byte	0x73
 2819 09de 05       		.uleb128 0x5
 2820 09df 03       		.byte	0x3
 2821 09e0 00000000 		.4byte	receivePosition
 2822 09e4 1E       		.uleb128 0x1e
 2823 09e5 C0020000 		.4byte	.LASF47
 2824 09e9 01       		.byte	0x1
 2825 09ea 49       		.byte	0x49
 2826 09eb 73000000 		.4byte	0x73
 2827 09ef 05       		.uleb128 0x5
 2828 09f0 03       		.byte	0x3
 2829 09f1 00000000 		.4byte	dataBitsRead
 2830 09f5 22       		.uleb128 0x22
 2831 09f6 69647800 		.ascii	"idx\000"
 2832 09fa 01       		.byte	0x1
 2833 09fb 4A       		.byte	0x4a
 2834 09fc 73000000 		.4byte	0x73
 2835 0a00 05       		.uleb128 0x5
 2836 0a01 03       		.byte	0x3
 2837 0a02 00000000 		.4byte	idx
 2838 0a06 1E       		.uleb128 0x1e
 2839 0a07 EA030000 		.4byte	.LASF48
 2840 0a0b 01       		.byte	0x1
 2841 0a0c 4B       		.byte	0x4b
 2842 0a0d D7000000 		.4byte	0xd7
 2843 0a11 05       		.uleb128 0x5
 2844 0a12 03       		.byte	0x3
 2845 0a13 00000000 		.4byte	dataPtr
 2846 0a17 1E       		.uleb128 0x1e
 2847 0a18 93060000 		.4byte	.LASF49
 2848 0a1c 01       		.byte	0x1
 2849 0a1d 4C       		.byte	0x4c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 65


 2850 0a1e 73000000 		.4byte	0x73
 2851 0a22 05       		.uleb128 0x5
 2852 0a23 03       		.byte	0x3
 2853 0a24 00000000 		.4byte	transmitLock
 2854 0a28 1E       		.uleb128 0x1e
 2855 0a29 6E010000 		.4byte	.LASF50
 2856 0a2d 01       		.byte	0x1
 2857 0a2e 4D       		.byte	0x4d
 2858 0a2f 73000000 		.4byte	0x73
 2859 0a33 05       		.uleb128 0x5
 2860 0a34 03       		.byte	0x3
 2861 0a35 00000000 		.4byte	receiveLock
 2862 0a39 1E       		.uleb128 0x1e
 2863 0a3a 75000000 		.4byte	.LASF51
 2864 0a3e 01       		.byte	0x1
 2865 0a3f 4E       		.byte	0x4e
 2866 0a40 3A090000 		.4byte	0x93a
 2867 0a44 05       		.uleb128 0x5
 2868 0a45 03       		.byte	0x3
 2869 0a46 00000000 		.4byte	collisionLock
 2870 0a4a 1E       		.uleb128 0x1e
 2871 0a4b 32030000 		.4byte	.LASF52
 2872 0a4f 01       		.byte	0x1
 2873 0a50 51       		.byte	0x51
 2874 0a51 B1000000 		.4byte	0xb1
 2875 0a55 05       		.uleb128 0x5
 2876 0a56 03       		.byte	0x3
 2877 0a57 00000000 		.4byte	sourceAddress
 2878 0a5b 1E       		.uleb128 0x1e
 2879 0a5c 80060000 		.4byte	.LASF53
 2880 0a60 01       		.byte	0x1
 2881 0a61 52       		.byte	0x52
 2882 0a62 B1000000 		.4byte	0xb1
 2883 0a66 05       		.uleb128 0x5
 2884 0a67 03       		.byte	0x3
 2885 0a68 00000000 		.4byte	destinationAddress
 2886 0a6c 1E       		.uleb128 0x1e
 2887 0a6d FD040000 		.4byte	.LASF54
 2888 0a71 01       		.byte	0x1
 2889 0a72 53       		.byte	0x53
 2890 0a73 73000000 		.4byte	0x73
 2891 0a77 05       		.uleb128 0x5
 2892 0a78 03       		.byte	0x3
 2893 0a79 00000000 		.4byte	messageLength
 2894 0a7d 1E       		.uleb128 0x1e
 2895 0a7e DC000000 		.4byte	.LASF55
 2896 0a82 01       		.byte	0x1
 2897 0a83 54       		.byte	0x54
 2898 0a84 B1000000 		.4byte	0xb1
 2899 0a88 05       		.uleb128 0x5
 2900 0a89 03       		.byte	0x3
 2901 0a8a 00000000 		.4byte	crcUsage
 2902 0a8e 1E       		.uleb128 0x1e
 2903 0a8f 33050000 		.4byte	.LASF56
 2904 0a93 01       		.byte	0x1
 2905 0a94 55       		.byte	0x55
 2906 0a95 B1000000 		.4byte	0xb1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 66


 2907 0a99 05       		.uleb128 0x5
 2908 0a9a 03       		.byte	0x3
 2909 0a9b 00000000 		.4byte	headerCRC
 2910 0a9f 1E       		.uleb128 0x1e
 2911 0aa0 3D050000 		.4byte	.LASF57
 2912 0aa4 01       		.byte	0x1
 2913 0aa5 56       		.byte	0x56
 2914 0aa6 73000000 		.4byte	0x73
 2915 0aaa 05       		.uleb128 0x5
 2916 0aab 03       		.byte	0x3
 2917 0aac 00000000 		.4byte	addressZeroReceive
 2918 0ab0 1E       		.uleb128 0x1e
 2919 0ab1 BF040000 		.4byte	.LASF58
 2920 0ab5 01       		.byte	0x1
 2921 0ab6 57       		.byte	0x57
 2922 0ab7 B1000000 		.4byte	0xb1
 2923 0abb 05       		.uleb128 0x5
 2924 0abc 03       		.byte	0x3
 2925 0abd 00000000 		.4byte	currentChar
 2926 0ac1 1E       		.uleb128 0x1e
 2927 0ac2 3D010000 		.4byte	.LASF59
 2928 0ac6 01       		.byte	0x1
 2929 0ac7 58       		.byte	0x58
 2930 0ac8 73000000 		.4byte	0x73
 2931 0acc 05       		.uleb128 0x5
 2932 0acd 03       		.byte	0x3
 2933 0ace 00000000 		.4byte	dataSize
 2934 0ad2 1E       		.uleb128 0x1e
 2935 0ad3 D9020000 		.4byte	.LASF60
 2936 0ad7 01       		.byte	0x1
 2937 0ad8 59       		.byte	0x59
 2938 0ad9 73000000 		.4byte	0x73
 2939 0add 05       		.uleb128 0x5
 2940 0ade 03       		.byte	0x3
 2941 0adf 00000000 		.4byte	transmitBitCount
 2942 0ae3 1E       		.uleb128 0x1e
 2943 0ae4 C4010000 		.4byte	.LASF61
 2944 0ae8 01       		.byte	0x1
 2945 0ae9 5A       		.byte	0x5a
 2946 0aea 73000000 		.4byte	0x73
 2947 0aee 05       		.uleb128 0x5
 2948 0aef 03       		.byte	0x3
 2949 0af0 00000000 		.4byte	receiveBitCount
 2950 0af4 1E       		.uleb128 0x1e
 2951 0af5 13000000 		.4byte	.LASF23
 2952 0af9 01       		.byte	0x1
 2953 0afa 5B       		.byte	0x5b
 2954 0afb 73000000 		.4byte	0x73
 2955 0aff 05       		.uleb128 0x5
 2956 0b00 03       		.byte	0x3
 2957 0b01 00000000 		.4byte	concatCount
 2958 0b05 1E       		.uleb128 0x1e
 2959 0b06 4B020000 		.4byte	.LASF62
 2960 0b0a 01       		.byte	0x1
 2961 0b0b 5C       		.byte	0x5c
 2962 0b0c 2C000000 		.4byte	0x2c
 2963 0b10 05       		.uleb128 0x5
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 67


 2964 0b11 03       		.byte	0x3
 2965 0b12 00000000 		.4byte	transmitAddress
 2966 0b16 1E       		.uleb128 0x1e
 2967 0b17 EA020000 		.4byte	.LASF63
 2968 0b1b 01       		.byte	0x1
 2969 0b1c 5E       		.byte	0x5e
 2970 0b1d 3A090000 		.4byte	0x93a
 2971 0b21 05       		.uleb128 0x5
 2972 0b22 03       		.byte	0x3
 2973 0b23 00000000 		.4byte	transmitMode
 2974 0b27 23       		.uleb128 0x23
 2975 0b28 5C050000 		.4byte	.LASF64
 2976 0b2c 5C050000 		.4byte	.LASF64
 2977 0b30 08       		.byte	0x8
 2978 0b31 5A       		.byte	0x5a
 2979 0b32 23       		.uleb128 0x23
 2980 0b33 E0040000 		.4byte	.LASF65
 2981 0b37 E0040000 		.4byte	.LASF65
 2982 0b3b 09       		.byte	0x9
 2983 0b3c 29       		.byte	0x29
 2984 0b3d 23       		.uleb128 0x23
 2985 0b3e 22010000 		.4byte	.LASF66
 2986 0b42 22010000 		.4byte	.LASF66
 2987 0b46 08       		.byte	0x8
 2988 0b47 5B       		.byte	0x5b
 2989 0b48 23       		.uleb128 0x23
 2990 0b49 24050000 		.4byte	.LASF67
 2991 0b4d 24050000 		.4byte	.LASF67
 2992 0b51 0A       		.byte	0xa
 2993 0b52 26       		.byte	0x26
 2994 0b53 23       		.uleb128 0x23
 2995 0b54 1F050000 		.4byte	.LASF68
 2996 0b58 1F050000 		.4byte	.LASF68
 2997 0b5c 0B       		.byte	0xb
 2998 0b5d 88       		.byte	0x88
 2999 0b5e 23       		.uleb128 0x23
 3000 0b5f 7A010000 		.4byte	.LASF69
 3001 0b63 7A010000 		.4byte	.LASF69
 3002 0b67 0C       		.byte	0xc
 3003 0b68 68       		.byte	0x68
 3004 0b69 23       		.uleb128 0x23
 3005 0b6a FF010000 		.4byte	.LASF70
 3006 0b6e FF010000 		.4byte	.LASF70
 3007 0b72 0C       		.byte	0xc
 3008 0b73 6A       		.byte	0x6a
 3009 0b74 23       		.uleb128 0x23
 3010 0b75 9D010000 		.4byte	.LASF71
 3011 0b79 9D010000 		.4byte	.LASF71
 3012 0b7d 0C       		.byte	0xc
 3013 0b7e 5A       		.byte	0x5a
 3014 0b7f 23       		.uleb128 0x23
 3015 0b80 CA000000 		.4byte	.LASF72
 3016 0b84 CA000000 		.4byte	.LASF72
 3017 0b88 0D       		.byte	0xd
 3018 0b89 68       		.byte	0x68
 3019 0b8a 23       		.uleb128 0x23
 3020 0b8b EA000000 		.4byte	.LASF73
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 68


 3021 0b8f EA000000 		.4byte	.LASF73
 3022 0b93 0D       		.byte	0xd
 3023 0b94 6A       		.byte	0x6a
 3024 0b95 23       		.uleb128 0x23
 3025 0b96 29020000 		.4byte	.LASF74
 3026 0b9a 29020000 		.4byte	.LASF74
 3027 0b9e 0D       		.byte	0xd
 3028 0b9f 5A       		.byte	0x5a
 3029 0ba0 23       		.uleb128 0x23
 3030 0ba1 54040000 		.4byte	.LASF75
 3031 0ba5 54040000 		.4byte	.LASF75
 3032 0ba9 0E       		.byte	0xe
 3033 0baa 26       		.byte	0x26
 3034 0bab 23       		.uleb128 0x23
 3035 0bac 34000000 		.4byte	.LASF76
 3036 0bb0 34000000 		.4byte	.LASF76
 3037 0bb4 0E       		.byte	0xe
 3038 0bb5 29       		.byte	0x29
 3039 0bb6 23       		.uleb128 0x23
 3040 0bb7 46010000 		.4byte	.LASF77
 3041 0bbb 46010000 		.4byte	.LASF77
 3042 0bbf 0F       		.byte	0xf
 3043 0bc0 26       		.byte	0x26
 3044 0bc1 23       		.uleb128 0x23
 3045 0bc2 A3040000 		.4byte	.LASF78
 3046 0bc6 A3040000 		.4byte	.LASF78
 3047 0bca 10       		.byte	0x10
 3048 0bcb 26       		.byte	0x26
 3049 0bcc 23       		.uleb128 0x23
 3050 0bcd 0B050000 		.4byte	.LASF79
 3051 0bd1 0B050000 		.4byte	.LASF79
 3052 0bd5 0F       		.byte	0xf
 3053 0bd6 29       		.byte	0x29
 3054 0bd7 23       		.uleb128 0x23
 3055 0bd8 4B000000 		.4byte	.LASF80
 3056 0bdc 4B000000 		.4byte	.LASF80
 3057 0be0 10       		.byte	0x10
 3058 0be1 29       		.byte	0x29
 3059 0be2 23       		.uleb128 0x23
 3060 0be3 00000000 		.4byte	.LASF81
 3061 0be7 00000000 		.4byte	.LASF81
 3062 0beb 11       		.byte	0x11
 3063 0bec 28       		.byte	0x28
 3064 0bed 23       		.uleb128 0x23
 3065 0bee 6A050000 		.4byte	.LASF82
 3066 0bf2 6A050000 		.4byte	.LASF82
 3067 0bf6 11       		.byte	0x11
 3068 0bf7 26       		.byte	0x26
 3069 0bf8 23       		.uleb128 0x23
 3070 0bf9 B2010000 		.4byte	.LASF83
 3071 0bfd B2010000 		.4byte	.LASF83
 3072 0c01 11       		.byte	0x11
 3073 0c02 24       		.byte	0x24
 3074 0c03 23       		.uleb128 0x23
 3075 0c04 73040000 		.4byte	.LASF84
 3076 0c08 73040000 		.4byte	.LASF84
 3077 0c0c 11       		.byte	0x11
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 69


 3078 0c0d 25       		.byte	0x25
 3079 0c0e 23       		.uleb128 0x23
 3080 0c0f A0060000 		.4byte	.LASF85
 3081 0c13 A0060000 		.4byte	.LASF85
 3082 0c17 11       		.byte	0x11
 3083 0c18 29       		.byte	0x29
 3084 0c19 23       		.uleb128 0x23
 3085 0c1a 83050000 		.4byte	.LASF86
 3086 0c1e 83050000 		.4byte	.LASF86
 3087 0c22 11       		.byte	0x11
 3088 0c23 2C       		.byte	0x2c
 3089 0c24 23       		.uleb128 0x23
 3090 0c25 DC030000 		.4byte	.LASF87
 3091 0c29 DC030000 		.4byte	.LASF87
 3092 0c2d 12       		.byte	0x12
 3093 0c2e 5A       		.byte	0x5a
 3094 0c2f 23       		.uleb128 0x23
 3095 0c30 3E000000 		.4byte	.LASF88
 3096 0c34 3E000000 		.4byte	.LASF88
 3097 0c38 12       		.byte	0x12
 3098 0c39 5B       		.byte	0x5b
 3099 0c3a 23       		.uleb128 0x23
 3100 0c3b 54060000 		.4byte	.LASF89
 3101 0c3f 54060000 		.4byte	.LASF89
 3102 0c43 13       		.byte	0x13
 3103 0c44 18       		.byte	0x18
 3104 0c45 23       		.uleb128 0x23
 3105 0c46 5A000000 		.4byte	.LASF90
 3106 0c4a 5A000000 		.4byte	.LASF90
 3107 0c4e 14       		.byte	0x14
 3108 0c4f 18       		.byte	0x18
 3109 0c50 23       		.uleb128 0x23
 3110 0c51 51010000 		.4byte	.LASF91
 3111 0c55 51010000 		.4byte	.LASF91
 3112 0c59 15       		.byte	0x15
 3113 0c5a 18       		.byte	0x18
 3114 0c5b 23       		.uleb128 0x23
 3115 0c5c F2030000 		.4byte	.LASF92
 3116 0c60 F2030000 		.4byte	.LASF92
 3117 0c64 16       		.byte	0x16
 3118 0c65 18       		.byte	0x18
 3119 0c66 23       		.uleb128 0x23
 3120 0c67 6A020000 		.4byte	.LASF93
 3121 0c6b 6A020000 		.4byte	.LASF93
 3122 0c6f 12       		.byte	0x12
 3123 0c70 68       		.byte	0x68
 3124 0c71 23       		.uleb128 0x23
 3125 0c72 11030000 		.4byte	.LASF94
 3126 0c76 11030000 		.4byte	.LASF94
 3127 0c7a 12       		.byte	0x12
 3128 0c7b 6A       		.byte	0x6a
 3129 0c7c 23       		.uleb128 0x23
 3130 0c7d 1A040000 		.4byte	.LASF95
 3131 0c81 1A040000 		.4byte	.LASF95
 3132 0c85 17       		.byte	0x17
 3133 0c86 18       		.byte	0x18
 3134 0c87 23       		.uleb128 0x23
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 70


 3135 0c88 A4050000 		.4byte	.LASF96
 3136 0c8c A4050000 		.4byte	.LASF96
 3137 0c90 08       		.byte	0x8
 3138 0c91 6A       		.byte	0x6a
 3139 0c92 23       		.uleb128 0x23
 3140 0c93 5F040000 		.4byte	.LASF97
 3141 0c97 5F040000 		.4byte	.LASF97
 3142 0c9b 08       		.byte	0x8
 3143 0c9c 68       		.byte	0x68
 3144 0c9d 23       		.uleb128 0x23
 3145 0c9e 08010000 		.4byte	.LASF98
 3146 0ca2 08010000 		.4byte	.LASF98
 3147 0ca6 18       		.byte	0x18
 3148 0ca7 18       		.byte	0x18
 3149 0ca8 24       		.uleb128 0x24
 3150 0ca9 2F010000 		.4byte	.LASF99
 3151 0cad 2F010000 		.4byte	.LASF99
 3152 0cb1 06       		.byte	0x6
 3153 0cb2 2E01     		.2byte	0x12e
 3154 0cb4 24       		.uleb128 0x24
 3155 0cb5 E6010000 		.4byte	.LASF100
 3156 0cb9 E6010000 		.4byte	.LASF100
 3157 0cbd 06       		.byte	0x6
 3158 0cbe 3101     		.2byte	0x131
 3159 0cc0 23       		.uleb128 0x23
 3160 0cc1 93050000 		.4byte	.LASF101
 3161 0cc5 93050000 		.4byte	.LASF101
 3162 0cc9 11       		.byte	0x11
 3163 0cca 22       		.byte	0x22
 3164 0ccb 00       		.byte	0
 3165              		.section	.debug_abbrev,"",%progbits
 3166              	.Ldebug_abbrev0:
 3167 0000 01       		.uleb128 0x1
 3168 0001 11       		.uleb128 0x11
 3169 0002 01       		.byte	0x1
 3170 0003 25       		.uleb128 0x25
 3171 0004 0E       		.uleb128 0xe
 3172 0005 13       		.uleb128 0x13
 3173 0006 0B       		.uleb128 0xb
 3174 0007 03       		.uleb128 0x3
 3175 0008 0E       		.uleb128 0xe
 3176 0009 1B       		.uleb128 0x1b
 3177 000a 0E       		.uleb128 0xe
 3178 000b 55       		.uleb128 0x55
 3179 000c 17       		.uleb128 0x17
 3180 000d 11       		.uleb128 0x11
 3181 000e 01       		.uleb128 0x1
 3182 000f 10       		.uleb128 0x10
 3183 0010 17       		.uleb128 0x17
 3184 0011 00       		.byte	0
 3185 0012 00       		.byte	0
 3186 0013 02       		.uleb128 0x2
 3187 0014 24       		.uleb128 0x24
 3188 0015 00       		.byte	0
 3189 0016 0B       		.uleb128 0xb
 3190 0017 0B       		.uleb128 0xb
 3191 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 71


 3192 0019 0B       		.uleb128 0xb
 3193 001a 03       		.uleb128 0x3
 3194 001b 0E       		.uleb128 0xe
 3195 001c 00       		.byte	0
 3196 001d 00       		.byte	0
 3197 001e 03       		.uleb128 0x3
 3198 001f 16       		.uleb128 0x16
 3199 0020 00       		.byte	0
 3200 0021 03       		.uleb128 0x3
 3201 0022 0E       		.uleb128 0xe
 3202 0023 3A       		.uleb128 0x3a
 3203 0024 0B       		.uleb128 0xb
 3204 0025 3B       		.uleb128 0x3b
 3205 0026 0B       		.uleb128 0xb
 3206 0027 49       		.uleb128 0x49
 3207 0028 13       		.uleb128 0x13
 3208 0029 00       		.byte	0
 3209 002a 00       		.byte	0
 3210 002b 04       		.uleb128 0x4
 3211 002c 24       		.uleb128 0x24
 3212 002d 00       		.byte	0
 3213 002e 0B       		.uleb128 0xb
 3214 002f 0B       		.uleb128 0xb
 3215 0030 3E       		.uleb128 0x3e
 3216 0031 0B       		.uleb128 0xb
 3217 0032 03       		.uleb128 0x3
 3218 0033 08       		.uleb128 0x8
 3219 0034 00       		.byte	0
 3220 0035 00       		.byte	0
 3221 0036 05       		.uleb128 0x5
 3222 0037 16       		.uleb128 0x16
 3223 0038 00       		.byte	0
 3224 0039 03       		.uleb128 0x3
 3225 003a 0E       		.uleb128 0xe
 3226 003b 3A       		.uleb128 0x3a
 3227 003c 0B       		.uleb128 0xb
 3228 003d 3B       		.uleb128 0x3b
 3229 003e 05       		.uleb128 0x5
 3230 003f 49       		.uleb128 0x49
 3231 0040 13       		.uleb128 0x13
 3232 0041 00       		.byte	0
 3233 0042 00       		.byte	0
 3234 0043 06       		.uleb128 0x6
 3235 0044 35       		.uleb128 0x35
 3236 0045 00       		.byte	0
 3237 0046 49       		.uleb128 0x49
 3238 0047 13       		.uleb128 0x13
 3239 0048 00       		.byte	0
 3240 0049 00       		.byte	0
 3241 004a 07       		.uleb128 0x7
 3242 004b 0F       		.uleb128 0xf
 3243 004c 00       		.byte	0
 3244 004d 0B       		.uleb128 0xb
 3245 004e 0B       		.uleb128 0xb
 3246 004f 49       		.uleb128 0x49
 3247 0050 13       		.uleb128 0x13
 3248 0051 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 72


 3249 0052 00       		.byte	0
 3250 0053 08       		.uleb128 0x8
 3251 0054 26       		.uleb128 0x26
 3252 0055 00       		.byte	0
 3253 0056 49       		.uleb128 0x49
 3254 0057 13       		.uleb128 0x13
 3255 0058 00       		.byte	0
 3256 0059 00       		.byte	0
 3257 005a 09       		.uleb128 0x9
 3258 005b 04       		.uleb128 0x4
 3259 005c 01       		.byte	0x1
 3260 005d 03       		.uleb128 0x3
 3261 005e 0E       		.uleb128 0xe
 3262 005f 0B       		.uleb128 0xb
 3263 0060 0B       		.uleb128 0xb
 3264 0061 49       		.uleb128 0x49
 3265 0062 13       		.uleb128 0x13
 3266 0063 3A       		.uleb128 0x3a
 3267 0064 0B       		.uleb128 0xb
 3268 0065 3B       		.uleb128 0x3b
 3269 0066 0B       		.uleb128 0xb
 3270 0067 01       		.uleb128 0x1
 3271 0068 13       		.uleb128 0x13
 3272 0069 00       		.byte	0
 3273 006a 00       		.byte	0
 3274 006b 0A       		.uleb128 0xa
 3275 006c 28       		.uleb128 0x28
 3276 006d 00       		.byte	0
 3277 006e 03       		.uleb128 0x3
 3278 006f 0E       		.uleb128 0xe
 3279 0070 1C       		.uleb128 0x1c
 3280 0071 0B       		.uleb128 0xb
 3281 0072 00       		.byte	0
 3282 0073 00       		.byte	0
 3283 0074 0B       		.uleb128 0xb
 3284 0075 2E       		.uleb128 0x2e
 3285 0076 00       		.byte	0
 3286 0077 3F       		.uleb128 0x3f
 3287 0078 19       		.uleb128 0x19
 3288 0079 03       		.uleb128 0x3
 3289 007a 0E       		.uleb128 0xe
 3290 007b 3A       		.uleb128 0x3a
 3291 007c 0B       		.uleb128 0xb
 3292 007d 3B       		.uleb128 0x3b
 3293 007e 05       		.uleb128 0x5
 3294 007f 27       		.uleb128 0x27
 3295 0080 19       		.uleb128 0x19
 3296 0081 11       		.uleb128 0x11
 3297 0082 01       		.uleb128 0x1
 3298 0083 12       		.uleb128 0x12
 3299 0084 06       		.uleb128 0x6
 3300 0085 40       		.uleb128 0x40
 3301 0086 18       		.uleb128 0x18
 3302 0087 9742     		.uleb128 0x2117
 3303 0089 19       		.uleb128 0x19
 3304 008a 00       		.byte	0
 3305 008b 00       		.byte	0
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 73


 3306 008c 0C       		.uleb128 0xc
 3307 008d 2E       		.uleb128 0x2e
 3308 008e 01       		.byte	0x1
 3309 008f 3F       		.uleb128 0x3f
 3310 0090 19       		.uleb128 0x19
 3311 0091 03       		.uleb128 0x3
 3312 0092 0E       		.uleb128 0xe
 3313 0093 3A       		.uleb128 0x3a
 3314 0094 0B       		.uleb128 0xb
 3315 0095 3B       		.uleb128 0x3b
 3316 0096 0B       		.uleb128 0xb
 3317 0097 27       		.uleb128 0x27
 3318 0098 19       		.uleb128 0x19
 3319 0099 11       		.uleb128 0x11
 3320 009a 01       		.uleb128 0x1
 3321 009b 12       		.uleb128 0x12
 3322 009c 06       		.uleb128 0x6
 3323 009d 40       		.uleb128 0x40
 3324 009e 18       		.uleb128 0x18
 3325 009f 9742     		.uleb128 0x2117
 3326 00a1 19       		.uleb128 0x19
 3327 00a2 01       		.uleb128 0x1
 3328 00a3 13       		.uleb128 0x13
 3329 00a4 00       		.byte	0
 3330 00a5 00       		.byte	0
 3331 00a6 0D       		.uleb128 0xd
 3332 00a7 34       		.uleb128 0x34
 3333 00a8 00       		.byte	0
 3334 00a9 03       		.uleb128 0x3
 3335 00aa 0E       		.uleb128 0xe
 3336 00ab 3A       		.uleb128 0x3a
 3337 00ac 0B       		.uleb128 0xb
 3338 00ad 3B       		.uleb128 0x3b
 3339 00ae 0B       		.uleb128 0xb
 3340 00af 49       		.uleb128 0x49
 3341 00b0 13       		.uleb128 0x13
 3342 00b1 02       		.uleb128 0x2
 3343 00b2 17       		.uleb128 0x17
 3344 00b3 00       		.byte	0
 3345 00b4 00       		.byte	0
 3346 00b5 0E       		.uleb128 0xe
 3347 00b6 0B       		.uleb128 0xb
 3348 00b7 01       		.byte	0x1
 3349 00b8 55       		.uleb128 0x55
 3350 00b9 17       		.uleb128 0x17
 3351 00ba 01       		.uleb128 0x1
 3352 00bb 13       		.uleb128 0x13
 3353 00bc 00       		.byte	0
 3354 00bd 00       		.byte	0
 3355 00be 0F       		.uleb128 0xf
 3356 00bf 34       		.uleb128 0x34
 3357 00c0 00       		.byte	0
 3358 00c1 03       		.uleb128 0x3
 3359 00c2 08       		.uleb128 0x8
 3360 00c3 3A       		.uleb128 0x3a
 3361 00c4 0B       		.uleb128 0xb
 3362 00c5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 74


 3363 00c6 0B       		.uleb128 0xb
 3364 00c7 49       		.uleb128 0x49
 3365 00c8 13       		.uleb128 0x13
 3366 00c9 02       		.uleb128 0x2
 3367 00ca 17       		.uleb128 0x17
 3368 00cb 00       		.byte	0
 3369 00cc 00       		.byte	0
 3370 00cd 10       		.uleb128 0x10
 3371 00ce 898201   		.uleb128 0x4109
 3372 00d1 00       		.byte	0
 3373 00d2 11       		.uleb128 0x11
 3374 00d3 01       		.uleb128 0x1
 3375 00d4 31       		.uleb128 0x31
 3376 00d5 13       		.uleb128 0x13
 3377 00d6 00       		.byte	0
 3378 00d7 00       		.byte	0
 3379 00d8 11       		.uleb128 0x11
 3380 00d9 898201   		.uleb128 0x4109
 3381 00dc 01       		.byte	0x1
 3382 00dd 11       		.uleb128 0x11
 3383 00de 01       		.uleb128 0x1
 3384 00df 31       		.uleb128 0x31
 3385 00e0 13       		.uleb128 0x13
 3386 00e1 01       		.uleb128 0x1
 3387 00e2 13       		.uleb128 0x13
 3388 00e3 00       		.byte	0
 3389 00e4 00       		.byte	0
 3390 00e5 12       		.uleb128 0x12
 3391 00e6 8A8201   		.uleb128 0x410a
 3392 00e9 00       		.byte	0
 3393 00ea 02       		.uleb128 0x2
 3394 00eb 18       		.uleb128 0x18
 3395 00ec 9142     		.uleb128 0x2111
 3396 00ee 18       		.uleb128 0x18
 3397 00ef 00       		.byte	0
 3398 00f0 00       		.byte	0
 3399 00f1 13       		.uleb128 0x13
 3400 00f2 898201   		.uleb128 0x4109
 3401 00f5 01       		.byte	0x1
 3402 00f6 11       		.uleb128 0x11
 3403 00f7 01       		.uleb128 0x1
 3404 00f8 31       		.uleb128 0x31
 3405 00f9 13       		.uleb128 0x13
 3406 00fa 00       		.byte	0
 3407 00fb 00       		.byte	0
 3408 00fc 14       		.uleb128 0x14
 3409 00fd 2E       		.uleb128 0x2e
 3410 00fe 01       		.byte	0x1
 3411 00ff 3F       		.uleb128 0x3f
 3412 0100 19       		.uleb128 0x19
 3413 0101 03       		.uleb128 0x3
 3414 0102 0E       		.uleb128 0xe
 3415 0103 3A       		.uleb128 0x3a
 3416 0104 0B       		.uleb128 0xb
 3417 0105 3B       		.uleb128 0x3b
 3418 0106 0B       		.uleb128 0xb
 3419 0107 27       		.uleb128 0x27
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 75


 3420 0108 19       		.uleb128 0x19
 3421 0109 11       		.uleb128 0x11
 3422 010a 01       		.uleb128 0x1
 3423 010b 12       		.uleb128 0x12
 3424 010c 06       		.uleb128 0x6
 3425 010d 40       		.uleb128 0x40
 3426 010e 18       		.uleb128 0x18
 3427 010f 9642     		.uleb128 0x2116
 3428 0111 19       		.uleb128 0x19
 3429 0112 01       		.uleb128 0x1
 3430 0113 13       		.uleb128 0x13
 3431 0114 00       		.byte	0
 3432 0115 00       		.byte	0
 3433 0116 15       		.uleb128 0x15
 3434 0117 0B       		.uleb128 0xb
 3435 0118 01       		.byte	0x1
 3436 0119 11       		.uleb128 0x11
 3437 011a 01       		.uleb128 0x1
 3438 011b 12       		.uleb128 0x12
 3439 011c 06       		.uleb128 0x6
 3440 011d 00       		.byte	0
 3441 011e 00       		.byte	0
 3442 011f 16       		.uleb128 0x16
 3443 0120 2E       		.uleb128 0x2e
 3444 0121 01       		.byte	0x1
 3445 0122 3F       		.uleb128 0x3f
 3446 0123 19       		.uleb128 0x19
 3447 0124 03       		.uleb128 0x3
 3448 0125 0E       		.uleb128 0xe
 3449 0126 3A       		.uleb128 0x3a
 3450 0127 0B       		.uleb128 0xb
 3451 0128 3B       		.uleb128 0x3b
 3452 0129 05       		.uleb128 0x5
 3453 012a 27       		.uleb128 0x27
 3454 012b 19       		.uleb128 0x19
 3455 012c 11       		.uleb128 0x11
 3456 012d 01       		.uleb128 0x1
 3457 012e 12       		.uleb128 0x12
 3458 012f 06       		.uleb128 0x6
 3459 0130 40       		.uleb128 0x40
 3460 0131 18       		.uleb128 0x18
 3461 0132 9742     		.uleb128 0x2117
 3462 0134 19       		.uleb128 0x19
 3463 0135 01       		.uleb128 0x1
 3464 0136 13       		.uleb128 0x13
 3465 0137 00       		.byte	0
 3466 0138 00       		.byte	0
 3467 0139 17       		.uleb128 0x17
 3468 013a 2E       		.uleb128 0x2e
 3469 013b 01       		.byte	0x1
 3470 013c 3F       		.uleb128 0x3f
 3471 013d 19       		.uleb128 0x19
 3472 013e 03       		.uleb128 0x3
 3473 013f 0E       		.uleb128 0xe
 3474 0140 3A       		.uleb128 0x3a
 3475 0141 0B       		.uleb128 0xb
 3476 0142 3B       		.uleb128 0x3b
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 76


 3477 0143 05       		.uleb128 0x5
 3478 0144 11       		.uleb128 0x11
 3479 0145 01       		.uleb128 0x1
 3480 0146 12       		.uleb128 0x12
 3481 0147 06       		.uleb128 0x6
 3482 0148 40       		.uleb128 0x40
 3483 0149 18       		.uleb128 0x18
 3484 014a 9742     		.uleb128 0x2117
 3485 014c 19       		.uleb128 0x19
 3486 014d 01       		.uleb128 0x1
 3487 014e 13       		.uleb128 0x13
 3488 014f 00       		.byte	0
 3489 0150 00       		.byte	0
 3490 0151 18       		.uleb128 0x18
 3491 0152 2E       		.uleb128 0x2e
 3492 0153 01       		.byte	0x1
 3493 0154 3F       		.uleb128 0x3f
 3494 0155 19       		.uleb128 0x19
 3495 0156 03       		.uleb128 0x3
 3496 0157 0E       		.uleb128 0xe
 3497 0158 3A       		.uleb128 0x3a
 3498 0159 0B       		.uleb128 0xb
 3499 015a 3B       		.uleb128 0x3b
 3500 015b 05       		.uleb128 0x5
 3501 015c 27       		.uleb128 0x27
 3502 015d 19       		.uleb128 0x19
 3503 015e 49       		.uleb128 0x49
 3504 015f 13       		.uleb128 0x13
 3505 0160 8701     		.uleb128 0x87
 3506 0162 19       		.uleb128 0x19
 3507 0163 11       		.uleb128 0x11
 3508 0164 01       		.uleb128 0x1
 3509 0165 12       		.uleb128 0x12
 3510 0166 06       		.uleb128 0x6
 3511 0167 40       		.uleb128 0x40
 3512 0168 18       		.uleb128 0x18
 3513 0169 9742     		.uleb128 0x2117
 3514 016b 19       		.uleb128 0x19
 3515 016c 01       		.uleb128 0x1
 3516 016d 13       		.uleb128 0x13
 3517 016e 00       		.byte	0
 3518 016f 00       		.byte	0
 3519 0170 19       		.uleb128 0x19
 3520 0171 0B       		.uleb128 0xb
 3521 0172 01       		.byte	0x1
 3522 0173 11       		.uleb128 0x11
 3523 0174 01       		.uleb128 0x1
 3524 0175 12       		.uleb128 0x12
 3525 0176 06       		.uleb128 0x6
 3526 0177 01       		.uleb128 0x1
 3527 0178 13       		.uleb128 0x13
 3528 0179 00       		.byte	0
 3529 017a 00       		.byte	0
 3530 017b 1A       		.uleb128 0x1a
 3531 017c 34       		.uleb128 0x34
 3532 017d 00       		.byte	0
 3533 017e 03       		.uleb128 0x3
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 77


 3534 017f 0E       		.uleb128 0xe
 3535 0180 3A       		.uleb128 0x3a
 3536 0181 0B       		.uleb128 0xb
 3537 0182 3B       		.uleb128 0x3b
 3538 0183 05       		.uleb128 0x5
 3539 0184 49       		.uleb128 0x49
 3540 0185 13       		.uleb128 0x13
 3541 0186 02       		.uleb128 0x2
 3542 0187 17       		.uleb128 0x17
 3543 0188 00       		.byte	0
 3544 0189 00       		.byte	0
 3545 018a 1B       		.uleb128 0x1b
 3546 018b 34       		.uleb128 0x34
 3547 018c 00       		.byte	0
 3548 018d 03       		.uleb128 0x3
 3549 018e 08       		.uleb128 0x8
 3550 018f 3A       		.uleb128 0x3a
 3551 0190 0B       		.uleb128 0xb
 3552 0191 3B       		.uleb128 0x3b
 3553 0192 05       		.uleb128 0x5
 3554 0193 49       		.uleb128 0x49
 3555 0194 13       		.uleb128 0x13
 3556 0195 02       		.uleb128 0x2
 3557 0196 17       		.uleb128 0x17
 3558 0197 00       		.byte	0
 3559 0198 00       		.byte	0
 3560 0199 1C       		.uleb128 0x1c
 3561 019a 34       		.uleb128 0x34
 3562 019b 00       		.byte	0
 3563 019c 03       		.uleb128 0x3
 3564 019d 0E       		.uleb128 0xe
 3565 019e 3A       		.uleb128 0x3a
 3566 019f 0B       		.uleb128 0xb
 3567 01a0 3B       		.uleb128 0x3b
 3568 01a1 0B       		.uleb128 0xb
 3569 01a2 49       		.uleb128 0x49
 3570 01a3 13       		.uleb128 0x13
 3571 01a4 3F       		.uleb128 0x3f
 3572 01a5 19       		.uleb128 0x19
 3573 01a6 3C       		.uleb128 0x3c
 3574 01a7 19       		.uleb128 0x19
 3575 01a8 00       		.byte	0
 3576 01a9 00       		.byte	0
 3577 01aa 1D       		.uleb128 0x1d
 3578 01ab 34       		.uleb128 0x34
 3579 01ac 00       		.byte	0
 3580 01ad 03       		.uleb128 0x3
 3581 01ae 0E       		.uleb128 0xe
 3582 01af 3A       		.uleb128 0x3a
 3583 01b0 0B       		.uleb128 0xb
 3584 01b1 3B       		.uleb128 0x3b
 3585 01b2 05       		.uleb128 0x5
 3586 01b3 49       		.uleb128 0x49
 3587 01b4 13       		.uleb128 0x13
 3588 01b5 3F       		.uleb128 0x3f
 3589 01b6 19       		.uleb128 0x19
 3590 01b7 3C       		.uleb128 0x3c
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 78


 3591 01b8 19       		.uleb128 0x19
 3592 01b9 00       		.byte	0
 3593 01ba 00       		.byte	0
 3594 01bb 1E       		.uleb128 0x1e
 3595 01bc 34       		.uleb128 0x34
 3596 01bd 00       		.byte	0
 3597 01be 03       		.uleb128 0x3
 3598 01bf 0E       		.uleb128 0xe
 3599 01c0 3A       		.uleb128 0x3a
 3600 01c1 0B       		.uleb128 0xb
 3601 01c2 3B       		.uleb128 0x3b
 3602 01c3 0B       		.uleb128 0xb
 3603 01c4 49       		.uleb128 0x49
 3604 01c5 13       		.uleb128 0x13
 3605 01c6 3F       		.uleb128 0x3f
 3606 01c7 19       		.uleb128 0x19
 3607 01c8 02       		.uleb128 0x2
 3608 01c9 18       		.uleb128 0x18
 3609 01ca 00       		.byte	0
 3610 01cb 00       		.byte	0
 3611 01cc 1F       		.uleb128 0x1f
 3612 01cd 01       		.uleb128 0x1
 3613 01ce 01       		.byte	0x1
 3614 01cf 49       		.uleb128 0x49
 3615 01d0 13       		.uleb128 0x13
 3616 01d1 01       		.uleb128 0x1
 3617 01d2 13       		.uleb128 0x13
 3618 01d3 00       		.byte	0
 3619 01d4 00       		.byte	0
 3620 01d5 20       		.uleb128 0x20
 3621 01d6 21       		.uleb128 0x21
 3622 01d7 00       		.byte	0
 3623 01d8 49       		.uleb128 0x49
 3624 01d9 13       		.uleb128 0x13
 3625 01da 2F       		.uleb128 0x2f
 3626 01db 05       		.uleb128 0x5
 3627 01dc 00       		.byte	0
 3628 01dd 00       		.byte	0
 3629 01de 21       		.uleb128 0x21
 3630 01df 21       		.uleb128 0x21
 3631 01e0 00       		.byte	0
 3632 01e1 49       		.uleb128 0x49
 3633 01e2 13       		.uleb128 0x13
 3634 01e3 2F       		.uleb128 0x2f
 3635 01e4 0B       		.uleb128 0xb
 3636 01e5 00       		.byte	0
 3637 01e6 00       		.byte	0
 3638 01e7 22       		.uleb128 0x22
 3639 01e8 34       		.uleb128 0x34
 3640 01e9 00       		.byte	0
 3641 01ea 03       		.uleb128 0x3
 3642 01eb 08       		.uleb128 0x8
 3643 01ec 3A       		.uleb128 0x3a
 3644 01ed 0B       		.uleb128 0xb
 3645 01ee 3B       		.uleb128 0x3b
 3646 01ef 0B       		.uleb128 0xb
 3647 01f0 49       		.uleb128 0x49
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 79


 3648 01f1 13       		.uleb128 0x13
 3649 01f2 3F       		.uleb128 0x3f
 3650 01f3 19       		.uleb128 0x19
 3651 01f4 02       		.uleb128 0x2
 3652 01f5 18       		.uleb128 0x18
 3653 01f6 00       		.byte	0
 3654 01f7 00       		.byte	0
 3655 01f8 23       		.uleb128 0x23
 3656 01f9 2E       		.uleb128 0x2e
 3657 01fa 00       		.byte	0
 3658 01fb 3F       		.uleb128 0x3f
 3659 01fc 19       		.uleb128 0x19
 3660 01fd 3C       		.uleb128 0x3c
 3661 01fe 19       		.uleb128 0x19
 3662 01ff 6E       		.uleb128 0x6e
 3663 0200 0E       		.uleb128 0xe
 3664 0201 03       		.uleb128 0x3
 3665 0202 0E       		.uleb128 0xe
 3666 0203 3A       		.uleb128 0x3a
 3667 0204 0B       		.uleb128 0xb
 3668 0205 3B       		.uleb128 0x3b
 3669 0206 0B       		.uleb128 0xb
 3670 0207 00       		.byte	0
 3671 0208 00       		.byte	0
 3672 0209 24       		.uleb128 0x24
 3673 020a 2E       		.uleb128 0x2e
 3674 020b 00       		.byte	0
 3675 020c 3F       		.uleb128 0x3f
 3676 020d 19       		.uleb128 0x19
 3677 020e 3C       		.uleb128 0x3c
 3678 020f 19       		.uleb128 0x19
 3679 0210 6E       		.uleb128 0x6e
 3680 0211 0E       		.uleb128 0xe
 3681 0212 03       		.uleb128 0x3
 3682 0213 0E       		.uleb128 0xe
 3683 0214 3A       		.uleb128 0x3a
 3684 0215 0B       		.uleb128 0xb
 3685 0216 3B       		.uleb128 0x3b
 3686 0217 05       		.uleb128 0x5
 3687 0218 00       		.byte	0
 3688 0219 00       		.byte	0
 3689 021a 00       		.byte	0
 3690              		.section	.debug_loc,"",%progbits
 3691              	.Ldebug_loc0:
 3692              	.LLST0:
 3693 0000 02000000 		.4byte	.LVL0
 3694 0004 52000000 		.4byte	.LVL6
 3695 0008 0200     		.2byte	0x2
 3696 000a 30       		.byte	0x30
 3697 000b 9F       		.byte	0x9f
 3698 000c 52000000 		.4byte	.LVL6
 3699 0010 78000000 		.4byte	.LVL13
 3700 0014 0100     		.2byte	0x1
 3701 0016 50       		.byte	0x50
 3702 0017 00000000 		.4byte	0
 3703 001b 00000000 		.4byte	0
 3704              	.LLST1:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 80


 3705 001f 02000000 		.4byte	.LVL0
 3706 0023 52000000 		.4byte	.LVL6
 3707 0027 0200     		.2byte	0x2
 3708 0029 30       		.byte	0x30
 3709 002a 9F       		.byte	0x9f
 3710 002b 52000000 		.4byte	.LVL6
 3711 002f 68000000 		.4byte	.LVL8
 3712 0033 0100     		.2byte	0x1
 3713 0035 52       		.byte	0x52
 3714 0036 6A000000 		.4byte	.LVL9
 3715 003a 7E000000 		.4byte	.LVL14
 3716 003e 0100     		.2byte	0x1
 3717 0040 52       		.byte	0x52
 3718 0041 00000000 		.4byte	0
 3719 0045 00000000 		.4byte	0
 3720              	.LLST2:
 3721 0049 4A000000 		.4byte	.LVL5
 3722 004d 52000000 		.4byte	.LVL6
 3723 0051 0200     		.2byte	0x2
 3724 0053 3F       		.byte	0x3f
 3725 0054 9F       		.byte	0x9f
 3726 0055 52000000 		.4byte	.LVL6
 3727 0059 76000000 		.4byte	.LVL12
 3728 005d 0100     		.2byte	0x1
 3729 005f 53       		.byte	0x53
 3730 0060 00000000 		.4byte	0
 3731 0064 00000000 		.4byte	0
 3732              	.LLST3:
 3733 0068 50000000 		.4byte	.LVL26
 3734 006c 64000000 		.4byte	.LVL30
 3735 0070 0100     		.2byte	0x1
 3736 0072 54       		.byte	0x54
 3737 0073 00000000 		.4byte	0
 3738 0077 00000000 		.4byte	0
 3739              	.LLST4:
 3740 007b 6E000000 		.4byte	.LVL112
 3741 007f 88000000 		.4byte	.LVL116
 3742 0083 0200     		.2byte	0x2
 3743 0085 30       		.byte	0x30
 3744 0086 9F       		.byte	0x9f
 3745 0087 88000000 		.4byte	.LVL116
 3746 008b D6000000 		.4byte	.LVL126
 3747 008f 0100     		.2byte	0x1
 3748 0091 54       		.byte	0x54
 3749 0092 D6000000 		.4byte	.LVL126
 3750 0096 D8000000 		.4byte	.LVL127
 3751 009a 0200     		.2byte	0x2
 3752 009c 30       		.byte	0x30
 3753 009d 9F       		.byte	0x9f
 3754 009e D8000000 		.4byte	.LVL127
 3755 00a2 3A010000 		.4byte	.LVL137
 3756 00a6 0100     		.2byte	0x1
 3757 00a8 54       		.byte	0x54
 3758 00a9 5C010000 		.4byte	.LVL141
 3759 00ad 80010000 		.4byte	.LVL142
 3760 00b1 0200     		.2byte	0x2
 3761 00b3 37       		.byte	0x37
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 81


 3762 00b4 9F       		.byte	0x9f
 3763 00b5 80010000 		.4byte	.LVL142
 3764 00b9 D6010000 		.4byte	.LVL152
 3765 00bd 0100     		.2byte	0x1
 3766 00bf 55       		.byte	0x55
 3767 00c0 D6010000 		.4byte	.LVL152
 3768 00c4 FC010000 		.4byte	.LVL157
 3769 00c8 0300     		.2byte	0x3
 3770 00ca 75       		.byte	0x75
 3771 00cb 7F       		.sleb128 -1
 3772 00cc 9F       		.byte	0x9f
 3773 00cd 00000000 		.4byte	0
 3774 00d1 00000000 		.4byte	0
 3775              	.LLST5:
 3776 00d5 76000000 		.4byte	.LVL113
 3777 00d9 88000000 		.4byte	.LVL116
 3778 00dd 0200     		.2byte	0x2
 3779 00df 30       		.byte	0x30
 3780 00e0 9F       		.byte	0x9f
 3781 00e1 9A000000 		.4byte	.LVL120
 3782 00e5 C1000000 		.4byte	.LVL122-1
 3783 00e9 0100     		.2byte	0x1
 3784 00eb 50       		.byte	0x50
 3785 00ec D8000000 		.4byte	.LVL127
 3786 00f0 F4000000 		.4byte	.LVL128
 3787 00f4 0100     		.2byte	0x1
 3788 00f6 50       		.byte	0x50
 3789 00f7 FC000000 		.4byte	.LVL131
 3790 00fb 19010000 		.4byte	.LVL132-1
 3791 00ff 0100     		.2byte	0x1
 3792 0101 50       		.byte	0x50
 3793 0102 1E010000 		.4byte	.LVL134
 3794 0106 33010000 		.4byte	.LVL135-1
 3795 010a 0100     		.2byte	0x1
 3796 010c 50       		.byte	0x50
 3797 010d 5C010000 		.4byte	.LVL141
 3798 0111 80010000 		.4byte	.LVL142
 3799 0115 0200     		.2byte	0x2
 3800 0117 30       		.byte	0x30
 3801 0118 9F       		.byte	0x9f
 3802 0119 80010000 		.4byte	.LVL142
 3803 011d 8E010000 		.4byte	.LVL145
 3804 0121 0100     		.2byte	0x1
 3805 0123 54       		.byte	0x54
 3806 0124 8E010000 		.4byte	.LVL145
 3807 0128 96010000 		.4byte	.LVL146
 3808 012c 0100     		.2byte	0x1
 3809 012e 50       		.byte	0x50
 3810 012f A8010000 		.4byte	.LVL149
 3811 0133 FC010000 		.4byte	.LVL157
 3812 0137 0100     		.2byte	0x1
 3813 0139 54       		.byte	0x54
 3814 013a 00000000 		.4byte	0
 3815 013e 00000000 		.4byte	0
 3816              	.LLST6:
 3817 0142 9C000000 		.4byte	.LVL121
 3818 0146 C1000000 		.4byte	.LVL122-1
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 82


 3819 014a 0100     		.2byte	0x1
 3820 014c 50       		.byte	0x50
 3821 014d D8000000 		.4byte	.LVL127
 3822 0151 F4000000 		.4byte	.LVL128
 3823 0155 0100     		.2byte	0x1
 3824 0157 50       		.byte	0x50
 3825 0158 00000000 		.4byte	0
 3826 015c 00000000 		.4byte	0
 3827              	.LLST7:
 3828 0160 12020000 		.4byte	.LVL161
 3829 0164 24020000 		.4byte	.LVL162
 3830 0168 0100     		.2byte	0x1
 3831 016a 50       		.byte	0x50
 3832 016b 00000000 		.4byte	0
 3833 016f 00000000 		.4byte	0
 3834              		.section	.debug_aranges,"",%progbits
 3835 0000 5C000000 		.4byte	0x5c
 3836 0004 0200     		.2byte	0x2
 3837 0006 00000000 		.4byte	.Ldebug_info0
 3838 000a 04       		.byte	0x4
 3839 000b 00       		.byte	0
 3840 000c 0000     		.2byte	0
 3841 000e 0000     		.2byte	0
 3842 0010 00000000 		.4byte	.LFB69
 3843 0014 0C000000 		.4byte	.LFE69-.LFB69
 3844 0018 00000000 		.4byte	.LFB64
 3845 001c 94000000 		.4byte	.LFE64-.LFB64
 3846 0020 00000000 		.4byte	.LFB65
 3847 0024 0C010000 		.4byte	.LFE65-.LFB65
 3848 0028 00000000 		.4byte	.LFB66
 3849 002c 74000000 		.4byte	.LFE66-.LFB66
 3850 0030 00000000 		.4byte	.LFB67
 3851 0034 44000000 		.4byte	.LFE67-.LFB67
 3852 0038 00000000 		.4byte	.LFB68
 3853 003c 38000000 		.4byte	.LFE68-.LFB68
 3854 0040 00000000 		.4byte	.LFB71
 3855 0044 90000000 		.4byte	.LFE71-.LFB71
 3856 0048 00000000 		.4byte	.LFB72
 3857 004c FC020000 		.4byte	.LFE72-.LFB72
 3858 0050 00000000 		.4byte	.LFB70
 3859 0054 78020000 		.4byte	.LFE70-.LFB70
 3860 0058 00000000 		.4byte	0
 3861 005c 00000000 		.4byte	0
 3862              		.section	.debug_ranges,"",%progbits
 3863              	.Ldebug_ranges0:
 3864 0000 4A000000 		.4byte	.LBB2
 3865 0004 4C000000 		.4byte	.LBE2
 3866 0008 50000000 		.4byte	.LBB3
 3867 000c 72000000 		.4byte	.LBE3
 3868 0010 00000000 		.4byte	0
 3869 0014 00000000 		.4byte	0
 3870 0018 00000000 		.4byte	.LFB69
 3871 001c 0C000000 		.4byte	.LFE69
 3872 0020 00000000 		.4byte	.LFB64
 3873 0024 94000000 		.4byte	.LFE64
 3874 0028 00000000 		.4byte	.LFB65
 3875 002c 0C010000 		.4byte	.LFE65
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 83


 3876 0030 00000000 		.4byte	.LFB66
 3877 0034 74000000 		.4byte	.LFE66
 3878 0038 00000000 		.4byte	.LFB67
 3879 003c 44000000 		.4byte	.LFE67
 3880 0040 00000000 		.4byte	.LFB68
 3881 0044 38000000 		.4byte	.LFE68
 3882 0048 00000000 		.4byte	.LFB71
 3883 004c 90000000 		.4byte	.LFE71
 3884 0050 00000000 		.4byte	.LFB72
 3885 0054 FC020000 		.4byte	.LFE72
 3886 0058 00000000 		.4byte	.LFB70
 3887 005c 78020000 		.4byte	.LFE70
 3888 0060 00000000 		.4byte	0
 3889 0064 00000000 		.4byte	0
 3890              		.section	.debug_line,"",%progbits
 3891              	.Ldebug_line0:
 3892 0000 3F050000 		.section	.debug_str,"MS",%progbits,1
 3892      0200CD02 
 3892      00000201 
 3892      FB0E0D00 
 3892      01010101 
 3893              	.LASF81:
 3894 0000 55534255 		.ascii	"USBUART_CDCIsReady\000"
 3894      4152545F 
 3894      43444349 
 3894      73526561 
 3894      647900
 3895              	.LASF23:
 3896 0013 636F6E63 		.ascii	"concatCount\000"
 3896      6174436F 
 3896      756E7400 
 3897              	.LASF41:
 3898 001f 7472616E 		.ascii	"transmitData\000"
 3898      736D6974 
 3898      44617461 
 3898      00
 3899              	.LASF39:
 3900 002c 6C6F7746 		.ascii	"lowFlag\000"
 3900      6C616700 
 3901              	.LASF76:
 3902 0034 49444C45 		.ascii	"IDLE_Read\000"
 3902      5F526561 
 3902      6400
 3903              	.LASF88:
 3904 003e 54696D65 		.ascii	"TimerTX_Stop\000"
 3904      7254585F 
 3904      53746F70 
 3904      00
 3905              	.LASF80:
 3906 004b 434F4C4C 		.ascii	"COLLISION_Read\000"
 3906      4953494F 
 3906      4E5F5265 
 3906      616400
 3907              	.LASF90:
 3908 005a 52697369 		.ascii	"RisingEdgeISR_StartEx\000"
 3908      6E674564 
 3908      67654953 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 84


 3908      525F5374 
 3908      61727445 
 3909              	.LASF20:
 3910 0070 49444C45 		.ascii	"IDLE\000"
 3910      00
 3911              	.LASF51:
 3912 0075 636F6C6C 		.ascii	"collisionLock\000"
 3912      6973696F 
 3912      6E4C6F63 
 3912      6B00
 3913              	.LASF25:
 3914 0083 52656365 		.ascii	"ReceiveInterruptHandler\000"
 3914      69766549 
 3914      6E746572 
 3914      72757074 
 3914      48616E64 
 3915              	.LASF2:
 3916 009b 73686F72 		.ascii	"short int\000"
 3916      7420696E 
 3916      7400
 3917              	.LASF34:
 3918 00a5 696E7075 		.ascii	"input\000"
 3918      7400
 3919              	.LASF19:
 3920 00ab 73697A65 		.ascii	"sizetype\000"
 3920      74797065 
 3920      00
 3921              	.LASF28:
 3922 00b4 72616E64 		.ascii	"randNum\000"
 3922      4E756D00 
 3923              	.LASF35:
 3924 00bc 5F5F6374 		.ascii	"__ctype_ptr__\000"
 3924      7970655F 
 3924      7074725F 
 3924      5F00
 3925              	.LASF72:
 3926 00ca 54696D65 		.ascii	"Timer_WritePeriod\000"
 3926      725F5772 
 3926      69746550 
 3926      6572696F 
 3926      6400
 3927              	.LASF55:
 3928 00dc 63726355 		.ascii	"crcUsage\000"
 3928      73616765 
 3928      00
 3929              	.LASF107:
 3930 00e5 6D61696E 		.ascii	"main\000"
 3930      00
 3931              	.LASF73:
 3932 00ea 54696D65 		.ascii	"Timer_WriteCounter\000"
 3932      725F5772 
 3932      69746543 
 3932      6F756E74 
 3932      657200
 3933              	.LASF4:
 3934 00fd 5F5F7569 		.ascii	"__uint16_t\000"
 3934      6E743136 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 85


 3934      5F7400
 3935              	.LASF98:
 3936 0108 436F6C6C 		.ascii	"CollisionDelayISR_StartEx\000"
 3936      6973696F 
 3936      6E44656C 
 3936      61794953 
 3936      525F5374 
 3937              	.LASF66:
 3938 0122 54696D65 		.ascii	"TimerRX_Stop\000"
 3938      7252585F 
 3938      53746F70 
 3938      00
 3939              	.LASF99:
 3940 012f 55534255 		.ascii	"USBUART_Start\000"
 3940      4152545F 
 3940      53746172 
 3940      7400
 3941              	.LASF59:
 3942 013d 64617461 		.ascii	"dataSize\000"
 3942      53697A65 
 3942      00
 3943              	.LASF77:
 3944 0146 42555359 		.ascii	"BUSY_Write\000"
 3944      5F577269 
 3944      746500
 3945              	.LASF91:
 3946 0151 46616C6C 		.ascii	"FallingEdgeISR_StartEx\000"
 3946      696E6745 
 3946      64676549 
 3946      53525F53 
 3946      74617274 
 3947              	.LASF13:
 3948 0168 75696E74 		.ascii	"uint8\000"
 3948      3800
 3949              	.LASF50:
 3950 016e 72656365 		.ascii	"receiveLock\000"
 3950      6976654C 
 3950      6F636B00 
 3951              	.LASF69:
 3952 017a 436F6C6C 		.ascii	"CollisionDelay_WritePeriod\000"
 3952      6973696F 
 3952      6E44656C 
 3952      61795F57 
 3952      72697465 
 3953              	.LASF33:
 3954 0195 696E436F 		.ascii	"inCount\000"
 3954      756E7400 
 3955              	.LASF71:
 3956 019d 436F6C6C 		.ascii	"CollisionDelay_Start\000"
 3956      6973696F 
 3956      6E44656C 
 3956      61795F53 
 3956      74617274 
 3957              	.LASF83:
 3958 01b2 55534255 		.ascii	"USBUART_PutString\000"
 3958      4152545F 
 3958      50757453 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 86


 3958      7472696E 
 3958      6700
 3959              	.LASF61:
 3960 01c4 72656365 		.ascii	"receiveBitCount\000"
 3960      69766542 
 3960      6974436F 
 3960      756E7400 
 3961              	.LASF44:
 3962 01d4 72656365 		.ascii	"receiveData\000"
 3962      69766544 
 3962      61746100 
 3963              	.LASF14:
 3964 01e0 666C6F61 		.ascii	"float\000"
 3964      7400
 3965              	.LASF100:
 3966 01e6 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3966      4152545F 
 3966      47657443 
 3966      6F6E6669 
 3966      67757261 
 3967              	.LASF70:
 3968 01ff 436F6C6C 		.ascii	"CollisionDelay_WriteCounter\000"
 3968      6973696F 
 3968      6E44656C 
 3968      61795F57 
 3968      72697465 
 3969              	.LASF8:
 3970 021b 6C6F6E67 		.ascii	"long long int\000"
 3970      206C6F6E 
 3970      6720696E 
 3970      7400
 3971              	.LASF74:
 3972 0229 54696D65 		.ascii	"Timer_Start\000"
 3972      725F5374 
 3972      61727400 
 3973              	.LASF6:
 3974 0235 6C6F6E67 		.ascii	"long int\000"
 3974      20696E74 
 3974      00
 3975              	.LASF31:
 3976 023e 73746174 		.ascii	"stateDiagram\000"
 3976      65446961 
 3976      6772616D 
 3976      00
 3977              	.LASF62:
 3978 024b 7472616E 		.ascii	"transmitAddress\000"
 3978      736D6974 
 3978      41646472 
 3978      65737300 
 3979              	.LASF36:
 3980 025b 55534255 		.ascii	"USBUART_device\000"
 3980      4152545F 
 3980      64657669 
 3980      636500
 3981              	.LASF93:
 3982 026a 54696D65 		.ascii	"TimerTX_WritePeriod\000"
 3982      7254585F 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 87


 3982      57726974 
 3982      65506572 
 3982      696F6400 
 3983              	.LASF30:
 3984 027e 46616C6C 		.ascii	"FallingEdgeInterruptHandler\000"
 3984      696E6745 
 3984      64676549 
 3984      6E746572 
 3984      72757074 
 3985              	.LASF27:
 3986 029a 54696D65 		.ascii	"TimerInterruptHandler\000"
 3986      72496E74 
 3986      65727275 
 3986      70744861 
 3986      6E646C65 
 3987              	.LASF105:
 3988 02b0 73746174 		.ascii	"state\000"
 3988      6500
 3989              	.LASF21:
 3990 02b6 434F4C4C 		.ascii	"COLLISION\000"
 3990      4953494F 
 3990      4E00
 3991              	.LASF47:
 3992 02c0 64617461 		.ascii	"dataBitsRead\000"
 3992      42697473 
 3992      52656164 
 3992      00
 3993              	.LASF18:
 3994 02cd 6C6F6E67 		.ascii	"long double\000"
 3994      20646F75 
 3994      626C6500 
 3995              	.LASF60:
 3996 02d9 7472616E 		.ascii	"transmitBitCount\000"
 3996      736D6974 
 3996      42697443 
 3996      6F756E74 
 3996      00
 3997              	.LASF63:
 3998 02ea 7472616E 		.ascii	"transmitMode\000"
 3998      736D6974 
 3998      4D6F6465 
 3998      00
 3999              	.LASF1:
 4000 02f7 756E7369 		.ascii	"unsigned char\000"
 4000      676E6564 
 4000      20636861 
 4000      7200
 4001              	.LASF38:
 4002 0305 73797374 		.ascii	"systemState\000"
 4002      656D5374 
 4002      61746500 
 4003              	.LASF94:
 4004 0311 54696D65 		.ascii	"TimerTX_WriteCounter\000"
 4004      7254585F 
 4004      57726974 
 4004      65436F75 
 4004      6E746572 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 88


 4005              	.LASF0:
 4006 0326 7369676E 		.ascii	"signed char\000"
 4006      65642063 
 4006      68617200 
 4007              	.LASF52:
 4008 0332 736F7572 		.ascii	"sourceAddress\000"
 4008      63654164 
 4008      64726573 
 4008      7300
 4009              	.LASF9:
 4010 0340 6C6F6E67 		.ascii	"long long unsigned int\000"
 4010      206C6F6E 
 4010      6720756E 
 4010      7369676E 
 4010      65642069 
 4011              	.LASF104:
 4012 0357 433A5C55 		.ascii	"C:\\Users\\winstona\\Documents\\School Documents\\N"
 4012      73657273 
 4012      5C77696E 
 4012      73746F6E 
 4012      615C446F 
 4013 0385 6574776F 		.ascii	"etworking I\\ce4950lab1\\NetworkingProject.cydsn\000"
 4013      726B696E 
 4013      6720495C 
 4013      63653439 
 4013      35306C61 
 4014              	.LASF10:
 4015 03b4 756E7369 		.ascii	"unsigned int\000"
 4015      676E6564 
 4015      20696E74 
 4015      00
 4016              	.LASF11:
 4017 03c1 75696E74 		.ascii	"uint16_t\000"
 4017      31365F74 
 4017      00
 4018              	.LASF7:
 4019 03ca 6C6F6E67 		.ascii	"long unsigned int\000"
 4019      20756E73 
 4019      69676E65 
 4019      6420696E 
 4019      7400
 4020              	.LASF87:
 4021 03dc 54696D65 		.ascii	"TimerTX_Start\000"
 4021      7254585F 
 4021      53746172 
 4021      7400
 4022              	.LASF48:
 4023 03ea 64617461 		.ascii	"dataPtr\000"
 4023      50747200 
 4024              	.LASF92:
 4025 03f2 52656365 		.ascii	"ReceiveISR_StartEx\000"
 4025      69766549 
 4025      53525F53 
 4025      74617274 
 4025      457800
 4026              	.LASF46:
 4027 0405 72656365 		.ascii	"receivePosition\000"
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 89


 4027      69766550 
 4027      6F736974 
 4027      696F6E00 
 4028              	.LASF22:
 4029 0415 42555359 		.ascii	"BUSY\000"
 4029      00
 4030              	.LASF95:
 4031 041a 5472616E 		.ascii	"TransmitISR_StartEx\000"
 4031      736D6974 
 4031      4953525F 
 4031      53746172 
 4031      74457800 
 4032              	.LASF16:
 4033 042e 63686172 		.ascii	"char\000"
 4033      00
 4034              	.LASF40:
 4035 0433 5F426F6F 		.ascii	"_Bool\000"
 4035      6C00
 4036              	.LASF12:
 4037 0439 696E7433 		.ascii	"int32_t\000"
 4037      325F7400 
 4038              	.LASF3:
 4039 0441 73686F72 		.ascii	"short unsigned int\000"
 4039      7420756E 
 4039      7369676E 
 4039      65642069 
 4039      6E7400
 4040              	.LASF75:
 4041 0454 49444C45 		.ascii	"IDLE_Write\000"
 4041      5F577269 
 4041      746500
 4042              	.LASF97:
 4043 045f 54696D65 		.ascii	"TimerRX_WritePeriod\000"
 4043      7252585F 
 4043      57726974 
 4043      65506572 
 4043      696F6400 
 4044              	.LASF84:
 4045 0473 55534255 		.ascii	"USBUART_PutChar\000"
 4045      4152545F 
 4045      50757443 
 4045      68617200 
 4046              	.LASF26:
 4047 0483 5472616E 		.ascii	"TransmitInterruptHandler\000"
 4047      736D6974 
 4047      496E7465 
 4047      72727570 
 4047      7448616E 
 4048              	.LASF42:
 4049 049c 62756666 		.ascii	"buffer\000"
 4049      657200
 4050              	.LASF78:
 4051 04a3 434F4C4C 		.ascii	"COLLISION_Write\000"
 4051      4953494F 
 4051      4E5F5772 
 4051      69746500 
 4052              	.LASF103:
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 90


 4053 04b3 6D61696E 		.ascii	"main.c\000"
 4053      2E6300
 4054              	.LASF17:
 4055 04ba 72656738 		.ascii	"reg8\000"
 4055      00
 4056              	.LASF58:
 4057 04bf 63757272 		.ascii	"currentChar\000"
 4057      656E7443 
 4057      68617200 
 4058              	.LASF43:
 4059 04cb 72656365 		.ascii	"receiveBuffer\000"
 4059      69766542 
 4059      75666665 
 4059      7200
 4060              	.LASF15:
 4061 04d9 646F7562 		.ascii	"double\000"
 4061      6C6500
 4062              	.LASF65:
 4063 04e0 52454345 		.ascii	"RECEIVE_Read\000"
 4063      4956455F 
 4063      52656164 
 4063      00
 4064              	.LASF32:
 4065 04ed 63686563 		.ascii	"checkForNewData\000"
 4065      6B466F72 
 4065      4E657744 
 4065      61746100 
 4066              	.LASF54:
 4067 04fd 6D657373 		.ascii	"messageLength\000"
 4067      6167654C 
 4067      656E6774 
 4067      6800
 4068              	.LASF79:
 4069 050b 42555359 		.ascii	"BUSY_Read\000"
 4069      5F526561 
 4069      6400
 4070              	.LASF5:
 4071 0515 5F5F696E 		.ascii	"__int32_t\000"
 4071      7433325F 
 4071      7400
 4072              	.LASF68:
 4073 051f 72616E64 		.ascii	"rand\000"
 4073      00
 4074              	.LASF67:
 4075 0524 5452414E 		.ascii	"TRANSMIT_Write\000"
 4075      534D4954 
 4075      5F577269 
 4075      746500
 4076              	.LASF56:
 4077 0533 68656164 		.ascii	"headerCRC\000"
 4077      65724352 
 4077      4300
 4078              	.LASF57:
 4079 053d 61646472 		.ascii	"addressZeroReceive\000"
 4079      6573735A 
 4079      65726F52 
 4079      65636569 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 91


 4079      766500
 4080              	.LASF24:
 4081 0550 63686172 		.ascii	"characterRX\000"
 4081      61637465 
 4081      72525800 
 4082              	.LASF64:
 4083 055c 54696D65 		.ascii	"TimerRX_Start\000"
 4083      7252585F 
 4083      53746172 
 4083      7400
 4084              	.LASF82:
 4085 056a 55534255 		.ascii	"USBUART_PutCRLF\000"
 4085      4152545F 
 4085      50757443 
 4085      524C4600 
 4086              	.LASF45:
 4087 057a 706F7369 		.ascii	"position\000"
 4087      74696F6E 
 4087      00
 4088              	.LASF86:
 4089 0583 55534255 		.ascii	"USBUART_GetChar\000"
 4089      4152545F 
 4089      47657443 
 4089      68617200 
 4090              	.LASF101:
 4091 0593 55534255 		.ascii	"USBUART_CDC_Init\000"
 4091      4152545F 
 4091      4344435F 
 4091      496E6974 
 4091      00
 4092              	.LASF96:
 4093 05a4 54696D65 		.ascii	"TimerRX_WriteCounter\000"
 4093      7252585F 
 4093      57726974 
 4093      65436F75 
 4093      6E746572 
 4094              	.LASF37:
 4095 05b9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4095      52784275 
 4095      66666572 
 4095      00
 4096              	.LASF102:
 4097 05c6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4097      43313120 
 4097      352E342E 
 4097      31203230 
 4097      31363036 
 4098 05f9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4098      20726576 
 4098      6973696F 
 4098      6E203233 
 4098      37373135 
 4099 062c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4099      66756E63 
 4099      74696F6E 
 4099      2D736563 
 4099      74696F6E 
ARM GAS  C:\Users\winstona\AppData\Local\Temp\ccdsQxbi.s 			page 92


 4100              	.LASF89:
 4101 0654 54696D65 		.ascii	"TimerISR_StartEx\000"
 4101      72495352 
 4101      5F537461 
 4101      72744578 
 4101      00
 4102              	.LASF29:
 4103 0665 52697369 		.ascii	"RisingEdgeInterruptHandler\000"
 4103      6E674564 
 4103      6765496E 
 4103      74657272 
 4103      75707448 
 4104              	.LASF53:
 4105 0680 64657374 		.ascii	"destinationAddress\000"
 4105      696E6174 
 4105      696F6E41 
 4105      64647265 
 4105      737300
 4106              	.LASF49:
 4107 0693 7472616E 		.ascii	"transmitLock\000"
 4107      736D6974 
 4107      4C6F636B 
 4107      00
 4108              	.LASF85:
 4109 06a0 55534255 		.ascii	"USBUART_DataIsReady\000"
 4109      4152545F 
 4109      44617461 
 4109      49735265 
 4109      61647900 
 4110              	.LASF106:
 4111 06b4 436F6C6C 		.ascii	"CollisionDelayInterruptHandler\000"
 4111      6973696F 
 4111      6E44656C 
 4111      6179496E 
 4111      74657272 
 4112              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
